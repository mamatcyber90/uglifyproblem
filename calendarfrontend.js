var _gaq = _gaq || [];

_gaq.push([ "_setAccount", "UA-32755516-2" ]), _gaq.push([ "_setDomainName", "one.com" ]), 
_gaq.push([ "_setAllowLinker", !0 ]), _gaq.push([ "_trackPageview", document.location.pathname.replace(/[^\/]*(?:@|%40).*$/, "") ]), 
_gaq.push([ "_trackPageLoadTime" ]), _gaq.push([ "_gat._anonymizeIp" ]), function() {
    var ga = document.createElement("script");
    ga.type = "text/javascript", ga.async = !0, ga.src = ("https:" === document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
    var s = document.getElementsByTagName("script")[0];
    s.parentNode.insertBefore(ga, s);
}(), function(window) {
    var characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", fromCharCode = String.fromCharCode, INVALID_CHARACTER_ERR = function() {
        try {
            document.createElement("$");
        } catch (error) {
            return error;
        }
    }();
    window.btoa || (window.btoa = function(string) {
        for (var a, b, b1, b2, b3, b4, c, i = 0, len = string.length, max = Math.max, result = ""; i < len; ) {
            if (a = string.charCodeAt(i++) || 0, b = string.charCodeAt(i++) || 0, c = string.charCodeAt(i++) || 0, 
            max(a, b, c) > 255) throw INVALID_CHARACTER_ERR;
            b1 = a >> 2 & 63, b2 = (3 & a) << 4 | b >> 4 & 15, b3 = (15 & b) << 2 | c >> 6 & 3, 
            b4 = 63 & c, b ? c || (b4 = 64) : b3 = b4 = 64, result += characters.charAt(b1) + characters.charAt(b2) + characters.charAt(b3) + characters.charAt(b4);
        }
        return result;
    }), window.atob || (window.atob = function(string) {
        var a, b, b2, b3, c, i = 0, len = (string = string.replace(/=+$/, "")).length, chars = [];
        if (len % 4 == 1) throw INVALID_CHARACTER_ERR;
        for (;i < len; ) a = (63 & characters.indexOf(string.charAt(i++))) << 2 | (b2 = characters.indexOf(string.charAt(i++))) >> 4 & 3, 
        b = (15 & b2) << 4 | (b3 = characters.indexOf(string.charAt(i++))) >> 2 & 15, c = (3 & b3) << 6 | 63 & characters.indexOf(string.charAt(i++)), 
        chars.push(fromCharCode(a)), b && chars.push(fromCharCode(b)), c && chars.push(fromCharCode(c));
        return chars.join("");
    });
}(this), function(t) {
    !function(e) {
        "object" == typeof exports ? module.exports = e() : "undefined" != typeof window ? window.Promise = e() : "undefined" != typeof global ? global.Promise = e() : "undefined" != typeof self && (self.Promise = e());
    }(function() {
        return function e(t, n, o) {
            function r(u, c) {
                if (!n[u]) {
                    if (!t[u]) {
                        var f = "function" == typeof require && require;
                        if (!c && f) return f(u, !0);
                        if (i) return i(u, !0);
                        throw new Error("Cannot find module '" + u + "'");
                    }
                    var s = n[u] = {
                        exports: {}
                    };
                    t[u][0].call(s.exports, function(e) {
                        var n = t[u][1][e];
                        return r(n || e);
                    }, s, s.exports, e, t, n, o);
                }
                return n[u].exports;
            }
            for (var i = "function" == typeof require && require, u = 0; u < o.length; u++) r(o[u]);
            return r;
        }({
            1: [ function(t, e, n) {
                var r = t("../lib/decorators/unhandledRejection")(t("../lib/Promise"));
                e.exports = "undefined" != typeof global ? global.Promise = r : "undefined" != typeof self ? self.Promise = r : r;
            }, {
                "../lib/Promise": 2,
                "../lib/decorators/unhandledRejection": 4
            } ],
            2: [ function(e, n, o) {
                !function(t) {
                    "use strict";
                    t(function(t) {
                        return t("./makePromise")({
                            scheduler: new (t("./Scheduler"))(t("./env").asap)
                        });
                    });
                }(function(t) {
                    n.exports = t(e);
                });
            }, {
                "./Scheduler": 3,
                "./env": 5,
                "./makePromise": 7
            } ],
            3: [ function(e, n, o) {
                !function(t) {
                    "use strict";
                    t(function() {
                        function t(t) {
                            this._async = t, this._running = !1, this._queue = this, this._queueLen = 0, this._afterQueue = {}, 
                            this._afterQueueLen = 0;
                            var e = this;
                            this.drain = function() {
                                e._drain();
                            };
                        }
                        return t.prototype.enqueue = function(t) {
                            this._queue[this._queueLen++] = t, this.run();
                        }, t.prototype.afterQueue = function(t) {
                            this._afterQueue[this._afterQueueLen++] = t, this.run();
                        }, t.prototype.run = function() {
                            this._running || (this._running = !0, this._async(this.drain));
                        }, t.prototype._drain = function() {
                            for (var t = 0; t < this._queueLen; ++t) this._queue[t].run(), this._queue[t] = void 0;
                            for (this._queueLen = 0, this._running = !1, t = 0; t < this._afterQueueLen; ++t) this._afterQueue[t].run(), 
                            this._afterQueue[t] = void 0;
                            this._afterQueueLen = 0;
                        }, t;
                    });
                }(function(t) {
                    n.exports = t();
                });
            }, {} ],
            4: [ function(e, n, o) {
                !function(t) {
                    "use strict";
                    t(function(t) {
                        function e(t) {
                            throw t;
                        }
                        function n() {}
                        var o = t("../env").setTimer, r = t("../format");
                        return function(t) {
                            function i(t) {
                                t.handled || (l.push(t), a("Potentially unhandled rejection [" + t.id + "] " + r.formatError(t.value)));
                            }
                            function u(t) {
                                var e = l.indexOf(t);
                                e >= 0 && (l.splice(e, 1), h("Handled previous rejection [" + t.id + "] " + r.formatObject(t.value)));
                            }
                            function c(t, e) {
                                p.push(t, e), null === d && (d = o(f, 0));
                            }
                            function f() {
                                for (d = null; p.length > 0; ) p.shift()(p.shift());
                            }
                            var s, a = n, h = n;
                            "undefined" != typeof console && (s = console, a = void 0 !== s.error ? function(t) {
                                s.error(t);
                            } : function(t) {
                                s.log(t);
                            }, h = void 0 !== s.info ? function(t) {
                                s.info(t);
                            } : function(t) {
                                s.log(t);
                            }), t.onPotentiallyUnhandledRejection = function(t) {
                                c(i, t);
                            }, t.onPotentiallyUnhandledRejectionHandled = function(t) {
                                c(u, t);
                            }, t.onFatalRejection = function(t) {
                                c(e, t.value);
                            };
                            var p = [], l = [], d = null;
                            return t;
                        };
                    });
                }(function(t) {
                    n.exports = t(e);
                });
            }, {
                "../env": 5,
                "../format": 6
            } ],
            5: [ function(e, n, o) {
                !function(t) {
                    "use strict";
                    t(function(t) {
                        var r, i = "undefined" != typeof setTimeout && setTimeout, u = function(t, e) {
                            return setTimeout(t, e);
                        }, c = function(t) {
                            return clearTimeout(t);
                        }, f = function(t) {
                            return i(t, 0);
                        };
                        if (function() {
                            return "undefined" != typeof process && "[object process]" === Object.prototype.toString.call(process);
                        }()) f = function(t) {
                            return process.nextTick(t);
                        }; else if (r = function() {
                            return "function" == typeof MutationObserver && MutationObserver || "function" == typeof WebKitMutationObserver && WebKitMutationObserver;
                        }()) f = function(t) {
                            function e() {
                                var t = n;
                                n = void 0, t();
                            }
                            var n, o = document.createTextNode("");
                            new t(e).observe(o, {
                                characterData: !0
                            });
                            var i = 0;
                            return function(t) {
                                n = t, o.data = i ^= 1;
                            };
                        }(r); else if (!i) {
                            var a = t("vertx");
                            u = function(t, e) {
                                return a.setTimer(e, t);
                            }, c = a.cancelTimer, f = a.runOnLoop || a.runOnContext;
                        }
                        return {
                            setTimer: u,
                            clearTimer: c,
                            asap: f
                        };
                    });
                }(function(t) {
                    n.exports = t(e);
                });
            }, {} ],
            6: [ function(e, n, o) {
                !function(t) {
                    "use strict";
                    t(function() {
                        function t(t) {
                            var n = "object" == typeof t && null !== t && (t.stack || t.message) ? t.stack || t.message : e(t);
                            return t instanceof Error ? n : n + " (WARNING: non-Error used)";
                        }
                        function e(t) {
                            var e = String(t);
                            return "[object Object]" === e && "undefined" != typeof JSON && (e = n(t, e)), e;
                        }
                        function n(t, e) {
                            try {
                                return JSON.stringify(t);
                            } catch (n) {
                                return e;
                            }
                        }
                        return {
                            formatError: t,
                            formatObject: e,
                            tryStringify: n
                        };
                    });
                }(function(t) {
                    n.exports = t();
                });
            }, {} ],
            7: [ function(e, n, o) {
                !function(t) {
                    "use strict";
                    t(function() {
                        return function(t) {
                            function e(t, e) {
                                this._handler = t === _ ? e : n(t);
                            }
                            function n(t) {
                                function e(t) {
                                    r.resolve(t);
                                }
                                function n(t) {
                                    r.reject(t);
                                }
                                function o(t) {
                                    r.notify(t);
                                }
                                var r = new b();
                                try {
                                    t(e, n, o);
                                } catch (i) {
                                    n(i);
                                }
                                return r;
                            }
                            function o(t) {
                                return k(t) ? t : new e(_, new x(v(t)));
                            }
                            function r(t) {
                                return new e(_, new x(new P(t)));
                            }
                            function i() {
                                return $;
                            }
                            function u() {
                                return new e(_, new b());
                            }
                            function c(t, e) {
                                return new e(_, new b(t.receiver, t.join().context));
                            }
                            function f(t) {
                                return a(B, null, t);
                            }
                            function s(t, e) {
                                return a(M, t, e);
                            }
                            function a(t, n, o) {
                                function r(e, r, u) {
                                    u.resolved || h(o, i, e, t(n, r, e), u);
                                }
                                function i(t, e, n) {
                                    a[t] = e, 0 == --s && n.become(new q(a));
                                }
                                for (var u, c = "function" == typeof n ? r : i, f = new b(), s = o.length >>> 0, a = new Array(s), p = 0; p < o.length && !f.resolved; ++p) u = o[p], 
                                void 0 !== u || p in o ? h(o, c, p, u, f) : --s;
                                return 0 === s && f.become(new q(a)), new e(_, f);
                            }
                            function h(t, e, n, o, r) {
                                if (U(o)) {
                                    var i = m(o), u = i.state();
                                    0 === u ? i.fold(e, n, void 0, r) : u > 0 ? e(n, i.value, r) : (r.become(i), p(t, n + 1, i));
                                } else e(n, o, r);
                            }
                            function p(t, e, n) {
                                for (var o = e; o < t.length; ++o) l(v(t[o]), n);
                            }
                            function l(t, e) {
                                if (t !== e) {
                                    var n = t.state();
                                    0 === n ? t.visit(t, void 0, t._unreport) : 0 > n && t._unreport();
                                }
                            }
                            function d(t) {
                                return "object" != typeof t || null === t ? r(new TypeError("non-iterable passed to race()")) : 0 === t.length ? i() : 1 === t.length ? o(t[0]) : y(t);
                            }
                            function y(t) {
                                var n, o, r, i = new b();
                                for (n = 0; n < t.length; ++n) if (void 0 !== (o = t[n]) || n in t) {
                                    if (0 !== (r = v(o)).state()) {
                                        i.become(r), p(t, n + 1, r);
                                        break;
                                    }
                                    r.visit(i, i.resolve, i.reject);
                                }
                                return new e(_, i);
                            }
                            function v(t) {
                                return k(t) ? t._handler.join() : U(t) ? j(t) : new q(t);
                            }
                            function m(t) {
                                return k(t) ? t._handler.join() : j(t);
                            }
                            function j(t) {
                                try {
                                    var e = t.then;
                                    return "function" == typeof e ? new g(e, t) : new q(t);
                                } catch (n) {
                                    return new P(n);
                                }
                            }
                            function _() {}
                            function w() {}
                            function b(t, n) {
                                e.createContext(this, n), this.consumers = void 0, this.receiver = t, this.handler = void 0, 
                                this.resolved = !1;
                            }
                            function x(t) {
                                this.handler = t;
                            }
                            function g(t, e) {
                                b.call(this), G.enqueue(new E(t, e, this));
                            }
                            function q(t) {
                                e.createContext(this), this.value = t;
                            }
                            function P(t) {
                                e.createContext(this), this.id = ++Y, this.value = t, this.handled = !1, this.reported = !1, 
                                this._report();
                            }
                            function R(t, e) {
                                this.rejection = t, this.context = e;
                            }
                            function C(t) {
                                this.rejection = t;
                            }
                            function O() {
                                return new P(new TypeError("Promise cycle"));
                            }
                            function T(t, e) {
                                this.continuation = t, this.handler = e;
                            }
                            function Q(t, e) {
                                this.handler = e, this.value = t;
                            }
                            function E(t, e, n) {
                                this._then = t, this.thenable = e, this.resolver = n;
                            }
                            function L(t, e, n, o, r) {
                                try {
                                    t.call(e, n, o, r);
                                } catch (i) {
                                    o(i);
                                }
                            }
                            function S(t, e, n, o) {
                                this.f = t, this.z = e, this.c = n, this.to = o, this.resolver = X, this.receiver = this;
                            }
                            function k(t) {
                                return t instanceof e;
                            }
                            function U(t) {
                                return ("object" == typeof t || "function" == typeof t) && null !== t;
                            }
                            function H(t, n, o, r) {
                                return "function" != typeof t ? r.become(n) : (e.enterContext(n), F(t, n.value, o, r), 
                                void e.exitContext());
                            }
                            function N(t, n, o, r, i) {
                                return "function" != typeof t ? i.become(o) : (e.enterContext(o), W(t, n, o.value, r, i), 
                                void e.exitContext());
                            }
                            function J(t, n, o, r, i) {
                                return "function" != typeof t ? i.notify(n) : (e.enterContext(o), z(t, n, r, i), 
                                void e.exitContext());
                            }
                            function M(t, e, n) {
                                try {
                                    return t(e, n);
                                } catch (o) {
                                    return r(o);
                                }
                            }
                            function F(t, e, n, o) {
                                try {
                                    o.become(v(t.call(n, e)));
                                } catch (r) {
                                    o.become(new P(r));
                                }
                            }
                            function W(t, e, n, o, r) {
                                try {
                                    t.call(o, e, n, r);
                                } catch (i) {
                                    r.become(new P(i));
                                }
                            }
                            function z(t, e, n, o) {
                                try {
                                    o.notify(t.call(n, e));
                                } catch (r) {
                                    o.notify(r);
                                }
                            }
                            function A(t, e) {
                                e.prototype = V(t.prototype), e.prototype.constructor = e;
                            }
                            function B(t, e) {
                                return e;
                            }
                            function K() {}
                            var G = t.scheduler, I = function() {
                                return "undefined" != typeof process && null !== process && "function" == typeof process.emit ? function(t, e) {
                                    return "unhandledRejection" === t ? process.emit(t, e.value, e) : process.emit(t, e);
                                } : "undefined" != typeof self && "function" == typeof CustomEvent ? function(t, e, n) {
                                    var o = !1;
                                    try {
                                        o = new n("unhandledRejection") instanceof n;
                                    } catch (i) {}
                                    return o ? function(t, o) {
                                        var r = new n(t, {
                                            detail: {
                                                reason: o.value,
                                                key: o
                                            },
                                            bubbles: !1,
                                            cancelable: !0
                                        });
                                        return !e.dispatchEvent(r);
                                    } : t;
                                }(K, self, CustomEvent) : K;
                            }(), V = Object.create || function(t) {
                                function e() {}
                                return e.prototype = t, new e();
                            };
                            e.resolve = o, e.reject = r, e.never = i, e._defer = u, e._handler = v, e.prototype.then = function(t, e, n) {
                                var o = this._handler, r = o.join().state();
                                if ("function" != typeof t && r > 0 || "function" != typeof e && 0 > r) return new this.constructor(_, o);
                                var i = this._beget(), u = i._handler;
                                return o.chain(u, o.receiver, t, e, n), i;
                            }, e.prototype.catch = function(t) {
                                return this.then(void 0, t);
                            }, e.prototype._beget = function() {
                                return c(this._handler, this.constructor);
                            }, e.all = f, e.race = d, e._traverse = s, e._visitRemaining = p, _.prototype.when = _.prototype.become = _.prototype.notify = _.prototype.fail = _.prototype._unreport = _.prototype._report = K, 
                            _.prototype._state = 0, _.prototype.state = function() {
                                return this._state;
                            }, _.prototype.join = function() {
                                for (var t = this; void 0 !== t.handler; ) t = t.handler;
                                return t;
                            }, _.prototype.chain = function(t, e, n, o, r) {
                                this.when({
                                    resolver: t,
                                    receiver: e,
                                    fulfilled: n,
                                    rejected: o,
                                    progress: r
                                });
                            }, _.prototype.visit = function(t, e, n, o) {
                                this.chain(X, t, e, n, o);
                            }, _.prototype.fold = function(t, e, n, o) {
                                this.when(new S(t, e, n, o));
                            }, A(_, w), w.prototype.become = function(t) {
                                t.fail();
                            };
                            var X = new w();
                            A(_, b), b.prototype._state = 0, b.prototype.resolve = function(t) {
                                this.become(v(t));
                            }, b.prototype.reject = function(t) {
                                this.resolved || this.become(new P(t));
                            }, b.prototype.join = function() {
                                if (!this.resolved) return this;
                                for (var t = this; void 0 !== t.handler; ) if ((t = t.handler) === this) return this.handler = O();
                                return t;
                            }, b.prototype.run = function() {
                                var t = this.consumers, e = this.handler;
                                this.handler = this.handler.join(), this.consumers = void 0;
                                for (var n = 0; n < t.length; ++n) e.when(t[n]);
                            }, b.prototype.become = function(t) {
                                this.resolved || (this.resolved = !0, this.handler = t, void 0 !== this.consumers && G.enqueue(this), 
                                void 0 !== this.context && t._report(this.context));
                            }, b.prototype.when = function(t) {
                                this.resolved ? G.enqueue(new T(t, this.handler)) : void 0 === this.consumers ? this.consumers = [ t ] : this.consumers.push(t);
                            }, b.prototype.notify = function(t) {
                                this.resolved || G.enqueue(new Q(t, this));
                            }, b.prototype.fail = function(t) {
                                var e = void 0 === t ? this.context : t;
                                this.resolved && this.handler.join().fail(e);
                            }, b.prototype._report = function(t) {
                                this.resolved && this.handler.join()._report(t);
                            }, b.prototype._unreport = function() {
                                this.resolved && this.handler.join()._unreport();
                            }, A(_, x), x.prototype.when = function(t) {
                                G.enqueue(new T(t, this));
                            }, x.prototype._report = function(t) {
                                this.join()._report(t);
                            }, x.prototype._unreport = function() {
                                this.join()._unreport();
                            }, A(b, g), A(_, q), q.prototype._state = 1, q.prototype.fold = function(t, e, n, o) {
                                N(t, e, this, n, o);
                            }, q.prototype.when = function(t) {
                                H(t.fulfilled, this, t.receiver, t.resolver);
                            };
                            var Y = 0;
                            A(_, P), P.prototype._state = -1, P.prototype.fold = function(t, e, n, o) {
                                o.become(this);
                            }, P.prototype.when = function(t) {
                                "function" == typeof t.rejected && this._unreport(), H(t.rejected, this, t.receiver, t.resolver);
                            }, P.prototype._report = function(t) {
                                G.afterQueue(new R(this, t));
                            }, P.prototype._unreport = function() {
                                this.handled || (this.handled = !0, G.afterQueue(new C(this)));
                            }, P.prototype.fail = function(t) {
                                this.reported = !0, I("unhandledRejection", this), e.onFatalRejection(this, void 0 === t ? this.context : t);
                            }, R.prototype.run = function() {
                                this.rejection.handled || this.rejection.reported || (this.rejection.reported = !0, 
                                I("unhandledRejection", this.rejection) || e.onPotentiallyUnhandledRejection(this.rejection, this.context));
                            }, C.prototype.run = function() {
                                this.rejection.reported && (I("rejectionHandled", this.rejection) || e.onPotentiallyUnhandledRejectionHandled(this.rejection));
                            }, e.createContext = e.enterContext = e.exitContext = e.onPotentiallyUnhandledRejection = e.onPotentiallyUnhandledRejectionHandled = e.onFatalRejection = K;
                            var $ = new e(_, new _());
                            return T.prototype.run = function() {
                                this.handler.join().when(this.continuation);
                            }, Q.prototype.run = function() {
                                var t = this.handler.consumers;
                                if (void 0 !== t) for (var e, n = 0; n < t.length; ++n) e = t[n], J(e.progress, this.value, this.handler, e.receiver, e.resolver);
                            }, E.prototype.run = function() {
                                function t(t) {
                                    o.resolve(t);
                                }
                                function e(t) {
                                    o.reject(t);
                                }
                                function n(t) {
                                    o.notify(t);
                                }
                                var o = this.resolver;
                                L(this._then, this.thenable, t, e, n);
                            }, S.prototype.fulfilled = function(t) {
                                this.f.call(this.c, this.z, t, this.to);
                            }, S.prototype.rejected = function(t) {
                                this.to.reject(t);
                            }, S.prototype.progress = function(t) {
                                this.to.notify(t);
                            }, e;
                        };
                    });
                }(function(t) {
                    n.exports = t();
                });
            }, {} ]
        }, {}, [ 1 ])(1);
    }), "undefined" != typeof systemJSBootstrap && systemJSBootstrap();
}(), function() {
    function e() {
        !function(e) {
            function t(e, n) {
                if ("string" != typeof e) throw new TypeError("URL must be a string");
                var r = String(e).replace(/^\s+|\s+$/g, "").match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@\/?#]*)(?::([^:@\/?#]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);
                if (!r) throw new RangeError("Invalid URL format");
                var a = r[1] || "", o = r[2] || "", i = r[3] || "", s = r[4] || "", l = r[5] || "", u = r[6] || "", d = r[7] || "", c = r[8] || "", f = r[9] || "";
                if (void 0 !== n) {
                    var m = n instanceof t ? n : new t(n), p = !a && !s && !o;
                    !p || d || c || (c = m.search), p && "/" !== d[0] && (d = d ? (!m.host && !m.username || m.pathname ? "" : "/") + m.pathname.slice(0, m.pathname.lastIndexOf("/") + 1) + d : m.pathname);
                    var h = [];
                    d.replace(/^(\.\.?(\/|$))+/, "").replace(/\/(\.(\/|$))+/g, "/").replace(/\/\.\.$/, "/../").replace(/\/?[^\/]*/g, function(e) {
                        "/.." === e ? h.pop() : h.push(e);
                    }), d = h.join("").replace(/^\//, "/" === d[0] ? "/" : ""), p && (u = m.port, l = m.hostname, 
                    s = m.host, i = m.password, o = m.username), a || (a = m.protocol);
                }
                "file:" == a && (d = d.replace(/\\/g, "/")), this.origin = s ? a + ("" !== a || "" !== s ? "//" : "") + s : "", 
                this.href = a + (a && s || "file:" == a ? "//" : "") + ("" !== o ? o + ("" !== i ? ":" + i : "") + "@" : "") + s + d + c + f, 
                this.protocol = a, this.username = o, this.password = i, this.host = s, this.hostname = l, 
                this.port = u, this.pathname = d, this.search = c, this.hash = f;
            }
            e.URLPolyfill = t;
        }("undefined" != typeof self ? self : global), function(e) {
            function t(e, t) {
                if (!e.originalErr) for (var n = ((e.message || e) + (e.stack ? "\n" + e.stack : "")).toString().split("\n"), r = [], a = 0; a < n.length; a++) ("undefined" == typeof $__curScript || -1 == n[a].indexOf($__curScript.src)) && r.push(n[a]);
                var o = "(SystemJS) " + (r ? r.join("\n\t") : e.message.substr(11)) + "\n\t" + t;
                q || (o = o.replace(U ? /file:\/\/\//g : /file:\/\//g, ""));
                var i = $ ? new Error(o, e.fileName, e.lineNumber) : new Error(o);
                return i.stack = q ? null : o, i.originalErr = e.originalErr || e, i;
            }
            function n() {}
            function r(t) {
                this._loader = {
                    loaderObj: this,
                    loads: [],
                    modules: {},
                    importPromises: {},
                    moduleRecords: {}
                }, A(this, "global", {
                    get: function() {
                        return e;
                    }
                });
            }
            function a() {
                r.call(this), this.paths = {}, this._loader.paths = {}, V.call(this);
            }
            function o() {}
            function i(e, t) {
                a.prototype[e] = t(a.prototype[e] || function() {});
            }
            function s(e) {
                V = e(V || function() {});
            }
            function l(e) {
                return e.match(Y);
            }
            function u(e) {
                return "." == e[0] && (!e[1] || "/" == e[1] || "." == e[1]) || "/" == e[0];
            }
            function d(e) {
                return !u(e) && !l(e);
            }
            function c(e, t) {
                if ("." == e[0]) {
                    if ("/" == e[1] && "." != e[2]) return (t && t.substr(0, t.lastIndexOf("/") + 1) || N) + e.substr(2);
                } else if ("/" != e[0] && -1 == e.indexOf(":")) return (t && t.substr(0, t.lastIndexOf("/") + 1) || N) + e;
                return new X(e, t && t.replace(/#/g, "%05") || Z).href.replace(/%05/g, "#");
            }
            function f(e, t) {
                var n, r = "", a = 0, o = e.paths, i = e._loader.paths;
                for (var s in o) if (!o.hasOwnProperty || o.hasOwnProperty(s)) {
                    var l = o[s];
                    if (l !== i[s] && (l = o[s] = i[s] = c(o[s], u(o[s]) ? N : e.baseURL)), -1 === s.indexOf("*")) {
                        if (t == s) return o[s];
                        if (t.substr(0, s.length - 1) == s.substr(0, s.length - 1) && (t.length < s.length || t[s.length - 1] == s[s.length - 1]) && ("/" == o[s][o[s].length - 1] || "" == o[s])) return o[s].substr(0, o[s].length - 1) + (t.length > s.length ? (o[s] && "/" || "") + t.substr(s.length) : "");
                    } else {
                        var d = s.split("*");
                        if (d.length > 2) throw new TypeError("Only one wildcard in a path is permitted");
                        var f = d[0].length;
                        f >= a && t.substr(0, d[0].length) == d[0] && t.substr(t.length - d[1].length) == d[1] && (a = f, 
                        r = s, n = t.substr(d[0].length, t.length - d[1].length - d[0].length));
                    }
                }
                var m = o[r];
                return "string" == typeof n && (m = m.replace("*", n)), m;
            }
            function m(e) {
                for (var t = [], n = [], r = 0, a = e.length; a > r; r++) {
                    var o = J.call(t, e[r]);
                    -1 === o ? (t.push(e[r]), n.push([ r ])) : n[o].push(r);
                }
                return {
                    names: t,
                    indices: n
                };
            }
            function p(t) {
                var n = {};
                if (("object" == typeof t || "function" == typeof t) && t !== e) if (K) for (var r in t) "default" !== r && h(n, t, r); else g(n, t);
                return n.default = t, A(n, "__useDefault", {
                    value: !0
                }), n;
            }
            function h(e, t, n) {
                try {
                    var r;
                    (r = Object.getOwnPropertyDescriptor(t, n)) && A(e, n, r);
                } catch (a) {
                    return e[n] = t[n], !1;
                }
            }
            function g(e, t, n) {
                var r = t && t.hasOwnProperty;
                for (var a in t) (!r || t.hasOwnProperty(a)) && (n && a in e || (e[a] = t[a]));
                return e;
            }
            function v(e, t, n) {
                var r = t && t.hasOwnProperty;
                for (var a in t) if (!r || t.hasOwnProperty(a)) {
                    var o = t[a];
                    a in e ? o instanceof Array && e[a] instanceof Array ? e[a] = [].concat(n ? o : e[a]).concat(n ? e[a] : o) : "object" == typeof o && null !== o && "object" == typeof e[a] ? e[a] = g(g({}, e[a]), o, n) : n || (e[a] = o) : e[a] = o;
                }
            }
            function y(e, t, n, r, a) {
                for (var o in t) if (-1 != J.call([ "main", "format", "defaultExtension", "basePath" ], o)) e[o] = t[o]; else if ("map" == o) g(e.map = e.map || {}, t.map); else if ("meta" == o) g(e.meta = e.meta || {}, t.meta); else if ("depCache" == o) for (var i in t.depCache) {
                    var s;
                    s = "./" == i.substr(0, 2) ? n + "/" + i.substr(2) : _.call(r, i), r.depCache[s] = (r.depCache[s] || []).concat(t.depCache[i]);
                } else !a || -1 != J.call([ "browserConfig", "nodeConfig", "devConfig", "productionConfig" ], o) || t.hasOwnProperty && !t.hasOwnProperty(o) || w.call(r, '"' + o + '" is not a valid package configuration option in package ' + n);
            }
            function b(e, t, n, r) {
                var a;
                if (e.packages[t]) {
                    var o = e.packages[t];
                    y(a = e.packages[t] = {}, r ? n : o, t, e, r), y(a, r ? o : n, t, e, !r);
                } else a = e.packages[t] = n;
                return "object" == typeof a.main && (a.map = a.map || {}, a.map["./@main"] = a.main, 
                a.main.default = a.main.default || "./", a.main = "@main"), a;
            }
            function w(e) {
                this.warnings && "undefined" != typeof console && console.warn;
            }
            function x(e, t) {
                for (var n = e.split("."); n.length; ) t = t[n.shift()];
                return t;
            }
            function S(e, t) {
                var n, r = 0;
                for (var a in e) if (t.substr(0, a.length) == a && (t.length == a.length || "/" == t[a.length])) {
                    var o = a.split("/").length;
                    if (r >= o) continue;
                    n = a, r = o;
                }
                return n;
            }
            function E(e) {
                this._loader.baseURL !== this.baseURL && ("/" != this.baseURL[this.baseURL.length - 1] && (this.baseURL += "/"), 
                this._loader.baseURL = this.baseURL = new X(this.baseURL, Z).href);
            }
            function P(e, t) {
                this.set("@system-env", ee = this.newModule({
                    browser: q,
                    node: !!this._nodeRequire,
                    production: !t && e,
                    dev: t || !e,
                    build: t,
                    default: !0
                }));
            }
            function k(e, t) {
                if (!d(e)) throw new Error("Node module " + e + " can't be loaded as it is not a package require.");
                if (!te) {
                    var n = this._nodeRequire("module"), r = t.substr(U ? 8 : 7);
                    (te = new n(r)).paths = n._nodeModulePaths(r);
                }
                return te.require(e);
            }
            function _(e, t) {
                if (u(e)) return c(e, t);
                if (l(e)) return e;
                var n = S(this.map, e);
                if (n) {
                    if (e = this.map[n] + e.substr(n.length), u(e)) return c(e);
                    if (l(e)) return e;
                }
                if (this.has(e)) return e;
                if ("@node/" == e.substr(0, 6)) {
                    if (!this._nodeRequire) throw new TypeError("Error loading " + e + ". Can only load node core modules in Node.");
                    return this.set(e, this.newModule(p(k.call(this, e.substr(6), this.baseURL)))), 
                    e;
                }
                return E.call(this), f(this, e) || this.baseURL + e;
            }
            function j(e, t, n) {
                ee.browser && t.browserConfig && n(t.browserConfig), ee.node && t.nodeConfig && n(t.nodeConfig), 
                ee.dev && t.devConfig && n(t.devConfig), ee.build && t.buildConfig && n(t.buildConfig), 
                ee.production && t.productionConfig && n(t.productionConfig);
            }
            function O(e) {
                var t = e.match(ae);
                return t && "System.register" == e.substr(t[0].length, 15);
            }
            function R() {
                return {
                    name: null,
                    deps: null,
                    originalIndices: null,
                    declare: null,
                    execute: null,
                    executingRequire: !1,
                    declarative: !1,
                    normalizedDeps: null,
                    groupIndex: null,
                    evaluated: !1,
                    module: null,
                    esModule: null,
                    esmExports: !1
                };
            }
            function M(t) {
                if ("string" == typeof t) return x(t, e);
                if (!(t instanceof Array)) throw new Error("Global exports must be a string or array.");
                for (var n = {}, r = !0, a = 0; a < t.length; a++) {
                    var o = x(t[a], e);
                    r && (n.default = o, r = !1), n[t[a].split(".").pop()] = o;
                }
                return n;
            }
            function z(e) {
                var t, n, r = "~" == e[0], a = e.lastIndexOf("|");
                return -1 != a ? (t = e.substr(a + 1), n = e.substr(r, a - r), r && w.call(this, 'Condition negation form "' + e + '" is deprecated for "' + n + "|~" + t + '"'), 
                "~" == t[0] && (r = !0, t = t.substr(1))) : (t = "default", n = e.substr(r), -1 != oe.indexOf(n) && (t = n, 
                n = null)), {
                    module: n || "@system-env",
                    prop: t,
                    negate: r
                };
            }
            function I(e) {
                return e.module + "|" + (e.negate ? "~" : "") + e.prop;
            }
            function C(e, t, n) {
                var r = this;
                return this.normalize(e.module, t).then(function(t) {
                    return r.load(t).then(function(a) {
                        var o = x(e.prop, r.get(t));
                        if (n && "boolean" != typeof o) throw new TypeError("Condition " + I(e) + " did not resolve to a boolean.");
                        return e.negate ? !o : o;
                    });
                });
            }
            function L(e, t) {
                var n = e.match(ie);
                if (!n) return Promise.resolve(e);
                var r = z.call(this, n[0].substr(2, n[0].length - 3));
                return this.builder ? this.normalize(r.module, t).then(function(t) {
                    return r.module = t, e.replace(ie, "#{" + I(r) + "}");
                }) : C.call(this, r, t, !1).then(function(n) {
                    if ("string" != typeof n) throw new TypeError("The condition value for " + e + " doesn't resolve to a string.");
                    if (-1 != n.indexOf("/")) throw new TypeError("Unabled to interpolate conditional " + e + (t ? " in " + t : "") + "\n\tThe condition value " + n + ' cannot contain a "/" separator.');
                    return e.replace(ie, n);
                });
            }
            function T(e, t) {
                var n = e.lastIndexOf("#?");
                if (-1 == n) return Promise.resolve(e);
                var r = z.call(this, e.substr(n + 2));
                return this.builder ? this.normalize(r.module, t).then(function(t) {
                    return r.module = t, e.substr(0, n) + "#?" + I(r);
                }) : C.call(this, r, t, !0).then(function(t) {
                    return t ? e.substr(0, n) : "@empty";
                });
            }
            var D = "undefined" == typeof window && "undefined" != typeof self && "undefined" != typeof importScripts, q = "undefined" != typeof window && "undefined" != typeof document, U = "undefined" != typeof process && void 0 !== process.platform && !!process.platform.match(/^win/);
            e.console || (e.console = {
                assert: function() {}
            });
            var A, J = Array.prototype.indexOf || function(e) {
                for (var t = 0, n = this.length; n > t; t++) if (this[t] === e) return t;
                return -1;
            };
            !function() {
                try {
                    Object.defineProperty({}, "a", {}) && (A = Object.defineProperty);
                } catch (e) {
                    A = function(e, t, n) {
                        try {
                            e[t] = n.value || n.get.call(e);
                        } catch (r) {}
                    };
                }
            }();
            var N, $ = "_" == new Error(0, "_").fileName;
            if ("undefined" != typeof document && document.getElementsByTagName) {
                if (!(N = document.baseURI)) {
                    var F = document.getElementsByTagName("base");
                    N = F[0] && F[0].href || window.location.href;
                }
            } else "undefined" != typeof location && (N = e.location.href);
            if (N) N = N.split("#")[0].split("?")[0], N = N.substr(0, N.lastIndexOf("/") + 1); else {
                if ("undefined" == typeof process || !process.cwd) throw new TypeError("No environment baseURI");
                N = "file://" + (U ? "/" : "") + process.cwd() + "/", U && (N = N.replace(/\\/g, "/"));
            }
            try {
                var B = "test:" == new e.URL("test:///").protocol;
            } catch (H) {}
            var X = B ? e.URL : e.URLPolyfill;
            A(n.prototype, "toString", {
                value: function() {
                    return "Module";
                }
            }), function() {
                function e(e) {
                    return {
                        status: "loading",
                        name: e || "<Anonymous" + ++b + ">",
                        linkSets: [],
                        dependencies: [],
                        metadata: {}
                    };
                }
                function a(e, t, n) {
                    return new Promise(u({
                        step: n.address ? "fetch" : "locate",
                        loader: e,
                        moduleName: t,
                        moduleMetadata: n && n.metadata || {},
                        moduleSource: n.source,
                        moduleAddress: n.address
                    }));
                }
                function o(t, n, r, a) {
                    return new Promise(function(e, o) {
                        e(t.loaderObj.normalize(n, r, a));
                    }).then(function(n) {
                        var r;
                        if (t.modules[n]) return r = e(n), r.status = "linked", r.module = t.modules[n], 
                        r;
                        for (var a = 0, o = t.loads.length; o > a; a++) if ((r = t.loads[a]).name == n) return r;
                        return r = e(n), t.loads.push(r), i(t, r), r;
                    });
                }
                function i(e, t) {
                    s(e, t, Promise.resolve().then(function() {
                        return e.loaderObj.locate({
                            name: t.name,
                            metadata: t.metadata
                        });
                    }));
                }
                function s(e, t, n) {
                    l(e, t, n.then(function(n) {
                        return "loading" == t.status ? (t.address = n, e.loaderObj.fetch({
                            name: t.name,
                            metadata: t.metadata,
                            address: n
                        })) : void 0;
                    }));
                }
                function l(e, t, n) {
                    n.then(function(n) {
                        return "loading" == t.status ? (t.address = t.address || t.name, Promise.resolve(e.loaderObj.translate({
                            name: t.name,
                            metadata: t.metadata,
                            address: t.address,
                            source: n
                        })).then(function(n) {
                            return t.source = n, e.loaderObj.instantiate({
                                name: t.name,
                                metadata: t.metadata,
                                address: t.address,
                                source: n
                            });
                        }).then(function(e) {
                            if (void 0 === e) throw new TypeError("Declarative modules unsupported in the polyfill.");
                            if ("object" != typeof e) throw new TypeError("Invalid instantiate return value");
                            t.depsList = e.deps || [], t.execute = e.execute;
                        }).then(function() {
                            t.dependencies = [];
                            for (var n = t.depsList, r = [], a = 0, i = n.length; i > a; a++) !function(n, a) {
                                r.push(o(e, n, t.name, t.address).then(function(e) {
                                    if (t.dependencies[a] = {
                                        key: n,
                                        value: e.name
                                    }, "linked" != e.status) for (var r = t.linkSets.concat([]), o = 0, i = r.length; i > o; o++) c(r[o], e);
                                }));
                            }(n[a], a);
                            return Promise.all(r);
                        }).then(function() {
                            t.status = "loaded";
                            for (var e = t.linkSets.concat([]), n = 0, r = e.length; r > n; n++) m(e[n], t);
                        })) : void 0;
                    }).catch(function(e) {
                        t.status = "failed", t.exception = e;
                        for (var n = t.linkSets.concat([]), r = 0, a = n.length; a > r; r++) p(n[r], t, e);
                    });
                }
                function u(t) {
                    return function(n, r) {
                        var a = t.loader, o = t.moduleName, u = t.step;
                        if (a.modules[o]) throw new TypeError('"' + o + '" already exists in the module table');
                        for (var c, f = 0, m = a.loads.length; m > f; f++) if (a.loads[f].name == o && (c = a.loads[f], 
                        "translate" != u || c.source || (c.address = t.moduleAddress, l(a, c, Promise.resolve(t.moduleSource))), 
                        c.linkSets.length && c.linkSets[0].loads[0].name == c.name)) return c.linkSets[0].done.then(function() {
                            n(c);
                        });
                        var p = c || e(o);
                        p.metadata = t.moduleMetadata;
                        var h = d(a, p);
                        a.loads.push(p), n(h.done), "locate" == u ? i(a, p) : "fetch" == u ? s(a, p, Promise.resolve(t.moduleAddress)) : (p.address = t.moduleAddress, 
                        l(a, p, Promise.resolve(t.moduleSource)));
                    };
                }
                function d(e, t) {
                    var n = {
                        loader: e,
                        loads: [],
                        startingLoad: t,
                        loadingCount: 0
                    };
                    return n.done = new Promise(function(e, t) {
                        n.resolve = e, n.reject = t;
                    }), c(n, t), n;
                }
                function c(e, t) {
                    if ("failed" != t.status) {
                        for (var n = 0, r = e.loads.length; r > n; n++) if (e.loads[n] == t) return;
                        e.loads.push(t), t.linkSets.push(e), "loaded" != t.status && e.loadingCount++;
                        for (var a = e.loader, n = 0, r = t.dependencies.length; r > n; n++) if (t.dependencies[n]) {
                            var o = t.dependencies[n].value;
                            if (!a.modules[o]) for (var i = 0, s = a.loads.length; s > i; i++) if (a.loads[i].name == o) {
                                c(e, a.loads[i]);
                                break;
                            }
                        }
                    }
                }
                function f(e) {
                    var t = !1;
                    try {
                        y(e, function(n, r) {
                            p(e, n, r), t = !0;
                        });
                    } catch (n) {
                        p(e, null, n), t = !0;
                    }
                    return t;
                }
                function m(e, t) {
                    if (!(--e.loadingCount > 0)) {
                        var n = e.startingLoad;
                        if (!1 === e.loader.loaderObj.execute) {
                            for (var r = [].concat(e.loads), a = 0, o = r.length; o > a; a++) (t = r[a]).module = {
                                name: t.name,
                                module: w({}),
                                evaluated: !0
                            }, t.status = "linked", h(e.loader, t);
                            return e.resolve(n);
                        }
                        f(e) || e.resolve(n);
                    }
                }
                function p(e, n, r) {
                    var a = e.loader;
                    e: if (n) if (e.loads[0].name == n.name) r = t(r, "Error loading " + n.name); else {
                        for (o = 0; o < e.loads.length; o++) for (var i = e.loads[o], s = 0; s < i.dependencies.length; s++) {
                            var l = i.dependencies[s];
                            if (l.value == n.name) {
                                r = t(r, "Error loading " + n.name + ' as "' + l.key + '" from ' + i.name);
                                break e;
                            }
                        }
                        r = t(r, "Error loading " + n.name + " from " + e.loads[0].name);
                    } else r = t(r, "Error linking " + e.loads[0].name);
                    for (var u = e.loads.concat([]), o = 0, d = u.length; d > o; o++) {
                        var n = u[o];
                        a.loaderObj.failed = a.loaderObj.failed || [], -1 == J.call(a.loaderObj.failed, n) && a.loaderObj.failed.push(n);
                        var c = J.call(n.linkSets, e);
                        if (n.linkSets.splice(c, 1), 0 == n.linkSets.length) {
                            var f = J.call(e.loader.loads, n);
                            -1 != f && e.loader.loads.splice(f, 1);
                        }
                    }
                    e.reject(r);
                }
                function h(e, t) {
                    if (e.loaderObj.trace) {
                        e.loaderObj.loads || (e.loaderObj.loads = {});
                        var n = {};
                        t.dependencies.forEach(function(e) {
                            n[e.key] = e.value;
                        }), e.loaderObj.loads[t.name] = {
                            name: t.name,
                            deps: t.dependencies.map(function(e) {
                                return e.key;
                            }),
                            depMap: n,
                            address: t.address,
                            metadata: t.metadata,
                            source: t.source
                        };
                    }
                    t.name && (e.modules[t.name] = t.module);
                    var r = J.call(e.loads, t);
                    -1 != r && e.loads.splice(r, 1);
                    for (var a = 0, o = t.linkSets.length; o > a; a++) -1 != (r = J.call(t.linkSets[a].loads, t)) && t.linkSets[a].loads.splice(r, 1);
                    t.linkSets.splice(0, t.linkSets.length);
                }
                function g(e, t, r) {
                    try {
                        var a = t.execute();
                    } catch (o) {
                        return void r(t, o);
                    }
                    return a && a instanceof n ? a : void r(t, new TypeError("Execution must define a Module instance"));
                }
                function v(e, t, n) {
                    var r = e._loader.importPromises;
                    return r[t] = n.then(function(e) {
                        return r[t] = void 0, e;
                    }, function(e) {
                        throw r[t] = void 0, e;
                    });
                }
                function y(e, t) {
                    var n = e.loader;
                    if (e.loads.length) for (var r = e.loads.concat([]), a = 0; a < r.length; a++) {
                        var o = r[a], i = g(e, o, t);
                        if (!i) return;
                        o.module = {
                            name: o.name,
                            module: i
                        }, o.status = "linked", h(n, o);
                    }
                }
                var b = 0;
                r.prototype = {
                    constructor: r,
                    define: function(e, t, n) {
                        if (this._loader.importPromises[e]) throw new TypeError("Module is already loading.");
                        return v(this, e, new Promise(u({
                            step: "translate",
                            loader: this._loader,
                            moduleName: e,
                            moduleMetadata: n && n.metadata || {},
                            moduleSource: t,
                            moduleAddress: n && n.address
                        })));
                    },
                    delete: function(e) {
                        var t = this._loader;
                        return delete t.importPromises[e], delete t.moduleRecords[e], !!t.modules[e] && delete t.modules[e];
                    },
                    get: function(e) {
                        return this._loader.modules[e] ? this._loader.modules[e].module : void 0;
                    },
                    has: function(e) {
                        return !!this._loader.modules[e];
                    },
                    import: function(e, t, n) {
                        "object" == typeof t && (t = t.name);
                        var r = this;
                        return Promise.resolve(r.normalize(e, t)).then(function(e) {
                            var t = r._loader;
                            return t.modules[e] ? t.modules[e].module : t.importPromises[e] || v(r, e, a(t, e, {}).then(function(n) {
                                return delete t.importPromises[e], n.module.module;
                            }));
                        });
                    },
                    load: function(e) {
                        var t = this._loader;
                        return t.modules[e] ? Promise.resolve() : t.importPromises[e] || v(this, e, new Promise(u({
                            step: "locate",
                            loader: t,
                            moduleName: e,
                            moduleMetadata: {},
                            moduleSource: void 0,
                            moduleAddress: void 0
                        })).then(function() {
                            delete t.importPromises[e];
                        }));
                    },
                    module: function(t, n) {
                        var r = e();
                        r.address = n && n.address;
                        var a = d(this._loader, r), o = Promise.resolve(t), i = this._loader, s = a.done.then(function() {
                            return r.module.module;
                        });
                        return l(i, r, o), s;
                    },
                    newModule: function(e) {
                        if ("object" != typeof e) throw new TypeError("Expected object");
                        var t = new n(), r = [];
                        if (Object.getOwnPropertyNames && null != e) r = Object.getOwnPropertyNames(e); else for (var a in e) r.push(a);
                        for (var o = 0; o < r.length; o++) !function(n) {
                            A(t, n, {
                                configurable: !1,
                                enumerable: !0,
                                get: function() {
                                    return e[n];
                                },
                                set: function() {
                                    throw new Error("Module exports cannot be changed externally.");
                                }
                            });
                        }(r[o]);
                        return Object.freeze && Object.freeze(t), t;
                    },
                    set: function(e, t) {
                        if (!(t instanceof n)) throw new TypeError("Loader.set(" + e + ", module) must be a module");
                        this._loader.modules[e] = {
                            module: t
                        };
                    },
                    normalize: function(e, t, n) {},
                    locate: function(e) {
                        return e.name;
                    },
                    fetch: function(e) {},
                    translate: function(e) {
                        return e.source;
                    },
                    instantiate: function(e) {}
                };
                var w = r.prototype.newModule;
            }();
            var G;
            o.prototype = r.prototype, a.prototype = new o(), a.prototype.constructor = a;
            var V, Y = /^[^\/]+:\/\//, Z = new X(N), K = !0;
            try {
                Object.getOwnPropertyDescriptor({
                    a: 0
                }, "a");
            } catch (H) {
                K = !1;
            }
            var Q;
            if ("undefined" != typeof XMLHttpRequest) Q = function(e, t, n, r) {
                function a() {
                    n(i.responseText);
                }
                function o() {
                    r(new Error("XHR error" + (i.status ? " (" + i.status + (i.statusText ? " " + i.statusText : "") + ")" : "") + " loading " + e));
                }
                var i = new XMLHttpRequest(), s = !0, l = !1;
                if (!("withCredentials" in i)) {
                    var u = /^(\w+:)?\/\/([^\/]+)/.exec(e);
                    u && (s = u[2] === window.location.host, u[1] && (s &= u[1] === window.location.protocol));
                }
                s || "undefined" == typeof XDomainRequest || (i = new XDomainRequest(), i.onload = a, 
                i.onerror = o, i.ontimeout = o, i.onprogress = function() {}, i.timeout = 0, l = !0), 
                i.onreadystatechange = function() {
                    4 === i.readyState && (0 == i.status ? i.responseText ? a() : (i.addEventListener("error", o), 
                    i.addEventListener("load", a)) : 200 === i.status ? a() : o());
                }, i.open("GET", e, !0), i.setRequestHeader && (i.setRequestHeader("Accept", "application/x-es-module, */*"), 
                t && ("string" == typeof t && i.setRequestHeader("Authorization", t), i.withCredentials = !0)), 
                l ? setTimeout(function() {
                    i.send();
                }, 0) : i.send(null);
            }; else if ("undefined" != typeof require && "undefined" != typeof process) {
                var W;
                Q = function(e, t, n, r) {
                    if ("file:///" != e.substr(0, 8)) throw new Error('Unable to fetch "' + e + '". Only file URLs of the form file:/// allowed running in Node.');
                    return W = W || require("fs"), e = U ? e.replace(/\//g, "\\").substr(8) : e.substr(7), 
                    W.readFile(e, function(e, t) {
                        if (e) return r(e);
                        var a = t + "";
                        "\ufeff" === a[0] && (a = a.substr(1)), n(a);
                    });
                };
            } else {
                if ("undefined" == typeof self || void 0 === self.fetch) throw new TypeError("No environment fetch API available.");
                Q = function(e, t, n, r) {
                    var a = {
                        headers: {
                            Accept: "application/x-es-module, */*"
                        }
                    };
                    t && ("string" == typeof t && (a.headers.Authorization = t), a.credentials = "include"), 
                    fetch(e, a).then(function(e) {
                        if (e.ok) return e.text();
                        throw new Error("Fetch error: " + e.status + " " + e.statusText);
                    }).then(n, r);
                };
            }
            var ee;
            s(function(e) {
                return function() {
                    e.call(this), this.baseURL = N, this.map = {}, this.warnings = !1, this.defaultJSExtensions = !1, 
                    this.pluginFirst = !1, this.loaderErrorStack = !1, this.set("@empty", this.newModule({})), 
                    P.call(this, !1, !1);
                };
            }), "undefined" == typeof require || "undefined" == typeof process || process.browser || (a.prototype._nodeRequire = require);
            var te;
            i("normalize", function(e) {
                return function(e, t, n) {
                    var r = _.call(this, e, t);
                    return !this.defaultJSExtensions || n || ".js" == r.substr(r.length - 3, 3) || d(r) || (r += ".js"), 
                    r;
                };
            });
            var ne = "undefined" != typeof XMLHttpRequest;
            i("locate", function(e) {
                return function(t) {
                    return Promise.resolve(e.call(this, t)).then(function(e) {
                        return ne ? e.replace(/#/g, "%23") : e;
                    });
                };
            }), i("fetch", function() {
                return function(e) {
                    return new Promise(function(t, n) {
                        Q(e.address, e.metadata.authorization, t, n);
                    });
                };
            }), i("import", function(e) {
                return function(t, n, r) {
                    return n && n.name && w.call(this, "SystemJS.import(name, { name: parentName }) is deprecated for SystemJS.import(name, parentName), while importing " + t + " from " + n.name), 
                    e.call(this, t, n, r).then(function(e) {
                        return e.__useDefault ? e.default : e;
                    });
                };
            }), i("translate", function(e) {
                return function(t) {
                    return "detect" == t.metadata.format && (t.metadata.format = void 0), e.apply(this, arguments);
                };
            }), i("instantiate", function(e) {
                return function(e) {
                    if ("json" == e.metadata.format && !this.builder) {
                        var t = e.metadata.entry = R();
                        t.deps = [], t.execute = function() {
                            try {
                                return JSON.parse(e.source);
                            } catch (t) {
                                throw new Error("Invalid JSON file " + e.name);
                            }
                        };
                    }
                };
            }), a.prototype.getConfig = function(e) {
                var t = {}, n = this;
                for (var r in n) n.hasOwnProperty && !n.hasOwnProperty(r) || r in a.prototype && "transpiler" != r || -1 == J.call([ "_loader", "amdDefine", "amdRequire", "defined", "failed", "version" ], r) && (t[r] = n[r]);
                return t.production = ee.production, t;
            };
            var re;
            a.prototype.config = function(e, t) {
                function n(e) {
                    for (var t in e) if (e.hasOwnProperty(t)) return !0;
                }
                var r = this;
                if ("loaderErrorStack" in e && (re = $__curScript, e.loaderErrorStack ? $__curScript = void 0 : $__curScript = re), 
                "warnings" in e && (r.warnings = e.warnings), !1 === e.transpilerRuntime && (r._loader.loadedTranspilerRuntime = !0), 
                ("production" in e || "build" in e) && P.call(r, !!e.production, !!(e.build || ee && ee.build)), 
                !t) {
                    var a;
                    if (j(r, e, function(e) {
                        a = a || e.baseURL;
                    }), a = a || e.baseURL) {
                        if (n(r.packages) || n(r.meta) || n(r.depCache) || n(r.bundles) || n(r.packageConfigPaths)) throw new TypeError("Incorrect configuration order. The baseURL must be configured with the first SystemJS.config call.");
                        this.baseURL = a, E.call(this);
                    }
                    if (e.paths && g(r.paths, e.paths), j(r, e, function(e) {
                        e.paths && g(r.paths, e.paths);
                    }), this.warnings) for (var o in r.paths) -1 != o.indexOf("*") && w.call(r, 'Paths configuration "' + o + '" -> "' + r.paths[o] + '" uses wildcards which are being deprecated for simpler trailing "/" folder paths.');
                }
                if (e.defaultJSExtensions && (r.defaultJSExtensions = e.defaultJSExtensions, w.call(r, "The defaultJSExtensions configuration option is deprecated, use packages configuration instead.")), 
                e.pluginFirst && (r.pluginFirst = e.pluginFirst), e.map) {
                    var i = "";
                    for (var o in e.map) if ("string" != typeof (s = e.map[o])) {
                        i += (i.length ? ", " : "") + '"' + o + '"';
                        var l = r.defaultJSExtensions && ".js" != o.substr(o.length - 3, 3), u = r.decanonicalize(o);
                        l && ".js" == u.substr(u.length - 3, 3) && (u = u.substr(0, u.length - 3));
                        var c = "";
                        for (var f in r.packages) u.substr(0, f.length) == f && (!u[f.length] || "/" == u[f.length]) && c.split("/").length < f.split("/").length && (c = f);
                        c && r.packages[c].main && (u = u.substr(0, u.length - r.packages[c].main.length - 1)), 
                        (f = r.packages[u] = r.packages[u] || {}).map = s;
                    } else r.map[o] = s;
                    i && w.call(r, "The map configuration for " + i + ' uses object submaps, which is deprecated in global map.\nUpdate this to use package contextual map with configs like SystemJS.config({ packages: { "' + o + '": { map: {...} } } }).');
                }
                if (e.packageConfigPaths) {
                    for (var m = [], p = 0; p < e.packageConfigPaths.length; p++) {
                        var h = e.packageConfigPaths[p], v = Math.max(h.lastIndexOf("*") + 1, h.lastIndexOf("/")), y = _.call(r, h.substr(0, v));
                        m[p] = y + h.substr(v);
                    }
                    r.packageConfigPaths = m;
                }
                if (e.bundles) for (var o in e.bundles) {
                    for (var x = [], p = 0; p < e.bundles[o].length; p++) {
                        var l = r.defaultJSExtensions && ".js" != e.bundles[o][p].substr(e.bundles[o][p].length - 3, 3), S = r.decanonicalize(e.bundles[o][p]);
                        l && ".js" == S.substr(S.length - 3, 3) && (S = S.substr(0, S.length - 3)), x.push(S);
                    }
                    r.bundles[o] = x;
                }
                if (e.packages) for (var o in e.packages) {
                    if (o.match(/^([^\/]+:)?\/\/$/)) throw new TypeError('"' + o + '" is not a valid package name.');
                    "/" == (u = _.call(r, o))[u.length - 1] && (u = u.substr(0, u.length - 1)), b(r, u, e.packages[o], !1);
                }
                for (var k in e) {
                    var s = e[k];
                    if (-1 == J.call([ "baseURL", "map", "packages", "bundles", "paths", "warnings", "packageConfigPaths", "loaderErrorStack", "browserConfig", "nodeConfig", "devConfig", "buildConfig", "productionConfig" ], k)) if ("object" != typeof s || s instanceof Array) r[k] = s; else {
                        r[k] = r[k] || {};
                        for (var o in s) if ("meta" == k && "*" == o[0]) g(r[k][o] = r[k][o] || {}, s[o]); else if ("meta" == k) {
                            var O = _.call(r, o);
                            r.defaultJSExtensions && ".js" != O.substr(O.length - 3, 3) && !d(O) && (O += ".js"), 
                            g(r[k][O] = r[k][O] || {}, s[o]);
                        } else if ("depCache" == k) {
                            var l = r.defaultJSExtensions && ".js" != o.substr(o.length - 3, 3), u = r.decanonicalize(o);
                            l && ".js" == u.substr(u.length - 3, 3) && (u = u.substr(0, u.length - 3)), r[k][u] = [].concat(s[o]);
                        } else r[k][o] = s[o];
                    }
                }
                j(r, e, function(e) {
                    r.config(e, !0);
                });
            }, function() {
                function e(e, t) {
                    var n, r, a = 0;
                    for (var o in e.packages) t.substr(0, o.length) !== o || t.length !== o.length && "/" !== t[o.length] || (r = o.split("/").length) > a && (n = o, 
                    a = r);
                    return n;
                }
                function t(e, t, n, r, a) {
                    if (!r || "/" == r[r.length - 1] || a || !1 === t.defaultExtension) return r;
                    var o = !1;
                    if (t.meta && p(t.meta, r, function(e, t, n) {
                        return 0 == n || e.lastIndexOf("*") != e.length - 1 ? o = !0 : void 0;
                    }), !o && e.meta && p(e.meta, n + "/" + r, function(e, t, n) {
                        return 0 == n || e.lastIndexOf("*") != e.length - 1 ? o = !0 : void 0;
                    }), o) return r;
                    var i = "." + (t.defaultExtension || "js");
                    return r.substr(r.length - i.length) != i ? r + i : r;
                }
                function n(e, n, r, a, i) {
                    if (!a) {
                        if (!n.main) return r + (e.defaultJSExtensions ? ".js" : "");
                        a = "./" == n.main.substr(0, 2) ? n.main.substr(2) : n.main;
                    }
                    if (n.map) {
                        var s = "./" + a, l = S(n.map, s);
                        if (l || (s = "./" + t(e, n, r, a, i)) != "./" + a && (l = S(n.map, s)), l) {
                            var u = o(e, n, r, l, s, i);
                            if (u) return u;
                        }
                    }
                    return r + "/" + t(e, n, r, a, i);
                }
                function r(e, t, n, r) {
                    if ("." == e) throw new Error("Package " + n + ' has a map entry for "." which is not permitted.');
                    return !(t.substr(0, e.length) == e && r.length > e.length);
                }
                function o(e, n, a, o, i, s) {
                    "/" == i[i.length - 1] && (i = i.substr(0, i.length - 1));
                    var l = n.map[o];
                    if ("object" == typeof l) throw new Error("Synchronous conditional normalization not supported sync normalizing " + o + " in " + a);
                    if (r(o, l, a, i) && "string" == typeof l) {
                        if ("." == l) l = a; else if ("./" == l.substr(0, 2)) return a + "/" + t(e, n, a, l.substr(2) + i.substr(o.length), s);
                        return e.normalizeSync(l + i.substr(o.length), a + "/");
                    }
                }
                function l(e, n, r, a, o) {
                    if (!a) {
                        if (!n.main) return Promise.resolve(r + (e.defaultJSExtensions ? ".js" : ""));
                        a = "./" == n.main.substr(0, 2) ? n.main.substr(2) : n.main;
                    }
                    var i, s;
                    return n.map && (i = "./" + a, (s = S(n.map, i)) || (i = "./" + t(e, n, r, a, o)) != "./" + a && (s = S(n.map, i))), 
                    (s ? d(e, n, r, s, i, o) : Promise.resolve()).then(function(i) {
                        return i ? Promise.resolve(i) : Promise.resolve(r + "/" + t(e, n, r, a, o));
                    });
                }
                function u(e, n, r, a, o, i, s) {
                    if ("." == o) o = r; else if ("./" == o.substr(0, 2)) return Promise.resolve(r + "/" + t(e, n, r, o.substr(2) + i.substr(a.length), s)).then(function(t) {
                        return L.call(e, t, r + "/");
                    });
                    return e.normalize(o + i.substr(a.length), r + "/");
                }
                function d(e, t, n, a, o, i) {
                    "/" == o[o.length - 1] && (o = o.substr(0, o.length - 1));
                    var s = t.map[a];
                    if ("string" == typeof s) return r(a, s, n, o) ? u(e, t, n, a, s, o, i) : Promise.resolve();
                    if (e.builder) return Promise.resolve(n + "/#:" + o);
                    var l = [], d = [];
                    for (var c in s) {
                        var f = z(c);
                        d.push({
                            condition: f,
                            map: s[c]
                        }), l.push(e.import(f.module, n));
                    }
                    return Promise.all(l).then(function(e) {
                        for (var t = 0; t < d.length; t++) {
                            var n = d[t].condition, r = x(n.prop, e[t]);
                            if (!n.negate && r || n.negate && !r) return d[t].map;
                        }
                    }).then(function(s) {
                        if (s) {
                            if (!r(a, s, n, o)) return;
                            return u(e, t, n, a, s, o, i);
                        }
                    });
                }
                function c(e) {
                    var t = e.lastIndexOf("*"), n = Math.max(t + 1, e.lastIndexOf("/"));
                    return {
                        length: n,
                        regEx: new RegExp("^(" + e.substr(0, n).replace(/[.+?^${}()|[\]\\]/g, "\\$&").replace(/\*/g, "[^\\/]+") + ")(\\/|$)"),
                        wildcard: -1 != t
                    };
                }
                function f(e, t) {
                    for (var n, r, a = !1, o = 0; o < e.packageConfigPaths.length; o++) {
                        var i = e.packageConfigPaths[o], s = h[i] || (h[i] = c(i));
                        if (!(t.length < s.length)) {
                            var l = t.match(s.regEx);
                            !l || n && (a && s.wildcard || !(n.length < l[1].length)) || (n = l[1], a = !s.wildcard, 
                            r = n + i.substr(s.length));
                        }
                    }
                    return n ? {
                        packageName: n,
                        configPath: r
                    } : void 0;
                }
                function m(e, t, n) {
                    var r = e.pluginLoader || e;
                    return (r.meta[n] = r.meta[n] || {}).format = "json", r.meta[n].loader = null, r.load(n).then(function() {
                        var a = r.get(n).default;
                        return a.systemjs && (a = a.systemjs), a.modules && (a.meta = a.modules, w.call(e, "Package config file " + n + ' is configured with "modules", which is deprecated as it has been renamed to "meta".')), 
                        b(e, t, a, !0);
                    });
                }
                function p(e, t, n) {
                    var r;
                    for (var a in e) {
                        var o = "./" == a.substr(0, 2) ? "./" : "";
                        if (o && (a = a.substr(2)), -1 !== (r = a.indexOf("*")) && a.substr(0, r) == t.substr(0, r) && a.substr(r + 1) == t.substr(t.length - a.length + r + 1) && n(a, e[o + a], a.split("/").length)) return;
                    }
                    var i = e[t] && e.hasOwnProperty && e.hasOwnProperty(t) ? e[t] : e["./" + t];
                    i && n(i, i, 0);
                }
                s(function(e) {
                    return function() {
                        e.call(this), this.packages = {}, this.packageConfigPaths = [];
                    };
                }), a.prototype.normalizeSync = a.prototype.decanonicalize = a.prototype.normalize, 
                i("decanonicalize", function(t) {
                    return function(n, r) {
                        if (this.builder) return t.call(this, n, r, !0);
                        var a = t.call(this, n, r, !1);
                        if (!this.defaultJSExtensions) return a;
                        var o = e(this, a), i = this.packages[o], s = i && i.defaultExtension;
                        return void 0 == s && i && i.meta && p(i.meta, a.substr(o), function(e, t, n) {
                            return 0 == n || e.lastIndexOf("*") != e.length - 1 ? (s = !1, !0) : void 0;
                        }), (!1 === s || s && ".js" != s) && ".js" != n.substr(n.length - 3, 3) && ".js" == a.substr(a.length - 3, 3) && (a = a.substr(0, a.length - 3)), 
                        a;
                    };
                }), i("normalizeSync", function(t) {
                    return function(r, a, i) {
                        var s = this;
                        if (i = !0 === i, a) var l = e(s, a) || s.defaultJSExtensions && ".js" == a.substr(a.length - 3, 3) && e(s, a.substr(0, a.length - 3));
                        var u = l && s.packages[l];
                        if (u && "." != r[0]) {
                            var d = u.map, c = d && S(d, r);
                            if (c && "string" == typeof d[c]) {
                                var m = o(s, u, l, c, r, i);
                                if (m) return m;
                            }
                        }
                        var p = s.defaultJSExtensions && ".js" != r.substr(r.length - 3, 3), h = t.call(s, r, a, !1);
                        p && ".js" != h.substr(h.length - 3, 3) && (p = !1), p && (h = h.substr(0, h.length - 3));
                        var g = f(s, h), v = g && g.packageName || e(s, h);
                        if (!v) return h + (p ? ".js" : "");
                        var y = h.substr(v.length + 1);
                        return n(s, s.packages[v] || {}, v, y, i);
                    };
                }), i("normalize", function(t) {
                    return function(n, r, a) {
                        var o = this;
                        return a = !0 === a, Promise.resolve().then(function() {
                            if (r) var t = e(o, r) || o.defaultJSExtensions && ".js" == r.substr(r.length - 3, 3) && e(o, r.substr(0, r.length - 3));
                            var i = t && o.packages[t];
                            if (i && "./" != n.substr(0, 2)) {
                                var s = i.map, l = s && S(s, n);
                                if (l) return d(o, i, t, l, n, a);
                            }
                            return Promise.resolve();
                        }).then(function(i) {
                            if (i) return i;
                            var s = o.defaultJSExtensions && ".js" != n.substr(n.length - 3, 3), u = t.call(o, n, r, !1);
                            s && ".js" != u.substr(u.length - 3, 3) && (s = !1), s && (u = u.substr(0, u.length - 3));
                            var d = f(o, u), c = d && d.packageName || e(o, u);
                            if (!c) return Promise.resolve(u + (s ? ".js" : ""));
                            var p = o.packages[c];
                            return (p && (p.configured || !d) ? Promise.resolve(p) : m(o, c, d.configPath)).then(function(e) {
                                var t = u.substr(c.length + 1);
                                return l(o, e, c, t, a);
                            });
                        });
                    };
                });
                var h = {};
                i("locate", function(t) {
                    return function(n) {
                        var r = this;
                        return Promise.resolve(t.call(this, n)).then(function(t) {
                            var a = e(r, n.name);
                            if (a) {
                                var o = r.packages[a], i = n.name.substr(a.length + 1), s = {};
                                if (o.meta) {
                                    var l = 0;
                                    p(o.meta, i, function(e, t, n) {
                                        n > l && (l = n), v(s, t, n && l > n);
                                    }), v(n.metadata, s);
                                }
                                o.format && !n.metadata.loader && (n.metadata.format = n.metadata.format || o.format);
                            }
                            return t;
                        });
                    };
                });
            }(), function() {
                function t() {
                    if (s && "interactive" === s.script.readyState) return s.load;
                    for (var e = 0; e < d.length; e++) if ("interactive" == d[e].script.readyState) return (s = d[e]).load;
                }
                function n(e, t) {
                    return new Promise(function(e, n) {
                        t.metadata.integrity && n(new Error("Subresource integrity checking is not supported in web workers.")), 
                        l = t;
                        try {
                            importScripts(t.address);
                        } catch (r) {
                            l = null, n(r);
                        }
                        l = null, t.metadata.entry || n(new Error(t.address + " did not call System.register or AMD define. If loading a global, ensure the meta format is set to global.")), 
                        e("");
                    });
                }
                if ("undefined" != typeof document) var r = document.getElementsByTagName("head")[0];
                var a, o, s, l = null, u = r && function() {
                    var e = document.createElement("script"), t = "undefined" != typeof opera && "[object Opera]" === opera.toString();
                    return e.attachEvent && !(e.attachEvent.toString && e.attachEvent.toString().indexOf("[native code") < 0) && !t;
                }(), d = [], c = 0, f = [];
                i("pushRegister_", function(e) {
                    return function(n) {
                        return !e.call(this, n) && (l ? this.reduceRegister_(l, n) : u ? this.reduceRegister_(t(), n) : c ? f.push(n) : this.reduceRegister_(null, n), 
                        !0);
                    };
                }), i("fetch", function(t) {
                    return function(i) {
                        var l = this;
                        return "json" != i.metadata.format && i.metadata.scriptLoad && (q || D) ? D ? n(l, i) : new Promise(function(t, n) {
                            function m(e) {
                                if (!g.readyState || "loaded" == g.readyState || "complete" == g.readyState) {
                                    if (c--, i.metadata.entry || f.length) {
                                        if (!u) {
                                            for (var r = 0; r < f.length; r++) l.reduceRegister_(i, f[r]);
                                            f = [];
                                        }
                                    } else l.reduceRegister_(i);
                                    h(), i.metadata.entry || i.metadata.bundle || n(new Error(i.name + " did not call System.register or AMD define. If loading a global module configure the global name via the meta exports property for script injection support.")), 
                                    t("");
                                }
                            }
                            function p(e) {
                                h(), n(new Error("Unable to load script " + i.address));
                            }
                            function h() {
                                if (e.System = a, e.require = o, g.detachEvent) {
                                    g.detachEvent("onreadystatechange", m);
                                    for (var t = 0; t < d.length; t++) d[t].script == g && (s && s.script == g && (s = null), 
                                    d.splice(t, 1));
                                } else g.removeEventListener("load", m, !1), g.removeEventListener("error", p, !1);
                                r.removeChild(g);
                            }
                            var g = document.createElement("script");
                            g.async = !0, i.metadata.crossOrigin && (g.crossOrigin = i.metadata.crossOrigin), 
                            i.metadata.integrity && g.setAttribute("integrity", i.metadata.integrity), u ? (g.attachEvent("onreadystatechange", m), 
                            d.push({
                                script: g,
                                load: i
                            })) : (g.addEventListener("load", m, !1), g.addEventListener("error", p, !1)), c++, 
                            a = e.System, o = e.require, g.src = i.address, r.appendChild(g);
                        }) : t.call(this, i);
                    };
                });
            }();
            var ae = /^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)*\s*/;
            !function() {
                function t(e, n, r) {
                    if (r[e.groupIndex] = r[e.groupIndex] || [], -1 == J.call(r[e.groupIndex], e)) {
                        r[e.groupIndex].push(e);
                        for (var a = 0, o = e.normalizedDeps.length; o > a; a++) {
                            var i = e.normalizedDeps[a], s = n.defined[i];
                            if (s && !s.evaluated) {
                                var l = e.groupIndex + (s.declarative != e.declarative);
                                if (null === s.groupIndex || s.groupIndex < l) {
                                    if (null !== s.groupIndex && (r[s.groupIndex].splice(J.call(r[s.groupIndex], s), 1), 
                                    0 == r[s.groupIndex].length)) throw new Error("Mixed dependency cycle detected");
                                    s.groupIndex = l;
                                }
                                t(s, n, r);
                            }
                        }
                    }
                }
                function r(e, n, r) {
                    if (!n.module) {
                        n.groupIndex = 0;
                        var a = [];
                        t(n, r, a);
                        for (var o = !!n.declarative == a.length % 2, i = a.length - 1; i >= 0; i--) {
                            for (var s = a[i], l = 0; l < s.length; l++) {
                                var d = s[l];
                                o ? u(d, r) : c(d, r);
                            }
                            o = !o;
                        }
                    }
                }
                function o() {}
                function l(e, t) {
                    return t[e] || (t[e] = {
                        name: e,
                        dependencies: [],
                        exports: new o(),
                        importers: []
                    });
                }
                function u(t, n) {
                    if (!t.module) {
                        var r = n._loader.moduleRecords, a = t.module = l(t.name, r), o = t.module.exports, i = t.declare.call(e, function(e, t) {
                            if (a.locked = !0, "object" == typeof e) for (var n in e) o[n] = e[n]; else o[e] = t;
                            for (var r = 0, i = a.importers.length; i > r; r++) {
                                var s = a.importers[r];
                                if (!s.locked) {
                                    var l = J.call(s.dependencies, a), u = s.setters[l];
                                    u && u(o);
                                }
                            }
                            return a.locked = !1, t;
                        }, {
                            id: t.name
                        });
                        if (i = i || {
                            setters: [],
                            execute: function() {}
                        }, a.setters = i.setters, a.execute = i.execute, !a.setters || !a.execute) throw new TypeError("Invalid System.register form for " + t.name);
                        for (var s = 0, d = t.normalizedDeps.length; d > s; s++) {
                            var c, f = t.normalizedDeps[s], m = n.defined[f], p = r[f];
                            p ? c = p.exports : m && !m.declarative ? c = m.esModule : m ? (u(m, n), p = m.module, 
                            c = p.exports) : c = n.get(f), p && p.importers ? (p.importers.push(a), a.dependencies.push(p)) : a.dependencies.push(null);
                            for (var h = t.originalIndices[s], g = 0, v = h.length; v > g; ++g) {
                                var y = h[g];
                                a.setters[y] && a.setters[y](c);
                            }
                        }
                    }
                }
                function d(e, t) {
                    var n, r = t.defined[e];
                    if (r) r.declarative ? f(e, r, [], t) : r.evaluated || c(r, t), n = r.module.exports; else if (!(n = t.get(e))) throw new Error("Unable to load dependency " + e + ".");
                    return (!r || r.declarative) && n && n.__useDefault ? n.default : n;
                }
                function c(t, r) {
                    if (!t.module) {
                        var a = {}, o = t.module = {
                            exports: a,
                            id: t.name
                        };
                        if (!t.executingRequire) for (var i = 0, s = t.normalizedDeps.length; s > i; i++) {
                            var l = t.normalizedDeps[i], u = r.defined[l];
                            u && c(u, r);
                        }
                        t.evaluated = !0;
                        var f = t.execute.call(e, function(e) {
                            for (var n = 0, a = t.deps.length; a > n; n++) if (t.deps[n] == e) return d(t.normalizedDeps[n], r);
                            var o = r.normalizeSync(e, t.name);
                            if (-1 != J.call(t.normalizedDeps, o)) return d(o, r);
                            throw new Error("Module " + e + " not declared as a dependency of " + t.name);
                        }, a, o);
                        f && (o.exports = f), (a = o.exports) && (a.__esModule || a instanceof n) ? t.esModule = r.newModule(a) : t.esmExports && a !== e ? t.esModule = r.newModule(p(a)) : t.esModule = r.newModule({
                            default: a
                        });
                    }
                }
                function f(t, n, r, a) {
                    if (n && !n.evaluated && n.declarative) {
                        r.push(t);
                        for (var o = 0, i = n.normalizedDeps.length; i > o; o++) {
                            var s = n.normalizedDeps[o];
                            -1 == J.call(r, s) && (a.defined[s] ? f(s, a.defined[s], r, a) : a.get(s));
                        }
                        n.evaluated || (n.evaluated = !0, n.module.execute.call(e));
                    }
                }
                a.prototype.register = function(e, t, n) {
                    if ("string" != typeof e && (n = t, t = e, e = null), "boolean" == typeof n) return this.registerDynamic.apply(this, arguments);
                    var r = R();
                    r.name = e && (this.decanonicalize || this.normalize).call(this, e), r.declarative = !0, 
                    r.deps = t, r.declare = n, this.pushRegister_({
                        amd: !1,
                        entry: r
                    });
                }, a.prototype.registerDynamic = function(e, t, n, r) {
                    "string" != typeof e && (r = n, n = t, t = e, e = null);
                    var a = R();
                    a.name = e && (this.decanonicalize || this.normalize).call(this, e), a.deps = t, 
                    a.execute = r, a.executingRequire = n, this.pushRegister_({
                        amd: !1,
                        entry: a
                    });
                }, i("reduceRegister_", function() {
                    return function(e, t) {
                        if (t) {
                            var n = t.entry, r = e && e.metadata;
                            if (n.name && (n.name in this.defined || (this.defined[n.name] = n), r && (r.bundle = !0)), 
                            !n.name || e && !r.entry && n.name == e.name) {
                                if (!r) throw new TypeError("Invalid System.register call. Anonymous System.register calls can only be made by modules loaded by SystemJS.import and not via script tags.");
                                if (r.entry) throw "register" == r.format ? new Error("Multiple anonymous System.register calls in module " + e.name + ". If loading a bundle, ensure all the System.register calls are named.") : new Error("Module " + e.name + " interpreted as " + r.format + " module format, but called System.register.");
                                r.format || (r.format = "register"), r.entry = n;
                            }
                        }
                    };
                }), s(function(e) {
                    return function() {
                        e.call(this), this.defined = {}, this._loader.moduleRecords = {};
                    };
                }), A(o, "toString", {
                    value: function() {
                        return "Module";
                    }
                }), i("delete", function(e) {
                    return function(t) {
                        return delete this._loader.moduleRecords[t], delete this.defined[t], e.call(this, t);
                    };
                }), i("fetch", function(e) {
                    return function(t) {
                        return this.defined[t.name] ? (t.metadata.format = "defined", "") : (t.metadata.deps = t.metadata.deps || [], 
                        e.call(this, t));
                    };
                }), i("translate", function(e) {
                    return function(t) {
                        return t.metadata.deps = t.metadata.deps || [], Promise.resolve(e.apply(this, arguments)).then(function(e) {
                            return ("register" == t.metadata.format || !t.metadata.format && O(t.source)) && (t.metadata.format = "register"), 
                            e;
                        });
                    };
                }), i("load", function(e) {
                    return function(t) {
                        var n = this, a = n.defined[t];
                        return !a || a.deps.length ? e.apply(this, arguments) : (a.originalIndices = a.normalizedDeps = [], 
                        r(t, a, n), f(t, a, [], n), a.esModule || (a.esModule = n.newModule(a.module.exports)), 
                        n.trace || (n.defined[t] = void 0), n.set(t, a.esModule), Promise.resolve());
                    };
                }), i("instantiate", function(e) {
                    return function(t) {
                        "detect" == t.metadata.format && (t.metadata.format = void 0), e.call(this, t);
                        var n, a = this;
                        if (a.defined[t.name]) (n = a.defined[t.name]).declarative || (n.deps = n.deps.concat(t.metadata.deps)), 
                        n.deps = n.deps.concat(t.metadata.deps); else if (t.metadata.entry) n = t.metadata.entry, 
                        n.deps = n.deps.concat(t.metadata.deps); else if (!(a.builder && t.metadata.bundle || "register" != t.metadata.format && "esm" != t.metadata.format && "es6" != t.metadata.format)) {
                            if ("undefined" != typeof __exec && __exec.call(a, t), !t.metadata.entry && !t.metadata.bundle) throw new Error(t.name + " detected as " + t.metadata.format + " but didn't execute.");
                            (n = t.metadata.entry) && t.metadata.deps && (n.deps = n.deps.concat(t.metadata.deps));
                        }
                        n || (n = R(), n.deps = t.metadata.deps, n.execute = function() {}), a.defined[t.name] = n;
                        var o = m(n.deps);
                        n.deps = o.names, n.originalIndices = o.indices, n.name = t.name, n.esmExports = !1 !== t.metadata.esmExports;
                        for (var i = [], s = 0, l = n.deps.length; l > s; s++) i.push(Promise.resolve(a.normalize(n.deps[s], t.name)));
                        return Promise.all(i).then(function(e) {
                            return n.normalizedDeps = e, {
                                deps: n.deps,
                                execute: function() {
                                    return r(t.name, n, a), f(t.name, n, [], a), n.esModule || (n.esModule = a.newModule(n.module.exports)), 
                                    a.trace || (a.defined[t.name] = void 0), n.esModule;
                                }
                            };
                        });
                    };
                });
            }(), i("reduceRegister_", function(e) {
                return function(t, n) {
                    if (n || !t.metadata.exports && (!D || "global" != t.metadata.format)) return e.call(this, t, n);
                    t.metadata.format = "global";
                    var r = t.metadata.entry = R();
                    r.deps = t.metadata.deps;
                    var a = M(t.metadata.exports);
                    r.execute = function() {
                        return a;
                    };
                };
            }), s(function(t) {
                return function() {
                    function n(t) {
                        if (Object.keys) Object.keys(e).forEach(t); else for (var n in e) i.call(e, n) && t(n);
                    }
                    function r(t) {
                        n(function(n) {
                            if (-1 == J.call(s, n)) {
                                try {
                                    var r = e[n];
                                } catch (a) {
                                    s.push(n);
                                }
                                t(n, r);
                            }
                        });
                    }
                    var a = this;
                    t.call(a);
                    var o, i = Object.prototype.hasOwnProperty, s = [ "_g", "sessionStorage", "localStorage", "clipboardData", "frames", "frameElement", "external", "mozAnimationStartTime", "webkitStorageInfo", "webkitIndexedDB", "mozInnerScreenY", "mozInnerScreenX" ];
                    a.set("@@global-helpers", a.newModule({
                        prepareGlobal: function(t, n, a, i) {
                            var s = e.define;
                            e.define = void 0;
                            var l;
                            if (a) {
                                l = {};
                                for (var u in a) l[u] = e[u], e[u] = a[u];
                            }
                            return n || (o = {}, r(function(e, t) {
                                o[e] = t;
                            })), function() {
                                var t, a = n ? M(n) : {}, u = !!n;
                                if ((!n || i) && r(function(r, s) {
                                    o[r] !== s && void 0 !== s && (i && (e[r] = void 0), n || (a[r] = s, void 0 !== t ? u || t === s || (u = !0) : t = s));
                                }), a = u ? a : t, l) for (var d in l) e[d] = l[d];
                                return e.define = s, a;
                            };
                        }
                    }));
                };
            }), s(function(e) {
                return function() {
                    function t(e) {
                        return "file:///" == e.substr(0, 8) ? e.substr(7 + !!U) : r && e.substr(0, r.length) == r ? e.substr(r.length) : e;
                    }
                    var n = this;
                    if (e.call(n), "undefined" != typeof window && "undefined" != typeof document && window.location) var r = location.protocol + "//" + location.hostname + (location.port ? ":" + location.port : "");
                    n.set("@@cjs-helpers", n.newModule({
                        requireResolve: function(e, r) {
                            return t(n.normalizeSync(e, r));
                        },
                        getPathVars: function(e) {
                            var n, r = e.lastIndexOf("!"), a = (n = -1 != r ? e.substr(0, r) : e).split("/");
                            return a.pop(), a = a.join("/"), {
                                filename: t(n),
                                dirname: t(a)
                            };
                        }
                    }));
                };
            }), i("fetch", function(t) {
                return function(n) {
                    return n.metadata.scriptLoad && q && (e.define = this.amdDefine), t.call(this, n);
                };
            }), s(function(t) {
                return function() {
                    function n(e, t) {
                        var r = ((e = e.replace(s, "")).match(d)[1].split(",")[t] || "require").replace(c, ""), a = f[r] || (f[r] = new RegExp(l + r + u, "g"));
                        a.lastIndex = 0;
                        for (var o, i = []; o = a.exec(e); ) i.push(o[2] || o[3]);
                        return i;
                    }
                    function r(e, t, n, a) {
                        if ("object" == typeof e && !(e instanceof Array)) return r.apply(null, Array.prototype.splice.call(arguments, 1, arguments.length - 1));
                        if ("string" == typeof e && "function" == typeof t && (e = [ e ]), !(e instanceof Array)) {
                            if ("string" == typeof e) {
                                var i = o.defaultJSExtensions && ".js" != e.substr(e.length - 3, 3), s = o.decanonicalize(e, a);
                                i && ".js" == s.substr(s.length - 3, 3) && (s = s.substr(0, s.length - 3));
                                var l = o.get(s);
                                if (!l) throw new Error('Module not already loaded loading "' + e + '" as ' + s + (a ? ' from "' + a + '".' : "."));
                                return l.__useDefault ? l.default : l;
                            }
                            throw new TypeError("Invalid require");
                        }
                        for (var u = [], d = 0; d < e.length; d++) u.push(o.import(e[d], a));
                        Promise.all(u).then(function(e) {
                            t && t.apply(null, e);
                        }, n);
                    }
                    function a(t, a, i) {
                        function s(t, n, s) {
                            function c(e, n, a) {
                                return "string" == typeof e && "function" != typeof n ? t(e) : r.call(o, e, n, a, s.id);
                            }
                            for (var f = [], m = 0; m < a.length; m++) f.push(t(a[m]));
                            s.uri = s.id, s.config = function() {}, -1 != d && f.splice(d, 0, s), -1 != u && f.splice(u, 0, n), 
                            -1 != l && (c.toUrl = function(e) {
                                var t = o.defaultJSExtensions && ".js" != e.substr(e.length - 3, 3), n = o.decanonicalize(e, s.id);
                                return t && ".js" == n.substr(n.length - 3, 3) && (n = n.substr(0, n.length - 3)), 
                                n;
                            }, f.splice(l, 0, c));
                            var p = e.require;
                            e.require = r;
                            var h = i.apply(-1 == u ? e : n, f);
                            return e.require = p, void 0 === h && s && (h = s.exports), void 0 !== h ? h : void 0;
                        }
                        "string" != typeof t && (i = a, a = t, t = null), a instanceof Array || (i = a, 
                        a = [ "require", "exports", "module" ].splice(0, i.length)), "function" != typeof i && (i = function(e) {
                            return function() {
                                return e;
                            };
                        }(i)), void 0 === a[a.length - 1] && a.pop();
                        var l, u, d;
                        -1 != (l = J.call(a, "require")) && (a.splice(l, 1), t || (a = a.concat(n(i.toString(), l)))), 
                        -1 != (u = J.call(a, "exports")) && a.splice(u, 1), -1 != (d = J.call(a, "module")) && a.splice(d, 1);
                        var c = R();
                        c.name = t && (o.decanonicalize || o.normalize).call(o, t), c.deps = a, c.execute = s, 
                        o.pushRegister_({
                            amd: !0,
                            entry: c
                        });
                    }
                    var o = this;
                    t.call(this);
                    var s = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm, l = "(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])", u = "\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)", d = /\(([^\)]*)\)/, c = /^\s+|\s+$/g, f = {};
                    a.amd = {}, i("reduceRegister_", function(e) {
                        return function(t, n) {
                            if (!n || !n.amd) return e.call(this, t, n);
                            var r = t && t.metadata, a = n.entry;
                            if (r) if (r.format && "detect" != r.format) {
                                if (!a.name && "amd" != r.format) throw new Error("AMD define called while executing " + r.format + " module " + t.name);
                            } else r.format = "amd";
                            if (a.name) r && (r.entry || r.bundle ? r.entry && r.entry.name && r.entry.name != t.name && (r.entry = void 0) : r.entry = a, 
                            r.bundle = !0), a.name in this.defined || (this.defined[a.name] = a); else {
                                if (!r) throw new TypeError("Unexpected anonymous AMD define.");
                                if (r.entry && !r.entry.name) throw new Error("Multiple anonymous defines in module " + t.name);
                                r.entry = a;
                            }
                        };
                    }), o.amdDefine = a, o.amdRequire = r;
                };
            }), function() {
                function e(e, t) {
                    if (t) {
                        var n;
                        if (e.pluginFirst) {
                            if (-1 != (n = t.lastIndexOf("!"))) return t.substr(n + 1);
                        } else if (-1 != (n = t.indexOf("!"))) return t.substr(0, n);
                        return t;
                    }
                }
                function t(e, t) {
                    var n, r, a = t.lastIndexOf("!");
                    return -1 != a ? (e.pluginFirst ? (n = t.substr(a + 1), r = t.substr(0, a)) : (n = t.substr(0, a), 
                    r = t.substr(a + 1) || n.substr(n.lastIndexOf(".") + 1)), {
                        argument: n,
                        plugin: r
                    }) : void 0;
                }
                function n(e, t, n, r) {
                    return r && ".js" == t.substr(t.length - 3, 3) && (t = t.substr(0, t.length - 3)), 
                    e.pluginFirst ? n + "!" + t : t + "!" + n;
                }
                function r(e, t) {
                    return e.defaultJSExtensions && ".js" != t.substr(t.length - 3, 3);
                }
                function a(a) {
                    return function(o, i, s) {
                        var l = this, u = t(l, o);
                        return i = e(this, i), u ? n(l, l.normalizeSync(u.argument, i, !0), l.normalizeSync(u.plugin, i, !0), r(l, u.argument)) : a.call(this, o, i, s);
                    };
                }
                i("decanonicalize", a), i("normalizeSync", a), i("normalize", function(a) {
                    return function(o, i, s) {
                        var l = this;
                        i = e(this, i);
                        var u = t(l, o);
                        return u ? Promise.all([ l.normalize(u.argument, i, !0), l.normalize(u.plugin, i, !1) ]).then(function(e) {
                            return n(l, e[0], e[1], r(l, u.argument));
                        }) : a.call(l, o, i, s);
                    };
                }), i("locate", function(e) {
                    return function(t) {
                        var n, r = this, a = t.name;
                        return r.pluginFirst ? -1 != (n = a.indexOf("!")) && (t.metadata.loader = a.substr(0, n), 
                        t.name = a.substr(n + 1)) : -1 != (n = a.lastIndexOf("!")) && (t.metadata.loader = a.substr(n + 1), 
                        t.name = a.substr(0, n)), e.call(r, t).then(function(e) {
                            return -1 == n && t.metadata.loader ? (r.pluginLoader || r).normalize(t.metadata.loader, t.name).then(function(n) {
                                return t.metadata.loader = n, e;
                            }) : e;
                        }).then(function(e) {
                            var n = t.metadata.loader;
                            if (!n) return e;
                            if (t.name == n) throw new Error("Plugin " + n + " cannot load itself, make sure it is excluded from any wildcard meta configuration via a custom loader: false rule.");
                            return r.defined && r.defined[a] ? e : (r.pluginLoader || r).import(n).then(function(n) {
                                return t.metadata.loaderModule = n, t.address = e, n.locate ? n.locate.call(r, t) : e;
                            });
                        });
                    };
                }), i("fetch", function(e) {
                    return function(t) {
                        var n = this;
                        return t.metadata.loaderModule && t.metadata.loaderModule.fetch && "defined" != t.metadata.format ? (t.metadata.scriptLoad = !1, 
                        t.metadata.loaderModule.fetch.call(n, t, function(t) {
                            return e.call(n, t);
                        })) : e.call(n, t);
                    };
                }), i("translate", function(e) {
                    return function(t) {
                        var n = this, r = arguments;
                        return t.metadata.loaderModule && t.metadata.loaderModule.translate && "defined" != t.metadata.format ? Promise.resolve(t.metadata.loaderModule.translate.apply(n, r)).then(function(a) {
                            var o = t.metadata.sourceMap;
                            if (o) {
                                if ("object" != typeof o) throw new Error("load.metadata.sourceMap must be set to an object.");
                                var i = t.address.split("!")[0];
                                o.file && o.file != t.address || (o.file = i + "!transpiled"), (!o.sources || o.sources.length <= 1 && (!o.sources[0] || o.sources[0] == t.address)) && (o.sources = [ i ]);
                            }
                            return "string" == typeof a ? t.source = a : w.call(this, "Plugin " + t.metadata.loader + " should return the source in translate, instead of setting load.source directly. This support will be deprecated."), 
                            e.apply(n, r);
                        }) : e.apply(n, r);
                    };
                }), i("instantiate", function(e) {
                    return function(t) {
                        var n = this, r = !1;
                        return t.metadata.loaderModule && t.metadata.loaderModule.instantiate && !n.builder && "defined" != t.metadata.format ? Promise.resolve(t.metadata.loaderModule.instantiate.call(n, t, function(t) {
                            if (r) throw new Error("Instantiate must only be called once.");
                            return r = !0, e.call(n, t);
                        })).then(function(a) {
                            return r ? a : (t.metadata.entry = R(), t.metadata.entry.execute = function() {
                                return a;
                            }, t.metadata.entry.deps = t.metadata.deps, t.metadata.format = "defined", e.call(n, t));
                        }) : e.call(n, t);
                    };
                });
            }();
            var oe = [ "browser", "node", "dev", "build", "production", "default" ], ie = /#\{[^\}]+\}/;
            i("normalize", function(e) {
                return function(t, n, r) {
                    var a = this;
                    return T.call(a, t, n).then(function(t) {
                        return e.call(a, t, n, r);
                    }).then(function(e) {
                        return L.call(a, e, n);
                    });
                };
            }), function() {
                i("fetch", function(e) {
                    return function(t) {
                        var n = t.metadata.alias, r = t.metadata.deps || [];
                        if (n) {
                            t.metadata.format = "defined";
                            var a = R();
                            return this.defined[t.name] = a, a.declarative = !0, a.deps = r.concat([ n ]), a.declare = function(e) {
                                return {
                                    setters: [ function(t) {
                                        for (var n in t) e(n, t[n]);
                                        t.__useDefault && (a.module.exports.__useDefault = !0);
                                    } ],
                                    execute: function() {}
                                };
                            }, "";
                        }
                        return e.call(this, t);
                    };
                });
            }(), function() {
                function e(e, t, n) {
                    for (var r, a = t.split("."); a.length > 1; ) r = a.shift(), e = e[r] = e[r] || {};
                    (r = a.shift()) in e || (e[r] = n);
                }
                s(function(e) {
                    return function() {
                        this.meta = {}, e.call(this);
                    };
                }), i("locate", function(e) {
                    return function(t) {
                        var n, r = this.meta, a = t.name, o = 0;
                        for (var i in r) if (-1 !== (n = i.indexOf("*")) && i.substr(0, n) === a.substr(0, n) && i.substr(n + 1) === a.substr(a.length - i.length + n + 1)) {
                            var s = i.split("/").length;
                            s > o && (o = s), v(t.metadata, r[i], o != s);
                        }
                        return r[a] && v(t.metadata, r[a]), e.call(this, t);
                    };
                });
                i("translate", function(r) {
                    return function(a) {
                        if ("defined" == a.metadata.format) return a.metadata.deps = a.metadata.deps || [], 
                        Promise.resolve(a.source);
                        var o = a.source.match(/^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)+/);
                        if (o) for (var i = o[0].match(/\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\/\/[^\n]*|"[^"]+"\s*;?|'[^']+'\s*;?/g), s = 0; s < i.length; s++) {
                            var l = i[s], u = l.length, d = l.substr(0, 1);
                            if (";" == l.substr(u - 1, 1) && u--, '"' == d || "'" == d) {
                                var c = l.substr(1, l.length - 3), f = c.substr(0, c.indexOf(" "));
                                if (f) {
                                    var m = c.substr(f.length + 1, c.length - f.length - 1);
                                    "[]" == f.substr(f.length - 2, 2) ? (f = f.substr(0, f.length - 2), a.metadata[f] = a.metadata[f] || [], 
                                    a.metadata[f].push(m)) : a.metadata[f] instanceof Array ? (w.call(this, "Module " + a.name + ' contains deprecated "deps ' + m + '" meta syntax.\nThis should be updated to "deps[] ' + m + '" for pushing to array meta.'), 
                                    a.metadata[f].push(m)) : e(a.metadata, f, m);
                                } else a.metadata[c] = !0;
                            }
                        }
                        return r.apply(this, arguments);
                    };
                });
            }(), function() {
                s(function(e) {
                    return function() {
                        e.call(this), this.bundles = {}, this._loader.loadedBundles = {};
                    };
                }), i("locate", function(e) {
                    return function(t) {
                        var n = this, r = !1;
                        if (!(t.name in n.defined)) for (var a in n.bundles) {
                            for (var o = 0; o < n.bundles[a].length; o++) {
                                var i = n.bundles[a][o];
                                if (i == t.name) {
                                    r = !0;
                                    break;
                                }
                                if (-1 != i.indexOf("*")) {
                                    var s = i.split("*");
                                    if (2 != s.length) {
                                        n.bundles[a].splice(o--, 1);
                                        continue;
                                    }
                                    if (t.name.substring(0, s[0].length) == s[0] && t.name.substr(t.name.length - s[1].length, s[1].length) == s[1] && -1 == t.name.substr(s[0].length, t.name.length - s[1].length - s[0].length).indexOf("/")) {
                                        r = !0;
                                        break;
                                    }
                                }
                            }
                            if (r) return n.import(a).then(function() {
                                return e.call(n, t);
                            });
                        }
                        return e.call(n, t);
                    };
                });
            }(), function() {
                s(function(e) {
                    return function() {
                        e.call(this), this.depCache = {};
                    };
                }), i("locate", function(e) {
                    return function(t) {
                        var n = this, r = n.depCache[t.name];
                        if (r) for (var a = 0; a < r.length; a++) n.import(r[a], t.name);
                        return e.call(n, t);
                    };
                });
            }(), s(function(t) {
                return function() {
                    t.apply(this, arguments), e.define = this.amdDefine;
                };
            }), i("fetch", function(e) {
                return function(t) {
                    return t.metadata.scriptLoad = !0, e.call(this, t);
                };
            }), G = new a(), e.SystemJS = G, G.version = "0.19.35 CSP", "object" == typeof module && module.exports && "object" == typeof exports && (module.exports = G), 
            e.System = G;
        }("undefined" != typeof self ? self : global);
    }
    var t = "undefined" == typeof Promise;
    if ("undefined" != typeof document) {
        var n = document.getElementsByTagName("script");
        if ($__curScript = n[n.length - 1], ($__curScript.defer || $__curScript.async) && ($__curScript = document.currentScript), 
        t) {
            var r = $__curScript.src, a = r.substr(0, r.lastIndexOf("/") + 1);
            window.systemJSBootstrap = e, document.write('<script type="text/javascript" src="' + a + 'system-polyfills.js"><\/script>');
        } else e();
    } else if ("undefined" != typeof importScripts) {
        a = "";
        try {
            throw new Error("_");
        } catch (o) {
            o.stack.replace(/(?:at|@).*(http.+):[\d]+:[\d]+/, function(e, t) {
                $__curScript = {
                    src: t
                }, a = t.replace(/\/[^\/]*$/, "/");
            });
        }
        t && importScripts(a + "system-polyfills.js"), e();
    } else $__curScript = "undefined" != typeof __filename ? {
        src: __filename
    } : null, e();
}(), System.config({
    baseURL: "/"
}), System.config({
    transpiler: "none",
    paths: {
        locale: "common/locale.js",
        environment: "common/environment.js"
    },
    devConfig: {
        inlineCssSourceMaps: !0,
        cssNano: !1,
        test: {
            runner: {
                browser: "test/index.html"
            },
            coverage: {
                outputDir: "coverage",
                includes: [ "webmail", "calendar", "common", "components", "contacts", "onebar", "settings", "theme", "unsupported", "upgrade", "welcome" ]
            }
        }
    },
    packages: {
        "": {},
        "node_modules/systemjs-plugin-less": {
            map: {
                css: "node_modules/systemjs-plugin-css",
                lesscss: {
                    node: "@node/less",
                    browser: "node_modules/less/dist/less.min.js"
                }
            }
        },
        "node_modules/stacktrace-gps-papandreou": {
            map: {
                "source-map": "node_modules/source-map/source-map.js",
                stackframe: "node_modules/stackframe/stackframe.js"
            }
        },
        "node_modules/error-stack-parser-papandreou": {
            map: {
                stackframe: "node_modules/stackframe/stackframe.js"
            }
        }
    },
    meta: {
        "*.ko": {},
        "*.i18n": {},
        "*.cjson": {},
        "*.less": {},
        "*.css": {}
    },
    map: {
        less: "node_modules/systemjs-plugin-less/less",
        ActionCancelledError: "3rdparty/action-executor/ActionCancelledError",
        ErrorTracker: "3rdparty/tracking-analytics/ErrorTracker",
        Failboat: "3rdparty/Failboat",
        "action-executor": "3rdparty/action-executor/ActionExecutor",
        hammer: "3rdparty/hammer",
        "hammer-jquery": "3rdparty/jquery.hammer",
        jquery: "node_modules/jquery/dist/jquery",
        "jquery.shinybox": "3rdparty/shinybox/jquery.shinybox",
        knockout: "node_modules/knockout/build/output/knockout-latest.debug.js",
        mario: "3rdparty/mario.js",
        mime: "3rdparty/mime",
        moment: "3rdparty/moment",
        mousetrap: "3rdparty/mousetrap",
        "one-validation": "3rdparty/onevalidation/validation",
        pikaday: "3rdparty/pikaday/pikaday",
        punycode: "3rdparty/punycode",
        signals: "3rdparty/signals",
        sinon: "3rdparty/test/sinon",
        text: "3rdparty/systemjs-plugin-text.js",
        tpl: "3rdparty/systemjs-plugin-ko-tpl.js",
        tracking: "3rdparty/tracking-analytics/tracking",
        unexpected: "test/unexpected-with-plugins",
        unicoderegexp: "3rdparty/unicodeRegExp",
        asset: "node_modules/systemjs-asset-plugin/asset-plugin.js",
        "stacktrace-gps": "node_modules/stacktrace-gps-papandreou/stacktrace-gps.js",
        stackframe: "node_modules/stackframe/stackframe.js",
        "error-stack-parser": "node_modules/error-stack-parser-papandreou/error-stack-parser.js"
    }
}), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        if ("object" == typeof exports) module.exports = factory(require("mario")); else if ("function" == typeof define && define.amd) define("3rdparty/BrowserSupport.js", [ "3rdparty/mario.js" ], factory); else {
            if (!root.mario) throw new Error('BrowserSupport: Missing dependency "mario".');
            root.BrowserSupport = factory(root.mario);
        }
    }(this, function(mario) {
        function marioPropName(name) {
            return name.toLowerCase();
        }
        function isOperationSystemVersionRequirement(requirementKey) {
            return -1 !== operationSystems.indexOf(requirementKey);
        }
        function findSatisfiedRequirements(requirements, mario) {
            requirements = requirements || {};
            var keys = [];
            for (var key in requirements) requirements.hasOwnProperty(key) && keys.push(key);
            for (var matchingKeys = [], i = 0; i < keys.length; i += 1) if (marioPropName(keys[i]) in mario) {
                var version = isOperationSystemVersionRequirement(keys[i]) ? mario.osversion : mario.version;
                parseFloat(version) >= parseFloat(requirements[keys[i]]) && matchingKeys.push(keys[i]);
            }
            return matchingKeys;
        }
        function objectKeys(obj) {
            var keys = [];
            for (var propertyName in obj) obj.hasOwnProperty(propertyName) && keys.push(propertyName);
            return keys;
        }
        function isSupported(config, mario) {
            return !(2 !== objectKeys(mario).length || !mario.macos || !mario.webkit) || findSatisfiedRequirements(mario.touch ? config.mobile.supported : config.desktop.supported, mario).length > 0;
        }
        function isBlocked(config, mario) {
            return 0 === findSatisfiedRequirements(mario.touch ? config.mobile.unsupported : config.desktop.unsupported, mario).length && !isSupported(config, mario);
        }
        function hasIgnoreBrowserCheckQueryParam(url) {
            return /(?:^\?|&)ignoreBrowserCheck(?:=true)?(?:$|&)/.test(url);
        }
        function hasIgnoreBrowserCheckCookie() {
            return /(?:^|;\s*)ignoreBrowserCheck=true(?:$|;)/.test(document.cookie);
        }
        function setIgnoreBrowserCheckCookie(maxAge) {
            maxAge = maxAge || 86400, document.cookie = "ignoreBrowserCheck=true;path=/;max-age=" + maxAge;
        }
        function shouldIgnoreBrowserCheck(browserSupportConfig) {
            return hasIgnoreBrowserCheckQueryParam(window.location.search) && setIgnoreBrowserCheckCookie(browserSupportConfig.ignoreBrowserCheckCookieMaxAge), 
            hasIgnoreBrowserCheckCookie();
        }
        var operationSystems = [ "Android", "BlackBerry", "iOS" ], BrowserSupport = {};
        return BrowserSupport.check = function(config) {
            return {
                isSupported: isSupported(config, mario),
                isBlocked: isBlocked(config, mario)
            };
        }, BrowserSupport.redirectIfUnsupported = function(browserSupportConfig) {
            if (!browserSupportConfig || "object" != typeof browserSupportConfig) throw new Error("BrowserSupport: Invalid configuration");
            var browserSupport = BrowserSupport.check(browserSupportConfig);
            browserSupport.isSupported || (shouldIgnoreBrowserCheck(browserSupportConfig) ? "" !== window.location.search && window.location.replace("/") : window.location.replace("/unsupported?canProceed=" + !browserSupport.isBlocked + "&successUrl=" + encodeURIComponent(window.location.href)));
        }, BrowserSupport;
    });
}(), System.registerDynamic("3rdparty/crashreporter/crashLogger.js", [], !1, function($__require, $__exports, $__module) {
    var _retrieveGlobal = System.get("@@global-helpers").prepareGlobal($__module.id, null, null);
    return function($__global) {
        window.one = window.one || {}, function() {
            function CrashLogger(size) {
                this.logSize = size, this.index = 0, this.logBuffer = [];
            }
            function leftPad(str, length, padChar) {
                for (str = String(str); str.length < length; ) str = (padChar || " ") + str;
                return str;
            }
            CrashLogger.prototype.log = function() {
                var args = Array.prototype.slice.call(arguments), d = new Date(), timestamp = d.getHours() + ":" + leftPad(d.getMinutes(), 2, "0") + ":" + leftPad(d.getSeconds(), 2, "0") + "." + leftPad(d.getMilliseconds(), 3, "0");
                this.logBuffer[this.index] = timestamp + ": " + args.join(", "), this.index = (this.index + 1) % this.logSize;
            }, CrashLogger.prototype.getEntries = function() {
                var result = [], start = this.index - this.logSize;
                start = start < 0 ? this.logSize + start : start;
                for (var i = 0; i < this.logSize; i += 1) {
                    var entry = this.logBuffer[(start + i) % this.logSize];
                    entry && result.push(entry);
                }
                return result;
            }, CrashLogger.prototype.toString = function() {
                return this.getEntries().join("\n");
            }, one.crashLogger = new CrashLogger(60);
        }();
    }(), _retrieveGlobal();
}), System.registerDynamic("3rdparty/crashreporter/crashReporter.js", [], !1, function($__require, $__exports, $__module) {
    var _retrieveGlobal = System.get("@@global-helpers").prepareGlobal($__module.id, null, null);
    return function($__global) {
        window.one = window.one || {}, function() {
            function CrashReporter(options) {
                function createApplicationCrash(error, additionalInfo) {
                    return error = error || new Error(), additionalInfo && (error.additionalInfo = additionalInfo, 
                    additionalInfo.hasOwnProperty("message") && (error.customMessage = additionalInfo.message)), 
                    error;
                }
                function createTaggedErrorMessage(err, message, clean) {
                    return message = message || "Application error.", err.tags && (message += ' tags: "' + err.tags.join(" ") + '"'), 
                    err.status && (message += " [" + err.status + ": " + err.statusText + "]"), message.replace(/\n/g, "\\n");
                }
                function isBlacklisted(err) {
                    if (!window.JSON) return !0;
                    var userAgentString = navigator.userAgent, matchMsieVersion = userAgentString && userAgentString.match(/msie (\d+(\.\d+)?);/i);
                    if (matchMsieVersion && parseInt(matchMsieVersion, 10) < 9) return !0;
                    var ignoreUrls = [ ".cloudfront.net", "chrome://", "google-analytics.com", "extension", "superfish", "admedia" ], url = err.fileName, found = !1;
                    return !(!url || (ignoreUrls.forEach(function(ignoreUrl) {
                        if (url.match(ignoreUrl)) return void (found = !0);
                    }), !found)) || !!("Script error." === err.message && "" === err.fileName && 0 === err.lineNumber || /TOOLBAR_READY/.test(err.message) || "RequireJS load error" === err.message || /conduitPage/.test(err.message));
                }
                var that = this;
                options = options || {}, that.hash = {}, that.reportUrl = options.reportUrl || "/api/crashreporter/", 
                that.provokeScriptError = function() {
                    setTimeout(function() {
                        that.undefinedFunction();
                    }, 1);
                }, that.reportCrash = function(error, additionalInfo) {
                    try {
                        throw createApplicationCrash(error, additionalInfo);
                    } catch (e) {
                        CONFIG.crashReporter.bypassTraceKit ? that.sendReportFromTraceKit(e) : TraceKit.report(e);
                    }
                }, that.reportTaggedCrash = function(err, message) {
                    that.reportCrash(err, {
                        message: createTaggedErrorMessage(err, message)
                    });
                }, that.sendReport = function(err) {
                    if (!isBlacklisted(err)) {
                        var xhr;
                        try {
                            xhr = new XMLHttpRequest();
                        } catch (e) {
                            try {
                                xhr = new ActiveXObject("Microsoft.XmlHTTP");
                            } catch (e2) {}
                        }
                        if (!xhr) throw new Error("Couldn't initialize an XMLHttpRequest object.");
                        var fileNameMatch = (err.fileName || "").match(/^(?:https?:\/\/)(?:[^\/]+)(\/[^#]*)/), filePosition = (fileNameMatch = fileNameMatch ? fileNameMatch[1] : err.fileName) + ":" + err.lineNumber, message = (err.message || err.customMessage) + " (" + filePosition + ")";
                        "Error" !== err.name && -1 === message.indexOf(err.name) && (message = err.name + ": " + message);
                        var now = new Date(), timestamp = now.getTime(), then = that.hash[message];
                        if (then && timestamp - then < 12e4) return void (that.hash[message] = timestamp);
                        that.hash[message] = timestamp;
                        var crashReport = {
                            appData: {
                                location: err.pageName,
                                user: err.user,
                                locale: document.documentElement.getAttribute("lang"),
                                clientLog: one.crashLogger.toString(),
                                sourceMappedStack: err.sourceMappedStack,
                                sourceMappedStackError: err.sourceMappedStackError
                            },
                            browserLocalTime: now.toString(),
                            browserUTCTime: now.toUTCString(),
                            message: message,
                            crashReportId: err.crashReportId
                        };
                        err.additionalInfo && (crashReport.additionalInfo = err.additionalInfo), one.version && (crashReport.appData.serverVersion = one.version.serverVersion(), 
                        crashReport.appData.clientVersion = one.version.clientVersion()), crashReport.err = {
                            name: err.name,
                            tags: err.tags,
                            message: err.message,
                            customMessage: err.customMessage,
                            fileName: err.fileName + ":" + err.lineNumber
                        }, void 0 !== err.status && (crashReport.err.request = {
                            method: err.requestMethod,
                            url: err.requestUrl
                        }, crashReport.err.response = {
                            status: err.status,
                            statusText: err.statusText,
                            headers: err.responseHeaders,
                            body: err.response || err.responseText
                        }, "string" == typeof crashReport.err.response.body && /<\/html>$/i.test(crashReport.err.response.body) && (crashReport.err.response.fromMitmProxy = !0)), 
                        err.hasOwnProperty("stack") && (crashReport.err.stack = err.stack);
                        var crashReportStringified;
                        try {
                            crashReportStringified = JSON.stringify(crashReport);
                        } catch (e) {
                            var newCrashReport = {
                                message: "Failed to stringify crash report: " + e.message
                            };
                            "string" == typeof crashReport.message && (newCrashReport.err = {
                                message: crashReport.message
                            }), crashReportStringified = JSON.stringify(newCrashReport);
                        }
                        xhr.open("post", that.reportUrl, !0), xhr.setRequestHeader("Content-Type", "application/json"), 
                        oneTimeReadyStateChangeHandler && (xhr.onreadystatechange = oneTimeReadyStateChangeHandler, 
                        oneTimeReadyStateChangeHandler = void 0), xhr.send(crashReportStringified);
                    }
                };
                var oneTimeReadyStateChangeHandler;
                that.subscribeOneTimeOnReadyStateChangeHandler = function(handler) {
                    "function" == typeof handler && (oneTimeReadyStateChangeHandler = handler);
                }, that.sendReportFromTraceKit = function(errorReport) {
                    var err, firstFrame = errorReport.stack && errorReport.stack.length > 0 ? errorReport.stack[0] : {};
                    (err = "[object Error]" === Object.prototype.toString.call(errorReport) ? errorReport : errorReport.error || function() {
                        var e = new Error();
                        return e.message = errorReport.message, e;
                    }()).fileName = firstFrame.url, err.lineNumber = firstFrame.line, err.pageName = errorReport.url, 
                    err.sourceMappedStack = errorReport.sourceMappedStack, err.sourceMappedStackError = errorReport.sourceMappedStackError, 
                    that.sendReport(err);
                };
            }
            var crashReporterConfig = one.crashReporterConfig || {};
            one.crashReporter = new CrashReporter(crashReporterConfig);
        }();
    }(), _retrieveGlobal();
}), function() {
    var define = System.amdDefine;
    !function(window, undefined) {
        function _has(object, key) {
            return Object.prototype.hasOwnProperty.call(object, key);
        }
        function _isUndefined(what) {
            return void 0 === what;
        }
        if (window) {
            var TraceKit = {}, _oldTraceKit = window.TraceKit, _slice = [].slice, UNKNOWN_FUNCTION = "?";
            TraceKit.noConflict = function() {
                return window.TraceKit = _oldTraceKit, TraceKit;
            }, TraceKit.wrap = function(func) {
                function wrapped() {
                    try {
                        return func.apply(this, arguments);
                    } catch (e) {
                        throw TraceKit.report(e), e;
                    }
                }
                return wrapped;
            }, TraceKit.report = function() {
                function subscribe(handler) {
                    installGlobalHandler(), handlers.push(handler);
                }
                function unsubscribe(handler) {
                    for (var i = handlers.length - 1; i >= 0; --i) handlers[i] === handler && handlers.splice(i, 1);
                }
                function notifyHandlers(stack, isWindowError) {
                    var exception = null;
                    if (!isWindowError || TraceKit.collectWindowErrors) {
                        for (var i in handlers) if (_has(handlers, i)) try {
                            handlers[i].apply(null, [ stack ].concat(_slice.call(arguments, 2)));
                        } catch (inner) {
                            exception = inner;
                        }
                        if (exception) throw exception;
                    }
                }
                function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {
                    if (lastExceptionStack) TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message), 
                    processLastException(); else if (errorObj) notifyHandlers(TraceKit.computeStackTrace(errorObj), !0); else {
                        var location = {
                            url: url,
                            line: lineNo,
                            column: columnNo
                        };
                        location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line), 
                        location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line), 
                        notifyHandlers({
                            mode: "onerror",
                            message: message,
                            stack: [ location ]
                        }, !0);
                    }
                    return !!_oldOnerrorHandler && _oldOnerrorHandler.apply(this, arguments);
                }
                function installGlobalHandler() {
                    !0 !== _onErrorHandlerInstalled && (_oldOnerrorHandler = window.onerror, window.onerror = traceKitWindowOnError, 
                    _onErrorHandlerInstalled = !0);
                }
                function processLastException() {
                    var _lastExceptionStack = lastExceptionStack, _lastArgs = lastArgs;
                    lastArgs = null, lastExceptionStack = null, lastException = null, notifyHandlers.apply(null, [ _lastExceptionStack, !1 ].concat(_lastArgs));
                }
                function report(ex) {
                    if (lastExceptionStack) {
                        if (lastException === ex) return;
                        processLastException();
                    }
                    var stack = TraceKit.computeStackTrace(ex);
                    throw lastExceptionStack = stack, lastException = ex, lastArgs = _slice.call(arguments, 1), 
                    window.setTimeout(function() {
                        lastException === ex && processLastException();
                    }, stack.incomplete ? 2e3 : 0), ex;
                }
                var _oldOnerrorHandler, _onErrorHandlerInstalled, handlers = [], lastArgs = null, lastException = null, lastExceptionStack = null;
                return report.subscribe = subscribe, report.unsubscribe = unsubscribe, report;
            }(), TraceKit.computeStackTrace = function() {
                function loadSource(url) {
                    if (!TraceKit.remoteFetching) return "";
                    try {
                        var request = function() {
                            try {
                                return new window.XMLHttpRequest();
                            } catch (e) {
                                return new window.ActiveXObject("Microsoft.XMLHTTP");
                            }
                        }();
                        return request.open("GET", url, !1), request.send(""), request.responseText;
                    } catch (e) {
                        return "";
                    }
                }
                function getSource(url) {
                    if ("string" != typeof url) return [];
                    if (!_has(sourceCache, url)) {
                        var source = "", domain = "";
                        try {
                            domain = window.document.domain;
                        } catch (e) {}
                        var match = /(.*)\:\/\/([^:\/]+)([:\d]*)\/{0,1}([\s\S]*)/.exec(url);
                        match && match[2] === domain && (source = loadSource(url)), sourceCache[url] = source ? source.split("\n") : [];
                    }
                    return sourceCache[url];
                }
                function guessFunctionName(url, lineNo) {
                    var m, reFunctionArgNames = /function ([^(]*)\(([^)]*)\)/, reGuessFunction = /['"]?([0-9A-Za-z$_]+)['"]?\s*[:=]\s*(function|eval|new Function)/, line = "", source = getSource(url);
                    if (!source.length) return UNKNOWN_FUNCTION;
                    for (var i = 0; i < 10; ++i) if (line = source[lineNo - i] + line, !_isUndefined(line)) {
                        if (m = reGuessFunction.exec(line)) return m[1];
                        if (m = reFunctionArgNames.exec(line)) return m[1];
                    }
                    return UNKNOWN_FUNCTION;
                }
                function gatherContext(url, line) {
                    var source = getSource(url);
                    if (!source.length) return null;
                    var context = [], linesBefore = Math.floor(TraceKit.linesOfContext / 2), linesAfter = linesBefore + TraceKit.linesOfContext % 2, start = Math.max(0, line - linesBefore - 1), end = Math.min(source.length, line + linesAfter - 1);
                    line -= 1;
                    for (var i = start; i < end; ++i) _isUndefined(source[i]) || context.push(source[i]);
                    return context.length > 0 ? context : null;
                }
                function escapeRegExp(text) {
                    return text.replace(/[\-\[\]{}()*+?.,\\\^$|#]/g, "\\$&");
                }
                function escapeCodeAsRegExpForMatchingInsideHTML(body) {
                    return escapeRegExp(body).replace("<", "(?:<|&lt;)").replace(">", "(?:>|&gt;)").replace("&", "(?:&|&amp;)").replace('"', '(?:"|&quot;)').replace(/\s+/g, "\\s+");
                }
                function findSourceInUrls(re, urls) {
                    for (var source, m, i = 0, j = urls.length; i < j; ++i) if ((source = getSource(urls[i])).length && (source = source.join("\n"), 
                    m = re.exec(source))) return {
                        url: urls[i],
                        line: source.substring(0, m.index).split("\n").length,
                        column: m.index - source.lastIndexOf("\n", m.index) - 1
                    };
                    return null;
                }
                function findSourceInLine(fragment, url, line) {
                    var m, source = getSource(url), re = new RegExp("\\b" + escapeRegExp(fragment) + "\\b");
                    return line -= 1, source && source.length > line && (m = re.exec(source[line])) ? m.index : null;
                }
                function findSourceByFunctionBody(func) {
                    if (!_isUndefined(window && window.document)) {
                        for (var body, re, parts, result, urls = [ window.location.href ], scripts = window.document.getElementsByTagName("script"), code = "" + func, codeRE = /^function(?:\s+([\w$]+))?\s*\(([\w\s,]*)\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/, eventRE = /^function on([\w$]+)\s*\(event\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/, i = 0; i < scripts.length; ++i) {
                            var script = scripts[i];
                            script.src && urls.push(script.src);
                        }
                        if (parts = codeRE.exec(code)) {
                            var name = parts[1] ? "\\s+" + parts[1] : "", args = parts[2].split(",").join("\\s*,\\s*");
                            body = escapeRegExp(parts[3]).replace(/;$/, ";?"), re = new RegExp("function" + name + "\\s*\\(\\s*" + args + "\\s*\\)\\s*{\\s*" + body + "\\s*}");
                        } else re = new RegExp(escapeRegExp(code).replace(/\s+/g, "\\s+"));
                        if (result = findSourceInUrls(re, urls)) return result;
                        if (parts = eventRE.exec(code)) {
                            var event = parts[1];
                            if (body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]), re = new RegExp("on" + event + "=[\\'\"]\\s*" + body + "\\s*[\\'\"]", "i"), 
                            result = findSourceInUrls(re, urls[0])) return result;
                            if (re = new RegExp(body), result = findSourceInUrls(re, urls)) return result;
                        }
                        return null;
                    }
                }
                function computeStackTraceFromStackProp(ex) {
                    if (!ex.stack) return null;
                    for (var parts, element, chrome = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i, gecko = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|\[native).*?)(?::(\d+))?(?::(\d+))?\s*$/i, winjs = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:ms-appx|https?|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i, lines = ex.stack.split("\n"), stack = [], reference = /^(.*) is undefined$/.exec(ex.message), i = 0, j = lines.length; i < j; ++i) {
                        if (parts = chrome.exec(lines[i])) {
                            var isNative = parts[2] && -1 !== parts[2].indexOf("native");
                            element = {
                                url: isNative ? null : parts[2],
                                func: parts[1] || UNKNOWN_FUNCTION,
                                args: isNative ? [ parts[2] ] : [],
                                line: parts[3] ? +parts[3] : null,
                                column: parts[4] ? +parts[4] : null
                            };
                        } else if (parts = winjs.exec(lines[i])) element = {
                            url: parts[2],
                            func: parts[1] || UNKNOWN_FUNCTION,
                            args: [],
                            line: +parts[3],
                            column: parts[4] ? +parts[4] : null
                        }; else {
                            if (!(parts = gecko.exec(lines[i]))) continue;
                            element = {
                                url: parts[3],
                                func: parts[1] || UNKNOWN_FUNCTION,
                                args: parts[2] ? parts[2].split(",") : [],
                                line: parts[4] ? +parts[4] : null,
                                column: parts[5] ? +parts[5] : null
                            };
                        }
                        !element.func && element.line && (element.func = guessFunctionName(element.url, element.line)), 
                        element.line && (element.context = gatherContext(element.url, element.line)), stack.push(element);
                    }
                    return stack.length ? (stack[0] && stack[0].line && !stack[0].column && reference ? stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line) : stack[0].column || _isUndefined(ex.columnNumber) || (stack[0].column = ex.columnNumber + 1), 
                    {
                        mode: "stack",
                        name: ex.name,
                        message: ex.message,
                        stack: stack
                    }) : null;
                }
                function computeStackTraceFromStacktraceProp(ex) {
                    var stacktrace = ex.stacktrace;
                    if (stacktrace) {
                        for (var parts, opera10Regex = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i, opera11Regex = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\))? in (.*):\s*$/i, lines = stacktrace.split("\n"), stack = [], line = 0; line < lines.length; line += 2) {
                            var element = null;
                            if ((parts = opera10Regex.exec(lines[line])) ? element = {
                                url: parts[2],
                                line: +parts[1],
                                column: null,
                                func: parts[3],
                                args: []
                            } : (parts = opera11Regex.exec(lines[line])) && (element = {
                                url: parts[6],
                                line: +parts[1],
                                column: +parts[2],
                                func: parts[3] || parts[4],
                                args: parts[5] ? parts[5].split(",") : []
                            }), element) {
                                if (!element.func && element.line && (element.func = guessFunctionName(element.url, element.line)), 
                                element.line) try {
                                    element.context = gatherContext(element.url, element.line);
                                } catch (exc) {}
                                element.context || (element.context = [ lines[line + 1] ]), stack.push(element);
                            }
                        }
                        return stack.length ? {
                            mode: "stacktrace",
                            name: ex.name,
                            message: ex.message,
                            stack: stack
                        } : null;
                    }
                }
                function computeStackTraceFromOperaMultiLineMessage(ex) {
                    var lines = ex.message.split("\n");
                    if (lines.length < 4) return null;
                    var parts, lineRE1 = /^\s*Line (\d+) of linked script ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i, lineRE2 = /^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i, lineRE3 = /^\s*Line (\d+) of function script\s*$/i, stack = [], scripts = window && window.document && window.document.getElementsByTagName("script"), inlineScriptBlocks = [];
                    for (var s in scripts) _has(scripts, s) && !scripts[s].src && inlineScriptBlocks.push(scripts[s]);
                    for (var line = 2; line < lines.length; line += 2) {
                        var item = null;
                        if (parts = lineRE1.exec(lines[line])) item = {
                            url: parts[2],
                            func: parts[3],
                            args: [],
                            line: +parts[1],
                            column: null
                        }; else if (parts = lineRE2.exec(lines[line])) {
                            item = {
                                url: parts[3],
                                func: parts[4],
                                args: [],
                                line: +parts[1],
                                column: null
                            };
                            var relativeLine = +parts[1], script = inlineScriptBlocks[parts[2] - 1];
                            if (script) {
                                var source = getSource(item.url);
                                if (source) {
                                    var pos = (source = source.join("\n")).indexOf(script.innerText);
                                    pos >= 0 && (item.line = relativeLine + source.substring(0, pos).split("\n").length);
                                }
                            }
                        } else if (parts = lineRE3.exec(lines[line])) {
                            var url = window.location.href.replace(/#.*$/, ""), src = findSourceInUrls(new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[line + 1])), [ url ]);
                            item = {
                                url: url,
                                func: "",
                                args: [],
                                line: src ? src.line : parts[1],
                                column: null
                            };
                        }
                        if (item) {
                            item.func || (item.func = guessFunctionName(item.url, item.line));
                            var context = gatherContext(item.url, item.line), midline = context ? context[Math.floor(context.length / 2)] : null;
                            context && midline.replace(/^\s*/, "") === lines[line + 1].replace(/^\s*/, "") ? item.context = context : item.context = [ lines[line + 1] ], 
                            stack.push(item);
                        }
                    }
                    return stack.length ? {
                        mode: "multiline",
                        name: ex.name,
                        message: lines[0],
                        stack: stack
                    } : null;
                }
                function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {
                    var initial = {
                        url: url,
                        line: lineNo
                    };
                    if (initial.url && initial.line) {
                        stackInfo.incomplete = !1, initial.func || (initial.func = guessFunctionName(initial.url, initial.line)), 
                        initial.context || (initial.context = gatherContext(initial.url, initial.line));
                        var reference = / '([^']+)' /.exec(message);
                        if (reference && (initial.column = findSourceInLine(reference[1], initial.url, initial.line)), 
                        stackInfo.stack.length > 0 && stackInfo.stack[0].url === initial.url) {
                            if (stackInfo.stack[0].line === initial.line) return !1;
                            if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) return stackInfo.stack[0].line = initial.line, 
                            stackInfo.stack[0].context = initial.context, !1;
                        }
                        return stackInfo.stack.unshift(initial), stackInfo.partial = !0, !0;
                    }
                    return stackInfo.incomplete = !0, !1;
                }
                function computeStackTraceByWalkingCallerChain(ex, depth) {
                    for (var parts, item, source, functionName = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i, stack = [], funcs = {}, recursion = !1, curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) if (curr !== computeStackTrace && curr !== TraceKit.report) {
                        if (item = {
                            url: null,
                            func: UNKNOWN_FUNCTION,
                            args: [],
                            line: null,
                            column: null
                        }, curr.name ? item.func = curr.name : (parts = functionName.exec(curr.toString())) && (item.func = parts[1]), 
                        void 0 === item.func) try {
                            item.func = parts.input.substring(0, parts.input.indexOf("{"));
                        } catch (e) {}
                        if (source = findSourceByFunctionBody(curr)) {
                            item.url = source.url, item.line = source.line, item.func === UNKNOWN_FUNCTION && (item.func = guessFunctionName(item.url, item.line));
                            var reference = / '([^']+)' /.exec(ex.message || ex.description);
                            reference && (item.column = findSourceInLine(reference[1], source.url, source.line));
                        }
                        funcs["" + curr] ? recursion = !0 : funcs["" + curr] = !0, stack.push(item);
                    }
                    depth && stack.splice(0, depth);
                    var result = {
                        mode: "callers",
                        name: ex.name,
                        message: ex.message,
                        stack: stack
                    };
                    return augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description), 
                    result;
                }
                function computeStackTrace(ex, depth) {
                    var stack = null;
                    depth = null == depth ? 0 : +depth;
                    try {
                        if (stack = computeStackTraceFromStacktraceProp(ex)) return stack;
                    } catch (e) {
                        if (debug) throw e;
                    }
                    try {
                        if (stack = computeStackTraceFromStackProp(ex)) return stack;
                    } catch (e) {
                        if (debug) throw e;
                    }
                    try {
                        if (stack = computeStackTraceFromOperaMultiLineMessage(ex)) return stack;
                    } catch (e) {
                        if (debug) throw e;
                    }
                    try {
                        if (stack = computeStackTraceByWalkingCallerChain(ex, depth + 1)) return stack;
                    } catch (e) {
                        if (debug) throw e;
                    }
                    return {
                        mode: "failed"
                    };
                }
                function computeStackTraceOfCaller(depth) {
                    depth = 1 + (null == depth ? 0 : +depth);
                    try {
                        throw new Error();
                    } catch (ex) {
                        return computeStackTrace(ex, depth + 1);
                    }
                }
                var debug = !1, sourceCache = {};
                return computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement, 
                computeStackTrace.guessFunctionName = guessFunctionName, computeStackTrace.gatherContext = gatherContext, 
                computeStackTrace.ofCaller = computeStackTraceOfCaller, computeStackTrace.getSource = getSource, 
                computeStackTrace;
            }(), TraceKit.extendToAsynchronousCallbacks = function() {
                var _helper = function(fnName) {
                    var originalFn = window[fnName];
                    window[fnName] = function() {
                        var args = _slice.call(arguments), originalCallback = args[0];
                        return "function" == typeof originalCallback && (args[0] = TraceKit.wrap(originalCallback)), 
                        originalFn.apply ? originalFn.apply(this, args) : originalFn(args[0], args[1]);
                    };
                };
                _helper("setTimeout"), _helper("setInterval");
            }, TraceKit.remoteFetching || (TraceKit.remoteFetching = !0), TraceKit.collectWindowErrors || (TraceKit.collectWindowErrors = !0), 
            (!TraceKit.linesOfContext || TraceKit.linesOfContext < 1) && (TraceKit.linesOfContext = 11), 
            "undefined" != typeof module && module.exports && this.module !== module ? module.exports = TraceKit : "function" == typeof define && define.amd ? define("node_modules/tracekit/tracekit.js", [], TraceKit) && define("TraceKit", [ "node_modules/tracekit/tracekit.js" ], function(m) {
                return m;
            }) : window.TraceKit = TraceKit;
        }
    }("undefined" != typeof window ? window : global);
}(), function() {
    (0, System.amdDefine)("3rdparty/knockout.formatDate.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], function(ko) {
        function getDateFormatFromContext(formatId, date) {
            var dateFormat, dateFormatId = "shortDate";
            if ("string" == typeof formatId) {
                if (-1 !== (dateFormatId = formatId).indexOf("/")) {
                    var dateFormatIds = dateFormatId.split("/"), now = new Date(), year = date && (date.getFullYear && date.getFullYear() || date.year), month = date && date.getMonth && date.getMonth();
                    "number" != typeof month && (month = date.month - 1);
                    var day = date && (date.getDate && date.getDate() || date.day);
                    dateFormatId = year === now.getFullYear() && month === now.getMonth() && day === now.getDate() ? dateFormatIds[0] : dateFormatIds[1];
                }
                dateFormat = inter.getDateFormat(dateFormatId);
            } else if (Array.isArray(formatId)) {
                var timeFormatString = inter.getDateFormat(formatId[0]), dateFormatString = inter.getDateFormat(formatId[1]);
                dateFormat = inter.calendars.gregorian.defaultDateTimePattern.replace("{0}", timeFormatString).replace("{1}", dateFormatString);
            }
            return dateFormat;
        }
        var isEdge13Or14 = /\bEdge\/1[34]\./.test(navigator.userAgent);
        ko.utils.extend(ko.bindingHandlers, {
            formatDate: {
                update: function(element, valueAccessor, allBindings) {
                    var date, options = ko.utils.unwrapObservable(valueAccessor()), dateFormat = "", tooltipDateFormat = "";
                    options && "function" == typeof options.toJSDate ? dateFormat = getDateFormatFromContext("", date) : "[object Date]" === Object.prototype.toString.call(options) ? dateFormat = getDateFormatFromContext("", date = options) : options.value && (date = ko.utils.unwrapObservable(options.value), 
                    options.formatId ? dateFormat = getDateFormatFromContext(options.formatId, date) : options.format && (dateFormat = options.format), 
                    options.tooltipFormatId && date ? tooltipDateFormat = getDateFormatFromContext(options.tooltipFormatId, date) : options.tooltipFormat && (tooltipDateFormat = options.tooltipFormat), 
                    tooltipDateFormat && date && element.setAttribute("data-title", inter.renderDateFormat(date, tooltipDateFormat)));
                    var textContent = date ? inter.renderDateFormat(date, dateFormat) : "";
                    isEdge13Or14 ? element.innerHTML = String(textContent).replace(/</g, "&lt;") : ko.utils.setTextContent(element, textContent);
                }
            }
        });
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory(require("knockout")) : "function" == typeof define && define.amd ? define("3rdparty/knockout.afterRender.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], factory) : factory(ko);
    }(0, function(ko) {
        ko.bindingHandlers.afterRender = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                var value = valueAccessor();
                ko.utils.unwrapObservable(value).call(viewModel, element, viewModel);
            }
        };
    });
}(), function() {
    var define = System.amdDefine;
    !function(factory) {
        "function" == typeof define && define.amd ? define("3rdparty/knockout.dragdrop.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], factory) : "object" == typeof module && module.exports ? module.exports = factory(require("knockout")) : factory(ko);
    }(function(ko) {
        function extend(out) {
            out = out || {};
            for (var i = 1; i < arguments.length; i++) if (arguments[i]) for (var key in arguments[i]) arguments[i].hasOwnProperty(key) && (out[key] = arguments[i][key]);
            return out;
        }
        function toggleClass(element, className, addOrRemove) {
            var classes = element.className.split(" "), existingIndex = classes.indexOf(className);
            existingIndex >= 0 && !addOrRemove && classes.splice(existingIndex, 1), existingIndex < 0 && addOrRemove && classes.push(className), 
            element.className = classes.join(" ");
        }
        function matches(element, selector) {
            if (!element.tagName) return null;
            var docEl = document.documentElement;
            return (docEl.matches || docEl.matchesSelector || docEl.webkitMatchesSelector || docEl.mozMatchesSelector || docEl.msMatchesSelector || docEl.oMatchesSelector).call(element, selector);
        }
        function getClosest(element, selector) {
            do {
                if (matches(element, selector)) return element;
                element = element.parentNode;
            } while (element);
            return null;
        }
        function Zone(args) {
            this.init(args);
        }
        function getEventCoord(event, axis) {
            return event.type.indexOf("touch") >= 0 ? event.changedTouches[0][axis] : event[axis];
        }
        function DropZone(args) {
            this.init(args), this.drop = function(data) {
                args.drop(data, args.data);
            };
        }
        function DragElement(element) {
            this.element = element, toggleClass(this.element, "drag-element", !0), this.element.style.position = "fixed", 
            this.element.style.zIndex = 9998, this.element.addEventListener("selectstart", function() {
                return !1;
            }, !0);
        }
        function Draggable(args) {
            this.element = args.element, this.name = args.name, this.dragStart = args.dragStart, 
            this.dragEnd = args.dragEnd, this.data = args.data;
        }
        function ScrollArea(element, delay) {
            var rect = element.getBoundingClientRect();
            this.element = element, this.scrollMarginHeight = Math.floor(rect.height / 10), 
            this.scrollMarginWidth = Math.floor(rect.width / 10), this.offset = {
                top: rect.top + window.pageYOffset - document.documentElement.clientTop,
                left: rect.left + window.pageXOffset - document.documentElement.clientLeft
            }, this.innerHeight = rect.height, this.innerWidth = rect.width, this.scrollDeltaMin = 5, 
            this.scrollDeltaMax = 30, this.delay = delay || 0, this.inZone = "center", this.scrolling = !1;
        }
        function getAcceptedDragZones(options) {
            if (options.accepts) return [].concat(options.accepts);
            if (options.name) return [ options.name ];
            throw new Error("A drop zone must specify the drag zones it accepts");
        }
        var dropZones = {}, eventZones = {}, forEach = ko.utils.arrayForEach, first = ko.utils.arrayFirst, filter = ko.utils.arrayFilter, touchSupport = "ontouchstart" in document.documentElement, dragging = !1;
        Zone.prototype.init = function(args) {
            this.element = args.element, this.data = args.data, this.dragEnter = args.dragEnter, 
            this.dragOver = args.dragOver, this.dragLeave = args.dragLeave, this.active = !1, 
            this.inside = !1, this.dirty = !1;
        }, Zone.prototype.refreshDomInfo = function() {
            if (this.hidden = "none" === this.element.style.display, !this.hidden) {
                var rect = this.element.getBoundingClientRect();
                this.top = rect.top + window.pageYOffset - document.documentElement.clientTop, this.left = rect.left + window.pageXOffset - document.documentElement.clientLeft, 
                this.width = rect.width, this.height = rect.height;
            }
        }, Zone.prototype.isInside = function(x, y) {
            return !this.hidden && (!(x < this.left || y < this.top) && (!(this.left + this.width < x) && !(this.top + this.height < y)));
        }, Zone.prototype.update = function(event, data) {
            this.isInside(getEventCoord(event, "pageX"), getEventCoord(event, "pageY")) ? (this.inside || this.enter(event, data), 
            this.dragOver && this.dragOver(event, data, this.data)) : this.leave(event);
        }, Zone.prototype.enter = function(event, data) {
            this.inside = !0, this.dragEnter ? this.active = !1 !== this.dragEnter(event, data, this.data) : this.active = !0, 
            this.dirty = !0;
        }, Zone.prototype.leave = function(event) {
            event && (event.target = this.element), this.inside && this.dragLeave && this.dragLeave(event, this.data), 
            this.active = !1, this.inside = !1, this.dirty = !0;
        }, DropZone.prototype = Zone.prototype, DropZone.prototype.updateStyling = function() {
            this.dirty && (toggleClass(this.element, "drag-over", this.active), toggleClass(this.element, "drop-rejected", this.inside && !this.active)), 
            this.dirty = !1;
        }, DragElement.prototype.updatePosition = function(event) {
            this.element.style.top = event.pageY - window.pageYOffset + "px", this.element.style.left = event.pageX - window.pageXOffset + "px", 
            this.element.style.top = getEventCoord(event, "pageY") - window.pageYOffset + "px", 
            this.element.style.left = getEventCoord(event, "pageX") - window.pageXOffset + "px";
        }, DragElement.prototype.remove = function() {
            this.element.parentNode.removeChild(this.element);
        }, Draggable.prototype.startDrag = function(event) {
            if (this.dragStart && !1 === this.dragStart(this.data, event)) return !1;
            toggleClass(document.body, "drag-active", !0);
        }, Draggable.prototype.drag = function(event) {
            var that = this, name = this.name, zones = dropZones[name].concat(eventZones[name]);
            forEach(zones, function(zone) {
                zone.refreshDomInfo();
            }), forEach(zones, function(zone) {
                event.target = zone.element, zone.update(event, that.data);
            }), forEach(dropZones[name], function(zone) {
                zone.updateStyling();
            });
        }, Draggable.prototype.dropRejected = function() {
            var name = this.name;
            return !first(dropZones[name], function(zone) {
                return zone.inside;
            }) || !first(dropZones[name], function(zone) {
                return zone.active;
            });
        }, Draggable.prototype.cancelDrag = function(event) {
            this.dragEnd && this.dragEnd(this.data, event), toggleClass(document.body, "drag-active", !1);
        }, Draggable.prototype.drop = function(event) {
            var name = this.name, dropZoneElement = getClosest(event.target, ".drop-zone"), activeZones = filter(dropZones[name], function(zone) {
                return zone.active;
            }), winningDropZone = filter(activeZones, function(zone) {
                return zone.element === dropZoneElement;
            })[0];
            forEach(dropZones[name].concat(eventZones[name]), function(zone) {
                zone.leave(event);
            }), forEach(dropZones[name], function(zone) {
                zone.updateStyling();
            }), winningDropZone && winningDropZone.drop && winningDropZone.drop(this.data), 
            this.dragEnd && this.dragEnd(this.data, event), toggleClass(document.body, "drag-active", !1);
        }, ScrollArea.prototype.scroll = function(x, y) {
            this.x = x, this.y = y, this.topLimit = this.scrollMarginHeight + this.offset.top, 
            this.bottomLimit = this.offset.top + this.innerHeight - this.scrollMarginHeight, 
            this.leftLimit = this.scrollMarginWidth + this.offset.left, this.rightLimit = this.offset.left + this.innerWidth - this.scrollMarginWidth;
            var activeZone = "";
            y < this.topLimit ? activeZone += "top" : y > this.bottomLimit && (activeZone += "bottom"), 
            x < this.leftLimit ? activeZone += "left" : x > this.rightLimit && (activeZone += "right"), 
            "" === activeZone && (activeZone = "center"), this.updateZone(activeZone);
        }, ScrollArea.prototype.enter = function(zone) {
            var that = this;
            this.delayTimer = setTimeout(function() {
                that.scrolling = !0;
            }, this.delay);
        }, ScrollArea.prototype.leave = function(zone) {
            this.scrolling = !1, clearTimeout(this.delayTimer);
        }, ScrollArea.prototype.over = function(zone) {
            var speed, scrollDelta = function(speed) {
                return speed * (this.scrollDeltaMax - this.scrollDeltaMin) + this.scrollDeltaMin;
            }.bind(this);
            this.scrolling && (-1 !== zone.indexOf("top") ? (speed = (this.topLimit - this.y) / this.scrollMarginHeight, 
            this.element.scrollTop -= scrollDelta(speed)) : -1 !== zone.indexOf("bottom") && (speed = (this.y - this.bottomLimit) / this.scrollMarginHeight, 
            this.element.scrollTop += scrollDelta(speed)), -1 !== zone.indexOf("left") ? (speed = (this.leftLimit - this.x) / this.scrollMarginWidth, 
            this.element.scrollLeft -= scrollDelta(speed)) : -1 !== zone.indexOf("right") && (speed = (this.x - this.rightLimit) / this.scrollMarginWidth, 
            this.element.scrollLeft += scrollDelta(speed)));
        }, ScrollArea.prototype.updateZone = function(zone) {
            this.zone !== zone && (this.leave(this.zone), this.enter(zone)), this.zone = zone, 
            this.over(zone);
        }, ko.utils.extend(ko.bindingHandlers, {
            dropZone: {
                init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                    var options = ko.utils.unwrapObservable(valueAccessor()), accepts = getAcceptedDragZones(options);
                    toggleClass(element, "drop-zone", !0);
                    var zone = new DropZone({
                        element: element,
                        data: options.data || bindingContext && bindingContext.$data,
                        drop: options.drop,
                        dragEnter: options.dragEnter,
                        dragOver: options.dragOver,
                        dragLeave: options.dragLeave
                    });
                    accepts.forEach(function(zoneName) {
                        dropZones[zoneName] = dropZones[zoneName] || [], dropZones[zoneName].push(zone);
                    }), ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                        zone.leave(), accepts.forEach(function(zoneName) {
                            dropZones[zoneName].splice(dropZones[zoneName].indexOf(zone), 1);
                        });
                    });
                }
            },
            dragEvents: {
                init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                    var options = ko.utils.unwrapObservable(valueAccessor()), accepts = getAcceptedDragZones(options), zone = new Zone({
                        element: element,
                        data: options.data || bindingContext && bindingContext.$data,
                        dragEnter: options.dragEnter,
                        dragOver: options.dragOver,
                        dragLeave: options.dragLeave
                    });
                    accepts.forEach(function(zoneName) {
                        eventZones[zoneName] = eventZones[zoneName] || [], eventZones[zoneName].push(zone);
                    }), ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                        zone.leave(), accepts.forEach(function(zoneName) {
                            eventZones[zoneName].splice(eventZones[zoneName].indexOf(zone), 1);
                        });
                    });
                }
            },
            dragZone: {
                init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                    function createCloneProxyElement() {
                        var dragProxy = element.cloneNode(!0);
                        element.parentNode.appendChild(dragProxy);
                        var style = window.getComputedStyle(element, null);
                        return dragProxy.style.height = style.getPropertyValue("height"), dragProxy.style.width = style.getPropertyValue("width"), 
                        dragProxy.style.opacity = .7, dragProxy.style.filter = "alpha(opacity=70)", dragProxy;
                    }
                    function createTemplateProxyElement() {
                        var dragProxy = document.createElement("div");
                        document.body.appendChild(dragProxy);
                        var innerBindingContext = "data" in options ? bindingContext.createChildContext(options.data) : bindingContext;
                        return ko.renderTemplate(options.element, innerBindingContext, {}, dragProxy), dragProxy;
                    }
                    function onSelectStartDrag(event) {
                        event.preventDefault(), event.stopPropagation();
                    }
                    function beginEvent(downEvent) {
                        function startDragging(startEvent) {
                            function drag(event) {
                                draggable.drag(event);
                                var draggableDropRejected = draggable.dropRejected();
                                draggableDropRejected !== dropRejected && (toggleClass(overlay, "drop-rejected", draggableDropRejected), 
                                overlay.style.cursor = draggableDropRejected ? "no-drop" : "move", dropRejected = draggableDropRejected), 
                                dragTimer = setTimeout(function() {
                                    drag(event);
                                }, 100);
                            }
                            function cancelDrag(e) {
                                return dragging = !1, clearTimeout(touchDragTimer), clearTimeout(dragTimer), dragElement && dragElement.remove(), 
                                overlay.parentNode.removeChild(overlay), draggable.cancelDrag(e), document.removeEventListener("touchmove", dragHandler), 
                                document.removeEventListener("touchend", finishEvent), e.preventDefault(), e.stopPropagation(), 
                                !0;
                            }
                            function dragHandler(moveEvent) {
                                return moveEvent.button > 0 ? cancelDrag(moveEvent) : (clearTimeout(dragTimer), 
                                dragElement && dragElement.updatePosition(moveEvent), drag(moveEvent), moveEvent.preventDefault(), 
                                moveEvent.stopPropagation(), !1);
                            }
                            function finishEvent(upEvent) {
                                dragging = !1, clearTimeout(touchDragTimer), clearTimeout(dragTimer), dragElement && dragElement.remove(), 
                                overlay.parentNode.removeChild(overlay);
                                var cloneEvent = extend({}, upEvent);
                                return cloneEvent.target = document.elementFromPoint(getEventCoord(upEvent, "clientX"), getEventCoord(upEvent, "clientY")), 
                                draggable.drop(cloneEvent), document.removeEventListener("selectstart", onSelectStartDrag, !0), 
                                document.removeEventListener("touchmove", dragHandler), document.removeEventListener("touchend", finishEvent), 
                                upEvent.preventDefault(), upEvent.stopPropagation(), !1;
                            }
                            if (document.removeEventListener("mouseup", onMouseUpStartDrag, !0), document.removeEventListener("touchend", onMouseUpStartDrag, !0), 
                            document.removeEventListener("click", onMouseUpStartDrag, !0), document.removeEventListener("mousemove", onMouseMoveStartDrag, !0), 
                            document.removeEventListener("touchmove", onTouchMoveStartDrag, !0), dragging) return !0;
                            if (!1 === draggable.startDrag(downEvent)) return startEvent.preventDefault(), startEvent.stopPropagation(), 
                            !1;
                            dragging = !0;
                            var dragElement = null;
                            void 0 === options.element && (dragElement = new DragElement(createCloneProxyElement()));
                            var overlay = document.createElement("div");
                            overlay.className = "drag-overlay", overlay.setAttribute("unselectable", "on"), 
                            overlay.style.zIndex = 9999, overlay.style.position = "fixed", overlay.style.top = 0, 
                            overlay.style.left = 0, overlay.style.right = 0, overlay.style.bottom = 0, overlay.style.cursor = "move", 
                            overlay.style.backgroundColor = "white", overlay.style.opacity = 0, overlay.style.filter = "alpha(opacity=0)", 
                            overlay.style.userSelect = "none", overlay.style.webkitUserSelect = "none", overlay.style.MozUserSelect = "none", 
                            overlay.style.msUserSelect = "none", overlay.style.OUserSelect = "none", overlay.addEventListener("selectstart", onSelectStartDrag), 
                            document.body.appendChild(overlay), options.element && (dragElement = new DragElement(createTemplateProxyElement())), 
                            dragElement && dragElement.updatePosition(downEvent);
                            var dragTimer = null, dropRejected = !1;
                            touchSupport || overlay.addEventListener("mousedown", cancelDrag), overlay.addEventListener("mousemove", dragHandler), 
                            document.addEventListener("touchmove", dragHandler), overlay.addEventListener("mouseup", finishEvent), 
                            document.addEventListener("touchend", finishEvent);
                        }
                        function onMouseUpStartDrag(event) {
                            return document.removeEventListener("mouseup", onMouseUpStartDrag, !0), document.removeEventListener("touchend", onMouseUpStartDrag, !0), 
                            document.removeEventListener("click", onMouseUpStartDrag, !0), document.removeEventListener("mousemove", onMouseMoveStartDrag, !0), 
                            document.removeEventListener("touchmove", onTouchMoveStartDrag, !0), document.removeEventListener("selectstart", onSelectStartDrag, !0), 
                            !0;
                        }
                        function onMouseMoveStartDrag(event) {
                            if (event.target.tagName && "input" === event.target.tagName.toLowerCase()) return !0;
                            var xDifference = getEventCoord(downEvent, "pageX") - getEventCoord(event, "pageX"), yDifference = getEventCoord(downEvent, "pageY") - getEventCoord(event, "pageY");
                            return Math.sqrt(Math.pow(xDifference, 2) + Math.pow(yDifference, 2)) > dragDistance && startDragging(event), 
                            event.preventDefault(), event.stopPropagation(), !1;
                        }
                        function onTouchMoveStartDrag(event) {
                            if (event.target.tagName && "input" === event.target.tagName.toLowerCase()) return !0;
                            var xDifference = getEventCoord(downEvent, "pageX") - getEventCoord(event, "pageX"), yDifference = getEventCoord(downEvent, "pageY") - getEventCoord(event, "pageY");
                            Math.sqrt(Math.pow(xDifference, 2) + Math.pow(yDifference, 2)) > dragDistance && clearTimeout(touchDragTimer);
                        }
                        if (downEvent.button > 0) return !0;
                        document.addEventListener("selectstart", onSelectStartDrag, !0), document.addEventListener("mouseup", onMouseUpStartDrag, !0), 
                        document.addEventListener("touchend", onMouseUpStartDrag, !0), document.addEventListener("click", onMouseUpStartDrag, !0);
                        var touchDragTimer;
                        return "touchstart" === downEvent.type && (touchDragTimer = setTimeout(function() {
                            startDragging(downEvent);
                        }, ko.unwrap(options.longTapDelay)), element.addEventListener("touchend", function() {
                            clearTimeout(touchDragTimer);
                        })), document.addEventListener("mousemove", onMouseMoveStartDrag, !0), document.addEventListener("touchmove", onTouchMoveStartDrag, !0), 
                        !0;
                    }
                    var options = ko.utils.unwrapObservable(valueAccessor()), name = options.name, dragDistance = "number" == typeof options.dragDistance ? options.dragDistance : 10;
                    if (dropZones[name] = dropZones[name] || [], eventZones[name] = eventZones[name] || [], 
                    !name || "string" != typeof name) throw new Error("A drag zone must specify a name");
                    if (!options.disabled) {
                        var data = options.data || bindingContext && bindingContext.$data, draggable = new Draggable({
                            element: element,
                            name: name,
                            data: data,
                            dragStart: options.dragStart,
                            dragEnd: options.dragEnd
                        });
                        void 0 === options.longTapDelay && (options.longTapDelay = 500), element.addEventListener("selectstart", function(event) {
                            return !(!event.target.tagName || "input" !== event.target.tagName.toLowerCase() && "textarea" !== event.target.tagName.toLowerCase()) || (event.preventDefault(), 
                            event.stopPropagation(), !1);
                        }, !0), toggleClass(element, "draggable", !0), element.addEventListener("mousedown", beginEvent), 
                        element.addEventListener("touchstart", beginEvent), ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                            document.removeEventListener("selectstart", onSelectStartDrag, !0);
                        });
                    }
                }
            },
            scrollableOnDragOver: {
                init: function(element, valueAccessor, allBindingAccessor) {
                    function scroll() {
                        scrollArea.scroll(x, y);
                    }
                    function dragEnter(e) {
                        scrollArea = new ScrollArea(element, options.delay), scrollInterval = setInterval(scroll, 100);
                    }
                    function dragOver(e) {
                        x = getEventCoord(e, "pageX"), y = getEventCoord(e, "pageY");
                    }
                    function dragLeave(e) {
                        clearInterval(scrollInterval);
                    }
                    var options = ko.utils.unwrapObservable(valueAccessor());
                    ("string" == typeof options || Array.isArray(options)) && (options = {
                        accepts: options
                    }), options.delay = options.delay || 0;
                    var x, y, scrollInterval, accepts = getAcceptedDragZones(options), scrollArea = null;
                    ko.bindingHandlers.dragEvents.init(element, function() {
                        return {
                            accepts: accepts,
                            dragEnter: dragEnter,
                            dragOver: dragOver,
                            dragLeave: dragLeave
                        };
                    });
                }
            }
        });
    });
}(), function() {
    (0, System.amdDefine)("common/bindings/knockout.events.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], function(ko) {
        function makeEventHandlerShortcut(eventName) {
            ko.bindingHandlers[eventName] = {
                init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                    var newValueAccessor = function() {
                        var result = {};
                        return result[eventName] = valueAccessor(), result;
                    };
                    return ko.bindingHandlers.event.init.call(this, element, newValueAccessor, allBindingsAccessor, viewModel, bindingContext);
                }
            };
        }
        makeEventHandlerShortcut("mousedown"), makeEventHandlerShortcut("touchstart"), ko.bindingHandlers.leftMouseDown = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                var value = valueAccessor(), handler = ko.utils.unwrapObservable(value), newValueAccessor = function() {
                    return function(data, event) {
                        if (1 === event.which) {
                            var argsForHandler = ko.utils.makeArray(arguments);
                            handler.apply(viewModel, argsForHandler);
                        }
                    };
                };
                return ko.bindingHandlers.mousedown.init.call(this, element, newValueAccessor, allBindingsAccessor, viewModel, bindingContext);
            }
        }, ko.bindingHandlers.leftDoubleMouseDown = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                var value = valueAccessor(), handler = ko.utils.unwrapObservable(value), clickedOnce = !1, newValueAccessor = function() {
                    return function(data, event) {
                        if (1 === event.which) if (clickedOnce) {
                            var argsForHandler = ko.utils.makeArray(arguments);
                            handler.apply(viewModel, argsForHandler);
                        } else event.preventDefault && event.preventDefault(), clickedOnce = !0, setTimeout(function() {
                            clickedOnce = !1;
                        }, 300);
                    };
                };
                return ko.bindingHandlers.mousedown.init.call(this, element, newValueAccessor, allBindingsAccessor, viewModel, bindingContext);
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("common/bindings/knockout.forRange.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js" ], function(ko, util) {
        ko.bindingHandlers.forRange = {
            makeValueAccessor: function(valueAccessor) {
                return function() {
                    var value = valueAccessor(), bindingValue = ko.unwrap(value);
                    if ("number" == typeof bindingValue) return util.range(bindingValue);
                    if (bindingValue && "object" == typeof bindingValue && "number" == typeof ko.unwrap(bindingValue.length)) {
                        var length = ko.unwrap(bindingValue.length), startIndex = ko.unwrap(bindingValue.startIndex), stepSize = ko.unwrap(bindingValue.stepSize);
                        return "number" == typeof startIndex && "number" == typeof stepSize ? util.range(length, startIndex, stepSize) : "number" == typeof startIndex ? util.range(length, startIndex) : util.range(length);
                    }
                    throw new Error("The forRange binding expects a length or and object with the following signature:\n{\n    length: <number>,\n    startIndex: <number>, // optional\n    stepSize: <number> // optional\n}");
                };
            },
            init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
                return ko.bindingHandlers.foreach.init(element, ko.bindingHandlers.forRange.makeValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);
            },
            update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
                return ko.bindingHandlers.foreach.update(element, ko.bindingHandlers.forRange.makeValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);
            }
        }, ko.virtualElements.allowedBindings.forRange = !0;
    });
}(), function() {
    (0, System.amdDefine)("3rdparty/knockout.autoExpand.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js" ], function($, ko) {
        function copyStyles($target, $source, styles) {
            for (var i = 0; i < styles.length; i += 1) $target.css(styles[i], $source.css(styles[i]));
        }
        function pixelValue(str) {
            var matches = str.match(unitRegex);
            return matches ? "px" !== matches[2] ? NaN : parseInt(matches[1], 10) : NaN;
        }
        function getWidth($element) {
            return pixelValue($element.css("width"));
        }
        function getHeight($element) {
            return pixelValue($element.css("height"));
        }
        function elasticTextArea($element) {
            function setTwinWidth() {
                var curatedWidth = getWidth($element);
                getWidth($twin) !== curatedWidth && ($twin.css("width", curatedWidth), update(!0));
            }
            function setHeightAndOverflow(height, overflow) {
                var curratedHeight = Math.floor(height);
                getHeight($element) !== curratedHeight && ($element.css({
                    height: curratedHeight,
                    overflow: overflow
                }), setTimeout(function() {
                    $(window).trigger("resize");
                }, 0));
            }
            function update(forced) {
                var textareaContent = $element.val().replace(/&/g, "&amp;").replace(/ {2}/g, "&nbsp;").replace(/<|>/g, "&gt;").replace(/\n/g, "<br />"), twinContent = $twin.html().replace(/<br>/gi, "<br />");
                if (forced || textareaContent + "&nbsp;" !== twinContent) {
                    $twin.html(textareaContent + "&nbsp;");
                    var goalheight = getHeight($twin);
                    goalheight >= maxheight ? setHeightAndOverflow(maxheight, "auto") : goalheight <= minheight ? setHeightAndOverflow(minheight, "hidden") : setHeightAndOverflow(goalheight, "hidden");
                }
            }
            var $twin = $("<div />").css({
                position: "absolute",
                display: "none",
                "word-wrap": "break-word",
                "white-space": "pre-wrap"
            }), lineHeight = parseInt($element.css("line-height"), 10) || 1.14 * parseInt($element.css("font-size"), "10"), minheight = getHeight($element) || 3 * lineHeight, maxheight = parseInt($element.css("max-height"), 10) || Number.MAX_VALUE;
            maxheight < 0 && (maxheight = Number.MAX_VALUE), copyStyles($twin, $element, textAreaMimics), 
            $twin.width(getWidth($element)), $twin.appendTo($element.parent()), $element.data("elastic-twin", $twin), 
            $element.css({
                overflow: "hidden"
            }), $element.bind("keyup change cut paste", function() {
                update();
            }), $element.bind("focus", function(e) {
                setTimeout(update, 0);
            }), $(window).bind("resize", setTwinWidth), $element.bind("resize", setTwinWidth), 
            $element.bind("update", update), $element.bind("blur", function() {
                $twin.css("height") < maxheight && ($twin.css("height") > minheight ? $element.css("height", $twin.css("height")) : $element.css("height", minheight));
            }), $element.bind("input paste", function(e) {
                setTimeout(update, 250);
            }), update();
        }
        function elasticTextField($element) {
            function update() {
                var newValue = $element.val();
                void 0 !== newValue && ($twin.text(newValue), $element.css("width", getWidth($twin) + 30), 
                value = newValue);
            }
            var $twin = $("<div />").css({
                position: "absolute",
                display: "none",
                "white-space": "pre"
            });
            copyStyles($twin, $element, textFieldMimics), $twin.appendTo($element.parent()), 
            $element.data("elastic-twin", $twin);
            var value = null;
            $element.bind("keyup change cut paste update", function() {
                update();
            }), $element.bind("focus", function(e) {
                setTimeout(update, 0);
            }), $element.bind("input paste", function(e) {
                setTimeout(update, 250);
            }), update();
        }
        var textAreaMimics = [ "-webkit-box-sizing", "-moz-box-sizing", "boxSizing", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "fontSize", "lineHeight", "fontFamily", "fontWeight", "borderTopWidth", "borderTopStyle", "borderTopColor", "borderRightWidth", "borderRightStyle", "borderRightColor", "borderLeftWidth", "borderLeftStyle", "borderLeftColor", "borderBottomWidth", "borderBottomStyle", "borderBottomColor" ], unitRegex = /^(\d+)(\w+)$/, textFieldMimics = [ "paddingRight", "paddingLeft", "fontSize", "fontFamily", "fontWeight", "borderRightWidth", "borderRightStyle", "borderRightColor", "borderLeftWidth", "borderLeftStyle", "borderLeftColor", "-webkit-box-sizing", "-moz-box-sizing", "boxSizing" ];
        ko.bindingHandlers.autoExpand = {
            init: function(element, valueAccessor) {
                if (!1 !== valueAccessor()) {
                    var $element = $(element);
                    if ("textarea" === element.type) elasticTextArea($element); else {
                        if ("text" !== element.type && "email" !== element.type) return;
                        elasticTextField($element);
                    }
                    ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                        var $twin = $element.data("elastic-twin");
                        $twin && $twin.remove();
                    });
                }
            },
            update: function(element, valueAccessor) {
                !1 !== valueAccessor() && $(element).trigger("update");
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("theme/binding/errormsg.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js" ], function($, ko) {
        ko.bindingHandlers.errormsg = {
            init: function(element, valueAccessor) {
                $(element).hide();
            },
            update: function(element, valueAccessor) {
                var content = ko.utils.unwrapObservable(valueAccessor()), msgBox = $(element), dismissable = !0, level = "error";
                if (null !== content) {
                    "string" != typeof content && (dismissable = !!content.dismissable, level = content.level || "error", 
                    content = content.message), msgBox.stop().hide().empty(), dismissable && (content = '<a class="close" data-dismiss="alert">×</a> ' + content), 
                    msgBox.append('<div class="alert alert-' + level + '">' + content + "</div>");
                    var closeButtons = $(".close", msgBox);
                    closeButtons.length && closeButtons.on("mousedown touchstart", function(e) {
                        closeButtons.off("mousedown touchstart"), valueAccessor()(null);
                    });
                    var bodyOuterWidth = $("body").outerWidth(), height = msgBox.outerHeight() + 2, width = msgBox.outerWidth() + 2, left = Math.floor((bodyOuterWidth - width) / 2);
                    msgBox.css({
                        top: -1 * height + "px",
                        left: left + "px"
                    }), msgBox.show().animate({
                        top: "50px"
                    }, 200);
                } else msgBox.stop().animate({
                    top: -1 * (msgBox.outerHeight() + 2) + "px"
                }, 400, function() {
                    msgBox.hide().empty();
                });
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("theme/binding/notification.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js" ], function($, ko) {
        ko.bindingHandlers.notification = {
            init: function(element, valueAccessor) {
                var notifyBox = $(element);
                notifyBox.hide(), notifyBox.data("counter", 0);
            },
            update: function(element, valueAccessor) {
                var value = ko.utils.unwrapObservable(valueAccessor()), notifyBox = $(element), content = value, timeout = 1e3;
                if (notifyBox.data("hide-after-timeout", !1), null !== value && "string" != typeof value && (content = value.message, 
                timeout = value.timeout || timeout), null !== content) {
                    notifyBox.data("timed-out", !1), notifyBox.data("hide-after-timeout", !0), clearTimeout(notifyBox.data("timer")), 
                    notifyBox.stop().hide().empty(), notifyBox.append('<div class="alert alert-block">' + content + "</div>");
                    var closeButtons = $(".close", notifyBox);
                    closeButtons.length && closeButtons.click(function(e) {
                        closeButtons.off("click"), valueAccessor()(null);
                    });
                    var bodyOuterWidth = $("body").outerWidth(), height = notifyBox.outerHeight() + 2, width = notifyBox.outerWidth() + 2, left = Math.floor((bodyOuterWidth - width) / 2);
                    notifyBox.css({
                        top: -1 * height + "px",
                        left: left + "px"
                    }), notifyBox.show().animate({
                        top: "-5px"
                    }, 200);
                    var timer = setTimeout(function() {
                        notifyBox.data("timed-out", !0), notifyBox.data("hide-after-timeout") && notifyBox.stop().animate({
                            top: -1 * (notifyBox.outerHeight() + 2) + "px"
                        }, 400, function() {
                            notifyBox.hide().empty();
                        });
                    }, timeout);
                    notifyBox.data("timer", timer);
                } else notifyBox.data("timed-out") ? notifyBox.stop().animate({
                    top: -1 * (notifyBox.outerHeight() + 2) + "px"
                }, 400, function() {
                    notifyBox.hide().empty();
                }) : notifyBox.data("hide-after-timeout", !0);
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("theme/binding/knockout.checkbox.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "node_modules/jquery/dist/jquery.js" ], function(ko, $) {
        ko.bindingHandlers.checkbox = {
            init: function(element, valueAccessor) {
                function toggle() {
                    var value = valueAccessor();
                    value(!value());
                }
                var $element = $(element);
                $element.addClass("checkbox"), $element.on("keydown", function(e) {
                    32 === e.which ? (toggle(), e.preventDefault()) : 13 === e.which && e.preventDefault();
                }), $element.on("mousedown", function(e) {
                    1 === e.which && (toggle(), element.focus(), e.stopPropagation(), e.preventDefault());
                }), $element.on("click", function(e) {
                    return e.stopPropagation(), e.preventDefault(), !1;
                });
            },
            update: function(element, valueAccessor) {
                var value = valueAccessor(), checked = ko.utils.unwrapObservable(value);
                $(element).toggleClass("checked", checked);
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("common/knockout.pause.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], function(ko) {
        ko.extenders.pause = function(target, paused) {
            var lastValue, isPaused = !!paused;
            return target.notifySubscribers = function() {
                isPaused || ko.subscribable.fn.notifySubscribers.apply(this, arguments);
            }, target.pause = function() {
                isPaused = !0, lastValue = target.peek();
            }, target.resume = function(notify) {
                if (isPaused = !1, notify) {
                    var newValue = target.peek();
                    target.isDifferent(lastValue, newValue) && ko.subscribable.fn.notifySubscribers.call(this, newValue);
                }
            }, target.silentUpdate = function(value) {
                isPaused ? target(value) : (target.pause(), target(value), target.resume());
            }, target;
        };
    });
}(), System.registerDynamic("calendar/dialogs/event/recurrenceOptions.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "recurrenceOptions",
        content: '<div class="controls-row frequency-selector">\n    <div class="small recurrence-label fixed">\n        <span data-i18n="calendar.Recurrence.Frequency">Frequency:</span>\n    </div>\n    <div class="stretch">\n        <div class="select-wrapper">\n            <select data-bind="options: frequencyOptions,\n                               optionsText: \'text\',\n                               value: selectedFrequency">\n            </select>\n        </div>\n    </div>\n</div>\n<div class="controls-row recurrence-interval">\n    <div class="small recurrence-label fixed">\n        <span data-i18n="calendar.Recurrence.RepeatsEvery">Repeats every:</span>\n    </div>\n    <div class="stretch">\n        <input type="number" min="1" max="30" data-bind="value: interval, event: {keydown: detectKeyCode}">\n        <span class="repeat-interval" data-bind="text: intervalDescription"></span>\n    </div>\n</div>\n<div class="controls-row repeat-on column-layout limit" data-bind="visible: frequency() !== \'YEARLY\'">\n    <label data-bind="click: weekdaysOnlyClick, visible: frequency() === \'DAILY\'">\n        <button data-bind="checkbox: isWeekdaysOnly,\n                           attr: { tabindex: frequency() === \'DAILY\' ? 1 : -1 }">\n        </button>\n        <span class="checkbox-label weekdays-only" data-i18n="calendar.Recurrence.WeekdaysOnly">Weekdays only</span>\n    </label>\n    <div class="small recurrence-label" data-bind="visible: frequency() === \'WEEKLY\' || frequency() === \'MONTHLY\'">\n        <span data-i18n="calendar.Recurrence.RepeatOn">Repeat on:</span>\n    </div>\n    <div class="stretch" data-bind="foreach: daysOfWeekInOrder, visible: frequency() === \'WEEKLY\'">\n        <div class="day-of-week-container">\n            <label data-bind="click: labelClick">\n                <button data-bind="checkbox: selected,\n                                   value: id,\n                                   attr: { tabindex: $parent.frequency() === \'WEEKLY\' ? 1 : -1 },\n                                   disable: disabled">\n                </button>\n                <span class="checkbox-label day-of-week-label" data-bind="text: text, css: { \'disabled\': disabled }"></span>\n            </label>\n        </div>\n    </div>\n    <div data-bind="foreach: monthlyRepetitionOptions, visible: frequency() === \'MONTHLY\'">\n        <div data-bind="visible: show" class="monthly-repetition-container">\n            <label class="radio">\n                <input type="radio" name="monthlyRepetition" data-bind="checked: $parent.monthlyRepetition,\n                                  attr: {\n                                      id: value,\n                                      tabindex: $parent.frequency() === \'MONTHLY\' && show ? 1 : -1\n                                  },\n                                  value: value">\n                <span class="label checkbox-label" data-bind="text: text, click: $parent.monthlyRepetitionLabel"></span>\n            </label>\n        </div>\n    </div>\n</div>\n<div class="controls-row column-layout limit">\n    <div class="small recurrence-label">\n        <span data-i18n="calendar.Recurrence.EndRepeat">End repeat:</span>\n    </div>\n    <div class="stretch limitation">\n        <div class="limitation-row">\n            <label class="radio">\n                <input type="radio" data-bind="attr: { name: \'limitation\' }, value: \'forever\', checked: limit">\n                <span class="label" data-i18n="calendar.Recurrence.LimitationsForever">Never ends</span>\n            </label>\n        </div>\n        <div class="limitation-row">\n            <label class="stretch radio">\n                <input type="radio" data-bind="attr: { name: \'limitation\' }, value: \'count\', checked: limit">\n                <span class="label" data-i18n="calendar.Recurrence.LimitationOccurrences">Occurrences: </span>\n            </label>\n            <div class="limitation-input small">\n                <input type="number" min="1" data-bind="value: count, event: {keydown: detectKeyCode}, enable: limit() === \'count\'">\n            </div>\n        </div>\n        <div class="limitation-row">\n            <label class="small radio">\n                <input type="radio" data-bind="attr: { name: \'limitation\' }, value: \'until\', checked: limit">\n                <span class="label" data-i18n="calendar.Recurrence.LimitationEnds">Ends:</span>\n            </label>\n            <div class="stretch" data-bind="css: { \'empty-placeholder\': !until() }">\n                \x3c!-- ko if: until() --\x3e\n                <one-date-selector params="date: until, disabled: limit() !== \'until\'">\n                </one-date-selector>\n                \x3c!-- /ko --\x3e\n                \x3c!-- ko ifnot: until() --\x3e\n                <input type="text" tabindex="-1" disabled="true">\n                \x3c!-- /ko --\x3e\n            </div>\n        </div>\n    </div>\n</div>\n<div class="controls-row recur-description">\n    <div class="small label">\n        <span data-i18n="calendar.RecurrenceDescriptionColon">Description:</span>\n    </div>\n    <div class="stretch recurrence-description">\n        <span data-bind="text: recurrenceDescription"></span>\n    </div>\n</div>\n'
    }), module.exports;
}), function() {
    (0, System.amdDefine)("calendar/dialogs/event/knockout.eventDialog.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "calendar/bindings/knockout.editModal.js", "calendar/dialogs/event/recurrenceOptions.ko", "calendar/dialogs/event/eventDialog.ko" ], function($, ko, util) {
        function animateOverlay() {
            ko.utils.toggleDomNodeCssClass(document.body, "edit-dialog-close-rejected", !0), 
            setTimeout(function() {
                ko.utils.toggleDomNodeCssClass(document.body, "edit-dialog-close-rejected", !1);
            }, 500);
        }
        ko.bindingHandlers.eventDialog = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                var options = valueAccessor(), eventDialog = bindingContext.$root.eventDialog, context = {
                    template: "eventDialog",
                    className: "edit-dialog event-dialog",
                    viewModel: eventDialog,
                    openState: ko.computed({
                        read: function() {
                            return eventDialog.model() === options;
                        },
                        write: function(open) {
                            document.activeElement && document.activeElement.blur(), eventDialog.hasChanges() ? animateOverlay() : eventDialog.model(open ? options : null);
                        }
                    })
                };
                ko.bindingHandlers.editModal.init(element, function() {
                    return util.extend(options, context);
                }, allBindingsAccessor, viewModel, bindingContext);
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("webmail/components/calendarListDropDown/CalendarListDropDownViewModel.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/Sort.js", "common/ViewBehavior.js", "calendar/actions/UpdateExternalCalendarAction.js", "calendar/actions/UpdateCalendarAction.js" ], function($, ko, Sort, ViewBehavior, UpdateExternalCalendarAction, UpdateCalendarAction) {
        function CalendarListDropDownViewModel(options) {
            function toggleEnabledCalendar(cal) {
                var calendar = calendars.get(cal.id);
                calendar.enabled(!calendar.enabled());
                var action;
                action = cal.extern ? new UpdateExternalCalendarAction({
                    calendar: calendar,
                    data: {
                        enabled: calendar.enabled()
                    }
                }) : new UpdateCalendarAction({
                    calendar: calendar,
                    data: {
                        enabled: calendar.enabled()
                    }
                }), that.executeAction(action, function(err, data) {
                    err && that.handleError(err);
                });
            }
            var that = this;
            that.state = options.state, that.actionExecutor = options.actionExecutor, that.errorHandler = options.errorHandler, 
            ViewBehavior.installInto(that);
            var calendars = that.state.calendars;
            that.calendars = ko.pureComputed(function() {
                return calendars.version(), Sort.calendars.byDefaultThenByName(calendars.all());
            }), that.defaultCalendar = ko.pureComputed(function() {
                return calendars.version(), calendars.getDefault() || {};
            }), that.numberOfEnabledCalendars = ko.pureComputed(function() {
                return calendars.version(), calendars.all().filter(function(calendar) {
                    return calendar.enabled();
                }).length;
            }), that.isCalendarListOpen = ko.observable(!1), that.closeCalendarList = function() {
                that.isCalendarListOpen(!1);
            }, that.numberOfCalendars = ko.pureComputed(function() {
                return calendars.version(), calendars.all().length;
            }), that.selectCalendar = function(calendar, e) {
                toggleEnabledCalendar(calendar);
            };
        }
        return CalendarListDropDownViewModel;
    });
}(), System.registerDynamic("webmail/components/calendarListDropDown/calendarListDropDown.ko!3rdparty/systemjs-plugin-ko-tpl.js", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "calendarListDropDown",
        content: '<div class="dropdown-input calendar-list-dropdown dropdown-toggle" data-bind="dropdownTemplate: { template: \'calendarListItemTemplate\', if: defaultCalendar(), closeOnClickInPopup: false, openState: isCalendarListOpen }">\n    <button data-bind="css: { checked: defaultCalendar().enabled }, style: { backgroundColor: defaultCalendar().darkBackgroundColor }" class="calendar-checkbox" tabindex="-1"></button>\n    <span class="content" data-bind="text: defaultCalendar().name, attr: { \'data-title\': defaultCalendar().name }"></span>\n    <span class="enabled-status" data-i18n="webmail.slideIn.EnabledCalendars">(<span data-bind="text: numberOfEnabledCalendars">0</span> of <span data-bind="text: numberOfCalendars">0</span> enabled)</span>\n    <span class="caret"></span>\n</div>\n\n<script type="text/html" id="calendarListItemTemplate">\n    <div class="calendar-list-dropdown">\n        <ul class="popupDropdown dropdown-list" data-bind="foreach: calendars">\n            <li class="dropdown-item calendar-dropdown-item calendar-list-item" data-bind="click: $parent.selectCalendar">\n                <button data-bind="css: { checked: enabled }, style: { backgroundColor: darkBackgroundColor }" class="calendar-checkbox"></button>\n                <span class="calendar-name" data-bind="text: name"></span>\n            </li>\n        </ul>\n        <div class="button-container">\n            <button class="one-button-style--primary list-button-ok" data-bind="click: closeCalendarList" data-i18n="webmail.slideIn.CalendarListOk">OK</button>\n        </div>\n    </div>\n<\/script>\n'
    }), module.exports;
}), function() {
    (0, System.amdDefine)("webmail/components/calendarListDropDown/calendarListDropDown.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "webmail/components/calendarListDropDown/CalendarListDropDownViewModel.js", "webmail/components/calendarListDropDown/calendarListDropDown.ko!3rdparty/systemjs-plugin-ko-tpl.js" ], function(ko, CalendarListDropDownViewModel) {
        ko.components.register("one-calendar-list-drop-down", {
            template: {
                element: "calendarListDropDown"
            },
            viewModel: {
                createViewModel: function(params) {
                    return new CalendarListDropDownViewModel(params);
                }
            }
        });
    });
}(), function() {
    (0, System.amdDefine)("calendar/bindings/knockout.editModal.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "3rdparty/knockout.popupTemplate.js" ], function($, ko, util) {
        function init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
            function handleTab(e) {
                if (9 === e.keyCode && config.openState()) {
                    var $tabContainer = $(e.target).closest(".dialog-view"), $tabbableElements = $tabContainer.find('[tabindex="1"]:not(:disabled):not(.ignore-tab)'), currentIndex = $tabbableElements.index(e.target);
                    if (e.shiftKey) {
                        if (0 === currentIndex) {
                            e.preventDefault();
                            var lastFocusElement = $tabbableElements.last()[0];
                            lastFocusElement && lastFocusElement.focus();
                        }
                    } else if (currentIndex === $tabbableElements.length - 1) {
                        e.preventDefault();
                        var firstFocusElement = $tabbableElements.first()[0];
                        firstFocusElement && firstFocusElement.focus();
                    }
                    if (-1 === currentIndex) {
                        var $allTabbables = $tabContainer.find('[tabindex="1"]:not(:disabled), .ignore-tab'), allTabbablesLength = $allTabbables.length, firstFocusIndex = $allTabbables.index(e.target);
                        if (e.shiftKey) {
                            e.preventDefault();
                            var previousFocusElement = $allTabbables.eq((firstFocusIndex - 1 + allTabbablesLength) % allTabbablesLength)[0];
                            previousFocusElement && previousFocusElement.focus();
                        } else {
                            e.preventDefault();
                            var nextFocusElement = $allTabbables.eq((firstFocusIndex + 1 + allTabbablesLength) % allTabbablesLength)[0];
                            nextFocusElement && nextFocusElement.focus();
                        }
                    }
                }
            }
            var subscriptions = [], options = valueAccessor(), $element = $(element), template = options.template, className = options.className, openState = options.openState;
            viewModelContext = options.viewModel, options.position || (options.position = $element.outerWidth() > 5 * $element.outerHeight() ? "bottom" : "right");
            var positioning;
            switch (options.position) {
              case "left":
                positioning = [ "outside-left middle", "outside-left inside-top", "outside-left inside-bottom", "outside-right middle", "outside-right inside-top", "outside-right inside-bottom", "middle outside-top", "inside-left outside-top", "inside-right outside-top", "middle outside-bottom", "inside-left outside-bottom", "inside-right outside-bottom" ];
                break;

              case "right":
                positioning = [ "outside-right middle", "outside-right inside-top", "outside-right inside-bottom", "outside-left middle", "outside-left inside-top", "outside-left inside-bottom", "middle outside-top", "inside-left outside-top", "inside-right outside-top", "middle outside-bottom", "inside-left outside-bottom", "inside-right outside-bottom" ];
                break;

              case "bottom":
                positioning = [ "middle outside-bottom", "inside-left outside-bottom", "inside-right outside-bottom", "middle outside-top", "inside-left outside-top", "inside-right outside-top", "outside-right middle", "outside-right inside-top", "outside-right inside-bottom", "outside-left middle", "outside-left inside-top", "outside-left inside-bottom" ];
                break;

              case "top":
                positioning = [ "middle outside-top", "inside-left outside-top", "inside-right outside-top", "middle outside-bottom", "inside-left outside-bottom", "inside-right outside-bottom", "outside-right middle", "outside-right inside-top", "outside-right inside-bottom", "outside-left middle", "outside-left inside-top", "outside-left inside-bottom" ];
                break;

              default:
                throw new Error('Unknown position "' + options.position + '", use: left, right, top or bottom');
            }
            subscriptions.push(viewModelContext.hasChanges.subscribe(function(hasChanges) {
                ko.utils.toggleDomNodeCssClass(overlayElement, "modal", hasChanges);
            }));
            var bestPositionSubscription, config = {
                template: template,
                className: className,
                anchorHandler: !1,
                positioning: positioning,
                afterOpen: function() {
                    function updateArrowPosition(bestPosition) {
                        var style = styles[bestPosition.horizontal + " " + bestPosition.vertical];
                        "function" == typeof style && (style = style()), setTimeout(function() {
                            that.$popupHolder.find(".speech-bubble-arrow").attr("style", style);
                        }, 0);
                    }
                    var that = this;
                    bindingContext.$root.eventDialog.state.blockRenderingView(!0);
                    var styles = {
                        "outside-right middle": "top: 50%; left: 0",
                        "outside-right inside-top": function() {
                            return "top: " + Math.min(that.$popupHolder.outerHeight(), that.$element.outerHeight()) / 2 + "px; left: 0";
                        },
                        "outside-right inside-bottom": function() {
                            return "bottom: " + Math.min(that.$popupHolder.outerHeight(), that.$element.outerHeight()) / 2 + "px; left: 0";
                        },
                        "outside-left middle": "top: 50%; right: 0",
                        "outside-left inside-top": function() {
                            return "top: " + Math.min(that.$popupHolder.outerHeight(), that.$element.outerHeight()) / 2 + "px; right: 0";
                        },
                        "outside-left inside-bottom": function() {
                            return "bottom: " + Math.min(that.$popupHolder.outerHeight(), that.$element.outerHeight()) / 2 + "px; right: 0";
                        },
                        "middle outside-top": "left: 50%; bottom: 0",
                        "inside-left outside-top": function() {
                            return "left: " + Math.min(that.$popupHolder.outerWidth(), that.$element.outerWidth()) / 2 + "px; bottom: 0";
                        },
                        "inside-right outside-top": function() {
                            return "right: " + Math.min(that.$popupHolder.outerWidth(), that.$element.outerWidth()) / 2 + "px; bottom: 0";
                        },
                        "middle outside-bottom": "left: 50%; top: 0",
                        "inside-left outside-bottom": function() {
                            return "left: " + Math.min(that.$popupHolder.outerWidth(), that.$element.outerWidth()) / 2 + "px; top: 0";
                        },
                        "inside-right outside-bottom": function() {
                            return "right: " + Math.min(that.$popupHolder.outerWidth(), that.$element.outerWidth()) / 2 + "px; top: 0";
                        }
                    };
                    bestPositionSubscription = that.bestPosition.subscribe(updateArrowPosition), updateArrowPosition(ko.toJS(this.bestPosition));
                },
                beforeClose: function() {
                    var eventDialog = bindingContext.$root.eventDialog;
                    bestPositionSubscription && bestPositionSubscription.dispose(), eventDialog.state.blockRenderingView(!1);
                },
                openState: openState,
                data: viewModelContext
            };
            subscriptions.push(config.openState), subscriptions.push(config.openState.subscribe(function(state) {
                overlayElement.style.visibility = state ? "visible" : "hidden";
            })), ko.utils.registerEventHandler(element, "click", function() {
                config.openState(!0);
            }), ko.bindingHandlers.popupTemplate.init(element, function() {
                return config;
            }, allBindingsAccessor, viewModel, bindingContext), config.openState(!0), $(document).on("keydown", handleTab), 
            ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                subscriptions.forEach(function(subscription) {
                    subscription.dispose();
                }), overlayElement.style.visibility = "hidden", $(document).off("keydown", handleTab);
            });
        }
        var viewModelContext, overlayElement = document.createElement("div");
        overlayElement.className = "edit-dialog-overlay", overlayElement.style.visibility = "hidden", 
        document.body.appendChild(overlayElement), ko.bindingHandlers.editModal = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                function disposeSubscriptions() {
                    subscriptions.forEach(function(subscription) {
                        subscription.dispose();
                    });
                }
                var subscriptions = [], initHandler = function(event) {
                    disposeSubscriptions(), ko.utils.domNodeDisposal.removeDisposeCallback(element, disposeSubscriptions), 
                    element.removeEventListener("click", initHandler), init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);
                }, options = valueAccessor();
                options.openTrigger && ko.isObservable(options.openTrigger) ? (subscriptions.push(options.openTrigger.subscribe(function(open) {
                    open && initHandler();
                })), options.openTrigger() && (initHandler(), $(window).trigger("resize"))) : element.addEventListener("click", initHandler), 
                ko.utils.domNodeDisposal.addDisposeCallback(element, disposeSubscriptions);
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("calendar/dialogs/calendar/knockout.calendarDialog.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "calendar/bindings/knockout.editModal.js", "calendar/dialogs/calendar/calendarDialog.ko" ], function($, ko, util) {
        function animateOverlay() {
            ko.utils.toggleDomNodeCssClass(document.body, "edit-dialog-close-rejected", !0), 
            setTimeout(function() {
                ko.utils.toggleDomNodeCssClass(document.body, "edit-dialog-close-rejected", !1);
            }, 500);
        }
        ko.bindingHandlers.calendarDialog = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                var options = valueAccessor(), calendarDialog = bindingContext.$root.calendarDialog, context = {
                    template: "calendarDialog",
                    className: "edit-dialog calendar-dialog",
                    viewModel: calendarDialog,
                    openState: ko.computed({
                        read: function() {
                            return calendarDialog.model() === options;
                        },
                        write: function(open) {
                            document.activeElement && document.activeElement.blur(), calendarDialog.hasChanges() ? animateOverlay() : calendarDialog.model(open ? options : null);
                        }
                    })
                };
                ko.bindingHandlers.editModal.init(element, function() {
                    return util.extend(options, context);
                }, allBindingsAccessor, viewModel, bindingContext);
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("calendar/bindings/knockout.isCalendarActive.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js" ], function($, ko) {
        ko.bindingHandlers.isCalendarActive = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                function toggleClass(model) {
                    model && model.id === calendar.id ? $element.addClass(css) : $element.removeClass(css);
                }
                var options = valueAccessor(), calendarDialog = bindingContext.$root.calendarDialog, calendar = options.calendar, css = options.css || "active", $element = $(element);
                calendarDialog.model.subscribe(function(modelCalendar) {
                    toggleClass(modelCalendar && modelCalendar.calendar);
                });
                var model = calendarDialog.model();
                toggleClass(model && model.calendar);
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/newEvent/NewEventViewModel.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/ical/Time.js", "calendar/model/EventInstance.js" ], function(ko, Time, EventInstance) {
        function NewEventViewModel(params, componentInfo) {
            function showNewEventDialog(event) {
                var target = element.querySelector(".new-event-dialog .event-dialog"), defaultCalendar = eventDialog.calendars()[0];
                if (defaultCalendar && target) {
                    var startDate = Time.now(), adjustmentToNextHalfHour = 30 - startDate.minute % 30;
                    startDate.adjust(0, 0, adjustmentToNextHalfHour, 0), startDate.second = 0;
                    var endDate = startDate.clone().adjust(0, 1, 0, 0);
                    eventDialog.model({
                        eventInstance: new EventInstance({
                            startDate: startDate,
                            endDate: endDate,
                            event: {
                                calendar: defaultCalendar
                            }
                        })
                    }), subscriptions.push(eventDialog.model.subscribe(function(model) {
                        model || that.showNewEvent(!1);
                    })), document.addEventListener("keyup", onNewEventKeyUp), window.addEventListener("resize", updateDialogPosition, !0), 
                    that.newEventShown(!0), updateDialogPosition(), setTimeout(function() {
                        updateDialogPosition();
                    }, 1);
                }
            }
            function updateDialogPosition() {
                var height = window.innerHeight, target = document.querySelector(".new-event-dialog .event-dialog"), bounds = target.getBoundingClientRect(), top = Math.max(.5 * (height - bounds.height), 0);
                target.style.top = top + "px";
            }
            function hideNewEventDialog(force) {
                if (eventDialog.hasChanges() && !force) return void animateOverlay();
                eventDialog.model(null), that.newEventShown(!1), document.removeEventListener("keyup", onNewEventKeyUp), 
                window.removeEventListener("resize", updateDialogPosition, !0), subscriptions.forEach(function(subscription) {
                    subscription.dispose();
                }), that.showNewEvent(!1);
            }
            function onNewEventKeyUp(event) {
                27 === event.keyCode && hideNewEventDialog();
            }
            function animateOverlay() {
                ko.utils.toggleDomNodeCssClass(document.body, "edit-dialog-close-rejected", !0), 
                setTimeout(function() {
                    ko.utils.toggleDomNodeCssClass(document.body, "edit-dialog-close-rejected", !1);
                }, 500);
            }
            var that = this, eventDialog = params.eventDialog, element = componentInfo.element;
            this.showNewEvent = params.state.showNewEvent, that.newEventShown = ko.observable(!1);
            var subscriptions = [];
            this.showNewEventDialog = function() {
                that.showNewEvent(!0);
            }, this.showNewEvent.subscribe(function(newValue) {
                !0 === newValue ? showNewEventDialog() : hideNewEventDialog(!0);
            }), this.eventDialog = eventDialog, this.clickOnOverlay = function(event) {
                hideNewEventDialog();
            };
        }
        return NewEventViewModel;
    });
}(), System.registerDynamic("calendar/components/newEvent/newEvent.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "newEvent",
        content: '<div class="call-to-action main-call-to-action new-event-button" data-bind="click: showNewEventDialog">\n    <span data-i18n="calendar.NewEvent" class="compose-button-label">New event</span>\n</div>\n\n<div class="new-event-dialog" data-bind="style: { \'visibility\': newEventShown() ? \'visible\' : \'hidden\' }">\n    <div class="overlay" data-bind="click: clickOnOverlay"></div>\n    <div class="event-dialog edit-dialog" data-bind="template: { name: \'eventDialog\', data: eventDialog, if: eventDialog.model() && newEventShown() }"></div>\n</div>\n'
    }), module.exports;
}), System.registerDynamic("calendar/dialogs/event/eventDialog.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "eventDialog",
        content: '<div class="speech-bubble">\n    <div class="speech-bubble-arrow"></div>\n    <div class="form-horizontal main" data-bind="css: view">\n        <div class="dialog-view dialog-main event-dialog-main" data-bind="css: { \'readonly\': isReadonly}">\n            <one-dialog-header params="close: discard, context: $data, tabindex: view() === \'main\' ? 1 : -1, back: isSlideIn && discard">\n                <div class="dropdown-wrapper">\n                    \x3c!-- ko if: isReadonly --\x3e\n                    <div class="dropdown-input calendar-container">\n                        <button data-bind="css: { checked: false }, style: { backgroundColor: calendar().darkBackgroundColor }" class="calendar-checkbox" tabindex="-1"></button>\n                        <span class="content" data-bind="text: calendar().name, attr: { \'data-title\': calendar().name }"></span>\n                    </div>\n                    \x3c!-- /ko --\x3e\n                    \x3c!-- ko ifnot: isReadonly --\x3e\n                    <div class="dropdown-input dropdown-toggle" data-bind="dropdownTemplate: { template: \'calendarSelectorTemplate\' }">\n                        <button data-bind="css: { checked: false }, style: { backgroundColor: calendar().darkBackgroundColor }" class="calendar-checkbox" tabindex="-1"></button>\n                        <span class="content" data-bind="text: calendar().name, attr: { \'data-title\': calendar().name }"></span>\n                        <span class="caret"></span>\n                    </div>\n                    \x3c!-- /ko --\x3e\n                </div>\n            </one-dialog-header>\n            <div class="dialog-rows">\n                <div class="controls-row">\n                    <in-place-editor params="value: summary,\n                                             placeholder: TR(\'calendar.Summary\', \'Subject\'),\n                                             disabled: isReadonly,\n                                             focused: summaryFocused,\n                                             tabindex: view() === \'main\' ? 1 : -1"\n                                     class="summary main">\n                    </in-place-editor>\n                </div>\n                \x3c!-- ko if: isReadonly() && description() || !isReadonly() --\x3e\n                <div class="controls-row">\n                    <in-place-editor params="value: description,\n                                             isMultiline: true,\n                                             placeholder: TR(\'calendar.Description\', \'Description\'),\n                                             disabled: isReadonly,\n                                             tabindex: view() === \'main\' ? 1 : -1">\n                    </in-place-editor>\n                </div>\n                \x3c!-- /ko --\x3e\n\n                \x3c!-- ko if: isReadonly() && location() || !isReadonly() --\x3e\n                <div class="controls-row location-input">\n                    <in-place-editor params="value: location,\n                                             placeholder: TR(\'calendar.Location\', \'Location\'),\n                                             disabled: isReadonly,\n                                             tabindex: view() === \'main\' ? 1 : -1"\n                                     class="location">\n                    </in-place-editor>\n                    <a class="map-link" tabindex="-1" data-bind="visible: location, attr: { href: locationUrl }" target="_blank" data-i18n="calendar.LocationMapLink">map</a>\n                </div>\n                \x3c!-- /ko --\x3e\n                \x3c!-- ko ifnot: isReadonly() --\x3e\n                <div class="controls-row vertically-centered">\n                    <button data-bind="checkbox: allDayEvent, disable: isReadonly, attr: { tabindex: view() === \'main\' ? 1 : -1 }"></button>\n                    <span class="checkbox-label" data-i18n="calendar.AllDayEvent" data-bind="click: isReadonly() ? null : toggleAllDay">All day event</span>\n                </div>\n                \x3c!-- /ko --\x3e\n\n                <div class="controls-row">\n                    <table class="time-selection">\n                        <tr class="time-selection--from">\n                            <td>\n                                <label data-i18n="calendar.FromColon">Starts:</label>\n                            </td>\n                            <td class="date-selector">\n                                <one-date-selector params="date: startDate, disabled: isReadonly, tabindex: view() === \'main\' ? 1 : -1"></one-date-selector>\n                            </td>\n                            <td class="time-selector" data-bind="visible: !allDayEvent()">\n                                <one-time-selector params="date: startDate, disabled: isReadonly() || allDayEvent(), tabindex: view() === \'main\' ? 1 : -1"></one-time-selector>\n                            </td>\n                        </tr>\n                        <tr data-bind="visible: startDate.isNotValid">\n                            <td data-bind="attr: { colspan: allDayEvent() ? 2 : 3 }">\n                                <label class="validation-warning" data-i18n="calendar.InvalidDate">This is not a valid date.</label>\n                            </td>\n                        </tr>\n                        <tr class="time-selection--to">\n                            <td>\n                                <label data-i18n="calendar.ToColon">Ends:</label>\n                            </td>\n                            <td class="date-selector">\n                                <one-date-selector params="date: endDate, disabled: isReadonly, tabindex: view() === \'main\' ? 1 : -1"></one-date-selector>\n                            </td>\n                            <td class="time-selector" data-bind="visible: !allDayEvent()">\n                                <one-time-selector params="date: endDate, disabled: isReadonly() || allDayEvent(), tabindex: view() === \'main\' ? 1 : -1"></one-time-selector>\n                            </td>\n                        </tr>\n                        <tr data-bind="visible: endDate.isNotValid">\n                            <td data-bind="attr: { colspan: allDayEvent() ? 2 : 3 }">\n                                <label class="validation-warning" data-i18n="calendar.InvalidDate">This is not a valid date.</label>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n                <div class="controls-row">\n                    <div class="recurrence-controls-container">\n                        <div class="recurrence-toggle">\n                            \x3c!-- ko ifnot: isReadonly() --\x3e\n                            <button data-bind="checkbox: repeats, attr: { tabindex: view() === \'main\' ? 1 : -1 }"></button>\n                            \x3c!-- /ko --\x3e\n                            <span class="checkbox-label" data-i18n="calendar.RepeatsColon" data-bind="click: isReadonly() ? null : toggleRecurrence">Repeats:</span>\n                        </div>\n                        <div class="recurrence-description">\n                            <span data-bind="text: recurrenceDescription, attr: { \'data-title\': rruleTooltip }"></span>\n                        </div>\n                        \x3c!-- ko if: repeats() && !isReadonly() && !tooComplex() --\x3e\n                        <div class="recurrence-edit">\n                            <a href="javascript:void(0);" tabindex="-1" data-bind="click: showRecurrence" data-i18n="calendar.EditRecurrenceLink">Edit</a>\n                        </div>\n                        \x3c!-- /ko --\x3e\n                        \x3c!-- ko if: repeats() && !isReadonly() && tooComplex() --\x3e\n                        <div class="recurrence-edit">\n                            <a href="javascript:void(0);" tabindex="-1" data-bind="click: deleteRecurrence" data-i18n="calendar.Delete">Delete</a>\n                        </div>\n                        \x3c!-- /ko --\x3e\n                    </div>\n                </div>\n                \x3c!-- ko if: isSlideIn && repeats() && !isReadonly() --\x3e\n                <div class="recurrence-options-rows" data-bind="template: { name: \'recurrenceOptions\', if: isSlideIn }"></div>\n                \x3c!-- /ko --\x3e\n            </div>\n            <div class="buttons" data-bind="visible: !$root.embedded() && !isReadonly()">\n                <button class="call-to-action"\n                        data-bind="click: remove,\n                                   visible: isDeletable,\n                                   enable: isDeletable,\n                                   attr: { tabindex: view() === \'main\' ? 1 : -1 }"\n                        data-i18n="calendar.Delete">Delete</button>\n                <button class="call-to-action main-call-to-action"\n                        data-bind="click: save,\n                                   enable: isSavable,\n                                   attr: { tabindex: view() === \'main\' ? 1 : -1 }"\n                        data-i18n="calendar.Save">Save</button>\n            </div>\n        </div>\n        <div class="dialog-view dialog-scope-selector">\n            <one-dialog-header params="back: back, close: discard, tabindex: view() === \'scope-selector\' ? 1 : -1">\n                <span class=\'label-recurring\' data-i18n="calendar.ChangeRecurringEvent">Change recurring event</span>\n            </one-dialog-header>\n            <a href="#" tabindex="0" class="first-focus ignore-tab"></a>\n            <div class="absolute-centered scope-buttons" data-bind="foreach: scopes">\n                <div class="controls-row">\n                    <button class="call-to-action" data-bind="click: selectScope, text: label, attr: { tabindex: $parent.view() === \'scope-selector\' ? 1 : -1 }"></button>\n                </div>\n            </div>\n        </div>\n        <div class="dialog-view dialog-recurrence">\n            <one-dialog-header params="close: discard, back: back, tabindex: view() === \'recurrence\' ? 1 : -1">\n                <span data-i18n="calendar.RecurrenceTitle">Repeat</span>\n            </one-dialog-header>\n            <a href="#" tabindex="0" class="first-focus ignore-tab"></a>\n            \x3c!-- ko notif: isSlideIn --\x3e\n            <div class="recurrence-options-rows" data-bind="template: { name: \'recurrenceOptions\', if: !isSlideIn }"></div>\n            \x3c!-- /ko --\x3e\n            <div class="buttons layout bottom">\n                <button class="call-to-action main-call-to-action"\n                        data-bind="click: back,\n                                   attr: { tabindex: view() === \'recurrence\' ? 1 : -1 }"\n                        data-i18n="calendar.OkButton">Ok</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="layout loading-overlay" data-bind="visible: isProcessing"><div></div></div>\n\n<script type="text/html" id="calendarSelectorTemplate">\n    <ul class="popupDropdown dropdown-list" data-bind="foreach: calendars">\n        <li class="dropdown-item calendar-dropdown-item" data-bind="click: $parent.selectCalendar">\n            <button data-bind="css: { checked: false }, style: { backgroundColor: darkBackgroundColor }" class="calendar-checkbox"></button>\n            <span data-bind="text: name"></span>\n        </li>\n    </ul>\n<\/script>\n'
    }), module.exports;
}), function() {
    (0, System.amdDefine)("calendar/components/newEvent/newEvent.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/components/newEvent/NewEventViewModel.js", "calendar/components/newEvent/newEvent.ko", "calendar/dialogs/event/eventDialog.ko" ], function(ko, NewEventViewModel) {
        ko.components.register("one-new-event", {
            template: {
                element: "newEvent"
            },
            viewModel: {
                createViewModel: function(params, componentInfo) {
                    return new NewEventViewModel(params, componentInfo);
                }
            }
        });
    });
}(), System.registerDynamic("calendar/view/application.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "application",
        content: '<div class="notification" data-bind="notification: notification"></div>\n<div class="errormsg" data-bind="errormsg: errormsg"></div>\n\n<div class="layout container">\n    \x3c!-- onebar --\x3e\n    <div class="layout top" data-bind="template: \'onebar\'"></div>\n    <div class="layout center main">\n        <div class="layout left sidebar" data-bind="template: \'sidebar\'"></div>\n        <div class="layout center" data-bind="template: { name: mainView }"></div>\n    </div>\n</div>\n'
    }), module.exports;
}), System.registerDynamic("calendar/view/sidebar.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "sidebar",
        content: '<div class="sidebar-tab new-event-tab">\n    <one-new-event params="state: state, eventDialog: eventDialog"></one-new-event>\n</div>\n<div class="sidebar-scrollable">\n    <div class="sidebar-tab minicalendar">\n        <one-mini-calendar params="value: miniCalendar.dateRange,\n                                   currentDate: miniCalendar.currentDate,\n                                   hasEvents: miniCalendar.hasEvents,\n                                   rangeSelection: true,\n                                   onChange: miniCalendar.showRange"></one-mini-calendar>\n    </div>\n    <div class="sidebar-tab calendar-list" data-bind="template: \'calendarList\'"></div>\n    <div class="sidebar-tab calendar-list" data-bind="template: \'externalCalendarList\'"></div>\n</div>\n'
    }), module.exports;
}), System.registerDynamic("calendar/calendarList/calendarList.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "calendarList",
        content: '<div class="calendar-list-container">\n    <div data-bind="event: { click: calendarList.toggleExpansion },\n                    css: { open: !calendarList.listCollapsed() },\n                    attr: { \'data-title\': TR(\'calendar.calendarListHeadline\', \'Calendars\') }"\n         class="one-sidebar--list-item calendar-list-header">\n        <span class="headline" data-i18n="calendar.calendarListHeadline">Calendars</span>\n        <span class="expando"></span>\n    </div>\n    <one-new-calendar params="calendarDialog: calendarDialog"></one-new-calendar>\n    <ul data-bind="foreach: calendarList.calendars,\n                   css: {\n                       open: !calendarList.listCollapsed()\n                   }" class="calendar-list">\n        <li data-bind="isCalendarActive: { calendar: calendarInstance, css: \'active\' },\n                       attr: { \'data-title\': name }"\n            class="one-sidebar--list-item"\n            data-tooltip-placement="right">\n            <div data-bind="leftMouseDown: toggleEnabled" class="toggle-calendar">\n                <button type="button" data-bind="css: { checked: enabled }, style: style" class="calendar-checkbox"></button>\n            </div>\n            <span data-bind="leftMouseDown: toggleEnabled, text: name, css: { \'default-calendar\': isDefault }" class="calendar-name"></span>\n            <div class="edit-calendar">\n                <button class="settings-button" data-bind="calendarDialog: { calendar: calendarInstance, position: \'right\' }"></button>\n            </div>\n        </li>\n    </ul>\n    <div class="loading-container" data-bind="visible: calendarList.loadingCalendars">\n        <div class="layout loading-overlay"><div>\n    </div>\n</div>\n'
    }), module.exports;
}), System.registerDynamic("calendar/calendarList/externalCalendarList.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "externalCalendarList",
        content: '<div class="calendar-list-container">\n    <div data-bind="event: { click: calendarList.externalToggleExpansion },\n                    css: { open: !calendarList.externalListCollapsed() },\n                    attr: { \'data-title\': TR(\'calendar.externalCalendarListHeadline\', \'Subscribed calendars\') }"\n         class="one-sidebar--list-item calendar-list-header">\n        <span class="headline" data-i18n="calendar.externalCalendarListHeadline">Subscribed calendars</span>\n        <span class="expando"></span>\n    </div>\n    <one-new-external-calendar></one-new-external-calendar>\n    <ul data-bind="foreach: calendarList.externalCalendars,\n                   css: {\n                       open: !calendarList.externalListCollapsed()\n                   }" class="calendar-list">\n        <li data-bind="isCalendarActive: { calendar: calendarInstance, css: \'active\' },\n                       attr: { \'data-title\': name },\n                       css: { \'failed-loading\': calendarInstance.failedLoading }"\n            class="one-sidebar--list-item"\n            data-tooltip-placement="right">\n            <div data-bind="leftMouseDown: toggleEnabled" class="toggle-calendar">\n                <button type="button" data-bind="css: { checked: enabled }, style: style" class="calendar-checkbox"></button>\n            </div>\n            <span data-bind="leftMouseDown: toggleEnabled, text: name" class="calendar-name"></span>\n            <div class="edit-calendar">\n                <button class="settings-button" data-bind="calendarDialog: { calendar: calendarInstance, position: \'right\' }"></button>\n            </div>\n        </li>\n    </ul>\n    <div class="loading-container" data-bind="visible: calendarList.loadingExternalCalendars">\n        <div class="layout loading-overlay"><div>\n    </div>\n</div>\n'
    }), module.exports;
}), System.registerDynamic("calendar/agenda/agenda.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "agenda",
        content: '<div class="agenda-tab" data-bind="with: agendaView">\n    <div class="agenda-header">\n        <div class="headline-container">\n            <h2 class="agenda-label">\n                <span data-i18n="calendar.Agenda">Agenda</span>\n                <span class="agenda-range-label" data-i18n="">\n                    <span data-i18n="">(</span>\n                    <span data-bind="formatDate: { value: startDate, format: \'EEEE\' }"></span>\n                    <span data-bind="formatDate: { value: startDate, formatId: \'Md\' } "></span>\n                    &nbsp;-&nbsp;\n                    <span data-bind="formatDate: { value: lastAgendaDay, formatId: \'Md\' } "></span>\n                    <span data-i18n="">)</span>\n                </span>\n            </h2>\n            <div class="agenda-header-right" data-bind="visible: showCalendarLink">\n                <a href="/calendar" data-i18n="calendar.agenda.GoToCalendar" data-bind="click: goToCalendar">Go to calendar</a>\n            </div>\n        </div>\n        <div data-bind="visible: slideIn" class="calendar-list">\n            <one-calendar-list-drop-down\n                params="state: state,\n                        actionExecutor: actionExecutor,\n                        errorHandler: errorHandler">\n            </one-calendar-list-drop-down>\n        </div>\n    </div>\n    <div class="agenda-days" data-bind="css: { \'slide-in-agenda\': slideIn }">\n        <ul data-bind="foreach: days">\n            <li class="agenda-day">\n                <h3 class="agenda-date-label" data-i18n="">\n                    <span class="day" data-bind="formatDate: { value: date, format: \'dd\' } "></span>\n                    <span class="month" data-bind="formatDate: { value: date, format: \'MMMM\' }"></span>\n                    &nbsp;-&nbsp;\n                    <span class="week-day" data-bind="formatDate: { value: date, format: \'EEEE\' }"></span>\n                </h3>\n                <ul class="agenda-events" data-bind="foreach: eventInstances">\n                    <li class="agenda-item" data-bind="style: { color: eventInstance.event.calendar.color }, eventDialog: { eventInstance: eventInstance, position: $root.embedded() ? \'right\' : \'left\' }">\n                        <div class="agenda-item-date" data-i18n="">\n                            \x3c!-- ko if: allDay --\x3e\n                            <span data-i18n="calendar.AllDay">All day</span>\n                            \x3c!-- /ko --\x3e\n                            \x3c!-- ko ifnot: allDay --\x3e\n                            <span data-bind="formatDate: { value: startDate.convertToZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>&nbsp;-&nbsp;<span data-bind="formatDate: { value: endDate.convertToZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n                            \x3c!-- /ko --\x3e\n                        </div>\n                        <div class="agenda-item-summary" data-bind="text: eventInstance.summary"></div>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n        \x3c!-- ko if: canLoadMore() && !slideIn --\x3e\n        <button class="agenda-load-more" data-bind="click: loadMore" data-i18n="calendar.LoadMore">Load more</button>\n        \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- ko if: canLoadMore() && slideIn --\x3e\n    <div class="agenda-load-more-container">\n        <button class="agenda-load-more" data-bind="click: loadMore" data-i18n="calendar.LoadMore">Load more</button>\n    </div>\n    \x3c!-- /ko --\x3e\n</div>\n'
    }), module.exports;
}), System.registerDynamic("calendar/days/days.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "days",
        content: '<div class="layout days-view" data-bind="with: daysView">\n    <div class="layout top content-toolbar one-toolbar-style">\n        <div class="layout left navigation">\n            <div class="date-container" data-bind="with: dateRange(), visible: $root.showDate">\n                \x3c!-- ko if: days === 1 --\x3e\n                <div class="month-year-label">\n                    <span data-bind="formatDate: { value: from, format: \'MMMM d, yyyy\' }"></span>\n                </div>\n                \x3c!-- /ko --\x3e\n                \x3c!-- ko if: days > 1 && days < 7 --\x3e\n                    \x3c!-- ko if: from.month === to.month --\x3e\n                    <div class="month-year-label">\n                        <span data-bind="formatDate: { value: from, format: \'d - \' }"></span>\n                        <span data-bind="formatDate: { value: to.dayBefore(), format: \'d\' }"></span>\n                        <span data-bind="formatDate: { value: from, format: \'MMMM y\' }"></span>\n                    </div>\n                    \x3c!-- /ko --\x3e\n                    \x3c!-- ko ifnot: from.month === to.month --\x3e\n                    <div class="month-year-label">\n                        <span data-bind="formatDate: { value: from, format: \'MMMM d, yyyy - \' }"></span>\n                        <span data-bind="formatDate: { value: to.dayBefore(), format: \'MMMM d, yyyy\' }"></span>\n                    </div>\n                    \x3c!-- /ko --\x3e\n                \x3c!-- /ko --\x3e\n                \x3c!-- ko if: days === 7 --\x3e\n                    \x3c!-- ko if: $parent.isSameWeek() --\x3e\n                    <div class="month-year-label">\n                        <span data-i18n="calendar.Week">Week</span>\n                        <span data-bind="text: $parent.weekNumber()"></span>\n                        <span data-bind="formatDate: { value: from, format: \' - MMMM y\' }"></span>\n                    </div>\n                    \x3c!-- /ko --\x3e\n                    \x3c!-- ko ifnot: $parent.isSameWeek() --\x3e\n                    <div class="month-year-label">\n                        <span data-bind="formatDate: { value: from, format: \'MMMM d, yyyy - \' }"></span>\n                        <span data-bind="formatDate: { value: to.dayBefore(), format: \'MMMM d, yyyy\' }"></span>\n                    </div>\n                    \x3c!-- /ko --\x3e\n                \x3c!-- /ko --\x3e\n            </div>\n        </div>\n        <one-navigation params="showNavigation: $root.showNavigation,\n                                showTabs: $root.showTabs,\n                                activeField: activeField,\n                                showToday: showToday.bind($data),\n                                showPrevious: showPrevious.bind($data),\n                                showNext: showNext.bind($data),\n                                showDayView: showDayView.bind($data),\n                                showWeekView: showWeekView.bind($data),\n                                showMonthView: showMonthView.bind($data),\n                                showAgendaView: showAgendaView.bind($data)" class="layout right">\n        </one-navigation>\n    </div>\n    <div class="layout center days-view-calendar" data-bind="afterRender: afterRender">\n        <div data-bind="style: { height: headerHeight() + \'px\' },\n                        dropZone: { accepts: [\'all-day-event\', \'new-event\'], drop: dropEvent, dragOver: dragOver },\n                        dragZone: { name: \'new-event\', dragStart: dragStartHeader, element: null, dragDistance: 5 },\n                        event: { click: createAllDayEvent }" class="header">\n            <table cellspacing="0" cellpadding="0">\n                <thead>\n                    <tr>\n                        <th class="hour-label-column"></th>\n                        \x3c!-- ko foreach: days --\x3e\n                        <th class="day-label" data-bind="css: css">\n                            <span class="day" data-bind="formatDate: { value: date, format: \'dd\' }"></span>\n                            <span class="week-day" data-bind="formatDate: { value: date, format: \'EEEE\' }"></span>\n                            <span class="tiny-week-day" data-bind="text: inter.calendars.gregorian.dayNames.format.narrow[date.dayOfWeek() - 1]"></span>\n                        </th>\n                        \x3c!-- /ko --\x3e\n                        <th class="scrollbar-column"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \x3c!-- ko foreach: allDayEventRows --\x3e\n                    <tr>\n                        <td class="hour-label-column"></td>\n                        \x3c!-- ko foreach: $data --\x3e\n                        <td class="days-all-day-event-cell" data-bind="css: css">\n                            \x3c!-- ko if: $data.eventInstance --\x3e\n                            <div class="days-all-day-event" data-bind="dragZone: { name: \'all-day-event\', dragDistance: 5, element: null, dragStart: dragStart, dragEnd: dragEnd, disabled: eventInstance.isReadonly() },\n                                            eventDialog: { eventInstance: eventInstance, position: \'bottom\' },\n                                            style: style,\n                                            css: css">\n                                \x3c!-- ko ifnot: eventInstance.isReadonly() --\x3e\n                                <div class="event-resize-handle left" data-bind="dragZone: { name: \'all-day-event\', dragDistance: 0, element: null, dragStart: dragStart, dragEnd: dragEnd }"></div>\n                                \x3c!-- /ko --\x3e\n                                <div class="all-day-event-arrow left" data-bind="style: { borderRightColor: style.backgroundColor }"></div>\n                                <div class="all-day-event-label">\n                                    \x3c!-- ko ifnot: eventInstance.startDate.isDate || eventInstance.endDate.isDate --\x3e\n                                    <div class="date-label" data-i18n="">\n                                        <span data-bind="formatDate: { value: eventInstance.startDateAsZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>&nbsp;-&nbsp;<span data-bind="formatDate: { value: eventInstance.endDateAsZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n                                    </div>\n                                    \x3c!-- /ko --\x3e\n                                    <span class="text-label" data-bind="text: eventInstance.summary || TR(\'calendar.NoSubject\', \'No subject\')"></span>\n                                </div>\n                                <div class="all-day-event-arrow right" data-bind="style: { borderLeftColor: style.backgroundColor }"></div>\n                                \x3c!-- ko ifnot: eventInstance.isReadonly() --\x3e\n                                <div class="event-resize-handle right" data-bind="dragZone: { name: \'all-day-event\', dragDistance: 0, element: null, dragStart: dragStart, dragEnd: dragEnd }"></div>\n                                \x3c!-- /ko --\x3e\n                            </div>\n                            \x3c!-- /ko --\x3e\n                        </td>\n                        \x3c!-- /ko --\x3e\n                        <td class="scrollbar-column"></td>\n                    </tr>\n                    \x3c!-- /ko --\x3e\n\n                    <tr>\n                        <td class="hour-label-column"></td>\n                        \x3c!-- ko foreach: allDayEventsPrDay --\x3e\n                        <td data-bind="css: css">\n                            \x3c!-- ko with: draggedEvent --\x3e\n                            <div class="days-all-day-event dragging" data-bind="style: style, css: css, eventDialog: { eventInstance: eventInstance, position: \'bottom\', openTrigger: dropped }">\n                                <div class="all-day-event-arrow left" data-bind="style: { borderRightColor: style.backgroundColor }"></div>\n                                <div class="all-day-event-label">\n                                    \x3c!-- ko if: startedAsAllDayEvent && !(eventInstance.startDate.isDate || eventInstance.endDate.isDate) --\x3e\n                                    <div class="date-label" data-i18n="">\n                                        <span data-bind="formatDate: { value: eventInstance.startDateAsZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n                                        &nbsp;-&nbsp;\n                                        <span data-bind="formatDate: { value: eventInstance.endDateAsZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n                                    </div>\n                                    \x3c!-- /ko --\x3e\n                                    <span class="text-label" data-bind="text: eventInstance.summary || TR(\'calendar.NoSubject\', \'No subject\')"></span>\n                                </div>\n                                <div class="all-day-event-arrow right" data-bind="style: { borderLeftColor: style.backgroundColor }"></div>\n                            </div>\n                            \x3c!-- /ko --\x3e\n                            \x3c!-- ko if: !draggedEvent() && aboveLimit > 0 --\x3e\n                                \x3c!-- ko ifnot: $parent.showAllEvents --\x3e\n                                <div class="days-all-more-or-less-events" data-bind="click: $parent.showMore.bind($parent)" data-i18n="calendar.More">+<span data-bind="text: aboveLimit">0</span> more</div>\n                                \x3c!-- /ko --\x3e\n                                \x3c!-- ko if: $parent.showAllEvents --\x3e\n                                <div class="days-all-more-or-less-events" data-bind="click: $parent.showLess.bind($parent)" data-i18n="calendar.ShowLess">Show less</div>\n                                \x3c!-- /ko --\x3e\n                            \x3c!-- /ko --\x3e\n                        </td>\n                        \x3c!-- /ko --\x3e\n                        <td class="scrollbar-column"></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div data-bind="style: { top: headerHeight() + \'px\' },\n                        scrollableOnDragOver: { name: \'event\', delay: 500 },\n                        dropZone: { accepts: [\'event\', \'new-event\', \'all-day-event\'], drop: dropEvent, dragOver: dragOver },\n                        dragZone: { name: \'new-event\', dragStart: dragStartBody, element: null, dragDistance: 5 }" class="body">\n            \x3c!-- ko with: currentTimeIndicator --\x3e\n                <div class="current-time-indicator-label hour-label-column" data-bind="style: { top: top + \'px\' }, formatDate: { value: time, formatId: \'shortTime\' }"></div>\n                <div class="current-time-indicator-line" data-bind="style: { top: top + \'px\' }"></div>\n                \x3c!-- ko if: days > 1 --\x3e\n                    <div class="current-time-indicator-dot" data-bind="style: { top: (top - 4) + \'px\', left: left + \'px\' }"></div>\n                \x3c!-- /ko --\x3e\n            \x3c!-- /ko  --\x3e\n            <table class="events" cellspacing="0" cellpadding="0">\n                <tr>\n                    <td class="hour-label-column"></td>\n                    \x3c!-- ko foreach: days --\x3e\n                    <td class="day-column" data-bind="template: \'day\', css: css"></td>\n                    \x3c!-- /ko  --\x3e\n                </tr>\n            </table>\n            <table class="hours" cellspacing="0" cellpadding="0">\n                <tr>\n                    <td class="hour-label-column" data-bind="template: \'hours\'"></td>\n                    \x3c!-- ko foreach: dayColumns --\x3e\n                    <td class="day-column" data-bind="css: css, forRange: 24, click: $parent.dayClick">\n                        <div data-bind="css: \'hour-\' + $data" class="hour">\n                          <div class="half-hour half-hour-0"></div>\n                          <div class="half-hour half-hour-1"></div>\n                        </div>\n                    </td>\n                    \x3c!-- /ko  --\x3e\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>\n'
    }), module.exports;
}), System.registerDynamic("calendar/days/day.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "day",
        content: '\x3c!-- ko foreach: $data.eventInstances --\x3e\n    \x3c!-- ko if: separatorNeeded --\x3e\n    <div class="event-separator" data-bind="style: { top: \'calc(\' + style.top + \' - 1px)\', left: style.left, right: style.right }"></div>\n    \x3c!-- /ko --\x3e\n    <div data-bind="style: style, css: css, dragZone: { name: \'event\', dragDistance: 5, element: null, dragStart: $parent.dragStart, dragEnd: $parent.dragEnd, disabled: eventInstance.isReadonly() }, eventDialog: { eventInstance: eventInstance }" class="days-event">\n        \x3c!-- ko ifnot: eventInstance.isReadonly() --\x3e\n        <div class="event-resize-handle top" data-bind="dragZone: { name: \'event\', dragDistance: 0, element: null, dragStart: $parent.dragStart, dragEnd: $parent.dragEnd }"></div>\n        \x3c!-- /ko --\x3e\n        <div class="days-event-content">\n            <div class="date-label" data-i18n="" data-bind="visible: firstSegment">\n                <span data-bind="formatDate: { value: eventInstance.startDateAsZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n                &nbsp;-&nbsp;\n                <span data-bind="formatDate: { value: eventInstance.endDateAsZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n            </div>\n            <span class="summary-label" data-bind="text: eventInstance.summary || TR(\'calendar.NoSubject\', \'No subject\')"></span>\n        </div>\n        \x3c!-- ko ifnot: eventInstance.isReadonly() --\x3e\n        <div class="event-resize-handle bottom" data-bind="dragZone: { name: \'event\', dragDistance: 0, element: null, dragStart: $parent.dragStart, dragEnd: $parent.dragEnd }"></div>\n        \x3c!-- /ko --\x3e\n    </div>\n\x3c!-- /ko --\x3e\n\n\x3c!-- ko with: $parent.draggedEventByDay(date) --\x3e\n    \x3c!-- ko ifnot: allDayEvent --\x3e\n    <div class="days-event dragging" data-bind="style: style, css: css, eventDialog: { eventInstance: eventInstance, openTrigger: dropped }">\n        <div class="date-label" data-i18n="" data-bind="visible: firstSegment">\n            <span data-bind="formatDate: { value: startDate().convertToZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n            &nbsp;-&nbsp;\n            <span data-bind="formatDate: { value: endDate().convertToZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n        </div>\n        <span data-bind="text: summary || TR(\'calendar.NoSubject\', \'No subject\')"></span>\n    </div>\n    \x3c!-- /ko --\x3e\n\x3c!-- /ko --\x3e\n'
    }), module.exports;
}), System.registerDynamic("calendar/days/hours.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "hours",
        content: '\x3c!-- ko forRange: 23 --\x3e\n<div class="hour-label" data-bind="formatDate: { value: new Date(2000, 0, 1, ($data + 1), 0, 0, 0), formatId: \'shortTime\' },\n                                   style: { visibility: $parent.hourVisibility($data + 1) }"></div>\n\x3c!-- /ko --\x3e\n'
    }), module.exports;
}), System.registerDynamic("calendar/weeks/weeks.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "weeks",
        content: '<div class="layout weeks-view" data-bind="with: weeksView, css: { \'embedded\': $root.embedded }">\n    <div class="layout top content-toolbar one-toolbar-style">\n        <div class="layout left navigation">\n            <div class="date-container" data-bind="with: dateRange(), visible: $root.showDate">\n                \x3c!-- ko if: from.day === 1 && to.dayBefore().day === from.endOfMonth().day --\x3e\n                <div class="month-year-label">\n                    <span data-bind="formatDate: { value: from, format: \'MMMM y\' }"></span>\n                </div>\n                \x3c!-- /ko --\x3e\n                \x3c!-- ko ifnot: from.day === 1 && to.dayBefore().day === from.endOfMonth().day --\x3e\n                <div class="month-year-label">\n                    <span data-bind="formatDate: { value: from, format: \'MMMM d, yyyy - \' }"></span>\n                    <span data-bind="formatDate: { value: to.dayBefore(), format: \'MMMM d, yyyy\' }"></span>\n                </div>\n                \x3c!-- /ko --\x3e\n            </div>\n        </div>\n        <one-navigation params="showNavigation: $root.showNavigation,\n                                showTabs: $root.showTabs,\n                                activeField: \'month\',\n                                showToday: showToday.bind($data),\n                                showPrevious: showPrevious.bind($data),\n                                showNext: showNext.bind($data),\n                                showDayView: showDayView.bind($data),\n                                showWeekView: showWeekView.bind($data),\n                                showMonthView: showMonthView.bind($data),\n                                showAgendaView: showAgendaView.bind($data)" class="layout right">\n        </one-navigation>\n    </div>\n    <div class="layout center week-view-container">\n        <div class="layout top weeks-view-labels">\n            <div class="week header" data-bind="foreach: firstWeekDates">\n                <span class="week-day day" data-bind="formatDate: { value: $data, format: \'EEEE\' }"></span>\n            </div>\n        </div>\n        <div class="layout center weeks-view-calendar" data-bind="foreach: weeks, afterRender: afterRender">\n            <div\n                class="week"\n                data-bind="style: { height: height },\n                           css: { highlightDragOver: !$parent.draggedEvent() },\n                           dragZone: { name: \'new-event\', element: null, dragDistance: 5, dragStart: $parent.dragStart }"\n            >\n                \x3c!-- ko foreach: allDayEvents --\x3e\n                <div class="weeks-view-all-day-event"\n                     data-bind="dragZone: { name: \'event\', element: null, dragDistance: 5, dragStart: dragStart, dragEnd: dragEnd, disabled: eventInstance.isReadonly() },\n                                eventDialog: { eventInstance: eventInstance },\n                                style: style, css: css">\n                    \x3c!-- ko ifnot: eventInstance.isReadonly() --\x3e\n                    <div class="event-resize-handle left" data-bind="dragZone: { name: \'event\', dragDistance: 0, element: null, dragStart: dragStart, dragEnd: dragEnd }"></div>\n                    \x3c!-- /ko --\x3e\n                    <div class="all-day-event-arrow left" data-bind="style: { borderRightColor: style.backgroundColor }"></div>\n                    <div class="all-day-event-label">\n                        \x3c!-- ko ifnot: eventInstance.startDate.isDate || eventInstance.endDate.isDate --\x3e\n                        <div class="date-label" data-i18n="">\n                            <span data-bind="formatDate: { value: eventInstance.startDateAsZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>&nbsp;-&nbsp;<span data-bind="formatDate: { value: eventInstance.endDateAsZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n                        </div>\n                        \x3c!-- /ko --\x3e\n                        <span class="text-label" data-bind="text: eventInstance.summary || TR(\'calendar.NoSubject\', \'No subject\')"></span>\n                    </div>\n                    <div class="all-day-event-arrow right" data-bind="style: { borderLeftColor: style.backgroundColor }"></div>\n                    \x3c!-- ko ifnot: eventInstance.isReadonly() --\x3e\n                    <div class="event-resize-handle right" data-bind="dragZone: { name: \'event\', dragDistance: 0, element: null, dragStart: dragStart, dragEnd: dragEnd }"></div>\n                    \x3c!-- /ko --\x3e\n                </div>\n                \x3c!-- /ko --\x3e\n                \x3c!-- ko with: $data.draggedEventSegment --\x3e\n                <div class="weeks-view-all-day-event dragging"\n                     data-bind="style: style, css: css, eventDialog: { eventInstance: eventInstance, openTrigger: dropped }">\n                    <div class="all-day-event-arrow left" data-bind="style: { borderRightColor: style.backgroundColor }"></div>\n                    <div class="all-day-event-label">\n                        \x3c!-- ko ifnot: eventInstance.startDate.isDate || eventInstance.endDate.isDate --\x3e\n                        <div class="date-label" data-i18n="">\n                            <span data-bind="formatDate: { value: eventInstance.startDateAsZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>&nbsp;-&nbsp;<span data-bind="formatDate: { value: eventInstance.endDateAsZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n                        </div>\n                        \x3c!-- /ko --\x3e\n                        <span class="text-label" data-bind="text: eventInstance.summary || TR(\'calendar.NoSubject\', \'No subject\')"></span>\n                    </div>\n                    <div class="all-day-event-arrow right" data-bind="style: { borderLeftColor: style.backgroundColor }"></div>\n                </div>\n                \x3c!-- /ko --\x3e\n                <div class="days" data-bind="foreach: days">\n                    <div class="day"\n                         data-bind="css: {\n                                      past: pastPresentFuture === \'past\',\n                                      present: pastPresentFuture === \'present\',\n                                      future: pastPresentFuture === \'future\',\n                                      \'outside-range\': outsideRange,\n                                      weekend: isWeekend\n                                    },\n                                    dropZone: { accepts: [\'event\', \'new-event\'], drop: drop, dragOver: dragOver },\n                                    event: { click: click }">\n                        <h3 class="week-day-date-heading">\n                            <span class="week-day-date-label" data-bind="formatDate: { value: date, format: \'dd\' } "></span>\n                            \x3c!-- ko if: date.day === 1 --\x3e\n                            <span class="week-day-month-label" data-bind="formatDate: { value: date, format: \'MMMM\' } "></span>\n                            \x3c!-- /ko --\x3e\n                        </h3>\n                        <ul class="week-day-events" data-bind="foreach: eventInstances, style: { marginTop: allDayEventMargin }">\n                            <li class="week-day-event"\n                                data-bind="style: { color: eventInstance.event.calendar.color },\n                                           css: {\n                                               hidden: eventInstance.state.hidden,\n                                               readonly: eventInstance.isReadonly()\n                                           },\n                                           eventDialog: { eventInstance: eventInstance, openTrigger: $data.dropped },\n                                           dragZone: { name: \'event\', element: \'dragged-event-template\', dragDistance: 5, dragStart: $parent.dragStart, dragEnd: $parent.dragEnd, disabled: eventInstance.isReadonly() }">\n                                <span class="week-day-event-time" data-bind="formatDate: { value: startDate.convertToZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n                                <span class="week-day-event-label" data-bind="text: eventInstance.summary || TR(\'calendar.NoSubject\', \'No subject\')"></span>\n                            </li>\n                        </ul>\n                        \x3c!-- ko if: hiddenEvents --\x3e\n                        <div class="week-day-more-events" data-bind="click: showMore">\n                            <div class="week-day-more-events-icon"></div>\n                        </div>\n                        \x3c!-- /ko --\x3e\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <script type="text/html" id="dragged-event-template">\n        <div class="drag-label dragged-event" data-bind="style: { color: eventInstance.event.calendar.color }">\n            <span class="week-day-event-time" data-bind="formatDate: { value: startDate.convertToZone($root.state.timeZone()), formatId: \'shortTime\' }"></span>\n            <span class="week-day-event-label" data-bind="text: eventInstance.summary || TR(\'calendar.NoSubject\', \'No subject\')"></span>\n        </div>\n    <\/script>\n</div>\n'
    }), module.exports;
}), System.registerDynamic("onebar/onebar.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "onebar",
        content: '<div class="one-bar" data-bind="unselectable: true">\n    <div class="one-bar--logo"><a class="one-bar--logo--link" href="/"></a></div>\n    <ul class="one-bar--controls">\n        \x3c!-- ko if: state.preferences.EAS().available && !state.preferences.EAS().currentSubscription --\x3e\n        <li class="one-bar--controls--item special-offer-button">\n            <a data-bind="attr: { href: \'/settings/\' + state.user() + \'/eas\' }" data-i18n="onebar.ExchangeActiveSync" class="one-bar--controls--item--link">Sync your account</a>\n        </li>\n        \x3c!-- /ko --\x3e\n        <li class="one-bar--user one-bar--controls--item"><span data-bind="visible: state.displayUser" class="one-bar--user--avatar"></span><span data-bind="text: state.displayUser"><span data-i18n="onebar.NotLoggedIn">Not logged in</span></span></li>\n        <li class="localeSelector btn-group dropdown one-bar--controls--item" data-bind="dropdownTemplate: { template: \'onebarLanguageDropdown\', positioning: { horizontal: \'inside-right\' } }">\n            <span class="dropdown-toggle">\n                <span data-bind="text: localeSwitcher.getLanguage($root.currentLocaleId).displayName"></span>\n                <b class="caret"></b>\n            </span>\n        </li>\n        <li class="one-bar--controls--item"><a href="#" data-bind="click: logout, trackClick: [\'action\', \'log out\']" class="one-bar--controls--item--link"><span data-i18n="onebar.LogOut">Log out</span></a></li>\n    </ul>\n    <ul class="one-bar--applications">\n        <li data-bind="css: { active: application === \'webmail\' }" class="one-bar--applications--item"><a href="/" data-i18n="onebar.Mail" class="one-bar--applications--item--link">Mail</a></li>\n        <li data-bind="css: { active: application === \'calendar\' }" class="one-bar--applications--item"><a href="/calendar" data-i18n="onebar.Calendar" class="one-bar--applications--item--link">Calendar</a></li>\n        <li data-bind="css: { active: application === \'contacts\' }" class="one-bar--applications--item"><a href="/contacts" data-i18n="onebar.Contacts" class="one-bar--applications--item--link">Contacts</a></li>\n        <li data-bind="css: { active: application === \'settings\' }" class="one-bar--applications--item"><a href="/settings" data-i18n="onebar.Settings" class="one-bar--applications--item--link">Settings</a></li>\n    </ul>\n    <script id="onebarLanguageDropdown" type="text/html">\n        <ul class="popupDropdown one-bar--locale-selector" data-bind="foreach: localeSwitcher.localeInfos">\n            <li class="dropdown-item" data-bind="click: function () { $root.localeSwitcher.switchLocale(id) }">\n                <span data-bind="text: displayName"></span>\n                <span data-bind="visible: id === $root.currentLocaleId"> <i class="icon-checkmark"></i></span>\n                <span data-bind="attr: {\'class\': \'flags flags-\' + id}"></span>\n            </li>\n        </ul>\n    <\/script>\n</div>\n'
    }), module.exports;
}), System.registerDynamic("calendar/agenda/agendaPage.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "agendaPage",
        content: '<div class="layout agenda-view">\n    <div class="layout top content-toolbar one-toolbar-style" data-bind="with: agendaView">\n        <div class="layout left" data-bind="with: dateRange(), visible: $root.showDate">\n            <div class="month-year-label">\n                <span data-bind="formatDate: { value: from, format: \'MMMM d, yyyy - \' }"></span>\n                <span data-bind="formatDate: { value: to.dayBefore(), format: \'MMMM d, yyyy\' }"></span>\n            </div>\n        </div>\n\n        <one-navigation params="showNavigation: false,\n                                showTabs: $root.showTabs,\n                                activeField: \'agenda\',\n                                showDayView: showDayView.bind($data),\n                                showWeekView: showWeekView.bind($data),\n                                showMonthView: showMonthView.bind($data),\n                                showAgendaView: showAgendaView.bind($data)" class="layout right">\n        </one-navigation>\n    </div>\n    <div class="layout center agenda-view-calendar">\n        <div data-bind="template: \'agenda\'"></div>\n    </div>\n</div>\n'
    }), module.exports;
}), System.registerDynamic("3rdparty/one-theme/scaffolding.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("3rdparty/one-theme/3rdparty/bootstrap/less/type.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("3rdparty/one-theme/forms.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("3rdparty/one-theme/dropdowns.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("3rdparty/one-theme/alerts.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("3rdparty/one-theme/onebar.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("3rdparty/one-theme/toolbar.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("3rdparty/one-theme/buttons.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("3rdparty/one-theme/tooltip.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("onebar/onebar.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("theme/less/errormsg.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("theme/less/notification.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("theme/less/loadingScreen.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("theme/less/toolbar.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("theme/less/theme.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("theme/less/popup-dropdown.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("theme/less/knockout.autocomplete.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("theme/less/icons.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("components/inPlaceEditor/inPlaceEditor.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/view/application.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/view/general.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/agenda/agenda.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("theme/less/dragdrop.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/view/allDayEvents.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/days/days.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/weeks/weeks.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/calendarList/calendarList.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/view/sidebar.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/dialogs/dialogs.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/dialogs/event/eventDialog.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/dialogs/calendar/calendarDialog.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/dialogs/newExternalCalendar/newExternalCalendarDialog.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/components/dateInput/dateInput.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/components/dateSelector/dateSelector.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/components/timeSelector/timeSelector.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/components/miniCalendar/miniCalendar.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/components/newEvent/newEvent.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/components/newCalendar/newCalendar.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/components/newExternalCalendar/newExternalCalendar.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/components/loading/loading.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/components/dialogHeader/dialogHeader.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), System.registerDynamic("calendar/components/navigation/navigation.less", [], !1, function($__require, $__exports, $__module) {
    return System.get("@@global-helpers").prepareGlobal($__module.id, null, null)();
}), function() {
    (0, System.amdDefine)("calendar/model/Calendars.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "calendar/Sort.js" ], function(ko, util, Sort) {
        function Calendars() {
            var that = this;
            that.byId = ko.observable({}), that.version = ko.computed(function() {
                return Object.keys(that.byId()).map(function(key) {
                    return that.get(key).version();
                }).join(",");
            }).extend({
                pause: !1
            }), that.busy = ko.observable(!1);
        }
        return Calendars.prototype.hasCalendar = function(id) {
            return id in this.byId.peek();
        }, Calendars.prototype.add = function(calendar) {
            var byId = this.byId.peek();
            byId[calendar.id] = calendar, this.byId(byId);
        }, Calendars.prototype.get = function(id) {
            return this.byId.peek()[id];
        }, Calendars.prototype.remove = function(calendar) {
            var byId = this.byId.peek();
            delete byId[calendar.id], this.byId(byId);
        }, Calendars.prototype.all = function() {
            var that = this;
            return Object.keys(that.byId.peek()).map(function(key) {
                return that.get(key);
            });
        }, Calendars.prototype.hasEventInstances = function(startDate, endDate) {
            return this.all().filter(function(calendar) {
                return calendar.enabled();
            }).some(function(calendar) {
                return calendar.hasEventInstances(startDate, endDate);
            });
        }, Calendars.prototype.getEventInstances = function(startDate, endDate) {
            var result = [];
            return this.all().filter(function(calendar) {
                return calendar.enabled();
            }).forEach(function(calendar) {
                calendar.getEventInstances(startDate, endDate).forEach(function(eventInstance) {
                    result.push(eventInstance);
                });
            }), result;
        }, Calendars.prototype.getDefault = function() {
            var defaultCalendar;
            return this.all().some(function(calendar) {
                var isDefault = calendar.defaultCalendar();
                return isDefault && (defaultCalendar = calendar), isDefault;
            }), defaultCalendar;
        }, Calendars.prototype.getFirstVisible = function() {
            return Sort.calendars.byDefaultThenByName(this.all().filter(function(calendar) {
                return calendar.writable && calendar.enabled();
            }))[0];
        }, Calendars;
    });
}(), function() {
    (0, System.amdDefine)("common/model/Inbox.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/model/Folder.js" ], function(ko, Folder) {
        function Inbox() {
            var that = this;
            Folder.call(that, {
                id: "INBOX"
            }), that.iconClass = "icon-inbox", that.supportDelete = ko.computed(function() {
                return !1;
            }), that.collapsable = function() {
                return !1;
            };
        }
        return Inbox.prototype = Object.create(Folder.prototype), Inbox.prototype.isInbox = function() {
            return !0;
        }, Inbox.prototype.isDraftFolder = function() {
            return !1;
        }, Inbox.prototype.isSentFolder = function() {
            return !1;
        }, Inbox.prototype.isTrashFolder = function() {
            return !1;
        }, Inbox.prototype.isSpamFolder = function() {
            return !1;
        }, Inbox.prototype.supportCreateSubfolder = function() {
            return !1;
        }, Inbox.prototype.isOutgoingFolder = function() {
            return !1;
        }, Inbox.prototype.isSystemFolder = function() {
            return !0;
        }, Inbox.prototype.isCustomFolder = function() {
            return !1;
        }, Inbox;
    });
}(), function() {
    (0, System.amdDefine)("common/model/DraftFolder.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/model/Folder.js" ], function(ko, Folder) {
        function DraftFolder(inbox) {
            var that = this;
            Folder.call(that, {
                id: "INBOX.Drafts"
            }, inbox), that.iconClass = "icon-inbox-drafts", that.supportDelete = ko.computed(function() {
                return !1;
            });
        }
        return DraftFolder.prototype = Object.create(Folder.prototype), DraftFolder.prototype.isInbox = function() {
            return !1;
        }, DraftFolder.prototype.isDraftFolder = function() {
            return !0;
        }, DraftFolder.prototype.isSentFolder = function() {
            return !1;
        }, DraftFolder.prototype.isTrashFolder = function() {
            return !1;
        }, DraftFolder.prototype.isSpamFolder = function() {
            return !1;
        }, DraftFolder.prototype.isSystemFolder = function() {
            return !0;
        }, DraftFolder.prototype.isOutgoingFolder = function() {
            return !0;
        }, DraftFolder.prototype.isCustomFolder = function() {
            return !1;
        }, DraftFolder;
    });
}(), function() {
    (0, System.amdDefine)("common/model/SentFolder.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/model/Folder.js" ], function(ko, Folder) {
        function SentFolder(inbox) {
            var that = this;
            Folder.call(that, {
                id: "INBOX.Sent"
            }, inbox), that.iconClass = "icon-inbox-sent", that.supportDelete = ko.computed(function() {
                return !1;
            }), that.unsentCount = ko.observable(0), that.indicator = ko.pureComputed(function() {
                return that.unsentCount() ? inter.trQuantity(TR("mail.NumUnsent", {
                    one: "1 unsent",
                    other: "{0} unsent"
                }), that.unsentCount()) : "";
            });
        }
        return SentFolder.prototype = Object.create(Folder.prototype), SentFolder.prototype.isInbox = function() {
            return !1;
        }, SentFolder.prototype.isDraftFolder = function() {
            return !1;
        }, SentFolder.prototype.isSentFolder = function() {
            return !0;
        }, SentFolder.prototype.isTrashFolder = function() {
            return !1;
        }, SentFolder.prototype.isSpamFolder = function() {
            return !1;
        }, SentFolder.prototype.isOutgoingFolder = function() {
            return !0;
        }, SentFolder.prototype.isSystemFolder = function() {
            return !0;
        }, SentFolder.prototype.isCustomFolder = function() {
            return !1;
        }, SentFolder.prototype.supportResending = function() {
            return !0;
        }, SentFolder;
    });
}(), function() {
    (0, System.amdDefine)("common/model/TrashFolder.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/model/Folder.js" ], function(ko, Folder) {
        function TrashFolder(inbox) {
            var that = this;
            Folder.call(that, {
                id: "INBOX.Trash"
            }, inbox), that.iconClass = "icon-inbox-trash", that.supportDelete = ko.computed(function() {
                return !1;
            });
        }
        return TrashFolder.prototype = Object.create(Folder.prototype), TrashFolder.prototype.supportEmptyFolder = ko.computed(function() {
            return !0;
        }), TrashFolder.prototype.isInbox = function() {
            return !1;
        }, TrashFolder.prototype.isDraftFolder = function() {
            return !1;
        }, TrashFolder.prototype.isSentFolder = function() {
            return !1;
        }, TrashFolder.prototype.isTrashFolder = function() {
            return !0;
        }, TrashFolder.prototype.isSpamFolder = function() {
            return !1;
        }, TrashFolder.prototype.isSystemFolder = function() {
            return !0;
        }, TrashFolder.prototype.isOutgoingFolder = function() {
            return !1;
        }, TrashFolder.prototype.isCustomFolder = function() {
            return !1;
        }, TrashFolder;
    });
}(), function() {
    (0, System.amdDefine)("common/model/SpamFolder.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/model/Folder.js" ], function(ko, Folder) {
        function SpamFolder(inbox) {
            var that = this;
            Folder.call(that, {
                id: "INBOX.Spam"
            }, inbox), that.iconClass = "icon-inbox-spam", that.supportDelete = ko.computed(function() {
                return !1;
            });
        }
        return SpamFolder.prototype = Object.create(Folder.prototype), SpamFolder.prototype.supportMoveToTrash = function() {
            return !1;
        }, SpamFolder.prototype.supportSpamToTrash = ko.computed(function() {
            return !0;
        }), SpamFolder.prototype.isInbox = function() {
            return !1;
        }, SpamFolder.prototype.isDraftFolder = function() {
            return !1;
        }, SpamFolder.prototype.isSentFolder = function() {
            return !1;
        }, SpamFolder.prototype.isTrashFolder = function() {
            return !1;
        }, SpamFolder.prototype.isSpamFolder = function() {
            return !0;
        }, SpamFolder.prototype.isOutgoingFolder = function() {
            return !1;
        }, SpamFolder.prototype.isSystemFolder = function() {
            return !0;
        }, SpamFolder.prototype.isCustomFolder = function() {
            return !1;
        }, SpamFolder;
    });
}(), function() {
    (0, System.amdDefine)("common/model/FolderList.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "3rdparty/signals.js", "common/model/Folder.js", "common/model/Inbox.js", "common/model/DraftFolder.js", "common/model/SentFolder.js", "common/model/TrashFolder.js", "common/model/SpamFolder.js", "common/localeStringComparator.js" ], function(ko, signals, Folder, Inbox, DraftFolder, SentFolder, TrashFolder, SpamFolder, localeStringComparator) {
        function forEachFolder(folders, callback) {
            folders.sort(function(a, b) {
                return compare(a.translatedName().toLowerCase(), b.translatedName().toLowerCase());
            }), folders.forEach(function(folder) {
                callback(folder), forEachFolder(folder.children(), callback);
            });
        }
        function FolderList() {
            var that = this;
            that.defaults = [ "INBOX", "INBOX.Drafts", "INBOX.Sent", "INBOX.Trash", "INBOX.Spam" ], 
            that.inbox = new Inbox(), that.drafts = new DraftFolder(that.inbox), that.sent = new SentFolder(that.inbox), 
            that.trash = new TrashFolder(that.inbox), that.spam = new SpamFolder(that.inbox), 
            that.inbox.children([ that.drafts, that.sent, that.trash, that.spam ]), that.loading = ko.observable(!0), 
            that.dirty = !1, that.system = ko.pureComputed(function() {
                var systemRoots = that.inbox.children().filter(function(folder) {
                    return folder.isSystemFolder();
                }), items = [ that.inbox ];
                return systemRoots.forEach(function(folder) {
                    items.push(folder), forEachFolder(folder.children(), function(child) {
                        items.push(child);
                    });
                }), items;
            }), that.other = ko.pureComputed(function() {
                var items = [];
                return forEachFolder(that.inbox.children().filter(function(folder) {
                    return !folder.isSystemFolder();
                }), function(folder) {
                    items.push(folder);
                }), items;
            }), that.list = ko.pureComputed(function() {
                return that.system().concat(that.other());
            }), that.signals = {
                folderMoved: new Signal(),
                folderDeleted: new Signal(),
                folderEmptied: new Signal()
            };
        }
        var Signal = signals.Signal, compare = localeStringComparator;
        return FolderList.prototype.moveFolder = function(folder, destination) {
            if (folder.parent() !== destination) {
                var isSelected = folder.selected(), inbox = this.inbox;
                destination || (destination = inbox), folder.remove();
                var newId = (destination || inbox).id() + "." + folder.name();
                folder.changeIdRecursively(newId), folder.parent(destination), destination.children.push(folder), 
                this.signals.folderMoved.dispatch(folder, isSelected);
            }
        }, FolderList.prototype.emptyFolder = function(folder) {
            folder.dirty = !0, folder.children([]), folder.messages(0), folder.unseen(0), this.signals.folderEmptied.dispatch(folder);
        }, FolderList.prototype.deleteFolder = function(folder) {
            var isSelected = folder.selected(), parent = folder.parent();
            folder.remove(), folder.parent(null), this.signals.folderDeleted.dispatch(folder, isSelected, parent);
        }, FolderList.prototype.getById = function(folderId) {
            var foundFolder;
            return this.list().some(function(folder) {
                return folder.id() === folderId && (foundFolder = folder, !0);
            }), foundFolder || this.inbox;
        }, FolderList;
    });
}(), function() {
    (0, System.amdDefine)("calendar/model/State.js", [ "common/util.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/model/Calendars.js", "calendar/model/DateRange.js", "calendar/ical/Time.js", "calendar/ical/Duration.js", "3rdparty/insection.js", "3rdparty/purify.js", "common/model/FolderList.js" ], function(util, ko, Calendars, DateRange, Time, Duration, insection, purify, FolderList) {
        function State() {
            var that = this;
            that.user = ko.observable(null), that.displayUser = ko.computed(function() {
                return purify.emailIdn(that.user());
            }), that.calendars = new Calendars(), that.timeZone = ko.observable(null), that.cacheIndex = insection(), 
            that.folders = new FolderList(), that.showNewEvent = ko.observable(!1), that.blockRenderingView = ko.observable(!1), 
            that.preferences = {
                global: ko.observable({}),
                mail: ko.observable(null),
                calendar: ko.observable({}),
                busy: ko.observable(!1)
            }, that.GmtNotation = ko.pureComputed(function() {
                var time = that.getCurrentUTCDate();
                that.timeZone() && (time = time.convertToZone(that.timeZone()));
                var offset = Duration.fromSeconds(time.utcOffset()), offsetTime = util.leftPad(offset.hours, 2, "0");
                return 0 !== offset.minutes && (offsetTime += ":" + util.leftPad(offset.minutes, 2, "0")), 
                "GMT" + (offset.isNegative ? "-" : "+") + offsetTime;
            }), that.getCurrentUTCDate = function() {
                var now = new Date();
                return Time.fromJSDate(now, !0);
            }, that.now = ko.observable(that.getCurrentUTCDate()), that.currentDate = ko.computed(function() {
                return that.now().startOfDay();
            }), that.defaultDateRange = ko.computed(function() {
                var duration = Duration.fromString("P1W"), fromDate = that.currentDate().startOfWeek(), calendarSettings = that.preferences.calendar(), defaultView = calendarSettings && calendarSettings.defaultView;
                return "month" === defaultView ? new DateRange({
                    from: that.currentDate(),
                    duration: Duration.fromString("P1D")
                }).expandToMonth() : ("day" === defaultView && (duration = Duration.fromString("P1D"), 
                fromDate = that.currentDate()), new DateRange({
                    from: fromDate,
                    duration: duration
                }));
            }), that.initializing = {
                calendars: ko.observable(!0),
                externalCalendars: ko.observable(!0)
            }, that.currentDate.equalityComparer = function(oldValue, newValue) {
                return oldValue && newValue ? oldValue === newValue || 0 === oldValue.compare(newValue) : oldValue === newValue;
            }, that.startOfCurrentDay = ko.computed(function() {
                return that.currentDate().startOfDay();
            }), that.hoursFromMidnight = ko.computed(function() {
                return that.now().subtractDate(that.startOfCurrentDay()).toHours();
            });
        }
        return State;
    });
}(), function() {
    (0, System.amdDefine)("calendar/agenda/AgendaView.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "calendar/ical/Time.js", "calendar/ical/TimeZone.js", "calendar/ical/Duration.js", "calendar/Sort.js", "calendar/model/DateRange.js", "calendar/actions/LoadCalendarsAction.js", "common/ViewBehavior.js", "calendar/components/navigation/navigation.js" ], function(ko, util, Time, TimeZone, Duration, Sort, DateRange, LoadCalendarsAction, ViewBehavior) {
        function AgendaView(options) {
            function loadDateRange(dateRange) {
                dateRange && "anonymous" !== that.state.user() && that.executeAction(new LoadCalendarsAction({
                    startDate: dateRange.from,
                    endDate: dateRange.to
                }), function(err) {
                    that.handleError(err);
                });
            }
            function eventInstancesForDate(date) {
                var localDate = date.clone().convertToZone(that.state.timeZone()), dayStart = date.startOfDay(), dayEnd = dayStart.dayAfter(), localDayStart = localDate.startOfDay(), localDayEnd = localDate.dayAfter();
                return localDayEnd.isDate = date.isDate, Sort.eventInstances.byStartDateThenByCalendarName(calendars.getEventInstances(localDate, localDayEnd).map(function(eventInstance) {
                    var startDate = eventInstance.startDate, endDate = eventInstance.endDate;
                    return startDate.isDate || (startDate = startDate.convertToZone(that.state.timeZone())), 
                    endDate.isDate || (endDate = endDate.convertToZone(that.state.timeZone())), startDate.compare(localDayStart) < 0 && (startDate = dayStart.clone()), 
                    localDayEnd.compare(endDate) < 0 && (endDate = dayEnd.clone()), {
                        allDay: startDate.isDate && endDate.isDate,
                        startDate: startDate,
                        endDate: endDate,
                        eventInstance: eventInstance
                    };
                }));
            }
            function setRefreshTimeout(eventInstances) {
                clearTimeout(refreshTimer);
                var minEndDate = eventInstances[0].endDate;
                eventInstances.forEach(function(eventInstance) {
                    eventInstance.endDate.compare(minEndDate) < 0 && (minEndDate = eventInstance.endDate);
                });
                var secondsBeforeTimeout = minEndDate.subtractDateTz(now()).toSeconds();
                refreshTimer = setTimeout(function() {
                    that.startDate(now());
                }, 1e3 * secondsBeforeTimeout);
            }
            var that = this;
            util.extend(that, {
                autoRefreshAgenda: !0
            }, util.pick(options, "state", "autoRefreshAgenda", "pageNavigator", "actionExecutor", "errorHandler")), 
            ViewBehavior.installInto(this);
            var now = that.state.now;
            that.duration = ko.observable(options.duration || Duration.fromString("P7D")), that.startDate = ko.observable(now()), 
            that.endDate = ko.pureComputed(function() {
                var result = that.startDate().startOfDay();
                return result.addDuration(that.duration()), result._normalize(), result;
            }), that.slideIn = !!options.slideIn, that.showCalendarLink = that.slideIn, that.goToCalendar = function() {
                that.pageNavigator.page.show("/calendar");
            }, that.dateRange = ko.pureComputed(function() {
                return new DateRange({
                    from: that.startDate().startOfDay(),
                    to: that.endDate()
                });
            }), that.dateRange.subscribe(function(dateRange) {
                loadDateRange(dateRange);
            }), that.isTodayInRange = ko.pureComputed(function() {
                return that.dateRange().contains(that.currentDate());
            }), that.currentDate = that.state.currentDate, that.lastAgendaDay = ko.pureComputed(function() {
                var result = that.endDate().clone();
                return result.day -= 1, result._normalize(), result;
            }), that.canLoadMore = ko.pureComputed(function() {
                return that.duration().toDays() < maxShowDays;
            });
            var refreshTimer, calendars = that.state.calendars, agendaDays = ko.pureComputed(function() {
                for (var result = [], currentDate = that.startDate().isDate ? that.startDate().clone().convertToZone(TimeZone.localTimeZone) : that.startDate().clone(); currentDate.compare(that.endDate()) < 0; ) {
                    var dayStart = currentDate.clone();
                    result.push(dayStart), currentDate = (currentDate = currentDate.dayAfter()).convertToZone(TimeZone.localTimeZone);
                }
                return result;
            });
            that.days = ko.pureComputed(function() {
                calendars.version();
                var result = [], days = agendaDays(), registerRefreshTimer = that.autoRefreshAgenda && 0 === now().startOfDay().compare(days[0].startOfDay());
                return days.forEach(function(day) {
                    var eventInstances = eventInstancesForDate(day);
                    if (eventInstances.length) {
                        registerRefreshTimer && (setRefreshTimeout(eventInstances), registerRefreshTimer = !1);
                        var dayEntry = {
                            date: day,
                            eventInstances: eventInstances
                        };
                        result.push(dayEntry);
                    }
                }), result;
            }).extend({
                throttle: 0
            });
        }
        var maxShowDays = 90;
        return AgendaView.prototype.loadMore = function() {
            var duration = this.duration();
            duration.days += 7, this.duration(duration);
        }, AgendaView.prototype.showDayView = function() {
            this.pageNavigator.show(new DateRange({
                from: this.isTodayInRange() ? this.currentDate() : this.dateRange().from,
                duration: Duration.fromString("P1D")
            }), {
                view: "day"
            });
        }, AgendaView.prototype.showWeekView = function() {
            this.pageNavigator.show(new DateRange({
                from: this.dateRange().from.startOfWeek(),
                duration: Duration.fromString("P1W")
            }), {
                view: "week"
            });
        }, AgendaView.prototype.showMonthView = function() {
            this.pageNavigator.show(this.dateRange().expandToMonth(), {
                view: "month"
            });
        }, AgendaView.prototype.showAgendaView = function() {
            this.pageNavigator.show(this.dateRange().expandToMonth(), {
                view: "agenda"
            });
        }, AgendaView;
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/newCalendar/NewCalendarViewModel.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/Colors.js", "calendar/model/Calendar.js" ], function(ko, Colors, Calendar) {
        function NewCalendarViewModel(params) {
            function updateDialogPosition() {
                var height = window.innerHeight, target = document.querySelector(".new-calendar-dialog .calendar-dialog"), bounds = target.getBoundingClientRect(), top = Math.max(.5 * (height - bounds.height), 0);
                target.style.top = top + "px";
            }
            function hideNewCalendarDialog() {
                if (calendarDialog.hasChanges()) return void animateOverlay();
                calendarDialog.model(null), that.calendarShown(!1), document.removeEventListener("keyup", onNewCalendarKeyUp), 
                window.removeEventListener("resize", updateDialogPosition, !0), subscriptions.forEach(function(subscription) {
                    subscription.dispose();
                });
            }
            function onNewCalendarKeyUp(event) {
                27 === event.keyCode && hideNewCalendarDialog();
            }
            function animateOverlay() {
                ko.utils.toggleDomNodeCssClass(document.body, "edit-dialog-close-rejected", !0), 
                setTimeout(function() {
                    ko.utils.toggleDomNodeCssClass(document.body, "edit-dialog-close-rejected", !1);
                }, 500);
            }
            var that = this, calendarDialog = params.calendarDialog;
            that.calendarShown = ko.observable(!1);
            var subscriptions = [];
            this.calendarDialog = calendarDialog, that.showNewCalendar = function(event) {
                calendarDialog.model({
                    calendar: new Calendar({
                        color: Colors.nextColor(calendarDialog.state.calendars.all()),
                        default: !1,
                        enabled: !0,
                        writable: !0
                    })
                }), subscriptions.push(calendarDialog.model.subscribe(function(model) {
                    model || hideNewCalendarDialog();
                })), updateDialogPosition(), document.addEventListener("keyup", onNewCalendarKeyUp), 
                window.addEventListener("resize", updateDialogPosition, !0), that.calendarShown(!0);
            }, this.clickOnOverlay = function(event) {
                hideNewCalendarDialog();
            };
        }
        return NewCalendarViewModel;
    });
}(), System.registerDynamic("calendar/components/newCalendar/newCalendar.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "newCalendar",
        content: '<div class="one-sidebar--list-item new-calendar-button"\n     data-bind="click: showNewCalendar,\n                attr: { \'data-title\': TR(\'calendar.CreateNewCalendar\', \'Create new calendar\') }">\n    <span class="new-calendar-title" data-i18n="calendar.CreateNewCalendar">Create new calendar</span>\n    <span class="icon-add-calendar"></span>\n</div>\n\n<div class="new-calendar-dialog" data-bind="style: { \'visibility\': calendarShown() ? \'visible\' : \'hidden\' }">\n    <div class="overlay" data-bind="click: clickOnOverlay"></div>\n    <div class="calendar-dialog edit-dialog" data-bind="template: { name: \'calendarDialog\', data: calendarDialog, if: calendarDialog.model }"></div>\n</div>\n'
    }), module.exports;
}), System.registerDynamic("calendar/dialogs/calendar/calendarDialog.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "calendarDialog",
        content: '<div class="speech-bubble">\n    <div class="speech-bubble-arrow"></div>\n    <div class="form-horizontal main" data-bind="css: view">\n        <div class="dialog-view dialog-main calendar-dialog-main">\n            <one-dialog-header params="close: discard, tabindex: view() === \'main\' ? 1 : -1">\n                <span data-i18n="calendar.EditCalendar.Title">Calendar options</span>\n            </one-dialog-header>\n            <div class="controls-row">\n                <in-place-editor class="name main"\n                                 params="value: name,\n                                         placeholder: TR(\'calendar.calendarName\', \'Calendar name\'),\n                                         focused: nameFocused,\n                                         tabindex: view() === \'main\' ? 1 : -1">\n                </in-place-editor>\n                <span data-bind="visible: (name.isNotValid() && name.hasChanges())" class="validation-warning" data-i18n="calendar.InvalidCalendarName">This is not a valid name.</span>\n            </div>\n            <div class="controls-row vertically-centered">\n                <button data-bind="checkbox: enabled, attr: { tabindex: view() === \'main\' ? 1 : -1 }"></button>\n                <span class="checkbox-label" data-i18n="calendar.calendarEnabled" data-bind="click: toggleEnabled">Enabled</span>\n            </div>\n            \x3c!-- ko if: isExistingAndWritable --\x3e\n            <div class="controls-row vertically-centered">\n                <button data-bind="checkbox: defaultCalendar, disable: originalDefault, attr: { tabindex: view() === \'main\' ? 1 : -1 }"></button>\n                <span class="checkbox-label" data-i18n="calendar.calendarDefault" data-bind="click: originalDefault() ? null : toggleDefault, css: { disabled: originalDefault }">Default calendar</span>\n            </div>\n            \x3c!-- /ko --\x3e\n            <div class="controls-row">\n                <label data-i18n="calendar.ColorColon" class="color-label">Color</label><div class="colors-container" data-bind="foreach: colorChoices">\n                    <div class="color-choice" data-bind="click: select">\n                        <div class="calendar-checkbox" data-bind="style: styles, css: { checked: selected }"></div>\n                    </div>\n                </div>\n            </div>\n            <div class="controls-row full-width actions-buttons">\n                \x3c!-- ko if: isExistingAndWritable --\x3e\n                <button data-bind="click: importEvents, attr: { tabindex: view() === \'main\' ? 1 : -1 }">\n                    <span data-i18n="calendar.ImportEventsToCalendar">Import events to calendar</span>\n                    <span class="icon-open"></span>\n                </button>\n                \x3c!-- /ko --\x3e\n                \x3c!-- ko ifnot: isNew --\x3e\n                <button data-bind="click: exportCalendar, attr: { tabindex: view() === \'main\' ? 1 : -1 }">\n                    <span data-i18n="calendar.ExportCalendar">Export calendar</span>\n                    <span class="icon-open"></span>\n                </button>\n                \x3c!-- /ko --\x3e\n                \x3c!-- ko if: isExistingAndWritable --\x3e\n                <button data-bind="click: shareCalendar, attr: { tabindex: view() === \'main\' ? 1 : -1 }">\n                    <span data-i18n="calendar.ShareCalendar">Share calendar</span>\n                    <span class="icon-open"></span>\n                </button>\n                <button data-bind="click: resources, attr: { tabindex: view() === \'main\' ? 1 : -1 }">\n                    <span data-i18n="calendar.CalendarResource">Show CalDAV url</span>\n                    <span class="icon-open"></span>\n                </button>\n                \x3c!-- /ko --\x3e\n            </div>\n            <div class="buttons">\n                <button class="call-to-action"\n                        data-bind="click: remove,\n                                   visible: isDeletable,\n                                   enable: isDeletable,\n                                   attr: { tabindex: view() === \'main\' ? 1 : -1 }"\n                        data-i18n="calendar.Delete">Delete</button>\n                <button class="call-to-action main-call-to-action"\n                        data-bind="click: save,\n                                   enable: isSavable,\n                                   attr: { tabindex: view() === \'main\' ? 1 : -1 }"\n                        data-i18n="calendar.Save">Save</button>\n            </div>\n        </div>\n        <div class="dialog-view dialog-import">\n            <one-dialog-header params="back: back, close: discard, tabindex: view() === \'import\' ? 1 : -1">\n                <span data-i18n="calendar.Import.Title">Import calendar</span>\n            </one-dialog-header>\n            <div class="controls-row">\n                <span data-i18n="calendar.Import.Instructions">Choose the file that contains your events. One.com Calendar can only import event information in iCalendar (.ics) format.</span>\n            </div>\n            <a href="#" tabindex="0" class="first-focus ignore-tab"></a>\n            <div class="controls-row">\n                <span data-bind="visible: !importFileName()">\n                    <span class="form-upload" data-bind="activateFileInput: { handler: importFile, accept: allowedImportFileExtensions.join(\',\'), offset: { top: \'-10px\', right: \'30px\' } }">\n                        <button class="call-to-action"\n                                data-i18n="calendar.ImportChooseFile"\n                                data-bind="attr: { tabindex: view() === \'import\' ? 1 : -1 }">Choose file</button>\n                    </span>\n                </span>\n                \x3c!-- ko if: !!importFileName() --\x3e\n                <span class="form-selected-file">\n                    <span data-bind="text: importFileName" class="form-selected-file-filename"></span>\n                    <a data-bind="click: function () { importFile(null); }, attr: { tabindex: view() === \'import\' ? 1 : -1 }"><span class="icon-cancelCross"></span></a>\n                </span>\n                \x3c!-- /ko --\x3e\n            </div>\n            \x3c!-- ko if: importStatus --\x3e\n            <div class="controls-row">\n                <span data-bind="text: importStatus" class="error-text"></span>\n            </div>\n            \x3c!-- /ko --\x3e\n            <div class="buttons">\n                <button class="call-to-action main-call-to-action"\n                        data-bind="click: importAction,\n                                   enable: isImportable,\n                                   attr: { tabindex: view() === \'main\' ? 1 : -1 }"\n                        data-i18n="calendar.ImportEvents">Import</button>\n            </div>\n        </div>\n        <div class="dialog-view dialog-share">\n            <one-dialog-header params="back: back, close: discard, tabindex: view() === \'share\' ? 1 : -1">\n                <span class="label-share-calendar" data-i18n="calendar.Share.Title">Share calendar link</span>\n            </one-dialog-header>\n            <div class="controls-row">\n                <div class="calendar-container">\n                    <button data-bind="css: { checked: false }, style: { backgroundColor: darkBackgroundColor }" class="calendar-checkbox" tabindex="-1"></button>\n                    <span data-bind="text: name"></span>\n                </div>\n            </div>\n            <div class="controls-row">\n                <span data-i18n="calendar.Share.Instructions">To share your calendar with other people either add or select a link and then click "Share".</span>\n            </div>\n            <a href="#" tabindex="0" class="first-focus ignore-tab"></a>\n            <div class="controls-row full-width">\n                \x3c!-- ko if: linksLoaded --\x3e\n                <div class="links-list">\n                    <div class="header">\n                        <div class="header-active">\n                            <span data-i18n="calendar.Share.Active">Active</span>\n                        </div>\n                        <div class="header-comment">\n                            <span data-i18n="calendar.Share.Comment">Comment</span>\n                        </div>\n                    </div>\n                    <div class="link-body" data-bind="foreach: links">\n                        <div class="link-table">\n                            <div class="link-row">\n                                <div class="link-active">\n                                    <button data-bind="checkbox: active,\n                                                       attr: { tabindex: $parent.view() === \'share\' ? 1 : -1 }">\n                                    </button>\n                                </div>\n                                <div class="link-comment">\n                                    <input type="text"\n                                           data-bind="value: comment,\n                                                      event: {\n                                                          blur: function () { focused(false) },\n                                                          focus: function () { focused(true) }\n                                                      },\n                                                      attr: { tabindex: $parent.view() === \'share\' ? 1 : -1 }">\n                                </div>\n                                <div class="link-share">\n                                    <button class="share-link-button"\n                                            data-bind="click: $parent.shareLink,\n                                                       attr: { tabindex: $parent.view() === \'share\' ? 1 : -1 }"\n                                            data-i18n="calendar.Share.ShareLink">Share</button>\n                                </div>\n                                <div class="link-delete">\n                                    <button class="delete-button"\n                                            data-bind="click: $parent.deleteLink,\n                                                       attr: { tabindex: $parent.view() === \'share\' ? 1 : -1 }">\n                                        <span class="icon"></span>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- /ko --\x3e\n                \x3c!-- ko ifnot: linksLoaded --\x3e\n                    <one-loading-indicator params="isLoading: !linksLoaded()"></one-loading-indicator>\n                \x3c!-- /ko --\x3e\n            </div>\n            \x3c!-- ko if: linksLoaded --\x3e\n            <div class="controls-row">\n                <button class="add-link-button"\n                        data-bind="click: addLink,\n                                   attr: { tabindex: view() === \'share\' ? 1 : -1 }"\n                        data-i18n="calendar.Share.AddLink">Add new link</button>\n            </div>\n            \x3c!-- /ko --\x3e\n        </div>\n        <div class="dialog-view dialog-link-details" data-bind="with: selectedLink">\n            <one-dialog-header params="back: $parent.shareCalendar, close: $parent.discard, tabindex: $parent.view() === \'link-details\' ? 1 : -1">\n                <span data-i18n="calendar.SharedLink.Title">Calendar links</span>\n            </one-dialog-header>\n            <div class="controls-row">\n                <span data-i18n="calendar.SharedLink.Instructions">Copy and share calendar links</span>\n            </div>\n            <a href="#" tabindex="0" class="first-focus ignore-tab"></a>\n            <div class="controls-row shared-link-ical">\n                <span class="label" data-i18n="calendar.SharedLink.Ical">iCal</span><br>\n                <textarea class="content"\n                          data-bind="textInput: icalLink,\n                                     event: { focus: $parent.focusedLink },\n                                     attr: { tabindex: $parent.view() === \'link-details\' ? 1 : -1 }"\n                          readonly="readonly">\n                </textarea>\n            </div>\n            <div class="controls-row shared-link-html">\n                <span class="label" data-i18n="calendar.SharedLink.Html">HTML</span><br>\n                <textarea class="content"\n                          data-bind="textInput: htmlLink,\n                                     event: { focus: $parent.focusedLink },\n                                     attr: { tabindex: $parent.view() === \'link-details\' ? 1 : -1 }"\n                          readonly="readonly">\n                </textarea>\n            </div>\n            <div class="controls-row shared-link-embed">\n                <span class="label" data-i18n="calendar.SharedLink.Embed">Embed</span><br>\n                <textarea class="content"\n                          data-bind="textInput: embedCode,\n                                     event: { focus: $parent.focusedLink },\n                                     attr: { tabindex: $parent.view() === \'link-details\' ? 1 : -1 }"\n                          readonly="readonly">\n                </textarea>\n            </div>\n        </div>\n        <div class="dialog-view dialog-resource">\n            <one-dialog-header params="back: back, close: discard, tabindex: view() === \'resource\' ? 1 : -1">\n                <span data-i18n="calendar.CalendarResource.Title">CalDAV url</span>\n            </one-dialog-header>\n            <a href="#" tabindex="0" class="first-focus ignore-tab"></a>\n            <div class="controls-row">\n                <span data-i18n="calendar.CalendarResource.Instructions">You can view and edit your calendar from an external application that supports CalDAV. Add this url to your external application.</span>\n            </div>\n            <div class="controls-row resource-url-area">\n                <span class="label" data-i18n="calendar.CalendarResource.URL">CalDAV url</span><br>\n                <textarea class="content"\n                          data-bind="textInput: resourceUrl,\n                                     event: { focus: focusedLink },\n                                     attr: { tabindex: view() === \'resource\' ? 1 : -1 }"\n                          readonly="readonly">\n                </textarea>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="layout loading-overlay" data-bind="visible: importWaiting"><div></div></div>\n'
    }), module.exports;
}), function() {
    (0, System.amdDefine)("calendar/components/newCalendar/newCalendar.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/components/newCalendar/NewCalendarViewModel.js", "calendar/components/newCalendar/newCalendar.ko", "calendar/dialogs/calendar/calendarDialog.ko" ], function(ko, NewCalendarViewModel) {
        ko.components.register("one-new-calendar", {
            template: {
                element: "newCalendar"
            },
            viewModel: {
                createViewModel: function(params) {
                    return new NewCalendarViewModel(params);
                }
            }
        });
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/newExternalCalendar/NewExternalCalendarViewModel.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/Colors.js", "calendar/model/Calendar.js" ], function(ko, Colors, Calendar) {
        function NewExternalCalendarViewModel(params) {
            function updateDialogPosition() {
                var height = window.innerHeight, target = document.querySelector(".new-external-calendar-dialog .external-calendar-dialog"), bounds = target.getBoundingClientRect(), top = Math.max(.5 * (height - bounds.height), 0);
                target.style.top = top + "px";
            }
            function hideNewExternalCalendarDialog() {
                that.newExternalCalendarShown(!1), document.removeEventListener("keyup", onNewExternalCalendarKeyUp), 
                window.removeEventListener("resize", updateDialogPosition, !0), subscriptions.forEach(function(subscription) {
                    subscription.dispose();
                }), that.model(null);
            }
            function onNewExternalCalendarKeyUp(event) {
                27 === event.keyCode && hideNewExternalCalendarDialog();
            }
            var that = this;
            that.model = ko.observable(null), that.newExternalCalendarShown = ko.observable(!1);
            var subscriptions = [];
            that.showNewExternalCalendar = function(event) {
                updateDialogPosition(), document.addEventListener("keyup", onNewExternalCalendarKeyUp), 
                window.addEventListener("resize", updateDialogPosition, !0), that.newExternalCalendarShown(!0), 
                that.model({
                    url: ""
                }), subscriptions.push(that.model.subscribe(function(model) {
                    model || hideNewExternalCalendarDialog();
                }));
            }, this.clickOnOverlay = function(event) {
                hideNewExternalCalendarDialog();
            };
        }
        return NewExternalCalendarViewModel;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/SubscribeExternalCalendarAction.js", [ "common/util.js", "common/ActionBehavior.js", "calendar/Colors.js", "calendar/model/Calendar.js", "calendar/ical/parser.js", "calendar/ical/Component.js" ], function(util, ActionBehavior, Colors, Calendar, Parser, Component) {
        function SubscribeExternalCalendarAction(options) {
            util.extend(this, util.pick(options, [ "url" ])), ActionBehavior.installInto(this);
        }
        return SubscribeExternalCalendarAction.prototype.name = "SubscribeExternalCalendarAction", 
        SubscribeExternalCalendarAction.prototype.validate = function() {}, SubscribeExternalCalendarAction.prototype.createUuid = function() {
            return util.uuid();
        }, SubscribeExternalCalendarAction.prototype.execute = function(context, callback) {
            var that = this, state = context.state, backend = context.backend, calendarUrl = that.url;
            backend.getExternalCalendar(calendarUrl, function(err, data) {
                if (err) return callback(err);
                var parsedData = new Parser(data), componentData = new Component(parsedData), calname = componentData.getFirstProperty("x-wr-calname"), calcolor = componentData.getFirstProperty("x-apple-calendar-color"), name = calname && calname.getFirstValue() || TR("calendar.Subscribe.NewSubscription", "New subscription"), color = calcolor && calcolor.getFirstValue().substr(0, 7) || Colors.nextColor(state.calendars.all()), preferencesDocument = state.preferences.calendar(), subscribedCalendars = preferencesDocument.subscribedCalendars;
                subscribedCalendars || (subscribedCalendars = preferencesDocument.subscribedCalendars = []);
                var subscribedCalendar = {
                    id: that.createUuid(),
                    color: color,
                    displayName: name,
                    url: calendarUrl,
                    enabled: !0
                };
                subscribedCalendars.push(subscribedCalendar);
                var calendarData = util.extend({
                    writable: !1,
                    extern: !0,
                    own: !1
                }, util.pick(subscribedCalendar, [ "id", "color", "enabled" ]));
                calendarData.name = subscribedCalendar.displayName, calendarData.icalendar = {
                    children: [ {
                        res: subscribedCalendar.url,
                        etag: "",
                        calData: data
                    } ]
                }, backend.savePreference(state.user(), "calendar", preferencesDocument, function(err, data) {
                    if (!err && data._rev) {
                        preferencesDocument._rev = data._rev, state.calendars.version.pause();
                        var calendar = new Calendar(calendarData, state.timeZone);
                        state.calendars.add(calendar), state.calendars.version.resume(!0), callback();
                    } else callback(err);
                });
            });
        }, SubscribeExternalCalendarAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/dialogs/newExternalCalendar/NewExternalCalendarDialogViewModel.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "common/ViewBehavior.js", "calendar/actions/SubscribeExternalCalendarAction.js", "3rdparty/onevalidation/validation.js", "3rdparty/Failboat.js", "3rdparty/knockout-extensions/knockout.editables.js", "components/inPlaceEditor/inPlaceEditor.js" ], function(ko, util, ViewBehavior, SubscribeExternalCalendarAction, OneValidation, Failboat) {
        function NewExternalCalendarDialogViewModel(options) {
            var that = this;
            util.extend(this, util.pick(options, "state", "actionExecutor", "errorHandler")), 
            ViewBehavior.installInto(that), that.url = ko.observable(null), that.view = ko.observable("main"), 
            that.model = ko.isObservable(options.model) ? options.model : ko.observable(options.model), 
            that.model.subscribe(function(model) {
                model ? (that.view("main"), that.url(model.url), that.beginEdit()) : (that.url(null), 
                that.commit());
            }), that.subscribing = ko.observable(!1), that.editableFields = {}, properties.forEach(function(property) {
                ko.editable(that[property]), that.editableFields[property] = that[property];
            }), ko.editable(that.editableFields), [ "beginEdit", "commit", "hasChanges", "rollback" ].forEach(function(m) {
                that[m] = that.editableFields[m];
            }), that.isUrlInvalid = ko.pureComputed(function() {
                var regex = new RegExp(OneValidation.httpUrl.source.replace(":ftp|", ":webcals?|"), "i");
                return that.url() && that.url().length && !regex.test(that.url().trim());
            }), that.isSavable = ko.pureComputed(function() {
                return that.hasChanges() && !that.isUrlInvalid();
            }), that.isDiscardable = ko.pureComputed(function() {
                return that.hasChanges();
            }), that.discard = function() {
                that.rollback(), that.model(null);
            }, that.save = function() {
                var url = that.url().trim();
                if (/\s*https?:\/\/caldav\.one\.com\//i.test(url)) {
                    var err = new Error();
                    return Failboat.tag(err, "CANNOT_SUBSCRIBE_TO_CALDAV_ONE_COM_URL"), void that.handleError(err);
                }
                var action = new SubscribeExternalCalendarAction({
                    url: url
                });
                that.subscribing(!0), that.executeAction(action, function(err, data) {
                    that.subscribing(!1), err && that.handleError(err), that.commit(), that.model(null);
                });
            };
        }
        var properties = [ "url" ];
        return NewExternalCalendarDialogViewModel;
    });
}(), function() {
    (0, System.amdDefine)("calendar/dialogs/newExternalCalendar/NewExternalCalendarDialog.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/dialogs/newExternalCalendar/NewExternalCalendarDialogViewModel.js", "calendar/components/newExternalCalendar/newExternalCalendar.ko", "calendar/dialogs/newExternalCalendar/newExternalCalendarDialog.ko", "calendar/components/dialogHeader/dialogHeader.js" ], function(ko, NewExternalCalendarDialogViewModel) {
        ko.components.register("one-new-external-calendar-dialog", {
            template: {
                element: "newExternalCalendarDialog"
            },
            viewModel: {
                createViewModel: function(params) {
                    return new NewExternalCalendarDialogViewModel(params);
                }
            }
        });
    });
}(), System.registerDynamic("calendar/components/newExternalCalendar/newExternalCalendar.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "newExternalCalendar",
        content: '<div class="one-sidebar--list-item new-external-calendar-button"\n     data-bind="click: showNewExternalCalendar,\n                attr: { \'data-title\': TR(\'calendar.SubscribeToCalendarURL\', \'Subscribe to calendar URL\') }">\n    <span class="new-subscription-title" data-i18n="calendar.SubscribeToCalendarURL">Subscribe to calendar URL</span>\n    <span class="icon-add-calendar"></span>\n</div>\n\n<div class="new-external-calendar-dialog" data-bind="style: { \'visibility\': newExternalCalendarShown() ? \'visible\' : \'hidden\' }">\n    <div class="overlay" data-bind="click: clickOnOverlay"></div>\n    <div class="external-calendar-dialog edit-dialog">\n        <div class="external-calendar-dialog">\n            <one-new-external-calendar-dialog\n                params="state: $root.state, actionExecutor: $root.actionExecutor, errorHandler: $root.errorHandler, model: model"\n            ></one-new-external-calendar-dialog>\n        </div>\n    </div>\n</div>\n'
    }), module.exports;
}), System.registerDynamic("calendar/dialogs/newExternalCalendar/newExternalCalendarDialog.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "newExternalCalendarDialog",
        content: '<div class="speech-bubble">\n    <div class="speech-bubble-arrow"></div>\n    <div class="form-horizontal main" data-bind="css: view">\n        <one-dialog-header params="close: discard">\n            <span data-i18n="calendar.SubscribeToCalendarURL">Subscribe to calendar URL</span>\n        </one-dialog-header>\n        <div class="dialog-view dialog-main new-external-calendar-dialog-main">\n            <div class="controls-row">\n                <in-place-editor\n                    class="url"\n                    params="value: url, placeholder: TR(\'calendar.externalCalendarUrl\', \'Calendar URL\')"\n                    data-bind="css: { \'invalid\': isUrlInvalid }"\n                ></in-place-editor>\n            </div>\n            <div class="buttons">\n                <button class="call-to-action main-call-to-action" data-bind="click: save, enable: isSavable" data-i18n="calendar.Save">Save</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="layout loading-overlay" data-bind="visible: subscribing"><div></div></div>\n'
    }), module.exports;
}), function() {
    (0, System.amdDefine)("calendar/components/newExternalCalendar/newExternalCalendar.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/components/newExternalCalendar/NewExternalCalendarViewModel.js", "calendar/dialogs/newExternalCalendar/NewExternalCalendarDialog.js", "calendar/components/newExternalCalendar/newExternalCalendar.ko", "calendar/dialogs/newExternalCalendar/newExternalCalendarDialog.ko" ], function(ko, NewExternalCalendarViewModel) {
        ko.components.register("one-new-external-calendar", {
            template: {
                element: "newExternalCalendar"
            },
            viewModel: {
                createViewModel: function(params) {
                    return new NewExternalCalendarViewModel(params);
                }
            }
        });
    });
}(), function() {
    (0, System.amdDefine)("calendar/calendarList/CalendarListView.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "common/ViewBehavior.js", "calendar/Sort.js", "calendar/model/Calendar.js", "calendar/actions/UpdateCalendarAction.js", "calendar/actions/UpdateExternalCalendarAction.js", "calendar/components/newCalendar/newCalendar.js", "calendar/components/newExternalCalendar/newExternalCalendar.js" ], function(ko, util, ViewBehavior, Sort, Calendar, UpdateCalendarAction, UpdateExternalCalendarAction) {
        function createCalendarViewModel(calendar) {
            var that = this;
            return {
                id: calendar.id,
                name: calendar.name,
                enabled: calendar.enabled,
                isDefault: calendar.defaultCalendar,
                toggleEnabled: function() {
                    if (!calendar.failedLoading()) {
                        calendar.enabled(!calendar.enabled());
                        var action, cal = that.state.calendars.get(calendar.id);
                        action = cal.extern ? new UpdateExternalCalendarAction({
                            calendar: cal,
                            data: {
                                enabled: calendar.enabled()
                            }
                        }) : new UpdateCalendarAction({
                            calendar: cal,
                            data: {
                                enabled: calendar.enabled()
                            }
                        }), that.executeAction(action, function(err, data) {
                            err && that.handleError(err);
                        });
                    }
                },
                style: !calendar.failedLoading() && {
                    backgroundColor: calendar.darkBackgroundColor()
                },
                calendarInstance: calendar
            };
        }
        function CalendarListView(options) {
            var that = this;
            util.extend(this, util.pick(options, "state", "actionExecutor", "errorHandler")), 
            ViewBehavior.installInto(that), that.listCollapsed = ko.observable(!1), that.loadingCalendars = ko.pureComputed(function() {
                return that.state.initializing.calendars();
            }), that.loadingExternalCalendars = ko.pureComputed(function() {
                return that.state.initializing.externalCalendars();
            }), that.toggleExpansion = function() {
                that.listCollapsed(!that.listCollapsed());
            }, that.externalListCollapsed = ko.observable(!1), that.externalToggleExpansion = function() {
                that.externalListCollapsed(!that.externalListCollapsed());
            };
            var previousCalendars;
            that.calendars = ko.computed(function() {
                that.state.calendars.version();
                var calendars = Sort.calendars.byDefaultThenByName(that.state.calendars.all().filter(function(calendar) {
                    return !calendar.extern;
                })).map(createCalendarViewModel.bind(that));
                return calendars.length !== (previousCalendars && previousCalendars.length) && that.listCollapsed(!1), 
                previousCalendars = calendars, calendars;
            });
            var previousExternalCalendars;
            that.externalCalendars = ko.computed(function() {
                that.state.calendars.version();
                var externalCalendars = Sort.calendars.byDefaultThenByName(that.state.calendars.all().filter(function(calendar) {
                    return calendar.extern;
                })).map(createCalendarViewModel.bind(that));
                return externalCalendars.length !== (previousExternalCalendars && previousExternalCalendars.length) && that.externalListCollapsed(!1), 
                previousExternalCalendars = externalCalendars, externalCalendars;
            });
        }
        return CalendarListView;
    });
}(), function() {
    (0, System.amdDefine)("calendar/miniCalendar/MiniCalendarView.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/PageNavigator.js", "calendar/components/miniCalendar/miniCalendar.js" ], function(ko, PageNavigator) {
        function MiniCalendarView(options) {
            var that = this;
            that.state = options.state, that.dateRange = options.dateRange, that.pageNavigator = options.pageNavigator, 
            that.currentDate = that.state.currentDate, that.hasEvents = function(date) {
                return that.state.calendars.version(), that.state.calendars.hasEventInstances(date, date.dayAfter());
            }, that.showRange = function(dateRange) {
                that.pageNavigator.show(dateRange);
            };
        }
        return MiniCalendarView;
    });
}(), function() {
    (0, System.amdDefine)("calendar/dialogs/event/RecurrenceOptionsView.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "calendar/model/RecurrenceRule.js", "calendar/ical/Recur.js", "calendar/ical/Time.js", "calendar/ical/Duration.js" ], function(ko, util, RecurrenceRule, Recur, Time, Duration) {
        return {
            installInto: function(target) {
                function numberWithMax(property, maxNumber) {
                    return function(value) {
                        var type = typeof value;
                        if ([ "string", "number" ].indexOf(type) > -1 && !isNaN(+value)) {
                            var number = +value;
                            if (number < 1) return property(1);
                            if (number > maxNumber) return property(maxNumber);
                            "string" === type && property(number);
                        } else null !== value && void 0 !== value && property(1);
                    };
                }
                function isWeekdays(bydayPart) {
                    var byday = bydayPart || [], weekDays = that.weekDays();
                    return weekDays.length === byday.length && !weekDays.some(function(day) {
                        return -1 === byday.indexOf(day);
                    });
                }
                function updateRecurrence() {
                    var recurrence = that.recurrence();
                    if (recurrence) {
                        var freq = ko.unwrap(that.frequency), wkst = ko.unwrap(that.wkst), byday = ko.unwrap(that.byday), bymonthday = ko.unwrap(that.bymonthday);
                        recurrence.rrule.freq = freq, recurrence.rrule.until = ko.unwrap(that.until), recurrence.rrule.count = ko.unwrap(that.count), 
                        recurrence.rrule.interval = ko.unwrap(that.interval), recurrence.rrule.wkst = wkst && Recur.icalDayToNumericDay(wkst), 
                        byday && byday.length ? recurrence.rrule.parts.BYDAY = ko.unwrap(that.byday) : delete recurrence.rrule.parts.BYDAY, 
                        bymonthday && bymonthday.length ? recurrence.rrule.parts.BYMONTHDAY = ko.unwrap(that.bymonthday) : delete recurrence.rrule.parts.BYMONTHDAY, 
                        recurrence.normalizeUntil(that.startDate()), that.recurrence.valueHasMutated();
                    }
                }
                var that = target;
                that.recurrence = ko.observable(), that.frequency = ko.observable(), that.count = ko.observable(), 
                that.until = ko.observable(), that.interval = ko.observable(), that.byday = ko.observableArray(), 
                that.bymonthday = ko.observableArray(), that.wkst = ko.observable(null), that.singleOccurrence = TR("calendar.NoRecurrence", "Single occurrence"), 
                that.recurrenceProperties = [ "frequency", "count", "until", "interval", "byday", "bymonthday", "wkst" ];
                var daysOfWeek = [ "SU", "MO", "TU", "WE", "TH", "FR", "SA", "SU", "MO", "TU", "WE", "TH", "FR", "SA" ];
                that.initRecurrenceOptions = function(eventInstance) {
                    var recurrence = eventInstance.event.recurrence;
                    that.frequency(recurrence && recurrence.rrule.freq), that.count(recurrence && recurrence.rrule.count), 
                    that.until(recurrence && recurrence.rrule.until), that.interval(recurrence && recurrence.rrule.interval), 
                    that.byday(recurrence && recurrence.rrule.parts && recurrence.rrule.parts.BYDAY), 
                    that.recurrence(recurrence), that.setWeekStart(), that.selectMonthlyRepetition(), 
                    that.prevRecurrence = null;
                }, that.resetRecurrenceOptions = function() {
                    that.recurrence(null), that.frequency(null), that.count(null), that.until(null), 
                    that.interval(null), that.byday(null);
                }, that.initialDate = ko.pureComputed(function() {
                    var eventInstance = that.eventInstance(), startDate = that.startDate(), details = eventInstance && eventInstance.details, event = eventInstance && eventInstance.event;
                    return details && details.startDate || event && event.startDate || startDate;
                }), that.frequencyOptions = [ {
                    value: RecurrenceRule.frequencies.daily,
                    text: util.firstUp(TR("calendar.Recurrence.FrequencyDaily", "daily"))
                }, {
                    value: RecurrenceRule.frequencies.weekly,
                    text: util.firstUp(TR("calendar.Recurrence.FrequencyWeekly", "Weekly"))
                }, {
                    value: RecurrenceRule.frequencies.monthly,
                    text: util.firstUp(TR("calendar.Recurrence.FrequencyMonthly", "Monthly"))
                }, {
                    value: RecurrenceRule.frequencies.yearly,
                    text: util.firstUp(TR("calendar.Recurrence.FrequencyYearly", "yearly"))
                } ], that.selectedFrequency = ko.pureComputed({
                    read: function() {
                        return that.getFrequencyOption(that.frequency());
                    },
                    write: function(newFrequency) {
                        var freq = newFrequency.value;
                        freq !== that.frequency() && ((freq === RecurrenceRule.frequencies.weekly || RecurrenceRule.frequencies.daily) && that.byday(null), 
                        freq !== RecurrenceRule.frequencies.monthly && (freq !== RecurrenceRule.frequencies.daily && that.byday(null), 
                        that.bymonthday(null)), freq === RecurrenceRule.frequencies.yearly && (that.byday(null), 
                        that.bymonthday(null)), freq === RecurrenceRule.frequencies.monthly && (that.byday(null), 
                        that.bymonthday(null), that.selectMonthlyRepetition(freq)), that.interval(1), that.frequency(freq));
                    }
                }), that.getFrequencyOption = function(freq) {
                    var freqOption = that.frequencyOptions[0];
                    return that.frequencyOptions.some(function(option) {
                        return option.value === freq && (freqOption = option, !0);
                    }), freqOption;
                }, that.detectKeyCode = function(data, event) {
                    var key = window.event ? event.keyCode : event.which;
                    return 8 === event.keyCode || 46 === event.keyCode || 37 === event.keyCode || 39 === event.keyCode || 65 === key && !0 === event.ctrlKey || (!(key < 48 || key > 57) || !(key < 96 || key > 105));
                };
                var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;
                that.count.subscribe(numberWithMax(that.count, maxSafeInteger)), that.interval.subscribe(numberWithMax(that.interval, 30)), 
                that.isWeekdaysOnly = ko.pureComputed({
                    read: function() {
                        return isWeekdays(that.byday());
                    },
                    write: function(newOption) {
                        newOption ? that.byday(that.weekDays().slice()) : that.byday([]);
                    }
                }), that.weekdaysOnlyClick = function() {
                    that.isWeekdaysOnly(!that.isWeekdaysOnly.peek());
                }, that.intervalDescription = ko.pureComputed(function() {
                    var freq = that.frequency();
                    if (freq && -1 !== RecurrenceRule.supportedFrequencies.indexOf(freq.toLowerCase())) {
                        var translation = TR("calendar.RecurrenceRule.IntervalPostfixPatternByFrequencyAndQuantity", {
                            daily: {
                                one: "day",
                                other: "days"
                            },
                            weekly: {
                                one: "week",
                                other: "weeks"
                            },
                            monthly: {
                                one: "month",
                                other: "months"
                            },
                            yearly: {
                                one: "year",
                                other: "years"
                            }
                        })[freq.toLowerCase()];
                        return inter.trQuantity(translation, that.interval() || 1);
                    }
                }), that.setWeekStart = function() {
                    var globalSettings = that.state.preferences.global(), recurrence = that.recurrence(), wkst = recurrence && (recurrence.wkst ? recurrence.wkst : daysOfWeek[globalSettings.weekStart]);
                    that.wkst(wkst);
                }, that.daysOfWeekInOrder = ko.pureComputed(function() {
                    var globalSettings = that.state.preferences.global(), weekdayNames = inter.calendars.gregorian.dayNames.standAlone.abbreviated, initialDate = that.initialDate();
                    return daysOfWeek.slice().splice(globalSettings.weekStart, 7).map(function(day) {
                        var dayNumber = daysOfWeek.indexOf(day), dayText = weekdayNames[dayNumber], disabled = ko.pureComputed(function() {
                            return initialDate.dayOfWeek() === Recur.icalDayToNumericDay(day);
                        });
                        return {
                            id: ko.pureComputed(function() {
                                return day;
                            }),
                            text: ko.pureComputed(function() {
                                return dayText;
                            }),
                            disabled: disabled,
                            selected: ko.pureComputed({
                                read: function() {
                                    var byday = that.byday() ? that.byday : [];
                                    return disabled() || byday.indexOf(day) > -1;
                                },
                                write: function(addDayToByDay) {
                                    disabled() || (that.byday() && 0 !== that.byday().length || that.byday([ initialDate.dayOfWeekId() ]), 
                                    addDayToByDay ? that.byday.push(day) : that.byday.remove(day));
                                }
                            }),
                            labelClick: function(viewModel, event) {
                                viewModel.disabled() || viewModel.selected(!viewModel.selected.peek());
                            }
                        };
                    });
                }), that.weekDayInMonth = ko.pureComputed(function() {
                    var initialDate = that.initialDate();
                    return initialDate ? 1 + Math.floor((initialDate.day - 1) / 7) : 1;
                }), that.bydaynthText = ko.pureComputed(function() {
                    var initialDate = that.initialDate();
                    if (initialDate) {
                        var dayOfWeekMondayFirst = (initialDate.dayOfWeek() - 1 + 6) % 7, nthWeekDayInMonth = that.weekDayInMonth() - 1;
                        return TR("calendar.Recurrence.ByNthDayOfTheWeek", [ [ "On the 1st Monday", "On the 2nd Monday", "On the 3rd Monday", "On the 4th Monday", "On the 5th Monday" ], [ "On the 1st Tuesday", "On the 2nd Tuesday", "On the 3rd Tuesday", "On the 4th Tuesday", "On the 5th Tuesday" ], [ "On the 1st Wednesday", "On the 2nd Wednesday", "On the 3rd Wednesday", "On the 4th Wednesday", "On the 5th Wednesday" ], [ "On the 1st Thursday", "On the 2nd Thursday", "On the 3rd Thursday", "On the 4th Thursday", "On the 5th Thursday" ], [ "On the 1st Friday", "On the 2nd Friday", "On the 3rd Friday", "On the 4th Friday", "On the 5th Friday" ], [ "On the 1st Saturday", "On the 2nd Saturday", "On the 3rd Saturday", "On the 4th Saturday", "On the 5th Saturday" ], [ "On the 1st Sunday", "On the 2nd Sunday", "On the 3rd Sunday", "On the 4th Sunday", "On the 5th Sunday" ] ])[dayOfWeekMondayFirst][nthWeekDayInMonth];
                    }
                }), that.monthlyRepetitionLabel = function(item, event) {
                    event.preventDefault(), event.stopPropagation(), event.cancelBubble = !0, that.monthlyRepetition(item.value);
                }, that.bydaylastText = ko.pureComputed(function() {
                    var initialDate = that.initialDate();
                    if (initialDate) {
                        var dayNames = inter.calendars.gregorian.dayNames.standAlone.wide, dayOfWeek = initialDate.dayOfWeek();
                        return TR.PAT("calendar.Recurrence.ByLastDayOfTheWeek", "On the last {0}")(dayNames[dayOfWeek - 1]);
                    }
                }), that.bymonthdayText = ko.pureComputed(function() {
                    var initialDate = that.initialDate();
                    if (initialDate) {
                        var day = initialDate.day, dayOrdinal = RecurrenceRule.dayOfTheMonthOrdinals[day - 1];
                        return TR.PAT("calendar.Recurrence.ByMonthDay", "On the {0}")(dayOrdinal);
                    }
                }), that.showBydaylastOption = ko.pureComputed(function() {
                    var initialDate = that.initialDate();
                    if (initialDate) {
                        var daysInMonth = Time.daysInMonth(initialDate.month, initialDate.year);
                        return initialDate.day > daysInMonth - 7;
                    }
                }), that.updateMonthlyRepetition = function(monthlyRepetition) {
                    monthlyRepetition = monthlyRepetition || ko.unwrap(that.monthlyRepetition);
                    var initialDate = ko.unwrap(that.initialDate);
                    if (that.frequency() === RecurrenceRule.frequencies.monthly) {
                        var weekDay = Recur.numericDayToIcalDay(initialDate.dayOfWeek());
                        "bydaynth" === monthlyRepetition ? (that.byday([ that.weekDayInMonth() + weekDay ]), 
                        that.bymonthday(null)) : "bydaylast" === monthlyRepetition ? (that.byday([ "-1" + weekDay ]), 
                        that.bymonthday(null)) : (that.byday(null), that.bymonthday([ initialDate.day ]));
                    }
                }, that.monthlyRepetition = ko.observable(null), that.monthlyRepetition.subscribe(function(newValue) {
                    that.updateMonthlyRepetition(newValue);
                }), that.monthlyRepetitionOptions = ko.pureComputed(function() {
                    return [ {
                        text: that.bymonthdayText(),
                        value: "bymonthday",
                        show: ko.observable(!0)
                    }, {
                        text: that.bydaynthText(),
                        value: "bydaynth",
                        show: ko.observable(!0)
                    }, {
                        text: that.bydaylastText(),
                        value: "bydaylast",
                        show: that.showBydaylastOption()
                    } ];
                }), that.selectMonthlyRepetition = function(frequency) {
                    var recurrence = that.recurrence();
                    if (!recurrence || !recurrence.tooComplex()) {
                        var bymonthday = that.bymonthday(), byday = that.byday(), freq = frequency || that.frequency();
                        if (freq === RecurrenceRule.frequencies.monthly) {
                            var initialDate = that.initialDate(), repetitionByDay = freq === RecurrenceRule.frequencies.monthly && byday && 0 !== byday.length, repetitionByMonthDay = bymonthday && 0 !== bymonthday.length, zeroIndexedDayOfWeek = initialDate.dayOfWeek() - 1;
                            if (that.monthlyRepetition("bymonthday"), repetitionByDay || repetitionByMonthDay) {
                                if (repetitionByDay) {
                                    var byDaySplit = /^(\-?\d+)(\w\w)$/.exec(byday[0]);
                                    byDaySplit[1] && byDaySplit[2] === daysOfWeek[zeroIndexedDayOfWeek] && daysOfWeek.indexOf(byDaySplit[2]) >= 0 && daysOfWeek.indexOf(byDaySplit[2]) === zeroIndexedDayOfWeek && that.monthlyRepetition(parseInt(byDaySplit[1], 10) > 0 ? "bydaynth" : "bydaylast");
                                }
                                if (repetitionByMonthDay) {
                                    var firstByMonthDay = bymonthday[0], isValidByMonthDay = /^\d+$/.test(firstByMonthDay) && parseInt(firstByMonthDay, 10) > 0 && firstByMonthDay === initialDate.day;
                                    that.monthlyRepetition(isValidByMonthDay ? "bymonthday" : null);
                                }
                            }
                        }
                    }
                }, that.weekDays = ko.pureComputed(function() {
                    var globalSettings = that.state.preferences.global();
                    return daysOfWeek.slice().splice(globalSettings.weekendStart + 7 - 5, 5);
                }), that.recurrenceDescription = ko.pureComputed(function() {
                    if (!that.recurrence()) return that.singleOccurrence;
                    var globalPreferences = that.state.preferences.global();
                    return that.recurrence().toLocaleString(that.initialDate(), globalPreferences);
                }), that.prevRecurrence = null, that.repeats = ko.pureComputed({
                    read: function() {
                        return !!that.recurrence();
                    },
                    write: function(value) {
                        that.toggleRecurrence(that);
                    }
                }), that.tooComplex = ko.pureComputed(function() {
                    return that.recurrence() && that.recurrence().tooComplex();
                }), that.toggleRecurrence = function(viewModel, e) {
                    if (that.recurrence()) that.prevRecurrence = that.recurrence(), that.recurrence(null), 
                    that.frequency(null), that.count(null), that.until(null), that.interval(null); else {
                        var recurrence = that.prevRecurrence || new RecurrenceRule(Recur.fromData({
                            freq: RecurrenceRule.frequencies.daily
                        }));
                        that.frequency(recurrence.rrule.freq), that.until(recurrence.rrule.until), that.count(recurrence.rrule.count), 
                        that.interval(recurrence.rrule.interval), that.recurrence(recurrence), that.selectMonthlyRepetition(), 
                        that.setWeekStart(), that.isSlideIn || that.prevRecurrence && !that.prevRecurrence.isEmpty() || that.showRecurrence();
                    }
                }, that.deleteRecurrence = function() {
                    that.toggleRecurrence(), that.prevRecurrence = null;
                }, that.rruleTooltip = ko.pureComputed(function() {
                    return that.recurrence() && that.recurrence().tooComplex() && that.recurrence().rrule.toString();
                }), that.recurrenceProperties.forEach(function(recurProperty) {
                    that[recurProperty].subscribe(updateRecurrence);
                }), that.until.subscribeChanged(function(newValue, previousValue) {
                    newValue && previousValue && setTimeout(function() {
                        var eventInstance = that.eventInstance(), dateOfFirstOccurence = eventInstance && eventInstance.event.startDate;
                        dateOfFirstOccurence && newValue.compare(dateOfFirstOccurence) < 0 && that.until(previousValue);
                    }, 1);
                }), that.limit = ko.pureComputed({
                    read: function() {
                        return that.count() ? "count" : that.until() ? "until" : "forever";
                    },
                    write: function(newLimitation) {
                        if ("count" === newLimitation) that.until(null), that.count() || that.count(1); else if ("until" === newLimitation) {
                            if (!that.until()) {
                                var sevenDaysDuration = Duration.fromData({
                                    days: 7
                                }), defaultUntil = that.initialDate().clone().addDuration(sevenDaysDuration);
                                defaultUntil = defaultUntil._normalize(), that.until(defaultUntil);
                            }
                            that.count(null);
                        } else that.until(null), that.count(null);
                    }
                });
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/DeleteEventInstanceAction.js", [ "common/util.js", "common/ActionBehavior.js", "calendar/ical/TimeZone.js", "calendar/ical/Property.js", "calendar/actions/ScopeDetectionError.js" ], function(util, ActionBehavior, TimeZone, Property, ScopeDetectionError) {
        function DeleteEventInstanceAction(options) {
            util.extend(this, util.pick(options, "eventInstance", "data", "scope")), ActionBehavior.installInto(this);
        }
        var scopes = [ "this", "thisAndFuture", "all" ];
        return DeleteEventInstanceAction.prototype.validate = function() {
            if (!this.eventInstance.event.calendar.writable) throw new Error("Only writable calendars can be deleted");
            if (null !== this.scope && void 0 !== this.scope) {
                if (-1 === scopes.indexOf(this.scope)) throw new Error("Unknown scope: " + this.scope + ", should be one of: " + scopes.join(", "));
                if ("this" !== this.scope) {
                    if (!this.eventInstance.event.isRecurring()) throw new Error("scope: " + this.scope + " is only supported for recurring events");
                    if (this.eventInstance.details.isRecurrenceException()) throw new Error("scope: " + this.scope + " is not supported when deleting a recurrence exception");
                    if ("thisAndFuture" === this.scope && (this.eventInstance.first || this.eventInstance.last)) throw new Error("scope: thisAndFuture is not supported on the " + (this.eventInstance.first ? "first" : "last") + " instance in a series");
                }
            }
        }, DeleteEventInstanceAction.prototype.name = "DeleteEventInstanceAction", DeleteEventInstanceAction.prototype.detectScope = function() {
            var eventInstance = this.eventInstance;
            if (eventInstance.event.isRecurring()) {
                if (eventInstance.first && eventInstance.last) return [ "all" ];
                var result = [ "this" ];
                return eventInstance.details.isRecurrenceException() || (result.push("all"), eventInstance.first || eventInstance.last || result.push("thisAndFuture")), 
                result;
            }
            return [ "this" ];
        }, DeleteEventInstanceAction.prototype.removeEvent = function(context, cb) {
            var state = context.state, backend = context.backend, eventInstance = this.eventInstance, event = eventInstance.event, vcalendar = event.component.parent, calendar = eventInstance.event.calendar;
            delete calendar.events[event.uid], calendar.version(calendar.version() + 1), backend.deleteCalendarResource(state.user(), calendar.id, vcalendar.resource, cb);
        }, DeleteEventInstanceAction.prototype.removeThisInstance = function(context, cb) {
            var state = context.state, backend = context.backend, eventInstance = this.eventInstance;
            if (eventInstance.first && eventInstance.last) return this.removeAllInstances(context, cb);
            var event = eventInstance.event, vcalendar = event.component.parent, calendar = eventInstance.event.calendar;
            if (calendar.removeEventInstances(eventInstance), eventInstance.details.isRecurrenceException()) {
                var exceptionComponent = eventInstance.details.component;
                exceptionComponent.parent.removeSubcomponent(exceptionComponent), delete event.exceptions[eventInstance.recurrenceId.toString()];
                var exceptions = Object.keys(event.exceptions).map(function(recurrenceId) {
                    return event.exceptions[recurrenceId];
                });
                event.clearExceptions(), exceptions.forEach(function(exception) {
                    event.relateException(exception);
                });
            }
            event.addExDate(eventInstance.recurrenceId), calendar.version(calendar.version() + 1), 
            backend.saveCalendarResource(state.user(), calendar.id, vcalendar.resource, vcalendar.toString(), function(err, data) {
                err || (vcalendar.resource.etag = data.headers.etag), cb(err);
            });
        }, DeleteEventInstanceAction.prototype.removeAllInstances = function(context, cb) {
            var eventInstance = this.eventInstance, event = eventInstance.event;
            eventInstance.event.calendar.removeEventInstanceByEvents(event), this.removeEvent(context, cb);
        }, DeleteEventInstanceAction.prototype.removeThisAndFutureInstance = function(context, cb) {
            var state = context.state, backend = context.backend, eventInstance = this.eventInstance, event = eventInstance.event, calendar = eventInstance.event.calendar, vcalendar = event.component.parent;
            event.component.getAllProperties("rrule").forEach(function(property) {
                var rrule = property.getFirstValue();
                "number" == typeof rrule.count ? rrule.count = eventInstance.count : (rrule.until = eventInstance.recurrenceId.clone(), 
                rrule.until.day -= 1), property.setValue(rrule);
            }), calendar.removeEventInstanceByEvents(event), calendar.version(calendar.version() + 1), 
            backend.saveCalendarResource(state.user(), calendar.id, vcalendar.resource, vcalendar.toString(), function(err, data) {
                err || (vcalendar.resource.etag = data.headers.etag), cb(err);
            });
        }, DeleteEventInstanceAction.prototype.execute = function(context, cb) {
            var eventInstance = this.eventInstance, event = eventInstance.event, calendar = eventInstance.event.calendar;
            if (!this.scope) {
                var detectedScopes = this.detectScope();
                if (detectedScopes.length > 1) return cb(new ScopeDetectionError(detectedScopes));
                this.scope = detectedScopes[0];
            }
            if (!event.isRecurring()) return calendar.removeEventInstances(eventInstance), this.removeEvent(context, cb);
            switch (this.scope) {
              case "this":
                return this.removeThisInstance(context, cb);

              case "all":
                return this.removeAllInstances(context, cb);

              case "thisAndFuture":
                return this.removeThisAndFutureInstance(context, cb);
            }
        }, DeleteEventInstanceAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/dateSelector/DateSelectorViewModel.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/ical/Time.js", "calendar/model/DateRange.js" ], function(ko, Time, DateRange) {
        function DateSelectorViewModel(params) {
            var that = this;
            that.date = params.date, that.disabled = params.disabled, that.dateRange = ko.observable(that.date() && DateRange.fromTime(that.date())), 
            that.openState = ko.observable(!1), that.tabindex = params.tabindex, that.date.subscribe(function(newDate) {
                newDate && that.dateRange(DateRange.fromTime(newDate));
            }), that.onDateChange = function(dateRange) {
                var newDate = dateRange.from.clone();
                if (that.date()) {
                    var previousDateTime = that.date().clone();
                    newDate.isDate = previousDateTime.isDate, newDate.hour = previousDateTime.hour, 
                    newDate.minute = previousDateTime.minute, newDate.second = previousDateTime.second;
                }
                that.date(newDate), that.openState(!1);
            };
        }
        return DateSelectorViewModel;
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/miniCalendar/MiniCalendarViewModel.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "calendar/model/DateRange.js", "calendar/ical/Time.js", "calendar/ical/Duration.js" ], function(ko, util, DateRange, Time, Duration) {
        function MiniCalendarViewModel(params) {
            var that = this;
            that.supportsRangeSelection = ko.pureComputed(function() {
                return ko.unwrap(params.rangeSelection);
            }), that.currentDate = ko.pureComputed(function() {
                return ko.unwrap(params.currentDate) || Time.now().startOfDay();
            });
            var dateRangeEqualityComparer = function(previous, next) {
                return previous.equal(next);
            };
            that.value = ko.isObservable(params.value) ? params.value : ko.observable(params.value), 
            that.value.peek() || that.value(new DateRange({
                from: that.currentDate()
            })), that.dateRange = ko.observable(that.value()), that.dateRange.equalityComparer = dateRangeEqualityComparer, 
            that.value.subscribe(function(dateRange) {
                that.dateRange(dateRange);
            }), that.selection = ko.observable(null), that.monthRange = ko.computed(function() {
                return that.dateRange().expandToMonth();
            }), that.monthRange.equalityComparer = dateRangeEqualityComparer, that.expandedDateRange = ko.computed(function() {
                var from = that.monthRange().from.startOfWeek(), to = from.clone();
                return to.day += 42, new DateRange({
                    from: from,
                    to: to
                });
            }), that.expandedDateRange.equalityComparer = dateRangeEqualityComparer, that.emitChangeEvent = function() {
                params.onChange && params.onChange(that.value());
            }, that.weeks = util.range(6).map(function(w) {
                var week = {
                    days: []
                };
                return week.days = util.range(7).map(function(d) {
                    var date = ko.pureComputed(function() {
                        return that.expandedDateRange().dates()[7 * w + d];
                    }), dayAfter = ko.pureComputed(function() {
                        return date().dayAfter();
                    });
                    return {
                        outsideMonth: ko.pureComputed(function() {
                            return !that.monthRange().contains(date());
                        }),
                        hasEvents: ko.pureComputed(function() {
                            return !(!params.hasEvents || !params.hasEvents(date()));
                        }),
                        highlight: ko.pureComputed(function() {
                            return that.value().contains(date());
                        }),
                        selected: ko.pureComputed(function() {
                            return !(!that.selection() || !that.selection().contains(date()));
                        }),
                        date: date,
                        present: ko.pureComputed(function() {
                            return 0 === date().compare(that.currentDate());
                        }),
                        showDay: function() {
                            that.value(new DateRange({
                                from: date(),
                                to: dayAfter()
                            })), that.emitChangeEvent();
                        },
                        dragStart: function() {
                            if (!that.supportsRangeSelection()) return !1;
                            that.selection(new DateRange({
                                from: date(),
                                duration: Duration.fromString("P1D")
                            }));
                        },
                        dragEnd: function() {
                            that.selection(null);
                        },
                        dragOver: function(e, source) {
                            var from = source.date(), to = dayAfter();
                            from.compare(date()) < 0 ? that.selection(new DateRange({
                                from: from,
                                to: to
                            })) : that.selection(new DateRange({
                                from: date(),
                                to: from.dayAfter()
                            }));
                        },
                        drop: function() {
                            that.selection().days <= 7 ? that.value(that.selection()) : that.value(that.selection().expandToWeeks()), 
                            that.emitChangeEvent();
                        }
                    };
                }), week.number = ko.pureComputed(function() {
                    return week.days[0].date().weekNumber(Time.weekStart);
                }), week.showWeek = function() {
                    that.supportsRangeSelection() && (that.value(new DateRange({
                        from: week.days[0].date(),
                        duration: Duration.fromString("P7D")
                    })), that.emitChangeEvent());
                }, week;
            }), that.showPrevious = function() {
                var to = that.monthRange().from, from = to.clone();
                from.month -= 1, that.dateRange(new DateRange({
                    from: from,
                    to: to
                }));
            }, that.showNext = function() {
                var from = that.monthRange().to, to = from.clone();
                to.month += 1, that.dateRange(new DateRange({
                    from: from,
                    to: to
                }));
            }, that.showMonth = function() {
                that.supportsRangeSelection() && (that.value(that.monthRange()), that.emitChangeEvent());
            }, that.highlightedDates = ko.observableArray([]);
        }
        return MiniCalendarViewModel;
    });
}(), System.registerDynamic("calendar/components/miniCalendar/miniCalendar.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "miniCalendar",
        content: '<table cellspacing="0">\n    <thead>\n        <tr>\n            <td colspan="8">\n                <div class="navigation">\n                    <div class="month-label" data-bind="click: showMonth, formatDate: { value: monthRange().from, format: \'MMMM y\' }"></div>\n                    <button class="previous" data-bind="click: showPrevious"></button>\n                    <button class="next" data-bind="click: showNext"></button>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <th class="week-number"></th>\n            \x3c!-- ko foreach: weeks[0].days --\x3e\n            <th class="day-names" data-bind="text: inter.calendars.gregorian.dayNames.format.narrow[$data.date().dayOfWeek() - 1]"></th>\n            \x3c!-- /ko --\x3e\n        </tr>\n    </thead>\n    <tbody data-bind="foreach: weeks">\n        <tr>\n            <th class="week-number" data-bind="text: number, click: showWeek, css: { \'no-range\': !$parent.supportsRangeSelection() }"></th>\n            \x3c!--  ko foreach: days --\x3e\n            <td data-bind="css: {\n                             outsideMonth: outsideMonth,\n                             hasEvents: hasEvents,\n                             highlight: highlight,\n                             present: present,\n                             selected: selected\n                           },\n                           click: showDay,\n                           dragZone: { name: \'miniCalendarDay\', dragDistance: 1, element: null, dragStart: dragStart, dragEnd: dragEnd },\n                           dropZone: { accepts: \'miniCalendarDay\', dragOver: dragOver, drop: drop },\n                           formatDate: { value: date, format: \'d\' }" class="day"></td>\n            \x3c!-- /ko --\x3e\n        </tr>\n    </tbody>\n</table>\n'
    }), module.exports;
}), function() {
    (0, System.amdDefine)("calendar/components/miniCalendar/miniCalendar.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/components/miniCalendar/MiniCalendarViewModel.js", "calendar/components/miniCalendar/miniCalendar.ko" ], function(ko, MiniCalendarViewModel) {
        ko.components.register("one-mini-calendar", {
            template: {
                element: "miniCalendar"
            },
            viewModel: {
                createViewModel: function(params) {
                    return new MiniCalendarViewModel(params);
                }
            }
        });
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/dateInput/DateInputViewModel.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/ical/Time.js" ], function(ko, Time) {
        function DateInputViewModel(params) {
            var that = this;
            that.disabled = params.disabled, that.date = ko.isObservable(params.date) ? params.date : ko.observable(params.date), 
            that.lastValidDate = ko.observable(that.date()), that.tabindex = params.tabindex, 
            that.date.subscribe(function(newValue) {
                newValue && that.lastValidDate(newValue);
            }), that.value = ko.computed({
                read: function() {
                    var validDate = that.lastValidDate();
                    return inter.renderDate(validDate, "shortDate");
                },
                write: function(value) {
                    that.date(that.parseDate(value));
                }
            }).extend({
                notify: "always"
            });
        }
        var ymdOrder = inter.calendars.gregorian.datePartsOrder, ymdOrderIndex = {
            year: ymdOrder.indexOf("y"),
            month: ymdOrder.indexOf("m"),
            day: ymdOrder.indexOf("d")
        }, mdOrder = ymdOrder.replace("y", ""), mdOrderIndex = {
            month: mdOrder.indexOf("m"),
            day: mdOrder.indexOf("d")
        };
        return DateInputViewModel.prototype.parseDate = function(text) {
            function getPart(index) {
                return parseInt(parts[index], 10);
            }
            var date = this.lastValidDate().clone(), parts = text.split(/\D+/).filter(function(part) {
                return part;
            }), day = date.day, month = date.month, year = date.year;
            if (0 === parts.length) return null;
            if (1 === parts.length) {
                var dateString = parts[0];
                if (6 === parts[0].length) return this.parseDate(dateString.substr(0, 2) + "/" + dateString.substr(2, 2) + "/" + dateString.substr(4, 2));
                day = getPart(0);
            } else 2 === parts.length ? (month = getPart(mdOrderIndex.month), day = getPart(mdOrderIndex.day)) : (year = getPart(ymdOrderIndex.year), 
            month = getPart(ymdOrderIndex.month), day = getPart(ymdOrderIndex.day));
            return 0 < year && year < 100 && (year = 100 * Math.floor(date.year / 100) + year), 
            day < 1 || day > 31 || month < 1 || month > 12 || year < 0 ? null : (date.day = day, 
            date.month = month, date.year = year, date);
        }, DateInputViewModel;
    });
}(), System.registerDynamic("calendar/components/dateInput/dateInput.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "dateInput",
        content: '<input type="text"\n       value=""\n       data-bind="value: value,\n                  selectOnFocus: true,\n                  disable: disabled,\n                  attr: { tabindex: tabindex }"\n       class="field" />\n'
    }), module.exports;
}), function() {
    (0, System.amdDefine)("calendar/components/dateInput/dateInput.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/components/dateInput/DateInputViewModel.js", "calendar/components/dateInput/dateInput.ko", "3rdparty/knockout.selectOnFocus.js" ], function(ko, DateInputViewModel) {
        ko.components.register("one-date-input", {
            template: {
                element: "dateInput"
            },
            viewModel: {
                createViewModel: function(params) {
                    return new DateInputViewModel(params);
                }
            }
        });
    });
}(), System.registerDynamic("calendar/components/dateSelector/dateSelector.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "dateSelector",
        content: '<one-date-input params="date: date, disabled: disabled, tabindex: tabindex"></one-date-input>\n\x3c!-- ko ifnot: disabled --\x3e\n<div class="dropdown-toggle" data-bind="popupTemplate: {\n                                    template: \'datePickerDropdown\',\n                                    \'positioning\': [\n                                        \'inside-right outside-bottom\',\n                                        \'inside-right outside-top\'\n                                    ],\n                                    closeOnClickInPopup: false,\n                                    openState: openState\n                                }">\n    <span class="calendar-icon"></span>\n</div>\n\x3c!-- /ko --\x3e\n\n<script type="text/html" id="datePickerDropdown">\n    <div class="popupDropdown date-selector-dropdown">\n        <one-mini-calendar params="value: dateRange, rangeSelection: false, onChange: onDateChange"></one-mini-calendar>\n    </div>\n<\/script>\n'
    }), module.exports;
}), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory(require("jquery"), require("knockout")) : "function" == typeof define && define.amd ? define("3rdparty/knockout.popupTemplate.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js" ], factory) : factory($, ko);
    }(0, function($, ko) {
        function callMeMaybe(callback) {
            "function" == typeof callback && callback();
        }
        function callInSequence() {
            var args = Array.prototype.slice.call(arguments);
            return function() {
                args.filter(function(arg) {
                    return "function" == typeof arg;
                }).forEach(function(arg) {
                    arg.apply(null, arguments);
                });
            };
        }
        function Popup(element, bindingContext, options) {
            this.element = element, this.$element = $(element), this.options = options, this.bindingContext = bindingContext, 
            this.subscriptions = [], this.bestPosition = ko.observable(null), this.$popupHolder = null, 
            this.bestPosition.equalityComparer = function(a, b) {
                return !(!a && b) && (!(a && !b) && (a.vertical === b.vertical && a.horizontal === b.horizontal));
            }, this.subscriptions.push(this.options.openState.subscribe(this.observe.bind(this))), 
            this.subscriptions.push(this.options.template.subscribe(function() {
                this.render();
            }, this)), this.options.renderOnInit && (this.render(), this.reposition(), this.close()), 
            this.options.openState() && this.observe(!0), ko.utils.domNodeDisposal.addDisposeCallback(this.element, function() {
                this.subscriptions.forEach(function(item) {
                    item.dispose();
                });
            }.bind(this));
        }
        function eachIFrameContents(callback) {
            $("iframe").each(function(index, iframe) {
                var src = iframe.src, origin = window.location.origin || location.protocol + "//" + location.host;
                if (!src || 0 === src.indexOf(origin)) {
                    var $contents;
                    try {
                        $contents = $(iframe).contents();
                    } catch (e) {}
                    $contents && $contents.each(callback);
                }
            });
        }
        function stringToPositioning(positionString) {
            var positioningTokens = positionString.split(" "), positioning = {};
            return positioningTokens[0] && (positioning.horizontal = positioningTokens[0]), 
            positioningTokens[1] && (positioning.vertical = positioningTokens[1]), positioning;
        }
        function normalizePositioning(positioning) {
            return "string" == typeof positioning && (positioning = stringToPositioning(positioning)), 
            {
                vertical: ko.isObservable(positioning.vertical) ? positioning.vertical : ko.observable(positioning.vertical),
                horizontal: ko.isObservable(positioning.horizontal) ? positioning.horizontal : ko.observable(positioning.horizontal)
            };
        }
        function applyDefaults(positioning) {
            -1 === VERTICAL_POSITIONS.indexOf(positioning.vertical.peek()) && positioning.vertical("outside-bottom"), 
            -1 === HORIZONTAL_POSITIONS.indexOf(positioning.horizontal.peek()) && positioning.horizontal("inside-left");
        }
        function configFixupPositioning(config) {
            var positioning = config.positioning instanceof Array ? config.positioning : [ config.positioning ];
            return (positioning = positioning.map(normalizePositioning)).forEach(applyDefaults), 
            config.positioning = positioning, config;
        }
        function configFixupOpenState(config) {
            return ko.isObservable(config.openState) || ("boolean" == typeof config.openState ? config.openState = ko.observable(config.openState) : config.openState = ko.observable(!1)), 
            config;
        }
        Popup.prototype.disabled = function() {
            var disabler = this.options.disable;
            return ko.isObservable(disabler) ? !!disabler() : !!disabler;
        }, Popup.prototype.observe = function(newValue) {
            var that = this;
            if (newValue) {
                if (this.disabled()) return;
                this.options.beforeOpen(), this.open(function() {
                    that.options.afterOpen();
                });
            } else this.options.beforeClose(), this.close(function() {
                that.options.afterClose();
            });
        }, Popup.prototype.isInsideViewport = function(anchorOffset, boundingRect, window, position) {
            var offset = this.calculateOffset(anchorOffset, position);
            return window.pageXOffset <= offset.left && window.pageYOffset <= offset.top && offset.left + boundingRect.width <= window.innerWidth + window.pageXOffset && offset.top + boundingRect.height <= window.innerHeight + window.pageYOffset;
        }, Popup.prototype.getBestPosition = function() {
            var positioning = this.options.positioning;
            if (!this.$popupHolder || !this.options.openState()) return ko.toJS(positioning[0]);
            for (var anchorOffset = this.$element.offset(), boundingRect = this.$popupHolder[0].getBoundingClientRect(), bestCandidate = null, i = 0; i < positioning.length; i += 1) {
                var position = ko.toJS(positioning[i]), popupOffset = this.calculateOffset(anchorOffset, position), constrainedOffset = this.keepInViewport(popupOffset, boundingRect, window), distance = Math.sqrt(Math.pow(constrainedOffset.left - popupOffset.left, 2) + Math.pow(constrainedOffset.top - popupOffset.top, 2));
                if (0 === distance) return position;
                (!bestCandidate || distance < bestCandidate.distance) && (bestCandidate = {
                    position: position,
                    distance: distance
                });
            }
            return bestCandidate.position;
        }, Popup.prototype.createElementContainer = function() {
            var $popupHolder, classes = [ "popupTemplate", "popup-container" ];
            this.options.className && classes.push(this.options.className), this.bestPosition(this.getBestPosition());
            var position = ko.computed(function() {
                var position = this.bestPosition();
                return "horizontal-" + position.horizontal + " vertical-" + position.vertical;
            }, this);
            this.subscriptions.push(position), classes.push(position()), ($popupHolder = $('<div class="' + classes.join(" ") + '"></div>')).css("position", "absolute"), 
            this.subscriptions.push(position.subscribe(this.removePositionClasses, this, "beforeChange")), 
            this.subscriptions.push(position.subscribe(this.setPositionClasses, this));
            var positioning = ko.computed(function() {
                return ko.toJS(this.options.positioning);
            }, this);
            return this.subscriptions.push(positioning), this.subscriptions.push(positioning.subscribe(this.reposition, this)), 
            this.setPositionClasses(), this.reposition(), $popupHolder;
        }, Popup.prototype.removePositionClasses = function(positionClasses) {
            this.$popupHolder && this.$popupHolder.removeClass(positionClasses);
        }, Popup.prototype.setPositionClasses = function(positionClasses) {
            this.$popupHolder && this.$popupHolder.toggleClass(positionClasses);
        }, Popup.prototype.render = function(done) {
            this.$popupHolder || (this.$popupHolder = this.createElementContainer()), this.$popupHolder.appendTo($("body")), 
            ko.utils.domData.set(this.$popupHolder[0], "anchor", this);
            var innerBindingContext = "data" in this.options ? this.bindingContext.createChildContext(this.options.data) : this.bindingContext;
            ko.renderTemplate(this.options.template(), innerBindingContext, {
                afterRender: done
            }, this.$popupHolder[0]), ko.utils.domNodeDisposal.addDisposeCallback(this.element, this.remove.bind(this));
        }, Popup.prototype.remove = function(done) {
            this.options.disposalCallback ? this.options.disposalCallback(this.$popupHolder[0]) : ko.removeNode(this.$popupHolder[0]), 
            callMeMaybe(done);
        }, Popup.prototype.reposition = function(e) {
            if (this.$popupHolder) {
                var scrollTarget = e && "scroll" === e.type && e.target;
                if (!(scrollTarget && this.$popupHolder.has(scrollTarget).length > 0)) {
                    this.bestPosition(this.getBestPosition());
                    var boundingRect = this.$popupHolder[0].getBoundingClientRect(), offset = this.calculateInitialPosition();
                    offset = this.keepInViewport(offset, boundingRect, window), this.$popupHolder.offset(offset);
                }
            }
        }, Popup.prototype.calculateOffset = function(anchorOffset, position) {
            var offset = ko.utils.extend({}, anchorOffset), horizontal = position.horizontal, vertical = position.vertical, $anchor = this.$element, $popupHolder = this.$popupHolder;
            return "outside-left" === horizontal ? offset.left -= $popupHolder.outerWidth() : "middle" === horizontal ? (offset.left += Math.round($anchor.outerWidth() / 2), 
            offset.left -= Math.round($popupHolder.width() / 2)) : "inside-right" === horizontal ? (offset.left += $anchor.outerWidth(), 
            offset.left -= $popupHolder.width()) : "outside-right" === horizontal && (offset.left += $anchor.outerWidth()), 
            "outside-top" === vertical ? offset.top -= $popupHolder.height() : "middle" === vertical ? (offset.top += Math.round($anchor.outerHeight() / 2), 
            offset.top -= Math.round($popupHolder.height() / 2)) : "inside-bottom" === vertical ? (offset.top += $anchor.outerHeight(), 
            offset.top -= $popupHolder.height()) : "outside-bottom" === vertical && (offset.top += $anchor.outerHeight()), 
            offset;
        }, Popup.prototype.calculateInitialPosition = function() {
            return this.calculateOffset(this.$element.offset(), this.bestPosition());
        }, Popup.prototype.keepInViewport = function(offset, boundingRect, window) {
            var result = ko.utils.extend({}, offset);
            return result.left + boundingRect.width > window.innerWidth + window.pageXOffset && (result.left = Math.max(window.innerWidth + window.pageXOffset - boundingRect.width, 0)), 
            result.top + boundingRect.height > window.innerHeight + window.pageYOffset && (result.top = Math.max(window.innerHeight + window.pageYOffset - boundingRect.height, 0)), 
            result.left = Math.max(window.pageXOffset, result.left), result.top = Math.max(window.pageYOffset, result.top), 
            result;
        }, Popup.prototype.hide = function(done) {
            this.$popupHolder.css("visibility", "hidden"), callMeMaybe(done);
        }, Popup.prototype.show = function(done) {
            this.$popupHolder.css("visibility", "visible"), this.reposition(), callMeMaybe(done);
        }, Popup.prototype.toggleClasses = function(bool) {
            this.$popupHolder.toggleClass("open", bool), this.$popupHolder.toggleClass("closed", !bool);
        }, Popup.prototype.open = function(done) {
            var that = this;
            this.options.renderOnInit ? (this.toggleClasses(!0), this.show(done)) : this.render(function() {
                that.reposition(), that.toggleClasses(!0), callMeMaybe(done), that.reposition();
            });
        }, Popup.prototype.close = function(done) {
            this.options.renderOnInit ? (this.toggleClasses(!1), this.hide(done)) : (this.toggleClasses(!1), 
            this.remove(done));
        }, Popup.closeOnEsc = {
            elements: [],
            handlerRegistered: !1,
            handler: function(event) {
                if (Popup.closeOnEsc.elements.length > 0) {
                    var lastIndex = Popup.closeOnEsc.elements.length - 1, lastItem = Popup.closeOnEsc.elements[lastIndex];
                    27 === event.which && lastItem.openState() && lastItem.openState(!1);
                }
            },
            setupHandler: function() {
                Popup.closeOnEsc.handlerRegistered || (document.addEventListener("keydown", Popup.closeOnEsc.handler, !1), 
                eachIFrameContents(function(index, doc) {
                    doc.addEventListener("keydown", Popup.closeOnEsc.handler, !1);
                }), Popup.closeOnEsc.handlerRegistered = !0);
            },
            tearDownHandler: function() {
                Popup.closeOnEsc.handlerRegistered && 0 === Popup.closeOnEsc.elements.length && (document.removeEventListener("keydown", Popup.closeOnEsc.handler, !1), 
                eachIFrameContents(function(index, doc) {
                    doc.removeEventListener("keydown", Popup.closeOnEsc.handler, !1);
                }), Popup.closeOnEsc.handlerRegistered = !1);
            },
            registerElement: function(element) {
                Popup.closeOnEsc.elements.push(element), Popup.closeOnEsc.setupHandler();
            },
            unregisterElement: function(element) {
                Popup.closeOnEsc.elements = Popup.closeOnEsc.elements.filter(function(el) {
                    return el !== element;
                }), Popup.closeOnEsc.tearDownHandler();
            }
        };
        var HORIZONTAL_POSITIONS = [ "outside-left", "inside-left", "middle", "inside-right", "outside-right" ], VERTICAL_POSITIONS = [ "outside-top", "inside-top", "middle", "inside-bottom", "outside-bottom" ];
        return ko.bindingHandlers.popupTemplate = {
            _internals: {
                Popup: Popup,
                configFixupPositioning: configFixupPositioning,
                configFixupOpenState: configFixupOpenState
            },
            init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                function removeEventsListener($container, $element) {
                    $container.off("mouseleave.popupTemplate"), $container.off("mouseenter.popupTemplate"), 
                    $element.off("mouseleave.popupTemplate");
                }
                function closePopupHandler(event) {
                    if (1 === event.which && config.openState()) {
                        var target = event.target || document.elementFromPoint(event.pageX || event.clientX, event.pageY || event.clientY), $targetPopup = $(target).closest(".popup-container"), inPopup = $targetPopup.length > 0;
                        if (inPopup) {
                            var targetPopup = ko.utils.domData.get($targetPopup[0], "anchor"), $targetPopupHolder = targetPopup.$popupHolder, $targetAnchor = targetPopup.$element, $popupHolder = popup.$popupHolder;
                            inPopup = $popupHolder.is($targetPopupHolder) || $popupHolder.has($targetAnchor).length > 0;
                        }
                        $element.is(target) || $element.has(target).length > 0 || inPopup || config.openState(!1);
                    }
                }
                function closeOnClickInPopupHandler(event) {
                    if (1 === event.which && config.closeOnClickInPopup && config.openState()) {
                        var target = event.target || document.elementFromPoint(event.pageX || event.clientX, event.pageY || event.clientY), $popupHolder = popup.$popupHolder;
                        ($popupHolder.is(target) || $popupHolder.has(target).length > 0) && config.openState(!1);
                    }
                }
                function addCloseHandler() {
                    eachIFrameContents(function(index, doc) {
                        config.outsideHandler && (doc.addEventListener("click", closePopupHandler, !0), 
                        doc.addEventListener("click", closeOnClickInPopupHandler, !0));
                    }), config.outsideHandler && (document.addEventListener("click", closePopupHandler, !0), 
                    document.addEventListener("click", closeOnClickInPopupHandler, !0)), config.closeOnEsc && Popup.closeOnEsc.registerElement(config), 
                    $(window).on("resize", popupReposition), window.addEventListener("scroll", popupReposition, !0);
                }
                function removeCloseHandler() {
                    eachIFrameContents(function(index, doc) {
                        config.outsideHandler && (doc.removeEventListener("click", closePopupHandler, !0), 
                        doc.removeEventListener("click", closeOnClickInPopupHandler, !0));
                    }), config.outsideHandler && (document.removeEventListener("click", closePopupHandler, !0), 
                    document.removeEventListener("click", closeOnClickInPopupHandler, !0)), config.closeOnEsc && Popup.closeOnEsc.unregisterElement(config), 
                    $(window).off("resize", popupReposition), window.removeEventListener("scroll", popupReposition, !0);
                }
                var config = valueAccessor(), defaultConfiguration = {
                    renderOnInit: !1,
                    className: "",
                    beforeOpen: function() {},
                    afterOpen: function() {},
                    beforeClose: function() {},
                    afterClose: function() {},
                    positioning: {},
                    anchorHandler: !0,
                    outsideHandler: !0,
                    closeOnEsc: !0,
                    closeOnClickInPopup: !1,
                    openOnMouseOver: null,
                    disposalCallBack: null,
                    disable: null
                };
                "string" == typeof config ? config = {
                    template: ko.observable(config)
                } : ko.isObservable(config) && "string" == typeof config() ? config = {
                    template: config
                } : config.hasOwnProperty("template") && (ko.isObservable(config.template) || (config.template = ko.observable(config.template))), 
                config = ko.utils.extend(defaultConfiguration, config), config = configFixupPositioning(config);
                var popup = new Popup(element, bindingContext, config = configFixupOpenState(config)), popupReposition = popup.reposition.bind(popup);
                config.beforeOpen = config.beforeOpen.bind(popup), config.afterOpen = config.afterOpen.bind(popup), 
                config.beforeClose = config.beforeClose.bind(popup), config.afterClose = config.afterClose.bind(popup);
                var $element = $(element), insidePopupTemplate = !1;
                if ((config.outsideHandler || config.closeOnEsc) && (config.afterOpen = callInSequence(addCloseHandler, config.afterOpen), 
                config.beforeClose = callInSequence(config.beforeClose, removeCloseHandler)), config.anchorHandler) if (!0 === defaultConfiguration.openOnMouseOver) {
                    var $popupTemplContainer;
                    $element.on("mouseover.popupTemplate", function(event) {
                        config.openState(!0), ($popupTemplContainer = $(popup.$popupHolder[0])).on("mouseover.popupTemplate", function(event) {
                            insidePopupTemplate = !0;
                        }), $popupTemplContainer.on("mouseleave.popupTemplate", function(event) {
                            insidePopupTemplate = !1, config.openState(!1), removeEventsListener($popupTemplContainer, $element);
                        }), $element.on("mouseleave.popupTemplate", function(event) {
                            setTimeout(function() {
                                !1 === insidePopupTemplate && (config.openState(!1), removeEventsListener($popupTemplContainer, $element));
                            }, 300);
                        }), event.stopPropagation(), event.preventDefault();
                    });
                } else $element.on("click.popupTemplate", function(event) {
                    1 === event.which && (config.openState(!config.openState()), event.stopPropagation(), 
                    event.preventDefault());
                });
                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                    removeCloseHandler();
                });
            }
        }, ko.bindingHandlers.popupTemplate;
    });
}(), function() {
    (0, System.amdDefine)("common/bindings/knockout.dropdownTemplate.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "3rdparty/knockout.popupTemplate.js" ], function($, ko) {
        var supportsCssAnimations = void 0 !== document.body.style.animationName;
        supportsCssAnimations || (supportsCssAnimations = void 0 !== document.body.style.webkitAnimationName), 
        ko.bindingHandlers.dropdownTemplate = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                var config = valueAccessor();
                "string" == typeof config && (config = {
                    template: config
                }), config.openState = ko.isObservable(config.openState) ? config.openState : ko.observable(!1), 
                config.className = "dropdownTemplate", !1 !== config.closeOnClickInPopup && (config.closeOnClickInPopup = !0), 
                config.positioning || (config.positioning = [ "inside-left outside-bottom", "inside-left outside-top" ]);
                var removeImmediately = !1;
                if (supportsCssAnimations) {
                    var modSequence = 0;
                    config.openState.subscribe(function() {
                        modSequence += 1;
                    }), config.disposalCallback = function(popup) {
                        var currentModSequence = modSequence;
                        removeImmediately ? ko.removeNode(popup) : $(popup).one("MSAnimationEnd webkitAnimationEnd animationend", function() {
                            modSequence === currentModSequence && ko.removeNode(popup);
                        });
                    };
                }
                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                    removeImmediately = !0;
                }), ko.bindingHandlers.popupTemplate.init(element, function() {
                    return config;
                }, allBindingsAccessor, viewModel, bindingContext);
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/dateSelector/dateSelector.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/components/dateSelector/DateSelectorViewModel.js", "calendar/components/miniCalendar/miniCalendar.js", "calendar/components/dateInput/dateInput.js", "calendar/components/dateSelector/dateSelector.ko", "common/bindings/knockout.dropdownTemplate.js" ], function(ko, DateSelectorViewModel) {
        ko.components.register("one-date-selector", {
            template: {
                element: "dateSelector"
            },
            viewModel: {
                createViewModel: function(params) {
                    return new DateSelectorViewModel(params);
                }
            }
        });
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/timeSelector/timeParser.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/ical/Time.js" ], function(ko, Time) {
        return function(text, lastValidDate) {
            function getPart(index) {
                return parseInt(parts[index], 10);
            }
            var datetime = (ko.isObservable(lastValidDate) ? lastValidDate() : lastValidDate).clone(), parts = text.split(/\D+/).filter(function(part) {
                return part;
            }), anteOrPostMeridiem = (text.toLowerCase().match(/am|pm/) || [])[0], shortTimeFormat = inter.calendars.gregorian.dateFormats.basic.shortTime, clock12Hours = /h.* a/.test(shortTimeFormat), hour = datetime.hour, minute = datetime.minute;
            if (0 === parts.length) return null;
            if (1 === parts.length) {
                var timeString = parts[0];
                timeString.length <= 2 ? (hour = getPart(0), minute = 0) : timeString.length <= 4 && (hour = parseInt(timeString.substr(0, timeString.length - 2), 10), 
                minute = parseInt(timeString.substr(timeString.length - 2), 10));
            } else 2 === parts.length && (hour = getPart(0), minute = getPart(1));
            return !anteOrPostMeridiem && clock12Hours && datetime.hour >= 12 && hour < 12 && (hour = (hour + 12) % 24), 
            "pm" === anteOrPostMeridiem && hour < 12 && (hour += 12), "am" === anteOrPostMeridiem && 12 === hour && (hour = 0), 
            hour < 0 || hour > 24 || minute < 0 || minute > 60 ? null : (datetime.hour = hour, 
            datetime.minute = minute, datetime.isDate = !1, datetime.toString(), datetime);
        };
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/timeSelector/TimeSelectorViewModel.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/ical/Time.js", "common/util.js", "calendar/components/timeSelector/timeParser.js" ], function(ko, Time, util, timeParser) {
        function TimeSelectorViewModel(params) {
            function normalizeTime(text) {
                return text.replace(/^0([1-9])/, "$1");
            }
            var that = this;
            that.date = params.date, that.disabled = ko.isObservable(params.disabled) ? params.disabled : ko.observable(params.disabled), 
            that.timeValue = ko.observable(inter.renderDate(that.date(), "shortTime")), that.timeQuery = ko.observable(that.timeValue()), 
            that.tabindex = params.tabindex, that.date.subscribe(function(newValue) {
                newValue && (that.lastValidDate(newValue), that.timeValue(inter.renderDate(newValue, "shortTime")));
            }), that.lastValidDate = ko.observable(that.date());
            var times = [];
            util.range(24, 0).forEach(function(hour) {
                times.push(inter.renderDate(new Date(2e3, 0, 1, hour, 0, 0, 0), "shortTime")), times.push(inter.renderDate(new Date(2e3, 0, 1, hour, 15, 0, 0), "shortTime")), 
                times.push(inter.renderDate(new Date(2e3, 0, 1, hour, 30, 0, 0), "shortTime")), 
                times.push(inter.renderDate(new Date(2e3, 0, 1, hour, 45, 0, 0), "shortTime"));
            }), that.timeData = ko.computed(function() {
                var timeDataHits = times.filter(function(time) {
                    var query = normalizeTime(that.timeQuery());
                    return query === normalizeTime(time).substring(0, query.length);
                });
                if (0 === timeDataHits.length) {
                    var parsedTime = timeParser(that.timeQuery(), that.lastValidDate);
                    if (parsedTime) {
                        var formattedTime = inter.renderDate(parsedTime, "shortTime");
                        timeDataHits.push(formattedTime);
                    }
                }
                return timeDataHits;
            }), that.visible = ko.observable(!1), that.focused = ko.observable(!1), that.visible.subscribe(function(value) {
                value && that.focused(!0);
            }), that.focused.subscribe(function(focus) {
                focus || that.timeValue() || that.disabled() || that.timeValue(inter.renderDate(that.lastValidDate(), "shortTime"));
            }), that.disabled.subscribe(function(value) {
                that.visible(!1), that.focused(!1);
            }), that.isNotValid = ko.pureComputed(function() {
                var timeValue = that.timeValue(), parsedTime = timeParser(timeValue, that.lastValidDate);
                return timeValue && !parsedTime;
            }), that.renderSuggestion = function(completionItem, index) {
                return document.createTextNode(completionItem.label);
            }, that.onSelect = function(item) {
                var timeValue = item.toString(), parsedTime = timeParser(timeValue, that.lastValidDate);
                return that.date(parsedTime), timeValue;
            };
        }
        return TimeSelectorViewModel.prototype.hide = function(viewModel) {
            viewModel.visible(!1);
        }, TimeSelectorViewModel.prototype.toggleVisible = function(viewModel, event) {
            0 === event.button && viewModel.visible(!viewModel.visible());
        }, TimeSelectorViewModel;
    });
}(), System.registerDynamic("calendar/components/timeSelector/timeSelector.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "timeSelector",
        content: '<input\n    data-bind="hasfocus: focused,\n               autocomplete: {\n                   data: timeData,\n                   query: timeQuery,\n                   noFilter: true,\n                   minLength: 0,\n                   className: \'time-dropdown\',\n                   visible: visible,\n                   renderSuggestion: renderSuggestion,\n                   onSelect: onSelect,\n                   after: true\n               },\n               value: timeValue,\n               disable: disabled,\n               css: { \'invalid\': isNotValid },\n               attr: { tabindex: tabindex }"\n    class="time-input field"\n    type="text"\n/>\n\x3c!-- ko ifnot: disabled --\x3e\n<div class="dropdown-toggle" data-bind="event: { mousedown: toggleVisible }">\n  <span class="expand-icon"></span>\n</div>\n\x3c!-- /ko --\x3e\n'
    }), module.exports;
}), function() {
    var define = System.amdDefine;
    !function(factory) {
        "function" == typeof define && define.amd ? define("3rdparty/knockout.selectOnFocus.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], factory) : factory(ko);
    }(function(ko) {
        function getOptions(valueAccessor) {
            var options = ko.utils.unwrapObservable(valueAccessor());
            return options.pattern ? options : {
                pattern: options
            };
        }
        function selectText(field, start, end) {
            if (field.createTextRange) {
                var selRange = field.createTextRange();
                selRange.collapse(!0), selRange.moveStart("character", start), selRange.moveEnd("character", end), 
                selRange.select(), field.focus();
            } else field.setSelectionRange ? (field.focus(), field.setSelectionRange(start, end)) : void 0 !== field.selectionStart && (field.selectionStart = start, 
            field.selectionEnd = end, field.focus());
        }
        ko.bindingHandlers.selectOnFocus = {
            init: function(element, valueAccessor) {
                function selectContentAsync() {
                    setTimeout(function() {
                        var options = getOptions(valueAccessor), pattern = ko.utils.unwrapObservable(options.pattern);
                        if (!ko.utils.unwrapObservable(options.onlySelectOnFirstFocus) || firstFocus) {
                            if ("[object RegExp]" === Object.prototype.toString.call(pattern)) {
                                var matchInfo = pattern.exec(element.value);
                                if (matchInfo) {
                                    var startOffset = matchInfo.index, endOffset = matchInfo.index + matchInfo[0].length;
                                    selectText(element, startOffset, endOffset);
                                }
                            } else element.select();
                            firstFocus = !1;
                        }
                    }, 1);
                }
                var firstFocus = !0;
                document.activeElement === element && selectContentAsync(), ko.utils.registerEventHandler(element, "focus", function(e) {
                    selectContentAsync();
                });
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/timeSelector/timeSelector.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/components/timeSelector/TimeSelectorViewModel.js", "calendar/components/timeSelector/timeSelector.ko", "3rdparty/knockout.selectOnFocus.js" ], function(ko, TimeSelectorViewModel) {
        ko.components.register("one-time-selector", {
            template: {
                element: "timeSelector"
            },
            viewModel: {
                createViewModel: function(params) {
                    return new TimeSelectorViewModel(params);
                }
            }
        });
    });
}(), function() {
    (0, System.amdDefine)("common/knockout.subscribeChanged.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], function(ko) {
        ko.subscribable.fn.subscribeChanged = function(callback) {
            var previousValue;
            return this.subscribe(function(_previousValue) {
                previousValue = _previousValue;
            }, this, "beforeChange"), this.subscribe(function(_newValue) {
                callback(_newValue, previousValue);
            });
        };
    });
}(), function() {
    (0, System.amdDefine)("calendar/dialogs/event/EventDialog.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "common/ViewBehavior.js", "calendar/dialogs/event/RecurrenceOptionsView.js", "calendar/actions/UpdateEventInstanceAction.js", "calendar/actions/ScopeDetectionError.js", "calendar/actions/DeleteEventInstanceAction.js", "calendar/actions/CreateEventAction.js", "calendar/Sort.js", "calendar/ical/Duration.js", "calendar/ical/Time.js", "calendar/model/EventInstance.js", "3rdparty/knockout-extensions/knockout.editables.js", "components/inPlaceEditor/inPlaceEditor.js", "calendar/components/dateSelector/dateSelector.js", "calendar/components/timeSelector/timeSelector.js", "common/knockout.subscribeChanged.js", "calendar/components/dialogHeader/dialogHeader.js" ], function($, ko, util, ViewBehavior, RecurrenceOptionsView, UpdateEventInstanceAction, ScopeDetectionError, DeleteEventInstanceAction, CreateEventAction, Sort, Duration, Time, EventInstance) {
        function EventDialog(options) {
            function isPropertySavable(property) {
                var isNew = that.eventInstance() && that.eventInstance().isNew(), isValid = !that[property].isValid || that[property].isValid();
                return (that[property].hasChanges() || isNew) && isValid;
            }
            function focusFirst() {
                var $tabContainer = $(document.activeElement).closest(".speech-bubble").find(".dialog-" + that.view()), $firstFocus = $(".first-focus", $tabContainer), $tabbableElements = $('[tabindex="1"]:not(:disabled):not(.ignore-tab)', $tabContainer), firstFocusElement = $firstFocus.first()[0] || $tabbableElements.first()[0];
                firstFocusElement && firstFocusElement.focus();
            }
            var that = this;
            util.extend(this, util.pick(options, "state", "actionExecutor", "errorHandler")), 
            ViewBehavior.installInto(that), RecurrenceOptionsView.installInto(that), that.startDate = ko.observable().extend({
                notNull: !0
            }), that.endDate = ko.observable().extend({
                notNull: !0
            }), that.summary = ko.observable(), that.description = ko.observable(), that.location = ko.observable(), 
            that.summaryFocused = ko.observable(!1), that.isProcessing = ko.observable(!1), 
            that.isSlideIn = !!options.slideIn, that.view = ko.observable("main"), that.calendar = ko.observable(null), 
            that.selectCalendar = function(calendar) {
                that.calendar(calendar);
            }, that.isNew = ko.pureComputed(function() {
                return that.eventInstance() && that.eventInstance().isNew();
            }), that.isDeletable = ko.pureComputed(function() {
                return that.eventInstance() && !that.eventInstance().isNew() && !that.isReadonly();
            }), that.isDiscardable = ko.pureComputed(function() {
                return (that.hasChanges() || that.isNew()) && !that.isReadonly();
            }), that.isReadonly = ko.pureComputed(function() {
                return that.calendar() && (that.calendar().extern || !that.calendar().writable);
            }), that.model = ko.observable(null), that.eventInstance = ko.pureComputed(function() {
                return that.model() && that.model().eventInstance;
            });
            var previousEventInstance;
            that.eventInstance.subscribe(function(eventInstance) {
                function reset() {
                    that.commit(), that.resetRecurrenceOptions(), previousEventInstance = null, that.summaryFocused(!1), 
                    that.isProcessing(!1);
                }
                if (eventInstance) {
                    previousEventInstance && reset(), that.view("main");
                    var startDate = eventInstance.displayStartDate;
                    startDate.zone !== that.state.timeZone() && (startDate = startDate.convertToZone(that.state.timeZone()));
                    var endDate = eventInstance.displayEndDate;
                    endDate.zone !== that.state.timeZone() && (endDate = endDate.convertToZone(that.state.timeZone())), 
                    that.startDate(startDate), that.endDate(endDate), that.isAllDayEventWhenDateFieldsAreNotFilledIn(startDate.isDate), 
                    that.summary(eventInstance.summary), that.description(eventInstance.description), 
                    that.location(eventInstance.location), that.calendar(eventInstance.event.calendar), 
                    that.initRecurrenceOptions(eventInstance), that.beginEdit(), prevDates = null, previousEventInstance = eventInstance, 
                    setTimeout(function() {
                        that.summaryFocused(!0);
                    }, 0), that.isProcessing(!1);
                } else reset();
            }), that.calendars = ko.computed(function() {
                return that.state.calendars.version(), Sort.calendars.byDefaultThenByName(that.state.calendars.all().filter(function(calendar) {
                    return calendar.writable;
                }));
            }), that.allDayEvent = ko.pureComputed({
                read: function() {
                    var startDate = that.startDate(), endDate = that.endDate();
                    return startDate && endDate ? that.startDate().isDate && that.endDate().isDate : that.isAllDayEventWhenDateFieldsAreNotFilledIn();
                },
                write: function(value) {
                    that.toggleAllDay();
                },
                owner: that
            }), that.isAllDayEventWhenDateFieldsAreNotFilledIn = ko.observable(!1);
            var prevDates = null;
            that.toggleAllDay = function() {
                var isAllDayEvent = that.allDayEvent();
                that.isAllDayEventWhenDateFieldsAreNotFilledIn(!isAllDayEvent);
                var endDate, startDate, startDateClone, endDateClone;
                isAllDayEvent ? !prevDates || that.startDate() && 0 !== prevDates.from.startOfDay().compare(that.startDate()) || that.endDate() && 0 !== prevDates.to.startOfDay().compare(that.endDate()) ? (startDate = that.startDate(), 
                endDate = that.endDate(), startDate && ((startDateClone = startDate.clone()).isDate = !1, 
                startDateClone.hour = 9, that.startDate(startDateClone)), endDate && ((endDateClone = endDate.clone()).isDate = !1, 
                endDateClone.hour = 10, that.endDate(endDateClone))) : (that.startDate(prevDates.from), 
                that.endDate(prevDates.to)) : (startDate = that.startDate(), endDate = that.endDate(), 
                startDate && endDate ? (prevDates = {
                    from: startDate.clone(),
                    to: endDate.clone()
                }, endDateClone = endDate.clone(), that.startDate(startDate.startOfDay()), 0 === endDateClone.hour && 0 === endDateClone.minute && 0 === endDateClone.second ? (endDateClone.isDate = !0, 
                that.endDate(endDateClone)) : that.endDate(endDateClone.startOfDay())) : prevDates = null);
            }, that.locationUrl = ko.pureComputed(function() {
                return "https://maps.google.com/?q=" + encodeURIComponent(that.location());
            }), that.editableFields = {}, properties.concat(that.recurrenceProperties).forEach(function(property) {
                var editableParams;
                [ "startDate", "endDate" ].indexOf(property) > -1 && (editableParams = {
                    equalityComparer: function(newValue, oldValue) {
                        return !!(newValue && !oldValue || !newValue && oldValue) || !(!newValue && !oldValue) && 0 === newValue.compare(oldValue);
                    }
                }), ko.editable(that[property], editableParams), that.editableFields[property] = that[property];
            }), ko.editable(that.editableFields), [ "beginEdit", "commit", "hasChanges", "rollback" ].forEach(function(m) {
                that[m] = that.editableFields[m];
            }), that.startDate.subscribeChanged(function(newValue, previousValue) {
                if (newValue && previousValue) {
                    var endDate = that.endDate();
                    if (endDate) {
                        var durationDifference = endDate.clone().subtractDate(previousValue);
                        that.endDate(newValue.clone().addDuration(durationDifference));
                    }
                }
            }), that.endDate.subscribeChanged(function(newValue, previousValue) {
                if (newValue && previousValue && that.startDate() && newValue.compare(that.startDate()) < 0) {
                    that.endDate(previousValue.clone());
                    var shift = newValue.clone().subtractDate(previousValue);
                    that.startDate(that.startDate().clone().addDuration(shift));
                }
            }), that.isDateRangeValid = ko.pureComputed(function() {
                return that.startDate.isValid() && that.endDate.isValid() && (that.startDate().isDate && that.endDate().isDate && that.startDate().compare(that.endDate()) <= 0 || that.startDate().compare(that.endDate()) <= 0);
            }), that.hasSavableProperties = ko.pureComputed(function() {
                return properties.concat(that.recurrenceProperties).some(isPropertySavable);
            }), that.isSavable = ko.pureComputed(function() {
                return that.hasSavableProperties() && that.isDateRangeValid() && !that.isReadonly();
            }), that.discard = function() {
                that.rollback(), that.model(null), that.isProcessing(!1);
            }, that.back = function() {
                that.view("main"), that.summaryFocused(!0);
            }, that.getAllProperties = function() {
                var result = {};
                return properties.forEach(function(property) {
                    var value = ko.unwrap(that[property]);
                    ("calendar" !== property || isPropertySavable(property)) && (result[property] = "endDate" === property ? EventInstance.toDisplayEndDate(value.clone()) : value);
                }), (that.recurrenceProperties.some(function(property) {
                    return !!that[property].hasChanges();
                }) || result.startTime) && (result.recur = that.recurrence() ? that.recurrence().rrule.toJSON() : null), 
                result;
            }, that.scopes = ko.observableArray(), that.showScopeSelector = function(possibleScopes, next) {
                that.scopes(possibleScopes.map(function(scope) {
                    return {
                        label: scopeLabels[scope],
                        selectScope: function() {
                            next(scope);
                        }
                    };
                })), that.view("scope-selector"), focusFirst();
            }, that.saveScope = function(scope) {
                var action, eventInstance = that.eventInstance(), changedProperties = that.getAllProperties();
                action = eventInstance.isNew() ? new CreateEventAction({
                    data: util.extend({
                        calendar: eventInstance.event.calendar,
                        startDate: that.startDate(),
                        endDate: that.endDate()
                    }, changedProperties)
                }) : new UpdateEventInstanceAction({
                    eventInstance: eventInstance,
                    data: changedProperties,
                    scope: scope
                }), that.isProcessing(!0), that.state.blockRenderingView(!1), that.executeAction(action, function(err) {
                    that.isProcessing(!1), err ? that.handleError(err, {
                        SCOPE_DETECTION_ERROR: function() {
                            that.showScopeSelector(err.possibleScopes, function(scope) {
                                that.saveScope(scope);
                            });
                        }
                    }) : (that.commit(), that.model(null));
                });
            }, that.save = function() {
                that.saveScope();
            }, that.removeScope = function(scope) {
                var eventInstance = that.eventInstance();
                that.isProcessing(!0), that.executeAction(new DeleteEventInstanceAction({
                    eventInstance: eventInstance,
                    scope: scope
                }), function(err) {
                    that.isProcessing(!1), err ? that.handleError(err, {
                        SCOPE_DETECTION_ERROR: function() {
                            that.showScopeSelector(err.possibleScopes, function(scope) {
                                that.removeScope(scope);
                            });
                        }
                    }) : that.model(null);
                });
            }, that.remove = function() {
                that.removeScope();
            }, that.showRecurrence = function() {
                that.view("recurrence"), focusFirst();
            }, $(document).on("keydown", function(e) {
                var activeElement = document.activeElement;
                13 === e.keyCode && "TEXTAREA" !== activeElement.tagName && that.model() && that.eventInstance() && that.isSavable() && ("main" === that.view() ? that.save() : "recurrence" === that.view() && (that.back(), 
                that.summaryFocused(!0)));
            });
        }
        var properties = [ "startDate", "endDate", "summary", "description", "location", "calendar" ], scopeLabels = {
            this: TR("calendar.OnlyThisEvent", "Only this event"),
            all: TR("calendar.AllEventsInSeries", "All events in the series"),
            thisAndFuture: TR("calendar.ThisAndFutureEvents", "This and future events")
        };
        return EventDialog;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/DeleteCalendarAction.js", [ "3rdparty/async.js", "common/util.js", "common/ActionBehavior.js" ], function(async, util, ActionBehavior) {
        function DeleteCalendarAction(options) {
            util.extend(this, util.pick(options, "calendar")), ActionBehavior.installInto(this);
        }
        return DeleteCalendarAction.prototype.name = "DeleteCalendarAction", DeleteCalendarAction.prototype.validate = function() {}, 
        DeleteCalendarAction.prototype.execute = function(context, callback) {
            var state = context.state, backend = context.backend, calendar = this.calendar;
            backend.deleteCalendar(state.user(), calendar.id, function(err) {
                if (err) return callback(err);
                state.calendars.remove(calendar), callback();
            });
        }, DeleteCalendarAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/CreateCalendarAction.js", [ "3rdparty/async.js", "common/util.js", "common/ActionBehavior.js" ], function(async, util, ActionBehavior) {
        function CreateCalendarAction(options) {
            util.extend(this, util.pick(options, "calendar", "data")), ActionBehavior.installInto(this);
        }
        return CreateCalendarAction.prototype.name = "CreateCalendarAction", CreateCalendarAction.prototype.validate = function() {}, 
        CreateCalendarAction.prototype.createUuid = function() {
            return util.uuid();
        }, CreateCalendarAction.prototype.execute = function(context, callback) {
            var that = this, state = context.state, backend = context.backend, calendar = this.calendar;
            calendar.id = this.createUuid();
            var propertyMappings = {
                color: "color",
                name: "displayName",
                enabled: "enabled"
            }, data = {};
            Object.keys(propertyMappings).forEach(function(property) {
                data[property] = calendar[property]();
            }), Object.keys(propertyMappings).filter(function(property) {
                return that.data.hasOwnProperty(propertyMappings[property]);
            }).forEach(function(property) {
                data[property] = that.data[propertyMappings[property]], calendar[property](data[property]);
            }), backend.createCalendar(state.user(), calendar.id, data, function(err, data) {
                if (err) return callback(err);
                state.calendars.add(calendar), backend.getCalendar(state.user(), calendar.id, null, function(err, data) {
                    callback(err, data);
                });
            });
        }, CreateCalendarAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/UpdateExternalCalendarAction.js", [ "common/util.js", "common/ActionBehavior.js" ], function(util, ActionBehavior) {
        function UpdateExternalCalendarAction(options) {
            util.extend(this, util.pick(options, "calendar", "data")), ActionBehavior.installInto(this);
        }
        return UpdateExternalCalendarAction.prototype.name = "UpdateExternalCalendarAction", 
        UpdateExternalCalendarAction.prototype.validate = function() {}, UpdateExternalCalendarAction.prototype.execute = function(context, callback) {
            var that = this, state = context.state, backend = context.backend, calendarFieldMapping = {
                color: "color",
                enabled: "enabled",
                displayName: "name"
            }, calendar = that.calendar, calendarData = {};
            Object.keys(calendarFieldMapping).filter(function(property) {
                return that.data.hasOwnProperty(property);
            }).forEach(function(property) {
                calendarData[property] = that.data[property];
            }), Object.keys(calendarData).forEach(function(dataKey) {
                (0, calendar[calendarFieldMapping[dataKey]])(calendarData[dataKey]);
            });
            var preferencesDocument = state.preferences.calendar();
            preferencesDocument.subscribedCalendars.forEach(function(cal) {
                calendar.id === cal.id && Object.keys(calendarData).forEach(function(dataKey) {
                    cal[dataKey] = calendarData[dataKey];
                });
            }), backend.savePreference(state.user(), "calendar", preferencesDocument, function(err, data) {
                !err && data._rev && (preferencesDocument._rev = data._rev, state.preferences.calendar(preferencesDocument)), 
                callback(err);
            });
        }, UpdateExternalCalendarAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/DeleteExternalCalendarAction.js", [ "3rdparty/async.js", "common/util.js", "common/ActionBehavior.js" ], function(async, util, ActionBehavior) {
        function DeleteExternalCalendarAction(options) {
            util.extend(this, util.pick(options, "calendar")), ActionBehavior.installInto(this);
        }
        return DeleteExternalCalendarAction.prototype.name = "DeleteCalendarAction", DeleteExternalCalendarAction.prototype.validate = function() {}, 
        DeleteExternalCalendarAction.prototype.execute = function(context, callback) {
            var that = this, state = context.state, backend = context.backend, calendar = that.calendar, preferencesDocument = state.preferences.calendar();
            preferencesDocument.subscribedCalendars = preferencesDocument.subscribedCalendars.filter(function(cal) {
                return cal.id !== calendar.id;
            }), backend.savePreference(state.user(), "calendar", preferencesDocument, function(err, data) {
                !err && data._rev && (preferencesDocument._rev = data._rev, state.preferences.calendar(preferencesDocument), 
                state.calendars.remove(calendar)), callback(err);
            });
        }, DeleteExternalCalendarAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/ImportEventsAction.js", [ "common/util.js", "common/ActionBehavior.js" ], function(util, ActionBehavior) {
        function ImportEventsAction(options) {
            util.extend(this, util.pick(options, [ "file", "calendar" ])), ActionBehavior.installInto(this);
        }
        return ImportEventsAction.prototype.name = "ImportEventsAction", ImportEventsAction.prototype.execute = function(context, callback) {
            var that = this;
            that.file ? context.backend.importCalendarFile(context.state.user(), that.calendar.id, that.file, function(err, result) {
                if (err) return callback(err);
                context.backend.getCalendar(context.state.user(), that.calendar.id, {
                    events: !0
                }, function(err, data) {
                    if (err) return callback(err);
                    callback(null, result.isComplete ? null : result, data);
                });
            }) : callback(null);
        }, ImportEventsAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/ExportCalendarAction.js", [ "common/util.js", "common/ActionBehavior.js" ], function(util, ActionBehavior) {
        function ExportCalendarAction(options) {
            util.extend(this, util.pick(options, [ "calendar" ])), ActionBehavior.installInto(this);
        }
        return ExportCalendarAction.prototype.name = "ExportCalendarAction", ExportCalendarAction.prototype.validate = function() {
            if (!this.calendar.name()) throw new Error("Calendar must have a name");
            if (!this.calendar.id) throw new Error("Calendar must have an id");
        }, ExportCalendarAction.prototype.execute = function(context, callback) {
            var that = this, state = context.state, backend = context.backend, filename = that.calendar.name().replace(/[^a-z0-9\-]/gi, "_") + ".ics";
            backend.exportCalendar(state.user(), that.calendar.id, filename, function(err, data) {
                callback(err, data);
            });
        }, ExportCalendarAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/ExportExternalCalendarAction.js", [ "common/util.js", "common/ActionBehavior.js" ], function(util, ActionBehavior) {
        function ExportExternalCalendarAction(options) {
            util.extend(this, util.pick(options, [ "calendar" ])), ActionBehavior.installInto(this);
        }
        return ExportExternalCalendarAction.prototype.name = "ExportExternalCalendarAction", 
        ExportExternalCalendarAction.prototype.validate = function() {
            if (!this.calendar.id) throw new Error("Calendar must have an id");
            if (!this.calendar.extern) throw new Error("Calendar must be an external calendar");
        }, ExportExternalCalendarAction.prototype.setWindowHref = function(url) {
            location.href = url;
        }, ExportExternalCalendarAction.prototype.execute = function(context, callback) {
            var preferenceCalendar, state = context.state, calendarId = this.calendar.id;
            state.preferences.calendar().subscribedCalendars.some(function(externalCalendar) {
                return externalCalendar.id === calendarId && (preferenceCalendar = externalCalendar, 
                !0);
            }), preferenceCalendar ? (this.setWindowHref(preferenceCalendar.url), callback()) : callback(new Error("Calendar url could not be found"));
        }, ExportExternalCalendarAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/LoadCalendarSharedLinksAction.js", [ "common/util.js", "common/ActionBehavior.js", "calendar/model/SharedLink.js" ], function(util, ActionBehavior, SharedLink) {
        function LoadCalendarSharedLinksAction(options) {
            util.extend(this, util.pick(options, "calendarId")), ActionBehavior.installInto(this);
        }
        return LoadCalendarSharedLinksAction.prototype.name = "LoadCalendarSharedLinksAction", 
        LoadCalendarSharedLinksAction.prototype.validate = function() {
            if (!this.calendarId) throw new Error("A calendar id is needed to load shared links");
        }, LoadCalendarSharedLinksAction.prototype.execute = function(context, callback) {
            var that = this, state = context.state, backend = context.backend, calendar = state.calendars.get(that.calendarId);
            backend.getCalendarSharedLinks(state.user(), that.calendarId, function(err, data) {
                if (err || data && !data.success) return callback(err || data);
                var results = [];
                data && data.result && data.result.length && (results = data.result.map(function(sharedLinkData) {
                    var sharedLink = new SharedLink(sharedLinkData);
                    return calendar.sharedLinks.has(sharedLinkData.id) || calendar.sharedLinks.add(sharedLink), 
                    sharedLink;
                })), calendar.sharedLinksLoaded(!0), callback(null, results);
            });
        }, LoadCalendarSharedLinksAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/CreateCalendarSharedLinkAction.js", [ "common/util.js", "common/ActionBehavior.js", "calendar/model/SharedLink.js" ], function(util, ActionBehavior, SharedLink) {
        function CreateCalendarSharedLinkAction(options) {
            util.extend(this, util.pick(options, "calendarId")), ActionBehavior.installInto(this);
        }
        return CreateCalendarSharedLinkAction.prototype.name = "CreateCalendarSharedLinkAction", 
        CreateCalendarSharedLinkAction.prototype.validate = function() {
            if (!this.calendarId) throw new Error("A calendar id is needed to create a new shared link");
        }, CreateCalendarSharedLinkAction.prototype.execute = function(context, callback) {
            var that = this, state = context.state;
            context.backend.createCalendarSharedLink(state.user(), that.calendarId, function(err, data) {
                if (err || data && !data.success) return callback(err || data);
                var results = [], calendar = state.calendars.get(that.calendarId);
                data && data.result && data.result.length && (results = data.result.map(function(sharedLinkData) {
                    sharedLinkData.date = +("" + new Date().getTime()).substr(0, 10);
                    var sharedLink = new SharedLink(sharedLinkData);
                    return calendar.sharedLinks.add(sharedLink), sharedLink;
                })), callback(null, results);
            });
        }, CreateCalendarSharedLinkAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/model/EmbedParameters.js", [ "common/util.js", "calendar/ical/Time.js", "calendar/model/DateRange.js" ], function(util, Time, DateRange) {
        function EmbedParameters(urlParameters) {
            var config = sanitizeParameters(urlParameters);
            util.defaults(config, EmbedParameters.defaults), util.extend(this, config);
        }
        function sanitizeParameters(urlParameters) {
            return urlParameters = sanitizeBoleans(urlParameters), urlParameters = sanitizeInterval(urlParameters), 
            urlParameters = sanitizeCalendars(urlParameters);
        }
        function sanitizeBoleans(urlParameters) {
            var regExTrue = /^(?:true|1|yes)$/, regExFalse = /^(?:false|0|no)$/;
            return Object.keys(urlParameters).forEach(function(key) {
                if ("weekStart" !== key && "weekEndStart" !== key) {
                    var value = urlParameters[key];
                    regExTrue.test(value) ? urlParameters[key] = !0 : regExFalse.test(value) && (urlParameters[key] = !1);
                }
            }), urlParameters;
        }
        function sanitizeInterval(urlParameters) {
            return urlParameters.start && urlParameters.end && (urlParameters.start = Time.fromICALString(urlParameters.start), 
            urlParameters.end = Time.fromICALString(urlParameters.end), urlParameters.interval = new DateRange({
                from: urlParameters.start,
                to: urlParameters.end
            })), urlParameters;
        }
        function sanitizeCalendars(urlParameters) {
            var embeddedCalendars = [], sources = urlParameters.src, names = urlParameters.name, colors = urlParameters.color;
            if (Array.isArray(sources)) for (var i = 0; i < sources.length; i++) embeddedCalendars.push({
                url: sources[i],
                displayName: names[i],
                color: colors[i],
                id: sources[i]
            }); else sources && embeddedCalendars.push({
                url: sources,
                displayName: names,
                color: colors,
                id: sources
            });
            return urlParameters.calendars = embeddedCalendars, urlParameters;
        }
        EmbedParameters.prototype.createUuid = function() {
            return util.uuid();
        };
        var defaults = {
            view: "week",
            navigation: !0,
            date: !0,
            tabs: !0,
            calendarList: !1,
            title: "",
            weekStart: 1,
            weekEndStart: 6,
            tz: "Europe/Copenhagen",
            width: 600,
            height: 500,
            showAllEvents: !1
        };
        return Object.defineProperty(EmbedParameters, "defaults", {
            get: function() {
                return defaults;
            }
        }), EmbedParameters;
    });
}(), function() {
    (0, System.amdDefine)("calendar/model/SharedLink.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "calendar/model/EmbedParameters.js" ], function(ko, util, EmbedParameters) {
        function SharedLink(data) {
            var that = this, defaults = {
                comment: null,
                permanent: !1,
                active: !0
            };
            data = util.defaults(data, defaults), util.extend(that, util.pick(data, "calendarId", "id", "permanent", "date")), 
            that.comment = ko.observable(data.comment), that.active = ko.observable(data.active), 
            that.focused = ko.observable(!1), that.version = ko.observable(1);
        }
        return SharedLink.prototype.getLinks = function(globalPreferences, calendar) {
            var that = this, embedDefaultparameters = EmbedParameters.defaults, params = {
                host: "webmail.one.com",
                calendarPath: "calendar",
                calendarName: encodeURIComponent(calendar.name()),
                calendarColor: encodeURIComponent(calendar.color()),
                linkId: that.id,
                timeZone: encodeURIComponent(globalPreferences.timeZone),
                locale: globalPreferences.locale.toLowerCase(),
                width: embedDefaultparameters.width,
                height: embedDefaultparameters.height,
                showAllEvents: !1
            }, host = window.location.host.toLowerCase();
            "mail.one.com" !== host && (params.host = host);
            var icalLink = "http://ical.one.com/ical/{linkId}/{calendarName}.ics", htmlLink = "http://{host}/{calendarPath}/embed.html?locale={locale}&showAllEvents={showAllEvents}#tz={timeZone}&src={linkId}&name={calendarName}&color={calendarColor}", embedCode = '<iframe src="//{host}/{calendarPath}/embed.html?locale={locale}&amp;showAllEvents={showAllEvents}#tz={timeZone}&amp;src={linkId}&amp;name={calendarName}&amp;color={calendarColor}" style="border-width: 0" scrolling="no" frameborder="0" width="{width}" height="{height}"></iframe>';
            return Object.keys(params).forEach(function(parameterKey) {
                icalLink = icalLink.replace("{" + parameterKey + "}", params[parameterKey]), htmlLink = htmlLink.replace("{" + parameterKey + "}", params[parameterKey]), 
                embedCode = embedCode.replace("{" + parameterKey + "}", params[parameterKey]);
            }), {
                icalLink: icalLink,
                htmlLink: htmlLink,
                embedCode: embedCode
            };
        }, SharedLink;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/UpdateCalendarSharedLinkAction.js", [ "common/util.js", "common/ActionBehavior.js", "calendar/model/SharedLink.js" ], function(util, ActionBehavior, SharedLink) {
        function UpdateCalendarSharedLinkAction(options) {
            util.extend(this, util.pick(options, "calendarId", "linkId", "comment", "active")), 
            ActionBehavior.installInto(this);
        }
        return UpdateCalendarSharedLinkAction.prototype.name = "UpdateCalendarSharedLinkAction", 
        UpdateCalendarSharedLinkAction.prototype.validate = function() {
            if (!this.calendarId) throw new Error("A calendar id is needed to update a shared link");
            if (!this.linkId) throw new Error("A shared link id is needed to update a shared link");
        }, UpdateCalendarSharedLinkAction.prototype.execute = function(context, callback) {
            var that = this, state = context.state, backend = context.backend, properties = {
                comment: that.comment,
                active: that.active
            };
            backend.updateCalendarSharedLink(state.user(), that.calendarId, that.linkId, properties, function(err, data) {
                if (err || data && !data.success) return callback(err || data);
                var sharedLink = state.calendars.get(that.calendarId).sharedLinks.get(that.linkId);
                sharedLink && (sharedLink.comment(that.comment), sharedLink.active(that.active), 
                sharedLink.version(sharedLink.version() + 1)), callback();
            });
        }, UpdateCalendarSharedLinkAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/DeleteCalendarSharedLinkAction.js", [ "common/util.js", "common/ActionBehavior.js" ], function(util, ActionBehavior) {
        function DeleteCalendarSharedLinkAction(options) {
            util.extend(this, util.pick(options, "calendarId", "linkId")), ActionBehavior.installInto(this);
        }
        return DeleteCalendarSharedLinkAction.prototype.name = "DeleteCalendarSharedLinkAction", 
        DeleteCalendarSharedLinkAction.prototype.validate = function() {
            if (!this.calendarId) throw new Error("A calendar id is needed to delete a shared link");
            if (!this.linkId) throw new Error("A shared link id is needed to delete a shared link");
        }, DeleteCalendarSharedLinkAction.prototype.execute = function(context, callback) {
            var that = this, state = context.state;
            context.backend.deleteCalendarSharedLink(state.user(), that.calendarId, that.linkId, function(err, data) {
                if (err || data && !data.success) return callback(err || data);
                state.calendars.get(that.calendarId).sharedLinks.remove(that.linkId), callback();
            });
        }, DeleteCalendarSharedLinkAction;
    });
}(), function() {
    var define = System.amdDefine;
    !function(factory) {
        "function" == typeof require && "object" == typeof exports && "object" == typeof module ? factory(require("knockout"), exports) : "function" == typeof define && define.amd ? define("3rdparty/knockout-extensions/knockout.editables.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "exports" ], factory) : factory(ko);
    }(function(ko) {
        function newScope() {
            return "_scope" + ++newScope.counter;
        }
        function makeEditable(rootObject, scope, editables, processedObjects) {
            processedObjects = processedObjects || [];
            for (var propertyName in rootObject) {
                var propertyValue = rootObject[propertyName];
                if (ko.isWriteableObservable(propertyValue) && !1 !== propertyValue.editable && (propertyValue.extend({
                    editable: {
                        enable: !0,
                        scope: scope
                    }
                }), editables.push(propertyValue)), !(ko.utils.arrayIndexOf(processedObjects, propertyValue) > -1)) {
                    processedObjects.push(propertyValue);
                    var underlyingPropertyValue = ko.utils.unwrapObservable(propertyValue);
                    if ("object" == typeof underlyingPropertyValue) {
                        if (ko.isObservable(propertyValue)) {
                            if (ko.utils.arrayIndexOf(processedObjects, underlyingPropertyValue) > -1) continue;
                            processedObjects.push(underlyingPropertyValue);
                        }
                        makeEditable(underlyingPropertyValue, scope, editables, processedObjects);
                    }
                }
            }
        }
        var deferredDependentObservable = function(readFunction) {
            return ko.dependentObservable({
                read: readFunction,
                deferEvaluation: !0
            });
        }, editableObservables = {
            _observables: {},
            add: function(scope, observable) {
                this._observables.hasOwnProperty(scope) || (this._observables[scope] = ko.observableArray()), 
                this._observables[scope].push(observable);
            },
            get: function(scope) {
                if (scope = void 0 === scope ? "" : scope, !this._observables.hasOwnProperty(scope)) throw new Error("Unknown scope " + scope);
                return ko.utils.unwrapObservable(this._observables[scope]);
            }
        };
        editableObservables._observables[""] = ko.observableArray(), newScope.counter = 0;
        var comparers = {
            scalar: function(actualValue, originalValue) {
                return actualValue == originalValue;
            },
            array: function(actualValue, originalValue) {
                if (actualValue = actualValue || [], originalValue = originalValue || [], actualValue.length != originalValue.length) return !1;
                for (var i = 0; i < actualValue.length; i++) if (actualValue[i] !== originalValue[i]) return !1;
                return !0;
            }
        }, defaultParams = {
            enable: !0,
            scope: ""
        };
        ko.extenders.editable = function(target, params) {
            if (target.hasOwnProperty("editable")) return target;
            if (params = "object" != typeof params ? {
                enable: void 0 === params || params,
                scope: ""
            } : ko.utils.extend(ko.utils.extend({}, defaultParams), params), target.editable = params.enable, 
            !target.editable) return target;
            var oldValue, equalityComparer = params.equalityComparer || comparers.scalar, inTransaction = target.inTransaction = ko.observable(!1);
            return target.beginEdit = function() {
                if (!inTransaction()) {
                    var currentValue = target();
                    currentValue instanceof Array && (currentValue = currentValue.slice(), equalityComparer = comparers.array), 
                    oldValue = currentValue, inTransaction(!0);
                }
            }, target.commit = function() {
                inTransaction(!1);
            }, target.rollback = function() {
                inTransaction() && (target(oldValue), inTransaction(!1));
            }, target.oldValue = function() {
                return oldValue;
            }, target.hasChanges = deferredDependentObservable(function() {
                return inTransaction() && !equalityComparer(target(), oldValue);
            }), !1 !== params.scope && editableObservables.add(params.scope, target), target;
        }, ko.editable = function(viewModel, autoInit) {
            if ("function" != typeof viewModel.beginEdit) {
                autoInit = void 0 === autoInit || autoInit;
                var allEditables = ko.observableArray();
                viewModel.beginEdit = function() {
                    ko.utils.arrayForEach(allEditables(), function(obj) {
                        obj.beginEdit();
                    });
                }, viewModel.commit = function() {
                    ko.utils.arrayForEach(allEditables(), function(obj) {
                        obj.commit();
                    });
                }, viewModel.rollback = function() {
                    ko.utils.arrayForEach(allEditables(), function(obj) {
                        obj.rollback();
                    });
                }, viewModel.hasChanges = deferredDependentObservable(function() {
                    return null != ko.utils.arrayFirst(allEditables(), function(editable) {
                        return editable.hasChanges();
                    });
                });
                var scope = newScope();
                viewModel.addEditable = function(obj) {
                    makeEditable(obj, scope, allEditables, []);
                }, autoInit && makeEditable(viewModel, scope, allEditables, []);
            }
        }, ko.editable.enable = function(object, scope) {
            void 0 === scope && (scope = ""), makeEditable(object, scope, []);
        }, ko.editable.beginEdit = function(scope) {
            ko.utils.arrayForEach(editableObservables.get(scope), function(observable) {
                observable.beginEdit();
            });
        }, ko.editable.commit = function(scope) {
            ko.utils.arrayForEach(editableObservables.get(scope), function(observable) {
                observable.commit();
            });
        }, ko.editable.rollback = function(scope) {
            ko.utils.arrayForEach(editableObservables.get(scope), function(observable) {
                observable.rollback();
            });
        }, ko.editable.hasChanges = function(scope) {
            for (var observables = editableObservables.get(scope), i = 0, l = observables.length; i < l; i++) if (observables[i].hasChanges()) return !0;
            return !1;
        }, ko.editable._editables = editableObservables, ko.editable.getHasChangesFlag = function(scope) {
            return deferredDependentObservable(function() {
                return ko.editable.hasChanges(scope);
            }).extend({
                throttle: 100
            });
        };
    });
}(), System.registerDynamic("components/inPlaceEditor/inPlaceEditor.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "inPlaceEditor",
        content: '<div class="in-place-editor-content" data-bind="css: { multiline: isMultiline }">\n    \x3c!-- ko if: placeholder --\x3e\n    <span class="floating-placeholder" data-bind="css: { \'float\': float }, text: placeholder"></span>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: isMultiline --\x3e\n        \x3c!-- ko if: !!autocomplete --\x3e\n        <textarea rows="1"\n                  data-bind="disable: disabled,\n                             hasFocus: focused,\n                             textInput: value,\n                             autoExpand: value,\n                             attr: { tabindex: tabindex, name: name, id: id },\n                             valueUpdate: valueUpdate,\n                             autocomplete: autocomplete,\n                             event: events"></textarea>\n       \x3c!-- /ko --\x3e\n       \x3c!-- ko ifnot: !!autocomplete --\x3e\n       <textarea rows="1"\n                 data-bind="disable: disabled,\n                            hasFocus: focused,\n                            textInput: value,\n                            autoExpand: value,\n                            attr: { tabindex: tabindex, name: name, id: id },\n                            valueUpdate: valueUpdate,\n                            event: events"></textarea>\n        \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko ifnot: isMultiline --\x3e\n        \x3c!-- ko if: !!autocomplete --\x3e\n        <input type="text"\n               data-bind="disable: disabled,\n                          hasFocus: focused,\n                          textInput: value,\n                          attr: { tabindex: tabindex, name: name, id: id },\n                          valueUpdate: valueUpdate,\n                          autocomplete: autocomplete,\n                          event: events">\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko ifnot: !!autocomplete --\x3e\n        <input type="text"\n               data-bind="disable: disabled,\n                          hasFocus: focused,\n                          textInput: value,\n                          attr: { tabindex: tabindex, type: type, name: name, id: id },\n                          valueUpdate: valueUpdate,\n                          event: events">\n        \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n</div>\n'
    }), module.exports;
}), function() {
    (0, System.amdDefine)("components/inPlaceEditor/inPlaceEditor.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "node_modules/jquery/dist/jquery.js", "common/util.js", "components/inPlaceEditor/inPlaceEditor.ko", "3rdparty/knockout.autocomplete.js" ], function(ko, $, util) {
        ko.components.register("in-place-editor", {
            template: {
                element: "inPlaceEditor"
            },
            viewModel: function(params) {
                var that = this;
                that.value = params.value, that.isMultiline = params.isMultiline, that.placeholder = params.placeholder, 
                that.tabindex = params.tabindex, that.name = params.name, that.type = params.type || "text", 
                that.id = params.id, that.valueUpdate = params.valueUpdate, that.autocomplete = params.autocomplete, 
                that.events = {}, (params.onKeyTab || params.onKeyEnter) && (that.events.keydown = function(e) {
                    var which = e.keyCode || e.which;
                    return 9 === which && params.onKeyTab ? params.onKeyTab(e) : 13 !== which || !params.onKeyEnter || params.onKeyEnter(e);
                }), that.disabled = ko.isObservable(params.disabled) ? params.disabled : ko.observable(params.disabled), 
                that.float = ko.pureComputed(function() {
                    return !that.disabled() && that.focused() || !!that.value();
                }), that.focused = ko.pureComputed({
                    read: function() {
                        return ko.isObservable(params.focused) ? params.focused() : this.focus();
                    },
                    write: function(value) {
                        ko.isObservable(params.focused) && (value || this.initialWrongBlurHappened ? params.focused(value) : this.initialWrongBlurHappened = !0), 
                        this.focus(value);
                    },
                    owner: {
                        focus: ko.observable(!1),
                        initialWrongBlurHappened: !1
                    }
                });
            },
            synchronous: !0
        });
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory(require("knockout")) : "function" == typeof define && define.amd ? define("3rdparty/knockout.activateFileInput.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], factory) : factory(ko);
    }(0, function(ko) {
        function addEventListener(element, callback) {
            useAttachEvent ? element.attachEvent("onchange", callback) : element.addEventListener("change", callback, !0);
        }
        function removeEventListener(element, callback) {
            useAttachEvent ? element.detachEvent("onchange", callback) : element.removeEventListener("change", callback, !0);
        }
        function FileInputModel() {
            function setupFileInput(options) {
                var fileInput = document.createElement("input"), style = fileInput.style;
                if (fileInput.type = "file", style.position = "absolute", style.top = options.offset.top || 0, 
                style.right = options.offset.right || 0, style.margin = 0, style.opacity = 0, style.filter = "alpha(opacity=0)", 
                style["-webkit-transform"] = "translate(-300px, 0) scale(3)", style["-moz-transform"] = "translate(-300px, 0) scale(3)", 
                style["-ms-transform"] = "translate(-300px, 0) scale(3)", style["-o-transform"] = "translate(-300px, 0) scale(3)", 
                style.transform = "translate(-300px, 0) scale(3)", style.fontSize = "23px", style.direction = "ltr", 
                style.height = "auto", style.width = "auto", style.cursor = "pointer", options.multiple ? fileInput.setAttribute("multiple", "multiple") : fileInput.removeAttribute("multiple"), 
                options.accept ? fileInput.setAttribute("accept", options.accept) : fileInput.removeAttribute("accept"), 
                options.tabIndex ? fileInput.setAttribute("tabindex", options.tabIndex) : fileInput.removeAttribute("tabindex"), 
                "disabled" in options) {
                    var isDisabled = ko.utils.unwrapObservable(options.disabled);
                    isDisabled ? (fileInput.setAttribute("disabled", isDisabled), fileInput.style.cursor = "default") : (fileInput.removeAttribute("disabled"), 
                    fileInput.style.cursor = "pointer");
                }
                return fileInput;
            }
            var that = this;
            that.fileInput = null, that.onChangeHandler = null, that.attach = function(element, options, viewModel) {
                that.fileInput = setupFileInput(options), that.onChangeHandler = function() {
                    options.handler.call(viewModel, this), that.detach(element, options, viewModel), 
                    that.attach(element, options, viewModel);
                }, element.style.position = "relative", element.style.overflow = "hidden", "inline" === element.style.display && (element.style.display = "inline-block"), 
                element.appendChild(that.fileInput), addEventListener(that.fileInput, that.onChangeHandler);
            }, that.detach = function(element, options, viewModel) {
                removeEventListener(that.fileInput, that.onChangeHandler), that.fileInput.parentNode === element && element.removeChild(that.fileInput), 
                that.fileInput = null, that.onChangeHandler = null;
            };
        }
        var useAttachEvent = !document.addEventListener;
        return ko.bindingHandlers.activateFileInput = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel) {
                return !0;
            },
            update: function(element, valueAccessor, allBindingsAccessor, viewModel) {
                var value = valueAccessor(), options = {
                    multiple: !1,
                    offset: {}
                }, fileInputModel = ko.utils.domData.get(element, "knockout-activateFileInput");
                if ("object" == typeof value) {
                    if (!value.handler || "function" != typeof value.handler) throw new Error("activateFileInput: `value` object should have a callable `handler` property");
                    ko.utils.extend(options, value);
                } else {
                    if ("function" != typeof value) throw new Error("activateFileInput: value must be an object or a function");
                    options.handler = value;
                }
                fileInputModel ? fileInputModel.detach(element, options, viewModel) : (fileInputModel = new FileInputModel(), 
                ko.utils.domData.set(element, "knockout-activateFileInput", fileInputModel)), fileInputModel.attach(element, options, viewModel);
            }
        }, ko.bindingHandlers.activateFileInput;
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/loading/LoadingViewModel.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], function(ko) {
        function LoadingViewModel(options) {
            this.isLoading = ko.isObservable(options.isLoading) ? options.isLoading : ko.observable(options.isLoading);
        }
        return LoadingViewModel;
    });
}(), System.registerDynamic("calendar/components/loading/loading.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "loading",
        content: '<span data-i18n="calendar.Loading">Loading...</span>\n'
    }), module.exports;
}), function() {
    (0, System.amdDefine)("calendar/components/loading/loading.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/components/loading/LoadingViewModel.js", "calendar/components/loading/loading.ko" ], function(ko, LoadingViewModel) {
        ko.components.register("one-loading-indicator", {
            template: {
                element: "loading"
            },
            viewModel: {
                createViewModel: function(params) {
                    return new LoadingViewModel(params);
                }
            }
        });
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/dialogHeader/DialogHeaderViewModel.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js" ], function(ko, utils) {
        function DialogHeaderViewModel(options) {
            var that = this;
            utils.extend(that, options.context), that.close = options.close, that.back = options.back, 
            that.onClose = options.close, that.onBack = options.back, that.tabindex = options.tabindex;
        }
        return DialogHeaderViewModel;
    });
}(), System.registerDynamic("calendar/components/dialogHeader/dialogHeader.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "dialogHeader",
        content: '<div class="dialog-header-container">\n    \x3c!-- ko if: !!back --\x3e\n    <div class="layout back-section">\n        <button class="back-button" data-bind="click: onBack, attr: { tabindex: tabindex }">\n            <span class="back-text" data-i18n="calendar.Back">Back</span>\n        </button>\n    </div>\n    \x3c!-- /ko --\x3e\n    <div class="layout title">\n        \x3c!-- ko template: { nodes: $componentTemplateNodes } --\x3e\x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- ko if: !!close --\x3e\n    <div class="layout close-section">\n        <button class="close-button" data-bind="click: onClose, attr: { tabindex: tabindex }"><span class="close-icon"></span></button>\n    </div>\n    \x3c!-- /ko --\x3e\n</div>\n'
    }), module.exports;
}), function() {
    (0, System.amdDefine)("calendar/components/dialogHeader/dialogHeader.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/components/dialogHeader/DialogHeaderViewModel.js", "calendar/components/dialogHeader/dialogHeader.ko" ], function(ko, DialogHeaderViewModel) {
        ko.components.register("one-dialog-header", {
            template: {
                element: "dialogHeader"
            },
            viewModel: {
                createViewModel: function(params) {
                    return new DialogHeaderViewModel(params);
                }
            }
        });
    });
}(), function() {
    (0, System.amdDefine)("calendar/dialogs/calendar/CalendarDialog.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "node_modules/jquery/dist/jquery.js", "common/util.js", "common/ViewBehavior.js", "calendar/actions/UpdateCalendarAction.js", "calendar/actions/DeleteCalendarAction.js", "calendar/actions/CreateCalendarAction.js", "calendar/actions/UpdateExternalCalendarAction.js", "calendar/actions/DeleteExternalCalendarAction.js", "calendar/actions/ImportEventsAction.js", "calendar/actions/ExportCalendarAction.js", "calendar/actions/ExportExternalCalendarAction.js", "calendar/model/Calendar.js", "calendar/Colors.js", "calendar/actions/LoadCalendarSharedLinksAction.js", "calendar/actions/CreateCalendarSharedLinkAction.js", "calendar/actions/UpdateCalendarSharedLinkAction.js", "calendar/actions/DeleteCalendarSharedLinkAction.js", "3rdparty/knockout-extensions/knockout.editables.js", "components/inPlaceEditor/inPlaceEditor.js", "3rdparty/knockout.activateFileInput.js", "calendar/components/loading/loading.js", "calendar/components/dialogHeader/dialogHeader.js" ], function(ko, $, util, ViewBehavior, UpdateCalendarAction, DeleteCalendarAction, CreateCalendarAction, UpdateExternalCalendarAction, DeleteExternalCalendarAction, ImportEventsAction, ExportCalendarAction, ExportExternalCalendarAction, Calendar, Colors, LoadCalendarSharedLinksAction, CreateCalendarSharedLinkAction, UpdateCalendarSharedLinkAction, DeleteCalendarSharedLinkAction) {
        function CalendarDialog(options) {
            function updateSharedLink(sharedLink) {
                var calendar = that.calendar();
                if (calendar) {
                    var updateSharedLinkAction = new UpdateCalendarSharedLinkAction({
                        calendarId: calendar.id,
                        linkId: sharedLink.id,
                        comment: sharedLink.comment(),
                        active: sharedLink.active()
                    });
                    that.executeAction(updateSharedLinkAction, function(err, result) {
                        err && that.errorHandler.handleError(err);
                    });
                }
            }
            function subscribeToSharedLinks(links) {
                (links = links || that.links()).forEach(function(sharedLink) {
                    subscriptions.push(sharedLink.focused.subscribe(function(focused) {
                        focused || updateSharedLink(sharedLink);
                    })), subscriptions.push(sharedLink.active.subscribe(function(focused) {
                        updateSharedLink(sharedLink);
                    }));
                });
            }
            function unsubscribeFromSharedLinks() {
                subscriptions.length && (subscriptions.forEach(function(subscription) {
                    subscription.dispose();
                }), subscriptions = []);
            }
            function focusFirst() {
                setTimeout(function() {
                    var $tabContainer = $(document.activeElement).closest(".speech-bubble").find(".dialog-" + that.view()), $firstFocus = $(".first-focus", $tabContainer), $tabbableElements = $('[tabindex="1"]:not(:disabled):not(.ignore-tab)', $tabContainer), firstFocusElement = $firstFocus.first()[0] || $tabbableElements.first()[0];
                    firstFocusElement && firstFocusElement.focus();
                }, 300);
            }
            var that = this;
            util.extend(this, util.pick(options, "state", "actionExecutor", "errorHandler", "notification")), 
            ViewBehavior.installInto(that);
            var subscriptions = [];
            that.name = ko.observable(null).extend({
                present: !0
            }), that.enabled = ko.observable(!1), that.defaultCalendar = ko.observable(!1), 
            that.color = ko.observable(null), that.darkBackgroundColor = ko.pureComputed(function() {
                return that.calendar() && that.calendar().darkBackgroundColor();
            }), that.links = ko.pureComputed(function() {
                var calendar = that.calendar();
                return calendar ? (calendar.sharedLinks.version(), unsubscribeFromSharedLinks(), 
                subscribeToSharedLinks(calendar.sharedLinks.all()), calendar.sharedLinks.all().sort(function(a, b) {
                    return a.date - b.date;
                })) : [];
            }), that.linksLoaded = ko.pureComputed(function() {
                return that.calendar() && that.calendar().sharedLinksLoaded();
            }), that.selectedSharedLink = ko.observable(null), that.selectedLink = ko.pureComputed(function() {
                return that.selectedSharedLink() || {
                    embedCode: "",
                    icalLink: "",
                    htmlLink: ""
                };
            }), that.resourceUrl = ko.observable(null), that.nameFocused = ko.observable(!1), 
            that.colorChoices = Colors.colorChoices.map(function(color) {
                var observableColor = ko.observable(color), colors = Colors.createColors(observableColor);
                return util.extend(colors, {
                    color: observableColor,
                    selected: ko.pureComputed(function() {
                        return color === that.color();
                    }),
                    select: function() {
                        that.color(color);
                    },
                    styles: {
                        backgroundColor: colors.darkBackgroundColor()
                    }
                });
            }), that.originalDefault = ko.observable(!1), that.view = ko.observable("main"), 
            that.model = ko.observable(null), that.calendar = ko.pureComputed(function() {
                return that.model() && that.model().calendar;
            }), that.calendar.subscribe(function(calendar) {
                if (calendar) {
                    if (that.view("main"), that.name(calendar.name()), that.enabled(calendar.enabled()), 
                    that.defaultCalendar(calendar.defaultCalendar()), that.originalDefault(calendar.defaultCalendar()), 
                    that.color(calendar.color()), that.resourceUrl(calendar.resourceUrl(that.state.user())), 
                    that.beginEdit(), !that.linksLoaded() && !that.isNew()) {
                        var loadLinksAction = new LoadCalendarSharedLinksAction({
                            calendarId: calendar.id
                        });
                        that.executeAction(loadLinksAction, function(err, data) {
                            err && that.handleError(err);
                        });
                    }
                    that.importFile(null), setTimeout(function() {
                        that.nameFocused(!0);
                    }, 0);
                } else that.commit();
            }), that.editableFields = {}, properties.forEach(function(property) {
                ko.editable(that[property]), that.editableFields[property] = that[property];
            }), ko.editable(that.editableFields), [ "beginEdit", "commit", "hasChanges", "rollback" ].forEach(function(m) {
                that[m] = that.editableFields[m];
            }), that.isNew = ko.pureComputed(function() {
                return !(that.calendar() || {}).id;
            }), that.isDeletable = ko.pureComputed(function() {
                return !that.isNew() && !that.originalDefault();
            }), that.isSavable = ko.pureComputed(function() {
                return that.hasChanges() && that.name.isValid();
            }), that.isDiscardable = ko.pureComputed(function() {
                return that.hasChanges() || that.isNew();
            }), that.isExistingAndWritable = ko.pureComputed(function() {
                return !that.isNew() && !that.isReadonly();
            }), that.isReadonly = ko.pureComputed(function() {
                return that.calendar() && (that.calendar().extern || !that.calendar().writable);
            }), that.toggleEnabled = function() {
                that.enabled(!that.enabled());
            }, that.toggleDefault = function() {
                that.defaultCalendar(!that.defaultCalendar());
            }, that.getChangedProperties = function() {
                var propertyMapping = {
                    name: "displayName",
                    color: "color",
                    enabled: "enabled",
                    defaultCalendar: "default"
                }, result = {};
                return properties.forEach(function(property) {
                    that[property].hasChanges() && (result[propertyMapping[property]] = ko.unwrap(that[property]));
                }), result;
            }, that.back = function() {
                that.view("main"), that.nameFocused(!0), $(window).trigger("resize");
            }, that.discard = function() {
                that.rollback(), that.model(null);
            }, that.remove = function() {
                var action, calendar = that.calendar();
                action = calendar.extern ? new DeleteExternalCalendarAction({
                    calendar: calendar
                }) : new DeleteCalendarAction({
                    calendar: calendar
                }), that.executeAction(action, function(err) {
                    that.model(null);
                });
            }, that.save = function() {
                var action, calendar = that.calendar();
                action = that.isNew() ? new CreateCalendarAction({
                    calendar: calendar,
                    data: that.getChangedProperties()
                }) : calendar.extern ? new UpdateExternalCalendarAction({
                    calendar: calendar,
                    data: that.getChangedProperties()
                }) : new UpdateCalendarAction({
                    calendar: calendar,
                    data: that.getChangedProperties()
                }), that.executeAction(action, function(err, data) {
                    if (err && that.handleError(err), that.commit(), that.model(null), data && data.calendars && data.calendars.length) {
                        var calendars = that.state.calendars, defaultDateRange = that.state.defaultDateRange();
                        calendars.get(data.calendars[0].id).update(defaultDateRange.from, defaultDateRange.to, data.calendars[0]);
                    }
                });
            }, that.isImportable = ko.pureComputed(function() {
                return !that.isReadonly() && that.importFileName();
            }), that.allowedImportFileExtensions = [ ".ics" ], that.importWaiting = ko.observable(!1), 
            that.importStatus = ko.observable(null), that.importFile = ko.observable(), that.importFileName = ko.computed(function() {
                var fileInput = that.importFile();
                return fileInput && fileInput.files && fileInput.files.length ? fileInput.files[0].name : fileInput && fileInput.value ? fileInput.value.replace(/.*[\/\\]/, "") : "";
            }), that.importAction = function() {
                that.importWaiting(!0);
                var file = that.importFile().files[0], isValidFile = !0, fileExtension = "." + file.name.substr(2 + (~-file.name.lastIndexOf(".") >>> 0));
                if (fileExtension && that.allowedImportFileExtensions.indexOf(fileExtension) < 0 && (isValidFile = !1), 
                !isValidFile) {
                    var invalidIcsFileWarning = TR("calendar.error.InvalidIcsFile", "The selected file is not a valid .ics file.");
                    return that.importStatus(invalidIcsFileWarning), void that.importWaiting(!1);
                }
                that.executeAction(new ImportEventsAction({
                    file: file,
                    calendar: that.calendar()
                }), function(err, result, calendarData) {
                    if (err) that.errorHandler.handleError(err); else {
                        var rawResponse = $(result).next("#response").text(), response = JSON.parse(rawResponse), importedAllEventsNotification = inter.trQuantity(TR("calendar.import.AllEventsImported", {
                            one: "{0} event successfully imported.",
                            other: "{0} events successfully imported."
                        }), response.numEvents), importedSomeEventsNotification = TR.PAT("calendar.import.SomeEventsImported", "{0} of {1} events successfully imported.")(response.numSuccessfullyImportedEvents, response.numEvents), importNotification = response.numEvents === response.numSuccessfullyImportedEvents ? importedAllEventsNotification : importedSomeEventsNotification;
                        if (that.notification({
                            message: importNotification,
                            timeout: 1e4
                        }), setTimeout(function() {
                            that.notification(null);
                        }, 1), calendarData && calendarData.calendars && calendarData.calendars.length) {
                            var updatedCalendar = calendarData.calendars[0], calendars = that.state.calendars, defaultDateRange = that.state.defaultDateRange(), calendar = calendars.get(updatedCalendar.id);
                            updatedCalendar.default = calendar.defaultCalendar(), calendar.update(defaultDateRange.from, defaultDateRange.to, updatedCalendar);
                        }
                        that.importFile(null);
                    }
                    that.importWaiting(!1);
                });
            }, that.importEvents = function() {
                that.view("import"), focusFirst();
            }, that.exportCalendar = function() {
                var action;
                action = this.calendar().extern ? new ExportExternalCalendarAction({
                    calendar: this.calendar()
                }) : new ExportCalendarAction({
                    calendar: that.calendar()
                }), that.executeAction(action, function(err, result) {
                    err && that.errorHandler.handleError(err);
                });
            }, that.shareCalendar = function() {
                that.view("share"), $(window).trigger("resize"), focusFirst();
            }, that.deleteLink = function(sharedLink, e) {
                var deleteSharedLinkAction = new DeleteCalendarSharedLinkAction({
                    calendarId: that.calendar().id,
                    linkId: sharedLink.id
                });
                that.executeAction(deleteSharedLinkAction, function(err, result) {
                    err && that.errorHandler.handleError(err);
                });
            }, that.shareLink = function(sharedLink, e) {
                var globalPreferences = that.state.preferences.global();
                that.selectedSharedLink(sharedLink.getLinks(globalPreferences, that.calendar())), 
                that.view("link-details"), focusFirst();
            }, that.addLink = function() {
                var addSharedLinkAction = new CreateCalendarSharedLinkAction({
                    calendarId: that.calendar().id
                });
                that.executeAction(addSharedLinkAction, function(err, result) {
                    err && that.errorHandler.handleError(err);
                });
            }, that.focusedLink = function(links, e) {
                var target = e.target;
                $(target).select();
            }, that.resources = function() {
                that.view("resource"), focusFirst();
            }, $(document).on("keydown", function(e) {
                var activeElement = document.activeElement;
                13 === e.keyCode && "TEXTAREA" !== activeElement.tagName && that.model() && that.calendar() && ("main" === that.view() ? that.save() : "link-details" === that.view() ? that.shareCalendar() : (that.back(), 
                that.nameFocused(!0)));
            });
        }
        var properties = [ "name", "enabled", "defaultCalendar", "color" ];
        return CalendarDialog;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/CreateEventAction.js", [ "3rdparty/async.js", "common/util.js", "common/ActionBehavior.js", "calendar/actions/ScopeDetectionError.js", "calendar/actions/UpdateCalendarAction.js", "calendar/model/RecurrenceRule.js", "calendar/ical/Duration.js", "calendar/ical/Recur.js", "calendar/ical/Event.js", "calendar/ical/Component.js", "calendar/ical/TimeZone.js", "calendar/ical/Property.js", "calendar/ical/helpers.js" ], function(async, util, ActionBehavior, ScopeDetectionError, UpdateCalendarAction, RecurrenceRule, Duration, Recur, Event, Component, TimeZone, Property, icalHelpers) {
        function CreateEventAction(options) {
            util.extend(this, util.pick(options, "data")), ActionBehavior.installInto(this), 
            this.calendar = this.data.calendar;
        }
        return CreateEventAction.prototype.name = "CreateEventAction", CreateEventAction.prototype.createEvent = function(context, data) {
            var state = context.state, event = new Event();
            if ([ "summary", "description", "location" ].forEach(function(property) {
                data[property] && (event[property] = data[property]);
            }), [ "startDate", "endDate" ].forEach(function(property) {
                var time = data[property];
                time.isDate ? event[property] = time.convertToZone(TimeZone.localTimezone) : event[property] = time.convertToZone(state.timeZone());
            }, this), event.uid = this.createUuid(), event.creationTime = state.now().clone().convertToZone(TimeZone.utcTimeZone), 
            data.recur) {
                var recurrenceRule = new RecurrenceRule(Recur.fromData(data.recur));
                recurrenceRule.normalizeUntil(event.startDate);
                var rruleProperty = new Property("rrule");
                rruleProperty.setValue(recurrenceRule.rrule), event.component.addProperty(rruleProperty);
            }
            return event;
        }, CreateEventAction.prototype.validate = function() {
            if (!this.calendar) throw new Error("A calendar for the event need to be defined");
            if (!this.calendar.writable) throw new Error("Only writable calendars can be updated");
        }, CreateEventAction.prototype.createUuid = function() {
            return util.uuid();
        }, CreateEventAction.prototype.execute = function(context, cb) {
            var that = this, state = context.state, backend = context.backend, event = that.createEvent(context, that.data), calendar = that.calendar;
            calendar.enabled() || (calendar.enabled(!0), new UpdateCalendarAction({
                calendar: calendar,
                data: {
                    enabled: !0
                }
            }).execute(context, function(err) {
                err && that.handleError(err);
            }));
            var vcalendar = Component.fromString("BEGIN:VCALENDAR\nVERSION:2.0\nPRODID:One.com Calendar\nCALSCALE:GREGORIAN\nEND:VCALENDAR");
            vcalendar.resource = {
                id: event.uid + ".ics"
            }, that.eventsToAdd = [ event ], vcalendar.addSubcomponent(state.timeZone().component), 
            vcalendar.addSubcomponent(event.component), async.each(that.eventsToAdd, function(event, callback) {
                backend.saveCalendarResource(state.user(), calendar.id, {
                    id: vcalendar.resource.id
                }, vcalendar.toString(), function(err, data) {
                    err || (vcalendar.resource.etag = data.headers.etag, that.eventsToAdd.forEach(function(event) {
                        calendar.addEvent(event);
                    }), calendar.version(calendar.version() + 1)), callback(err);
                });
            }, cb);
        }, CreateEventAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/days/DaysView.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "node_modules/jquery/dist/jquery.js", "common/util.js", "common/ViewBehavior.js", "calendar/PageNavigator.js", "calendar/model/DateRange.js", "calendar/model/DateRangeView.js", "calendar/model/DraggedEvent.js", "calendar/model/EventInstance.js", "calendar/ical/Time.js", "calendar/ical/Duration.js", "calendar/ical/Event.js", "calendar/ical/TimeZone.js", "calendar/ical/Recur.js", "3rdparty/greedy-interval-packer.js", "calendar/actions/CreateEventAction.js", "calendar/actions/UpdateEventInstanceAction.js", "calendar/components/navigation/navigation.js" ], function(ko, $, util, ViewBehavior, PageNavigator, DateRange, DateRangeView, DraggedEvent, EventInstance, Time, Duration, Event, TimeZone, Recur, intervalPacker, CreateEventAction, UpdateEventInstanceAction) {
        function DaysView(options) {
            function pixelsToSeconds(pixels) {
                return Math.round(pixels / that.dimensions.hourHeight * 60 * 60);
            }
            function secondsToPixels(seconds) {
                return Math.round(seconds / 3600 * that.dimensions.hourHeight);
            }
            function isAllDay(eventInstance) {
                return eventInstance.isAllDay();
            }
            function getCursorDate(eventInfo) {
                var draggedEvent = that.draggedEvent() || {
                    cursorOffset: 0,
                    startedAsAllDayEvent: eventInfo.inAllDayEventSection
                }, cursorDate = that.dateRange().from.clone(), eventOffset = eventInfo.eventOffset;
                cursorDate.day += Math.floor(eventOffset.left / that.dimensions.dayColumnWidth);
                var inAllDayEventSection = eventInfo.inAllDayEventSection, cursorOffset = inAllDayEventSection === draggedEvent.startedAsAllDayEvent ? draggedEvent.cursorOffset : 0;
                if (inAllDayEventSection) cursorDate.isDate = !0, cursorDate.day -= cursorOffset; else {
                    var bodyScrollTop = $("> .body", eventInfo.$element.parent()).scrollTop() || 0, headerHeight = that.headerHeight(), seconds = pixelsToSeconds(eventOffset.top - headerHeight + bodyScrollTop) - cursorOffset;
                    seconds = 60 * Math.floor(seconds / 1800) * 30, cursorDate.isDate = !1, cursorDate.second += seconds;
                }
                return cursorDate;
            }
            function updateDraggedEventDuration(eventInfo) {
                var draggedEvent = that.draggedEvent();
                eventInfo.inAllDayEventSection !== draggedEvent.allDayEvent() && (eventInfo.inAllDayEventSection ? draggedEvent.startedAsAllDayEvent ? draggedEvent.duration(draggedEvent.eventInstance.details.duration) : draggedEvent.duration(Duration.fromData({
                    days: 1
                })) : draggedEvent.startedAsAllDayEvent ? draggedEvent.duration(Duration.fromData({
                    hours: 2
                })) : draggedEvent.duration(draggedEvent.eventInstance.details.duration));
            }
            function createNewDraggedEvent(e, element, minimunDuration) {
                if (!that.embedded()) {
                    var eventInfo = getEventInfo(e, element), cursorDate = getCursorDate(eventInfo);
                    calendars.version();
                    var firstVisibleOrDefault = calendars.getFirstVisible() || calendars.getDefault();
                    if (firstVisibleOrDefault) {
                        that.resetDialog();
                        var event = new Event();
                        event.startDate = cursorDate, event.endDate = cursorDate.clone(), minimunDuration && event.endDate.addDuration(minimunDuration), 
                        event.calendar = firstVisibleOrDefault, that.draggedEvent(new DraggedEvent({
                            summary: "",
                            startDate: cursorDate,
                            duration: minimunDuration || Duration.fromSeconds(0),
                            cursorOffset: 0,
                            eventInstance: new EventInstance({
                                startDate: event.startDate,
                                endDate: event.endDate,
                                event: event
                            }),
                            allDayEvent: eventInfo.inAllDayEventSection,
                            startedAsAllDayEvent: eventInfo.inAllDayEventSection,
                            mode: eventInfo.inAllDayEventSection ? "resize-right" : "resize-bottom",
                            newEvent: !0,
                            startedAsDate: cursorDate.clone()
                        }));
                    }
                }
            }
            function getEventInfo(event, element) {
                var dimensions = that.dimensions, offset = $(element).parent().offset(), eventOffset = {
                    top: event.pageY - offset.top,
                    left: Math.min(Math.max(event.pageX - offset.left - dimensions.hourLabelColumnWidth, 0), dimensions.dayColumnWidth * that.dates().length - 1)
                };
                return {
                    offset: offset,
                    eventOffset: eventOffset,
                    inAllDayEventSection: eventOffset.top <= that.headerHeight(),
                    $element: $(element)
                };
            }
            function isSingleDay(start, end, eventInstance) {
                var timeZone = that.state.timeZone(), oneDay = Duration.fromData({
                    days: 1
                }), beforeEndOfDay = eventInstance.startDate.compareTz(end, timeZone) < 0, afterStartOfDay = start.compareTz(eventInstance.endDate, timeZone) < 0;
                return eventInstance.details.duration.compare(oneDay) < 0 && beforeEndOfDay && afterStartOfDay;
            }
            var that = this;
            util.extend(this, util.pick(options, "actionExecutor", "errorHandler", "embedded", "pageNavigator")), 
            ViewBehavior.installInto(this), DateRangeView.call(this, options), that.currentDate = that.state.currentDate;
            var calendars = that.state.calendars, eventDialog = options.eventDialog;
            that.dimensions = {
                hourLabelColumnWidth: 70,
                dayColumnWidth: 200,
                hourHeight: 44,
                dayLabelHeight: 25,
                allDayEventHeight: 24
            }, that.allDayEventRowLimit = 5, that.showAllEvents = options.showAllEvents, that.isTodayInRange = ko.pureComputed(function() {
                return that.dateRange().contains(that.currentDate());
            }), that.weekend = ko.pureComputed(function() {
                var weekendStart = [ "SU", "MO", "TU", "WE", "TH", "FR", "SA" ][that.state.preferences.global().weekendStart], icalWeekendStart = Recur.icalDayToNumericDay(weekendStart);
                return [ icalWeekendStart, icalWeekendStart + 1 > 7 ? 1 : icalWeekendStart + 1 ];
            });
            var allDayEvents = ko.pureComputed(function() {
                return calendars.version(), that.allDayEvents(isAllDay);
            }), allDayEventPartitions = ko.pureComputed(function() {
                return intervalPacker(allDayEvents());
            });
            that.dateRange.subscribe(function() {
                that.showAllEvents(!1), setTimeout(function() {
                    that.updateDimensions();
                }, 1);
            }), that.activeField = ko.pureComputed(function() {
                return 1 === that.dateRange().days ? "day" : "week";
            }), that.dayColumns = ko.pureComputed(function() {
                var weekend = that.weekend();
                return that.dates().map(function(date) {
                    var css = {
                        weekend: weekend.indexOf(date.dayOfWeek()) > -1
                    };
                    return css[date.pastPresentFuture] = !0, {
                        css: css,
                        pastPresentFuture: date.pastPresentFuture
                    };
                });
            }), that.dayColumns.equalityComparer = function(a, b) {
                return util.arrayEquals(a, b, function(aColumn, bColumn) {
                    return aColumn.pastPresentFuture === bColumn.pastPresentFuture;
                });
            }, that.numberOfshownAllDayEventRows = ko.pureComputed(function() {
                return that.showAllEvents() ? allDayEventPartitions().length : Math.min(allDayEventPartitions().length, that.allDayEventRowLimit);
            }), that.headerHeight = ko.pureComputed(function() {
                return that.dimensions.dayLabelHeight + 24 * (that.numberOfshownAllDayEventRows() + 1);
            }), that.dropEvent = function() {
                if (!that.embedded()) {
                    var draggedEvent = that.draggedEvent();
                    if (draggedEvent) {
                        var eventInstance = draggedEvent.eventInstance, subscriptions = [];
                        if (draggedEvent.newEvent) eventInstance.startDate = draggedEvent.startDate(), eventInstance.endDate = draggedEvent.endDate(), 
                        eventDialog.model({
                            eventInstance: eventInstance
                        }), draggedEvent.dropped(!0), subscriptions.push(eventDialog.model.subscribe(function(model) {
                            model || (subscriptions.forEach(function(subscription) {
                                subscription.dispose();
                            }), that.draggedEvent(null));
                        })); else if (eventInstance.event.isRecurring()) {
                            eventDialog.model({
                                eventInstance: eventInstance
                            }), draggedEvent.dropped(!0);
                            var startDate = draggedEvent.startDate(), endDate = draggedEvent.endDate(), duration = draggedEvent.duration();
                            if (startDate.isDate) {
                                startDate = startDate.convertToZone(TimeZone.localTimezone), endDate = endDate.convertToZone(TimeZone.localTimezone), 
                                duration.days -= 1;
                                var startDateDiff = startDate.subtractDateTz(eventInstance.startDate), newStartDate = eventDialog.startDate.peek().clone().addDuration(startDateDiff);
                                eventDialog.startDate(newStartDate), eventDialog.endDate(newStartDate.clone().addDuration(duration));
                            } else eventDialog.startDate(startDate), eventDialog.endDate(endDate);
                            subscriptions.push(eventDialog.model.subscribe(function(model) {
                                model || (subscriptions.forEach(function(subscription) {
                                    subscription.dispose();
                                }), eventInstance.state.hidden(!1), that.draggedEvent(null));
                            })), eventDialog.saveScope();
                        } else that.executeAction(new UpdateEventInstanceAction({
                            eventInstance: eventInstance,
                            data: {
                                startDate: draggedEvent.startDate(),
                                endDate: draggedEvent.endDate()
                            }
                        }));
                    }
                }
            }, that.allDayEventsPrDay = ko.pureComputed(function() {
                var dateRange = that.dateRange.peek(), weekend = that.weekend(), eventsPrDay = that.dates().map(function(date) {
                    var css = {
                        weekend: weekend.indexOf(date.dayOfWeek()) > -1
                    };
                    return css[date.pastPresentFuture] = !0, {
                        date: date,
                        css: css,
                        count: 0,
                        drop: that.dropEvent,
                        draggedEvent: ko.pureComputed(function() {
                            var draggedEvent = that.draggedEvent();
                            if (!draggedEvent || !draggedEvent.allDayEvent()) return null;
                            var startDate = draggedEvent.startDate().compare(dateRange.from) < 0 ? dateRange.from : draggedEvent.startDate();
                            if (date.compare(startDate) <= 0 && startDate.compare(date.dayAfter()) < 0) {
                                var endDate = dateRange.to.compare(draggedEvent.endDate()) < 0 ? dateRange.to : draggedEvent.endDate(), startCutOff = startDate !== draggedEvent.startDate(), endCutOff = endDate !== draggedEvent.endDate(), calendar = draggedEvent.eventInstance.event.calendar, daysToStart = startDate.subtractDate(that.dateRange().from).toDays(), daysToEnd = endDate.subtractDate(that.dateRange().from).toDays(), start = Math.floor(daysToStart), days = Math.ceil(daysToEnd) - start;
                                return util.extend({
                                    style: {
                                        backgroundColor: calendar.backgroundColor,
                                        borderColor: startCutOff ? calendar.backgroundColor : calendar.borderColor,
                                        color: calendar.boxTextColor,
                                        width: "calc(" + days + " * 100% + " + (Math.max(0, days - 1) - 2) + "px)",
                                        top: draggedEvent.topOffset ? draggedEvent.topOffset + "px" : null
                                    },
                                    css: {
                                        startCutOff: startCutOff,
                                        endCutOff: endCutOff
                                    }
                                }, draggedEvent);
                            }
                        })
                    };
                });
                return allDayEventPartitions().forEach(function(partition) {
                    partition.forEach(function(allDayEvent) {
                        for (var i = allDayEvent.start; i < allDayEvent.end; i += 1) eventsPrDay[i].count += 1;
                    });
                }), eventsPrDay.forEach(function(counts) {
                    counts.aboveLimit = Math.max(0, counts.count - that.allDayEventRowLimit);
                }), eventsPrDay;
            }), that.draggedEvent = ko.observable(null), that.resetDialog = function() {
                that.draggedEvent(null), eventDialog.model(null);
            }, that.allDayEventRows = ko.pureComputed(function() {
                var weekend = that.weekend();
                return allDayEventPartitions().slice(0, that.numberOfshownAllDayEventRows()).map(function(partition) {
                    var result = that.dates().map(function(date) {
                        var css = {
                            weekend: weekend.indexOf(date.dayOfWeek()) > -1
                        };
                        return css[date.pastPresentFuture] = !0, {
                            date: date,
                            css: css
                        };
                    });
                    return partition.forEach(function(allDayEvent, index) {
                        var calendar = allDayEvent.eventInstance.event.calendar, startExtend = result[allDayEvent.start];
                        util.extend(result[allDayEvent.start], {
                            style: {
                                backgroundColor: calendar.backgroundColor,
                                borderLeftColor: allDayEvent.startCutOff ? calendar.backgroundColor : calendar.borderColor,
                                color: calendar.boxTextColor,
                                width: "calc(" + allDayEvent.days + " * 100% + " + (Math.max(0, allDayEvent.days - 1) - 2) + "px)"
                            },
                            css: {
                                hidden: allDayEvent.eventInstance.state.hidden,
                                readonly: allDayEvent.eventInstance.isReadonly(),
                                startCutOff: allDayEvent.startCutOff,
                                endCutOff: allDayEvent.endCutOff,
                                past: !!startExtend.css.past,
                                present: !!startExtend.css.present,
                                future: !!startExtend.css.future,
                                weekend: startExtend.css.weekend
                            },
                            dragStart: function(allDayEventCell, e) {
                                var eventInstance = allDayEventCell.eventInstance;
                                if (eventInstance.isReadonly()) return !1;
                                eventInstance.state.hidden(!0), that.resetDialog();
                                var $element = $(this.element), $tbody = $element.closest("tbody"), pixelsIntoEvent = e.pageX - $element.offset().left, cursorOffset = Math.floor(pixelsIntoEvent / that.dimensions.dayColumnWidth), topOffset = Math.ceil(($element.offset().top - $tbody.offset().top) / that.dimensions.allDayEventHeight) * that.dimensions.allDayEventHeight - $tbody.find("tr").length * that.dimensions.allDayEventHeight + 1, mode = "drag";
                                $element.is(".event-resize-handle.left") ? mode = "resize-left" : $element.is(".event-resize-handle.right") && (mode = "resize-right");
                                var initialStartDate = eventInstance.startDate.convertToZone(that.state.timeZone());
                                that.draggedEvent(new DraggedEvent({
                                    summary: eventInstance.summary,
                                    startDate: initialStartDate,
                                    duration: eventInstance.details.duration,
                                    cursorOffset: cursorOffset,
                                    eventInstance: eventInstance,
                                    allDayEvent: !0,
                                    mode: mode,
                                    topOffset: topOffset
                                }));
                            },
                            dragEnd: function(allDayEventCell) {
                                allDayEventCell.eventInstance.event.isRecurring() || (allDayEventCell.eventInstance.state.hidden(!1), 
                                that.draggedEvent(null));
                            }
                        }, allDayEvent);
                    }), result;
                });
            }), that.draggedEventByDay = function(date) {
                return ko.pureComputed(function() {
                    var draggedEvent = that.draggedEvent();
                    if (!draggedEvent) return null;
                    var start = date.startOfDay(), end = date.dayAfter();
                    if (draggedEvent.endDate().compare(start) < 0 || end.compare(draggedEvent.startDate()) <= 0) return null;
                    var startDate = start.compare(draggedEvent.startDate()) <= 0 ? draggedEvent.startDate() : start, endDate = draggedEvent.endDate().compare(end) <= 0 ? draggedEvent.endDate() : end, secondsToStart = startDate.subtractDate(date).toSeconds(), secondsToEnd = endDate.subtractDate(date).toSeconds();
                    secondsToEnd = Math.max(secondsToEnd, secondsToStart + 1800);
                    var pixelsToStart = secondsToPixels(secondsToStart), pixelsToEnd = Math.min(secondsToPixels(secondsToEnd), secondsToPixels(86400)), calendar = draggedEvent.eventInstance.event.calendar, lastSegment = 0 === endDate.startOfDay().compare(date.startOfDay());
                    return {
                        firstSegment: startDate !== start,
                        lastSegment: lastSegment,
                        summary: draggedEvent.summary,
                        startDate: draggedEvent.startDate,
                        endDate: draggedEvent.endDate,
                        start: pixelsToStart,
                        end: pixelsToEnd,
                        css: {
                            small: secondsToEnd - secondsToStart < 3600
                        },
                        style: {
                            top: pixelsToStart + "px",
                            height: pixelsToEnd - pixelsToStart + "px",
                            backgroundColor: calendar.backgroundColor,
                            borderColor: calendar.borderColor,
                            color: calendar.boxTextColor,
                            left: "1px",
                            right: "1px"
                        },
                        allDayEvent: draggedEvent.allDayEvent(),
                        eventInstance: draggedEvent.eventInstance,
                        dropped: ko.pureComputed(function() {
                            return draggedEvent.dropped() && lastSegment;
                        })
                    };
                });
            };
            var halfHour = Duration.fromData({
                seconds: 1800
            }), dragOverHandlers = {
                "all-day-event": {
                    drag: function(e, draggedEvent, eventInfo, cursorDate) {
                        if (updateDraggedEventDuration(eventInfo), draggedEvent.allDayEvent(eventInfo.inAllDayEventSection), 
                        eventInfo.inAllDayEventSection) {
                            var moveOffset = cursorDate.subtractDate(draggedEvent.eventInstance.startDate.startOfDay());
                            (cursorDate = draggedEvent.eventInstance.startDate.convertToZone(that.state.timeZone())).addDuration(moveOffset);
                        }
                        draggedEvent.startDate(cursorDate);
                    },
                    "resize-left": function(e, draggedEvent, eventInfo, cursorDate) {
                        cursorDate = cursorDate.convertToZone(TimeZone.localTimezone).startOfDay();
                        var newDuration = draggedEvent.endDay().subtractDate(cursorDate);
                        if ((newDuration = Duration.fromSeconds(draggedEvent.duration().toSeconds() + newDuration.toSeconds() - draggedEvent.dayDuration().toSeconds())).toDays() >= 1) (cursorDate = draggedEvent.endDate().clone()).addDuration(Duration.fromSeconds(-newDuration.toSeconds())), 
                        draggedEvent.startDate(cursorDate), draggedEvent.duration(newDuration); else if (draggedEvent.newEvent) {
                            draggedEvent.mode = "resize-right";
                            var startDate = draggedEvent.startedAsDate.clone();
                            draggedEvent.startDate(startDate), (0, dragOverHandlers["all-day-event"]["resize-right"])(e, draggedEvent, eventInfo, cursorDate);
                        }
                    },
                    "resize-right": function(e, draggedEvent, eventInfo, cursorDate) {
                        var newDuration = (cursorDate = cursorDate.convertToZone(TimeZone.localTimezone).startOfDay()).subtractDate(draggedEvent.startDay());
                        newDuration.days += 1, (newDuration = Duration.fromSeconds(draggedEvent.duration().toSeconds() + newDuration.toSeconds() - draggedEvent.dayDuration().toSeconds())).toDays() >= 1 ? draggedEvent.duration(newDuration) : draggedEvent.newEvent && (draggedEvent.mode = "resize-left", 
                        newDuration = draggedEvent.startedAsDate.dayAfter().subtractDate(cursorDate), cursorDate = cursorDate.clone().convertToZone(that.state.timeZone()), 
                        draggedEvent.startDate(cursorDate), draggedEvent.duration(newDuration), (0, dragOverHandlers["all-day-event"]["resize-left"])(e, draggedEvent, eventInfo, cursorDate));
                    }
                },
                "short-event": {
                    drag: function(e, draggedEvent, eventInfo, cursorDate) {
                        updateDraggedEventDuration(eventInfo), draggedEvent.allDayEvent(eventInfo.inAllDayEventSection), 
                        draggedEvent.startDate(cursorDate);
                    },
                    "resize-top": function(e, draggedEvent, eventInfo, cursorDate) {
                        var newDuration;
                        if (cursorDate.compare(draggedEvent.endDate()) <= 0) {
                            var endDate = draggedEvent.endDate();
                            newDuration = (newDuration = endDate.subtractDate(cursorDate)).compare(halfHour) < 0 ? halfHour : newDuration, 
                            (cursorDate = endDate.clone()).second -= newDuration.toSeconds(), draggedEvent.startDate(cursorDate), 
                            draggedEvent.duration(newDuration);
                        } else if (draggedEvent.newEvent) {
                            draggedEvent.mode = "resize-bottom";
                            var startDate = draggedEvent.startedAsDate.clone();
                            draggedEvent.startDate(startDate), (0, dragOverHandlers["short-event"]["resize-bottom"])(e, draggedEvent, eventInfo, cursorDate);
                        }
                    },
                    "resize-bottom": function(e, draggedEvent, eventInfo, cursorDate) {
                        var newDuration;
                        if (draggedEvent.startDate().compare(cursorDate) <= 0) newDuration = (newDuration = cursorDate.subtractDate(draggedEvent.startDate())).compare(halfHour) < 0 ? halfHour : newDuration, 
                        draggedEvent.duration(newDuration); else if (draggedEvent.newEvent) {
                            draggedEvent.mode = "resize-top";
                            var newEndDate = draggedEvent.startedAsDate.clone();
                            newEndDate.addDuration(halfHour), newDuration = newEndDate.subtractDate(cursorDate), 
                            draggedEvent.startDate(cursorDate), draggedEvent.duration(newDuration), (0, dragOverHandlers["short-event"]["resize-top"])(e, draggedEvent, eventInfo, cursorDate);
                        }
                    }
                }
            };
            that.createAllDayEvent = function(viewModel, e) {
                if (!$(e.target).closest(".days-all-day-event").length) {
                    createNewDraggedEvent(e, $("> .header", that.element)[0]);
                    var draggedEvent = that.draggedEvent();
                    null !== draggedEvent && (draggedEvent.startDate(draggedEvent.startDate().startOfDay()), 
                    draggedEvent.duration(Duration.fromData({
                        days: 1
                    })), that.dropEvent());
                }
            }, that.dayClick = function(viewModel, e) {
                createNewDraggedEvent(e, $("> .body", that.element)[0], Duration.fromData({
                    minutes: 30
                })), that.dropEvent();
            }, that.dragStartHeader = function(viewModel, e) {
                var targetData = e.target && ko.dataFor(e.target), eventInstance = targetData && targetData.eventInstance;
                if (eventInstance && eventInstance.isReadonly()) return !1;
                createNewDraggedEvent(e, $("> .header", that.element)[0]);
            }, that.dragStartBody = function(viewModel, e) {
                var targetData = e.target && ko.dataFor(e.target), eventInstance = targetData && targetData.eventInstance;
                if (eventInstance && eventInstance.isReadonly()) return !1;
                createNewDraggedEvent(e, $("> .body", that.element)[0]);
            }, that.dragOver = function(e) {
                if (!that.embedded()) {
                    var draggedEvent = that.draggedEvent();
                    if (draggedEvent) {
                        var mode = draggedEvent.mode, eventScope = draggedEvent.startedAsAllDayEvent ? "all-day-event" : "short-event", handler = dragOverHandlers[eventScope][mode];
                        if (!handler) throw draggedEvent.allDayEvent() ? new Error("Unknown drag mode for all day events: " + mode) : new Error("Unknown drag mode for short events: " + mode);
                        var eventInfo = getEventInfo(e, this.element);
                        handler(e, draggedEvent, eventInfo, getCursorDate(eventInfo));
                    }
                }
            }, that.days = ko.pureComputed(function() {
                calendars.version();
                var weekend = that.weekend();
                return that.eventInstancesForEachDay(isSingleDay).map(function(day, dayIndex) {
                    var eventInstances = day.eventInstances.map(function(dayEntry) {
                        var startDate = dayEntry.startDate, endDate = dayEntry.endDate, secondsToStart = startDate.subtractDate(day.date).toSeconds(), secondsToEnd = endDate.subtractDate(day.date).toSeconds();
                        secondsToEnd = Math.max(secondsToEnd, secondsToStart + 1800);
                        var pixelsToStart = secondsToPixels(secondsToStart), pixelsToEnd = Math.min(secondsToPixels(secondsToEnd), secondsToPixels(86400)), calendar = dayEntry.eventInstance.event.calendar;
                        return util.extend({
                            start: pixelsToStart,
                            end: pixelsToEnd,
                            css: {
                                small: secondsToEnd - secondsToStart < 3600,
                                hidden: dayEntry.eventInstance.state.hidden,
                                readonly: dayEntry.eventInstance.isReadonly()
                            },
                            style: {
                                top: pixelsToStart + "px",
                                height: pixelsToEnd - pixelsToStart + "px",
                                backgroundColor: calendar.backgroundColor,
                                borderLeftColor: calendar.borderColor,
                                color: calendar.boxTextColor
                            }
                        }, dayEntry);
                    }), packedEventInstances = intervalPacker(eventInstances, {
                        groupPartitions: !0
                    }), itemsByEnd = {};
                    packedEventInstances.forEach(function(group) {
                        group.forEach(function(items, i) {
                            var left = 0 === i ? "1px" : "calc(1px + " + i + " * 100% / " + group.length + ")", right = i === group.length - 1 ? "1px" : "calc(100% - " + (i + 1) + " * 100% / " + group.length + ")";
                            items.forEach(function(item) {
                                item.separatorNeeded = !!itemsByEnd[item.start], item.style.left = left, item.style.right = right, 
                                itemsByEnd[item.end] = item;
                            });
                        });
                    });
                    var css = {
                        weekend: weekend.indexOf(day.date.dayOfWeek()) > -1
                    };
                    return css[day.date.pastPresentFuture] = !0, {
                        date: day.date,
                        eventInstances: util.flatten(packedEventInstances),
                        css: css,
                        dragStart: function(eventInstance, e) {
                            if (eventInstance.eventInstance.isReadonly()) return !1;
                            var $element = $(this.element), mode = "drag";
                            $element.is(".event-resize-handle.top") ? mode = "resize-top" : $element.is(".event-resize-handle.bottom") && (mode = "resize-bottom"), 
                            eventInstance.eventInstance.state.hidden(!0);
                            var initialStartDate = eventInstance.eventInstance.startDate.convertToZone(that.state.timeZone()), cursorOffset = 0;
                            "drag" === mode && (cursorOffset = pixelsToSeconds(e.pageY - $(this.element).offset().top) + eventInstance.startDate.subtractDate(initialStartDate).toSeconds()), 
                            that.draggedEvent(new DraggedEvent({
                                summary: eventInstance.eventInstance.summary,
                                startDate: initialStartDate,
                                duration: eventInstance.eventInstance.details.duration,
                                cursorOffset: cursorOffset,
                                eventInstance: eventInstance.eventInstance,
                                allDayEvent: !1,
                                mode: mode
                            }));
                        },
                        dragEnd: function(eventInstance) {
                            eventInstance.eventInstance.event.isRecurring() || (eventInstance.eventInstance.state.hidden(!1), 
                            that.draggedEvent(null));
                        }
                    };
                });
            }), that.pixelsToFirstEvent = function() {
                var pixelsToStartOfFirstEventOfDays = that.days().filter(function(day) {
                    return day.eventInstances.length > 0;
                }).map(function(day) {
                    return Math.min.apply(null, day.eventInstances.map(function(dayEntry) {
                        return dayEntry.start;
                    }));
                });
                return 0 === pixelsToStartOfFirstEventOfDays.length ? secondsToPixels(21600) : Math.max(0, Math.min.apply(null, pixelsToStartOfFirstEventOfDays) - secondsToPixels(3600));
            };
            var firstRender = !0;
            that.afterRender = function(element) {
                if (that.element = element, that.dateRange.subscribe(function() {
                    setTimeout(function() {
                        $(".body", element).scrollTop(that.pixelsToFirstEvent());
                    }, 0);
                }), firstRender) {
                    var scrollSubscription = that.state.calendars.version.subscribe(function(version) {
                        setTimeout(function() {
                            $(".body", element).scrollTop(that.pixelsToFirstEvent());
                        }, 0), scrollSubscription.dispose();
                    });
                    firstRender = !1;
                }
                setTimeout(function() {
                    that.adjustLayout(element), that.updateDimensions();
                }, 0), $(window).resize(function() {
                    that.updateDimensions(), setTimeout(function() {
                        that.updateDimensions();
                    }, 1);
                });
            }, that.currentTimeIndicator = ko.pureComputed(function() {
                if (that.isTodayInRange()) {
                    var daysToCurrentDay = Math.floor(that.state.now().subtractDate(that.dateRange().from).toDays());
                    return {
                        top: Math.round(that.state.hoursFromMidnight.peek() * that.dimensions.hourHeight),
                        left: Math.round(that.dimensions.hourLabelColumnWidth + that.dimensions.dayColumnWidth * daysToCurrentDay),
                        time: that.state.now(),
                        days: that.dateRange().days
                    };
                }
            }), that.currentTimeIndicator.equalityComparer = function(a, b) {
                return (a && a.top) === (b && b.top) && (a && a.left) === (b && b.left);
            }, that.hourVisibility = function(hour) {
                return ko.pureComputed(function() {
                    return !that.isTodayInRange() || Math.abs(that.state.hoursFromMidnight() - hour) > .4 ? "visible" : "hidden";
                });
            };
        }
        return util.extend(DaysView.prototype, DateRangeView.prototype), DaysView.prototype.updateDimensions = function() {
            this.dimensions.dayColumnWidth = $(".day-column", this.element).outerWidth();
        }, DaysView.prototype.adjustLayout = function(element) {
            var $header = $("> .header > table", element), $dayLabels = $("thead", $header), scrollbarColumn = $("th.scrollbar-column", $header), headerWidth = $header.width(), $body = $("> .body", element), bodyWidth = $("> table", $body).width();
            scrollbarColumn.css({
                width: headerWidth - bodyWidth + "px"
            }), this.dimensions.dayLabelHeight = $dayLabels.outerHeight(), this.dimensions.hourLabelColumnWidth = $(".hour-label-column", this.element).outerWidth();
        }, DaysView.prototype.showToday = function() {
            var days = this.dateRange().days;
            if (this.currentDate().dayOfWeek() - Time.weekStart + Time.SUNDAY <= days) this.pageNavigator.show(new DateRange({
                from: this.currentDate().startOfWeek(),
                duration: Duration.fromData({
                    days: days
                })
            })); else {
                var to = this.currentDate().dayAfter(), from = to.clone();
                from.addDuration(Duration.fromData({
                    days: -days
                })), this.pageNavigator.show(new DateRange({
                    from: from,
                    to: to
                }));
            }
        }, DaysView.prototype.showPrevious = function() {
            this.pageNavigator.show(this.dateRange().previous());
        }, DaysView.prototype.showNext = function() {
            this.pageNavigator.show(this.dateRange().next());
        }, DaysView.prototype.showDayView = function() {
            this.resetDialog(), this.pageNavigator.show(new DateRange({
                from: this.isTodayInRange() ? this.currentDate() : this.dateRange().from,
                duration: Duration.fromString("P1D")
            }));
        }, DaysView.prototype.showWeekView = function() {
            this.resetDialog(), this.pageNavigator.show(new DateRange({
                from: this.dateRange().from.startOfWeek(),
                duration: Duration.fromString("P1W")
            }));
        }, DaysView.prototype.showMonthView = function() {
            this.resetDialog();
            var fromDate = this.dateRange().contains(this.currentDate()) ? this.currentDate().startOfMonth() : this.dateRange().from.startOfMonth(), toDate = fromDate.clone();
            toDate.month += 1, this.pageNavigator.show(new DateRange({
                from: fromDate,
                to: toDate
            }));
        }, DaysView.prototype.showAgendaView = function() {
            this.pageNavigator.show(this.dateRange().expandToMonth(), {
                view: "agenda"
            });
        }, DaysView.prototype.showMore = function(viewModel, event) {
            this.pageNavigator.show(this.dateRange(), {
                showAllEvents: !0
            }), event && event.stopPropagation();
        }, DaysView.prototype.showLess = function(viewModel, event) {
            this.pageNavigator.show(this.dateRange(), {
                showAllEvents: !1
            }), event && event.stopPropagation();
        }, DaysView;
    });
}(), function() {
    (0, System.amdDefine)("calendar/PageNavigator.js", [ "common/util.js", "3rdparty/page.js", "3rdparty/url-template.js", "calendar/model/DateRange.js" ], function(util, page, urlTemplate, DateRange) {
        function PageNavigator(options) {
            this.state = options.state, options.page && (this.page = options.page);
        }
        PageNavigator.prototype.page = page;
        var url = urlTemplate.parse("/calendar/{user}{/view}/{dateRange}{?showAllEvents}");
        return PageNavigator.prototype.expandUrl = function(dateRange, options) {
            return (options = options || {}).view && "agenda" !== options.view && delete options.view, 
            this.state.defaultDateRange().equal(dateRange) || (options.dateRange = dateRange.toString()), 
            url.expand(util.extend({
                user: this.state.user()
            }, options)).replace("%40", "@");
        }, PageNavigator.prototype.show = function(dateRange, options) {
            this.page(this.expandUrl(dateRange, options));
        }, PageNavigator.prototype.redirect = function(dateRange, options) {
            this.page.redirect(this.expandUrl(dateRange, options));
        }, PageNavigator;
    });
}(), function() {
    (0, System.amdDefine)("calendar/model/DateRangeView.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "calendar/ical/Time.js", "calendar/ical/Duration.js", "calendar/ical/TimeZone.js", "calendar/ical/Recur.js" ], function(ko, util, Time, Duration, TimeZone, Recur) {
        function DateRangeView(options) {
            function getEventInstancesForDay(date, isSingleDay) {
                var start = date, end = start.clone();
                return end.addDuration(oneDay), that.eventInstances().filter(isSingleDay.bind(null, start, end)).map(function(eventInstance) {
                    var startDate = start.compareTz(eventInstance.startDate, timeZone()) <= 0 ? eventInstance.startDate.convertToZone(timeZone()) : start, endDate = eventInstance.endDate.compareTz(end, timeZone()) <= 0 ? eventInstance.endDate.convertToZone(timeZone()) : end;
                    return {
                        firstSegment: startDate !== start,
                        startDate: startDate,
                        endDate: endDate,
                        eventInstance: eventInstance
                    };
                });
            }
            var that = this;
            util.extend(that, util.pick(options, "state"));
            var timeZone = that.state.timeZone, oneDay = Duration.fromData({
                days: 1
            }), calendars = that.state.calendars;
            that.currentDate = that.state.currentDate;
            var dateRange = ko.isObservable(options.dateRange) ? options.dateRange : ko.observable(options.dateRange);
            that.dateRange = dateRange, that.weekNumber = ko.pureComputed(function() {
                return that.dateRange().from.weekNumber(Time.weekStart);
            }), that.isSameWeek = ko.pureComputed(function() {
                var dateFrom = that.dateRange().from, dateTo = that.dateRange().to.dayBefore();
                return dateFrom.weekNumber(Time.weekStart) === dateTo.weekNumber(Time.weekStart);
            }), that.eventInstances = function() {
                return calendars.getEventInstances(dateRange().from, dateRange().to);
            }, that.allDayEvents = function(isAllDay) {
                return that.eventInstances().filter(isAllDay).map(function(eventInstance) {
                    var startDate = eventInstance.startDate.convertToZone(timeZone()), endDate = eventInstance.endDate.convertToZone(timeZone()), startCutOff = !1, endCutOff = !1;
                    startDate.compare(dateRange().from) < 0 && (startDate = dateRange().from, startCutOff = !0), 
                    dateRange().to.compare(endDate) < 0 && (endDate = dateRange().to, endCutOff = !0);
                    var daysToStart = startDate.subtractDate(dateRange().from).toDays(), daysToEnd = endDate.subtractDate(dateRange().from).toDays();
                    if (daysToStart > daysToEnd) {
                        var tmp = daysToStart;
                        daysToStart = daysToEnd, daysToEnd = tmp;
                    }
                    var start = Math.floor(daysToStart), end = Math.ceil(daysToEnd);
                    return {
                        start: start,
                        end: end,
                        days: end - start,
                        startCutOff: startCutOff,
                        endCutOff: endCutOff,
                        eventInstance: eventInstance
                    };
                });
            }, that.dates = function() {
                var currentDateIndex = Math.floor(that.currentDate().subtractDate(dateRange().from).toDays());
                return dateRange().dates(timeZone()).map(function(date, i) {
                    return date.pastPresentFuture = that.pastPresentFuture(currentDateIndex - i), date;
                });
            }, that.eventInstancesForEachDay = function(isSingleDay) {
                return that.dates().map(function(date) {
                    return {
                        date: date,
                        pastPresentFuture: date.pastPresentFuture,
                        eventInstances: getEventInstancesForDay(date, isSingleDay)
                    };
                });
            };
        }
        return DateRangeView.prototype.pastPresentFuture = function(offset) {
            return offset < 0 ? "future" : 0 < offset ? "past" : "present";
        }, DateRangeView;
    });
}(), function() {
    (0, System.amdDefine)("calendar/model/DraggedEvent.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/ical/TimeZone.js" ], function(ko, TimeZone) {
        function DraggedEvent(options) {
            var that = this;
            that.summary = options.summary, that.startDate = ko.observable(options.startDate), 
            that.duration = ko.observable(options.duration), that.cursorOffset = options.cursorOffset, 
            that.eventInstance = options.eventInstance, that.allDayEvent = ko.observable(options.allDayEvent), 
            that.startedAsAllDayEvent = options.allDayEvent, that.mode = options.mode, that.newEvent = options.newEvent, 
            that.dropped = ko.observable(!!options.dropped), that.startedAsDate = options.startedAsDate, 
            that.topOffset = options.topOffset || 0, that.startDate.equalityComparer = function(a, b) {
                return 0 === a.compare(b);
            }, that.endDate = ko.pureComputed(function() {
                var endDate = that.startDate().clone();
                return endDate.addDuration(that.duration()), endDate;
            }), that.duration.equalityComparer = function(a, b) {
                return 0 === a.compare(b);
            }, that.startDay = ko.pureComputed(function() {
                return that.startDate().convertToZone(TimeZone.localTimezone).startOfDay();
            }), that.endDay = ko.pureComputed(function() {
                var endDay = that.endDate().convertToZone(TimeZone.localTimezone);
                return endDay.isDate ? endDay : endDay.dayAfter();
            }), that.dayDuration = ko.pureComputed(function() {
                return that.endDay().subtractDate(that.startDay());
            });
        }
        return DraggedEvent;
    });
}(), function() {
    (0, System.amdDefine)("common/localeStringComparator.js", [], function() {
        var compare, locale = inter.id.replace(/_/g, "-");
        "de" === locale && (locale = "de-DE-u-co-phonebk");
        try {
            compare = new Intl.Collator(locale).compare;
        } catch (_) {
            compare = function(a, b) {
                return (a + "").localeCompare(b, locale);
            };
        }
        return compare;
    });
}(), function() {
    (0, System.amdDefine)("calendar/Sort.js", [ "calendar/ical/TimeZone.js", "common/localeStringComparator.js" ], function(TimeZone, localeStringComparator) {
        function calendarComparator(a, b) {
            return a.defaultCalendar() && !b.defaultCalendar() ? -1 : !a.defaultCalendar() && b.defaultCalendar() ? 1 : localeStringComparator(a.name(), b.name());
        }
        return {
            calendars: {
                byDefaultThenByName: function(calendars) {
                    return calendars.sort(calendarComparator);
                }
            },
            eventInstances: {
                byStartDateThenByCalendarName: function(eventInstances) {
                    return eventInstances.sort(function(a, b) {
                        var aStartUtc = a.startDate.isDate ? a.startDate.clone().convertToZone(TimeZone.utcTimeZone) : a.startDate, bStartUtc = b.startDate.isDate ? b.startDate.clone().convertToZone(TimeZone.utcTimeZone) : b.startDate, c = aStartUtc.compare(bStartUtc);
                        if (0 !== c) return c;
                        var aEndUtc = a.endDate.isDate ? a.endDate.clone().convertToZone(TimeZone.utcTimeZone) : a.endDate, bEndUtc = b.endDate.isDate ? b.endDate.clone().convertToZone(TimeZone.utcTimeZone) : b.endDate;
                        if (0 !== (c = aEndUtc.compare(bEndUtc))) return c;
                        var aEvent = a.event || a.eventInstance.event, bEvent = b.event || b.eventInstance.event;
                        return calendarComparator(aEvent.calendar, bEvent.calendar);
                    });
                }
            }
        };
    });
}(), function() {
    var define = System.amdDefine;
    !function(e) {
        if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define("3rdparty/greedy-interval-packer.js", [], e); else {
            var o;
            "undefined" != typeof window ? o = window : "undefined" != typeof global ? o = global : "undefined" != typeof self && (o = self);
            var n = o;
            (n = (n = n.com || (n.com = {})).one || (n.one = {})).greedyIntervalPacker = e();
        }
    }(function() {
        return function e(t, n, r) {
            function s(o, u) {
                if (!n[o]) {
                    if (!t[o]) {
                        var a = "function" == typeof require && require;
                        if (!u && a) return a(o, !0);
                        if (i) return i(o, !0);
                        var f = new Error("Cannot find module '" + o + "'");
                        throw f.code = "MODULE_NOT_FOUND", f;
                    }
                    var l = n[o] = {
                        exports: {}
                    };
                    t[o][0].call(l.exports, function(e) {
                        var n = t[o][1][e];
                        return s(n || e);
                    }, l, l.exports, e, t, n, r);
                }
                return n[o].exports;
            }
            for (var i = "function" == typeof require && require, o = 0; o < r.length; o++) s(r[o]);
            return s;
        }({
            1: [ function(require, module, exports) {
                module.exports = function(a, b) {
                    var c = b.start - a.start;
                    return 0 !== c ? c : a.end - a.start - (b.end - b.start);
                };
            }, {} ],
            2: [ function(require, module, exports) {
                var intersectsWithSome = require(3).intersectsWithSome, byDescStartAndLength = require(1);
                module.exports = function(intervals, options) {
                    if (options = options || {}, !Array.isArray(intervals)) throw new Error("The interval packer requires an array of objects with start and end properties.");
                    if (0 === intervals.length) return [];
                    intervals.forEach(function(interval) {
                        if ("object" != typeof interval || "number" != typeof interval.start || "number" != typeof interval.end || interval.end <= interval.start) throw new Error("Intervals must be objects with integer properties start and end where start < end.");
                    }), intervals = [].concat(intervals).sort(byDescStartAndLength);
                    for (var currentPartition, partitions = [], currentPartitionEnd = -1 / 0; intervals.length > 0; ) {
                        var interval = intervals.pop();
                        currentPartitionEnd <= interval.start && (currentPartition = [ [] ], partitions.push(currentPartition));
                        for (var i = 0; i < currentPartition.length && intersectsWithSome(currentPartition[i], interval); ) i += 1;
                        (currentPartition[i] = currentPartition[i] || []).push(interval), currentPartitionEnd = Math.max(currentPartitionEnd, interval.end);
                    }
                    return options.groupPartitions ? partitions : partitions.reduce(function(result, partition) {
                        return partition.forEach(function(partitionGroup, i) {
                            return result[i] = result[i] || [], Array.prototype.push.apply(result[i], partitionGroup), 
                            result;
                        }), result;
                    }, []);
                };
            }, {} ],
            3: [ function(require, module, exports) {
                var intersection = {
                    intersects: function(x, y) {
                        return x.start < y.end && y.start < x.end || x.start === y.start;
                    },
                    intersectsWithSome: function(intervals, interval) {
                        function intersectWithInterval(other) {
                            return intersection.intersects(interval, other);
                        }
                        return intervals.some(intersectWithInterval);
                    }
                };
                module.exports = intersection;
            }, {} ]
        }, {}, [ 2 ])(2);
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/ScopeDetectionError.js", [ "3rdparty/Failboat.js" ], function(Failboat) {
        function ScopeDetectionError(possibleScopes) {
            Failboat.tag(this, "SCOPE_DETECTION_ERROR"), this.possibleScopes = possibleScopes;
        }
        return ScopeDetectionError.prototype = new Error(), ScopeDetectionError;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/UpdateCalendarAction.js", [ "common/util.js", "common/ActionBehavior.js" ], function(util, ActionBehavior) {
        function UpdateCalendarAction(options) {
            util.extend(this, util.pick(options, "calendar", "data")), ActionBehavior.installInto(this);
        }
        return UpdateCalendarAction.prototype.name = "UpdateCalendarAction", UpdateCalendarAction.prototype.validate = function() {}, 
        UpdateCalendarAction.prototype.execute = function(context, callback) {
            var that = this, state = context.state, backend = context.backend, dialogToServerMapping = {
                color: "color",
                enabled: "enabled",
                default: "default",
                displayName: "name"
            }, serverToModelMapping = {
                color: "color",
                enabled: "enabled",
                default: "defaultCalendar",
                name: "name"
            }, calendar = that.calendar, data = {};
            Object.keys(dialogToServerMapping).filter(function(property) {
                return that.data.hasOwnProperty(property);
            }).forEach(function(property) {
                data[dialogToServerMapping[property]] = that.data[property];
            }), state.calendars.all().filter(function(cal) {
                return cal.id !== calendar.id && data.default;
            }).forEach(function(cal) {
                cal.defaultCalendar(!1);
            }), Object.keys(data).forEach(function(dataKey) {
                (0, calendar[serverToModelMapping[dataKey]])(data[dataKey]);
            }), backend.saveCalendar(state.user(), calendar.id, data, function(err, data) {
                callback(err);
            });
        }, UpdateCalendarAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/ical/helpers.js", [ "3rdparty/ical.js" ], function(ical) {
        return ical.helpers;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/UpdateEventInstanceAction.js", [ "3rdparty/async.js", "common/util.js", "common/ActionBehavior.js", "calendar/actions/ScopeDetectionError.js", "calendar/actions/UpdateCalendarAction.js", "calendar/model/RecurrenceRule.js", "calendar/ical/Duration.js", "calendar/ical/Time.js", "calendar/ical/Recur.js", "calendar/ical/Event.js", "calendar/ical/Component.js", "calendar/ical/Property.js", "calendar/ical/TimeZone.js", "calendar/ical/helpers.js" ], function(async, util, ActionBehavior, ScopeDetectionError, UpdateCalendarAction, RecurrenceRule, Duration, Time, Recur, Event, Component, Property, TimeZone, icalHelpers) {
        function UpdateEventInstanceAction(options) {
            util.extend(this, util.pick(options, "eventInstance", "data", "scope")), ActionBehavior.installInto(this);
        }
        function isPropertyDefined(data, property) {
            return null !== data[property] && void 0 !== data[property];
        }
        function createRecur(recurData, eventStartDate) {
            var recurrenceRule = new RecurrenceRule(Recur.fromData(recurData));
            return recurrenceRule.normalizeUntil(eventStartDate), recurrenceRule.rrule;
        }
        function adjustEventDates(event, data, dateField) {
            var dateFieldOffsetName = dateField + "Offset", isDateFieldName = "is" + util.firstUp(dateField);
            if (isPropertyDefined(data, dateFieldOffsetName)) {
                var date = event[dateField], offset = data[dateFieldOffsetName], hasDateRegulartor = isPropertyDefined(data, isDateFieldName), isDate = date.isDate;
                hasDateRegulartor && isDate && (date.isDate = data[isDateFieldName]), date = date.addDuration(offset), 
                hasDateRegulartor && !isDate && (date.isDate = data[isDateFieldName]), date.isDate ? date = date.convertToZone(TimeZone.localTimeZone) : date.zone.isLocal() && (date = date.convertToZone(data.offsetZone)), 
                event[dateField] = date;
            }
        }
        function updateEvent(event, data) {
            [ "summary", "description", "location" ].forEach(function(property) {
                isPropertyDefined(data, property) && (event[property] = data[property]);
            }), [ "startDate", "endDate" ].forEach(function(property) {
                if (isPropertyDefined(data, property)) {
                    var originTimeZone = event[property].zone, targetDate = data[property];
                    !targetDate.isDate && targetDate.zone.equal(TimeZone.localTimeZone) && (targetDate = targetDate.convertToZone(originTimeZone)), 
                    event[property] = targetDate;
                }
            }), adjustEventDates(event, data, "startDate"), adjustEventDates(event, data, "endDate");
            var component = event.component;
            if (component.hasProperty("rrule")) if (data.recur) component.updatePropertyWithValue("rrule", createRecur(data.recur, event.startDate)); else if (null === data.recur) component.removeProperty("rrule"); else {
                var updatedRRule = createRecur(component.getFirstPropertyValue("rrule").toJSON(), event.startDate);
                component.updatePropertyWithValue("rrule", updatedRRule);
            } else if (data.recur) {
                var recur = createRecur(data.recur, event.startDate), rrule = new Property("rrule");
                rrule.setValue(recur), component.addProperty(rrule);
            }
        }
        function isRedundantException(event, exception) {
            if (0 !== exception.startDate.compare(exception.recurrenceId) || 0 !== event.duration.compare(exception.duration)) return !1;
            var propertyNameIndex = {};
            return exception.component.getAllProperties().forEach(function(property) {
                if (/^(?:uid|dtstart|dtend|dtstamp|duration|recurrence-id)$/.test(property.name)) return !0;
                var propertyIndex = propertyNameIndex[property.name] = propertyNameIndex[property.name] = {}, key = property.toICALString();
                propertyIndex[key] = (propertyIndex[key] || 0) + 1;
            }), event.component.getAllProperties().forEach(function(property) {
                var propertyIndex = propertyNameIndex[property.name];
                if (propertyIndex) {
                    var key = property.toICALString();
                    propertyIndex[key] && (propertyIndex[key] -= 1);
                }
            }), Object.keys(propertyNameIndex).every(function(propertyName) {
                var propertyIndex = propertyNameIndex[propertyName];
                return Object.keys(propertyIndex).every(function(key) {
                    return 0 === propertyIndex[key];
                });
            });
        }
        function getOffsetInfo(dateField, eventInstance, data) {
            if (data[dateField]) {
                var compareFrom = eventInstance[dateField], compareTo = data[dateField], compareZone = compareFrom.zone.isLocal() ? compareTo.zone : compareFrom.zone;
                return compareTo = compareTo.convertToZone(compareZone), compareFrom = compareFrom.convertToZone(compareZone), 
                {
                    offset: compareTo.subtractDateTz(compareFrom),
                    zone: compareZone
                };
            }
        }
        function updateAllInstances(event, data) {
            var modifiesTime = data.startDateOffset || data.endDateOffset, originalStartDate = event.startDate.clone();
            event.calendar.removeEventInstanceByEvents(event), updateEvent(event, data);
            var exceptions = Object.keys(event.exceptions).map(function(recurrenceId) {
                return event.exceptions[recurrenceId];
            });
            modifiesTime ? (event.clearExceptions(), event.component.removeAllProperties("rdates"), 
            0 !== originalStartDate.startOfDay().compare(event.startDate.startOfDay()) ? (exceptions.forEach(function(exception) {
                exception.component.parent.removeSubcomponent(exception.component);
            }), event.component.removeAllProperties("exdate")) : (exceptions.forEach(function(exception) {
                data.startDateOffset && (exception.recurrenceId = exception.recurrenceId.addDuration(data.startDateOffset)), 
                updateEvent(exception, util.extend({}, data, {
                    startDate: exception.recurrenceId.clone(),
                    endDate: exception.recurrenceId.clone().addDuration(event.duration),
                    startDateOffset: null,
                    endDateOffset: null
                }));
            }), exceptions.forEach(function(exception) {
                event.relateException(exception);
            }), event.component.getAllProperties("exdate").forEach(function(property) {
                property.setValues(property.getValues().map(function(exdate) {
                    return exdate.addDuration(data.startDateOffset);
                }));
            }))) : exceptions.forEach(function(exception) {
                updateEvent(exception, data);
            });
        }
        function removePropertyValues(property, predicate) {
            var values = property.getValues().filter(function(value) {
                return !predicate(value);
            });
            values.length > 0 ? property.setValues(values) : property.parent.removeProperty(property);
        }
        UpdateEventInstanceAction.prototype.name = "UpdateEventInstanceAction";
        var scopes = [ "this", "thisAndFuture", "all" ];
        return UpdateEventInstanceAction.prototype.validate = function() {
            if (!this.eventInstance.event.calendar.writable) throw new Error("Only writable calendars can be updated");
            if (null !== this.scope && void 0 !== this.scope) {
                if (-1 === scopes.indexOf(this.scope)) throw new Error("Unknown scope: " + this.scope + ", should be one of: " + scopes.join(", "));
                if ("this" !== this.scope) {
                    if (!this.eventInstance.event.isRecurring()) throw new Error("scope: " + this.scope + " is only supported for recurring events");
                    if (this.eventInstance.details.isRecurrenceException() && (this.data.startDate || this.data.endDate)) throw new Error("scope: " + this.scope + " is not supported when changing the time of a recurrence exception");
                    if ("thisAndFuture" === this.scope && (this.eventInstance.first || this.eventInstance.last)) throw new Error("scope: thisAndFuture is not supported on the " + (this.eventInstance.first ? "first" : "last") + " instance in a series");
                }
            }
        }, UpdateEventInstanceAction.prototype.removeRedundantExceptions = function() {
            var event = this.eventInstance.event, iterator = event.iterator(), exceptionIds = Object.keys(event.exceptions).sort(), isPossibleExceptionById = {};
            if (exceptionIds.length > 0) {
                var next, lastExceptionId = exceptionIds[exceptionIds.length - 1];
                do {
                    (next = iterator.next()) && (isPossibleExceptionById[next.toString()] = !0);
                } while (next && next.toString() < lastExceptionId);
            }
            exceptionIds.forEach(function(recurrenceId) {
                var exception = event.exceptions[recurrenceId];
                isPossibleExceptionById[recurrenceId] && !isRedundantException(event, exception) || (delete event.exceptions[recurrenceId], 
                event.component.parent.removeSubcomponent(exception.component));
            });
        }, UpdateEventInstanceAction.prototype.removeAllExceptions = function() {
            var event = this.eventInstance.event;
            Object.keys(event.exceptions).forEach(function(recurrenceId) {
                var exception = event.exceptions[recurrenceId];
                delete event.exceptions[recurrenceId], event.component.parent.removeSubcomponent(exception.component);
            });
        }, UpdateEventInstanceAction.prototype.updateThisInstance = function() {
            var eventInstance = this.eventInstance, event = eventInstance.event, data = this.data;
            if (eventInstance.removeFromCalendar(), event.isRecurring()) if (eventInstance.details.isRecurrenceException()) updateEvent(eventInstance.details, data); else {
                var exception = eventInstance.createException();
                updateEvent(exception, data), event.relateException(exception), event.component.parent.addSubcomponent(exception.component);
            } else updateEvent(event, data);
        }, UpdateEventInstanceAction.prototype.getDataWithDateOffsets = function() {
            var eventInstance = this.eventInstance, data = this.data, startDateOffsetInfo = getOffsetInfo("startDate", eventInstance, data), endDateOffsetInfo = getOffsetInfo("endDate", eventInstance, data);
            return util.extend({
                startDateOffset: startDateOffsetInfo && startDateOffsetInfo.offset,
                endDateOffset: endDateOffsetInfo && endDateOffsetInfo.offset,
                isStartDate: data.startDate && data.startDate.isDate,
                isEndDate: data.endDate && data.endDate.isDate,
                offsetZone: startDateOffsetInfo && startDateOffsetInfo.zone || endDateOffsetInfo && endDateOffsetInfo.zone
            }, data, {
                startDate: null,
                endDate: null
            });
        }, UpdateEventInstanceAction.prototype.updateAllInstances = function() {
            updateAllInstances(this.eventInstance.event, this.getDataWithDateOffsets());
        }, UpdateEventInstanceAction.prototype.detectScope = function() {
            var eventInstance = this.eventInstance, data = this.data, dataKeys = Object.keys(this.data);
            if (eventInstance.event.isRecurring()) {
                if (null === data.recur || eventInstance.first && eventInstance.last || 1 === dataKeys.length && "calendar" === dataKeys[0]) return [ "all" ];
                if (eventInstance.details.isRecurrenceException() && (data.startDate || data.endDate)) return [ "this" ];
                var allowedScopes = [];
                return data.recur || allowedScopes.push("this"), eventInstance.event.recurrence && "WEEKLY" === eventInstance.event.recurrence.rrule.freq && data.startDate ? data.startDate.year === eventInstance.startDate.year && data.startDate.month === eventInstance.startDate.month && data.startDate.day === eventInstance.startDate.day ? (allowedScopes.push("all"), 
                eventInstance.first || eventInstance.last || allowedScopes.push("thisAndFuture")) : allowedScopes._forceChoice = !0 : (allowedScopes.push("all"), 
                eventInstance.first || eventInstance.last || allowedScopes.push("thisAndFuture")), 
                allowedScopes;
            }
            return [ "this" ];
        }, UpdateEventInstanceAction.prototype.createUuid = function() {
            return util.uuid();
        }, UpdateEventInstanceAction.prototype.updateThisInstanceAndFuture = function() {
            var eventInstance = this.eventInstance, event = eventInstance.event;
            event.calendar.removeEventInstanceByEvents(event);
            var vcalendar = new Component(icalHelpers.clone(event.component.parent.toJSON(), !0));
            vcalendar.resource = {
                id: this.createUuid() + ".ics"
            };
            var exceptions = Object.keys(event.exceptions).map(function(recurrenceId) {
                return event.exceptions[recurrenceId];
            });
            event.clearExceptions();
            var tailEvent;
            vcalendar.getAllSubcomponents("vevent").forEach(function(vevent) {
                tailEvent ? vcalendar.removeSubcomponent(vevent) : tailEvent = new Event(vevent);
            }), tailEvent.uid = this.createUuid(), event.calendar.addEvent(tailEvent), tailEvent.component.getAllProperties("rrule").forEach(function(property) {
                var rrule = property.getFirstValue();
                "number" == typeof rrule.count && (rrule.count -= eventInstance.count, property.setValue(rrule));
            }), event.component.getAllProperties("rrule").forEach(function(property) {
                var rrule = property.getFirstValue();
                "number" == typeof rrule.count ? rrule.count = eventInstance.count : (rrule.until = eventInstance.recurrenceId.clone(), 
                rrule.until.day -= 1), property.setValue(rrule);
            }), exceptions.forEach(function(exception) {
                exception.recurrenceId.compare(eventInstance.recurrenceId) < 0 ? event.relateException(exception) : (vcalendar.addSubcomponent(exception.component), 
                exception.uid = tailEvent.uid, tailEvent.relateException(exception));
            }), event.component.getAllProperties("exdate").forEach(function(property) {
                removePropertyValues(property, function(exdate) {
                    return exdate.compare(eventInstance.recurrenceId) >= 0;
                });
            }), tailEvent.component.getAllProperties("exdate").forEach(function(property) {
                removePropertyValues(property, function(exdate) {
                    return exdate.compare(eventInstance.recurrenceId) < 0;
                });
            }), event.component.getAllProperties("rdate").forEach(function(property) {
                removePropertyValues(property, function(rdate) {
                    return rdate.start.compare(eventInstance.recurrenceId) >= 0;
                });
            }), tailEvent.startDate = eventInstance.startDate.clone(), tailEvent.endDate = eventInstance.startDate.clone().addDuration(event.duration);
            var data = this.getDataWithDateOffsets();
            updateAllInstances(tailEvent, data), this.eventsToSave.push(tailEvent);
        }, UpdateEventInstanceAction.prototype.sanitizeEvents = function(state) {
            this.eventsToSave.map(function(e) {
                var vcalendar = e.component.parent, vTimeZone = vcalendar.getFirstSubcomponent("vtimezone"), timeZone = TimeZone.fromData(vTimeZone), eventTimeZone = !vTimeZone || timeZone.equal(state.timeZone()) ? state.timeZone() : timeZone;
                return e.startDate.isDate ? e.startDate = e.startDate.convertToZone(TimeZone.localTimezone) : e.startDate = e.startDate.convertToZone(eventTimeZone), 
                e.endDate.isDate ? e.endDate = e.endDate.convertToZone(TimeZone.localTimezone) : e.endDate = e.endDate.convertToZone(eventTimeZone), 
                vcalendar.getAllSubcomponents().filter(function(eventData) {
                    return "vevent" === eventData.name;
                }).map(function(eventData) {
                    return new Event(eventData);
                }).filter(function(event) {
                    return event.recurrenceId;
                }).forEach(function(event) {
                    event.recurrenceId.zone && !event.recurrenceId.zone.equal(TimeZone.localTimeZone) || (event.recurrenceId = event.recurrenceId.convertToZone(eventTimeZone));
                }), vTimeZone || vcalendar.addSubcomponent(eventTimeZone.component), e;
            });
        }, UpdateEventInstanceAction.prototype.sanitizeData = function() {
            var data = this.data, vTimeZone = this.eventInstance.event.component.parent.getFirstSubcomponent("vtimezone"), calendarTimeZone = vTimeZone && TimeZone.fromData(vTimeZone), eventTimeZone = this.eventInstance.event.startDate.zone;
            eventTimeZone.equal(TimeZone.localTimeZone) && vTimeZone && !calendarTimeZone.equal(TimeZone.localTimeZone) && (eventTimeZone = calendarTimeZone), 
            Object.keys(data).forEach(function(dataKey) {
                if ([ "startDate", "endDate" ].indexOf(dataKey) > -1) {
                    var value = data[dataKey];
                    value.isDate ? data[dataKey] = value.convertToZone(TimeZone.localTimeZone) : eventTimeZone.equal(TimeZone.localTimeZone) || (data[dataKey] = value.convertToZone(eventTimeZone));
                }
            });
        }, UpdateEventInstanceAction.prototype.execute = function(context, cb) {
            var that = this, state = context.state, backend = context.backend;
            if (!that.scope) {
                var detectedScopes = that.detectScope();
                if (detectedScopes.length > 1 || detectedScopes._forceChoice) return cb(new ScopeDetectionError([].concat(detectedScopes)));
                that.scope = detectedScopes[0];
            }
            var eventInstance = that.eventInstance, event = eventInstance.event, calendar = eventInstance.event.calendar;
            switch (that.eventsToSave = [ event ], that.sanitizeEvents(state), that.sanitizeData(), 
            that.scope) {
              case "this":
                that.updateThisInstance();
                break;

              case "thisAndFuture":
                that.updateThisInstanceAndFuture();
                break;

              case "all":
                that.updateAllInstances();
            }
            event.isRecurring() && null === that.data.recur ? that.removeAllExceptions() : that.removeRedundantExceptions();
            var tasks = [], targetCalendar = that.data.calendar;
            if (targetCalendar) {
                targetCalendar.enabled() || (targetCalendar.enabled(!0), new UpdateCalendarAction({
                    calendar: calendar,
                    data: {
                        enabled: !0
                    }
                }).execute(context, function(err) {
                    err && that.handleError(err);
                })), calendar.removeEventInstanceByEvents(event), delete calendar.events[event.uid];
                var newUid = that.createUuid();
                event.uid = newUid, Object.keys(event.exceptions).forEach(function(recurrenceId) {
                    event.exceptions[recurrenceId].uid = newUid;
                });
                var oldResource = util.extend(event.component.parent.resource);
                that.eventsToSave.forEach(function(event) {
                    targetCalendar.addEvent(event), tasks.push(function(callback) {
                        var vcalendar = event.component.parent;
                        vcalendar.resource = {
                            id: newUid + ".ics"
                        }, backend.saveCalendarResource(state.user(), targetCalendar.id, vcalendar.resource, vcalendar.toString(), function(err, data) {
                            err || (vcalendar.resource.etag = data.headers.etag), callback(err);
                        });
                    });
                }), tasks.push(function(callback) {
                    backend.deleteCalendarResource(state.user(), calendar.id, oldResource, callback);
                }), targetCalendar.version(targetCalendar.version() + 1);
            } else tasks = that.eventsToSave.map(function(event) {
                return function(callback) {
                    var vcalendar = event.component.parent;
                    backend.saveCalendarResource(state.user(), event.calendar.id, vcalendar.resource, vcalendar.toString(), function(err, data) {
                        err || (vcalendar.resource.etag = data.headers.etag), callback(err);
                    });
                };
            });
            calendar.version(calendar.version() + 1), async.series(tasks, cb);
        }, UpdateEventInstanceAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/components/navigation/NavigationViewModel.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "node_modules/jquery/dist/jquery.js", "common/util.js" ], function(ko, $, utils) {
        function NavigationViewModel(options) {
            var that = this, context = utils.defaults(options, {
                showNavigation: !0,
                showTabs: !0,
                activeField: null,
                showToday: $.noop,
                showPrevious: $.noop,
                showNext: $.noop,
                showDayView: $.noop,
                showWeekView: $.noop,
                showMonthView: $.noop,
                showAgendaView: $.noop
            });
            context.activeField = ko.isObservable(context.activeField) ? context.activeField : ko.observable(context.activeField), 
            utils.extend(that, context);
        }
        return NavigationViewModel;
    });
}(), System.registerDynamic("calendar/components/navigation/navigation.ko", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(tpl) {
        var s = document.createElement("script");
        s.id = tpl.id, s.innerHTML = window.TR ? TR.HTML(tpl.content) : tpl.content, s.type = "text/html", 
        document.head.appendChild(s);
    }({
        id: "navigation",
        content: '<div class="buttons-container navigation-btns" data-bind="visible: showNavigation">\n    <button data-bind="leftMouseDown: showToday" data-i18n="calendar.Today">Today</button>\n    <button data-bind="leftMouseDown: showPrevious" class="previous"></button>\n    <button data-bind="leftMouseDown: showNext" class="next"></button>\n</div>\n<div class="buttons-container tabs-btns" data-bind="visible: showTabs">\n    <button data-bind="leftMouseDown: showDayView, css: { active: activeField() === \'day\' }" data-i18n="calendar.Day">Day</button>\n    <button data-bind="leftMouseDown: showWeekView, css: { active: activeField() === \'week\' }" data-i18n="calendar.Week">Week</button>\n    <button data-bind="leftMouseDown: showMonthView, css: { active: activeField() === \'month\' }" data-i18n="calendar.Month">Month</button>\n    <button data-bind="leftMouseDown: showAgendaView, css: { active: activeField() === \'agenda\' }" data-i18n="calendar.Agenda">Agenda</button>\n</div>\n'
    }), module.exports;
}), function() {
    (0, System.amdDefine)("calendar/components/navigation/navigation.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/components/navigation/NavigationViewModel.js", "calendar/components/navigation/navigation.ko" ], function(ko, NavigationViewModel) {
        ko.components.register("one-navigation", {
            template: {
                element: "navigation"
            },
            viewModel: {
                createViewModel: function(params) {
                    return new NavigationViewModel(params);
                }
            }
        });
    });
}(), function() {
    (0, System.amdDefine)("calendar/weeks/WeeksView.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "node_modules/jquery/dist/jquery.js", "common/util.js", "common/ViewBehavior.js", "calendar/PageNavigator.js", "calendar/model/DateRange.js", "calendar/model/DateRangeView.js", "calendar/model/DraggedEvent.js", "calendar/model/EventInstance.js", "calendar/ical/Time.js", "calendar/ical/TimeZone.js", "calendar/ical/Duration.js", "calendar/ical/Event.js", "calendar/ical/Recur.js", "calendar/Sort.js", "3rdparty/greedy-interval-packer.js", "calendar/actions/UpdateEventInstanceAction.js", "calendar/components/navigation/navigation.js" ], function(ko, $, util, ViewBehavior, PageNavigator, DateRange, DateRangeView, DraggedEvent, EventInstance, Time, TimeZone, Duration, Event, Recur, Sort, intervalPacker, UpdateEventInstanceAction) {
        function WeeksView(options) {
            function freeSpaceForEvents(dimensions) {
                var reservedSpace = that.embedded() ? 0 : dimensions.allDayEventHeight;
                return dimensions.containerHeight / that.dateRanges.peek().length - dimensions.headingHeight - 2 - reservedSpace;
            }
            function getCursorDate(event, weekElement) {
                var dimensions = that.dimensions(), $weekElement = $(weekElement), $weeks = $(".week", $weekElement.parent()), weekRowOffset = $(weekElement).offset(), eventInfo = {
                    dayIndex: Math.floor((event.pageX - weekRowOffset.left) / dimensions.dayWidth),
                    weekIndex: $weeks.index(weekElement)
                };
                return that.weeks()[eventInfo.weekIndex].days[eventInfo.dayIndex].date;
            }
            function isAllDay(eventInstance) {
                var timeZone = that.state.timeZone(), start = eventInstance.startDate.convertToZone(timeZone), end = eventInstance.endDate.convertToZone(timeZone);
                return !(start.year === end.year && start.month === end.month && start.day === end.day);
            }
            function isSingleDay(start, end, eventInstance) {
                var timeZone = that.state.timeZone(), beforeEndOfDay = eventInstance.startDate.compareTz(end, timeZone) < 0, afterStartOfDay = start.compareTz(eventInstance.endDate, timeZone) < 0;
                return !isAllDay(eventInstance) && beforeEndOfDay && afterStartOfDay;
            }
            var that = this;
            util.extend(that, util.pick(options, "state", "actionExecutor", "errorHandler", "embedded", "pageNavigator")), 
            ViewBehavior.installInto(that), that.dateRange = ko.isObservable(options.dateRange) ? options.dateRange : ko.observable(options.dateRange);
            var eventDialog = options.eventDialog;
            that.currentDate = that.state.currentDate;
            var calendars = that.state.calendars;
            that.dimensions = ko.observable({
                isMeasured: !1,
                containerHeight: 600,
                dayWidth: 200,
                headingHeight: 60,
                allDayEventHeight: 22,
                eventHeight: 18
            }), that.weekend = ko.pureComputed(function() {
                var weekendStart = [ "SU", "MO", "TU", "WE", "TH", "FR", "SA" ][that.state.preferences.global().weekendStart], icalWeekendStart = Recur.icalDayToNumericDay(weekendStart);
                return [ icalWeekendStart, icalWeekendStart + 1 > 7 ? 1 : icalWeekendStart + 1 ];
            }), that.expandedDateRange = ko.computed(function() {
                return that.dateRange().expandToWeeks();
            }), that.dateRanges = ko.computed(function() {
                for (var numberOfWeeks = that.expandedDateRange().days / 7, result = [ new DateRange({
                    from: that.expandedDateRange().from,
                    duration: Duration.fromString("P7D")
                }) ], i = 1; i < numberOfWeeks; i += 1) result[i] = result[i - 1].next();
                return result;
            });
            var dateRangeViewsCache = [], dateRangeViews = function() {
                return that.dateRanges().map(function(dateRange, index) {
                    return dateRangeViewsCache[index] ? dateRangeViewsCache[index].dateRange(dateRange) : dateRangeViewsCache[index] = new DateRangeView({
                        state: that.state,
                        dateRange: dateRange
                    }), dateRangeViewsCache[index];
                });
            };
            that.draggedEvent = ko.observable(null), that.draggedTimeLimitedEvent = ko.observable(null), 
            that.resetDialog = function() {
                that.draggedEvent(null), eventDialog.model(null);
            };
            var dragOverHandlers = {
                drag: function(e, draggedEvent, cursorDate) {
                    var moveOffset = cursorDate.subtractDate(draggedEvent.eventInstance.startDate.startOfDay());
                    (cursorDate = draggedEvent.eventInstance.startDate.convertToZone(that.state.timeZone())).addDuration(moveOffset), 
                    draggedEvent.startDate(cursorDate);
                },
                "resize-left": function(e, draggedEvent, cursorDate) {
                    cursorDate = cursorDate.convertToZone(TimeZone.localTimezone).startOfDay();
                    var newDuration = draggedEvent.endDay().subtractDate(cursorDate);
                    if ((newDuration = Duration.fromSeconds(draggedEvent.duration().toSeconds() + newDuration.toSeconds() - draggedEvent.dayDuration().toSeconds())).toDays() >= 1) (cursorDate = draggedEvent.endDate().clone()).addDuration(Duration.fromSeconds(-newDuration.toSeconds())), 
                    draggedEvent.startDate(cursorDate), draggedEvent.duration(newDuration); else if (draggedEvent.newEvent) {
                        draggedEvent.mode = "resize-right";
                        var startDate = draggedEvent.startedAsDate.clone();
                        draggedEvent.startDate(startDate), (0, dragOverHandlers["resize-right"])(e, draggedEvent, cursorDate);
                    }
                },
                "resize-right": function(e, draggedEvent, cursorDate) {
                    cursorDate = cursorDate.convertToZone(TimeZone.localTimezone).startOfDay();
                    var startDay = draggedEvent.startDay(), newDuration = cursorDate.subtractDate(startDay);
                    newDuration.days += 1, (newDuration = Duration.fromSeconds(draggedEvent.duration().toSeconds() + newDuration.toSeconds() - draggedEvent.dayDuration().toSeconds())).toDays() >= 1 ? draggedEvent.duration(newDuration) : draggedEvent.newEvent && (draggedEvent.mode = "resize-left", 
                    newDuration = draggedEvent.startedAsDate.dayAfter().subtractDate(cursorDate), cursorDate = cursorDate.clone().convertToZone(that.state.timeZone()), 
                    draggedEvent.startDate(cursorDate), draggedEvent.duration(newDuration), (0, dragOverHandlers["resize-left"])(e, draggedEvent, cursorDate));
                }
            };
            that.dragStart = function(viewModel, e) {
                if (!that.embedded()) {
                    var targetData = e.target && ko.dataFor(e.target), eventInstance = targetData && targetData.eventInstance;
                    if (eventInstance && eventInstance.isReadonly()) return !1;
                    var cursorDate = getCursorDate(e, this.element);
                    calendars.version();
                    var firstVisibleOrDefault = calendars.getFirstVisible() || calendars.getDefault();
                    if (!firstVisibleOrDefault) throw new Error("No writable calendars available");
                    that.resetDialog();
                    var event = new Event();
                    event.startDate = cursorDate, event.endDate = cursorDate.clone(), event.calendar = firstVisibleOrDefault, 
                    that.draggedEvent(new DraggedEvent({
                        summary: "",
                        startDate: cursorDate,
                        duration: Duration.fromSeconds(0),
                        cursorOffset: 0,
                        eventInstance: new EventInstance({
                            startDate: event.startDate,
                            endDate: event.endDate,
                            event: event
                        }),
                        mode: "resize-right",
                        newEvent: !0,
                        startedAsDate: cursorDate.clone()
                    }));
                }
            }, that.firstWeekDates = ko.pureComputed(function() {
                return calendars.version(), that.dateRanges()[0].dates();
            }), that.weeks = ko.pureComputed(function() {
                calendars.version();
                var numberOfWeeks = dateRangeViews().length, weekend = that.weekend(), dimensions = that.dimensions(), maxNumberOfAllDayEventRows = Math.max(0, Math.floor(freeSpaceForEvents(dimensions) / dimensions.allDayEventHeight));
                return dateRangeViews().map(function(dateRangeView, index) {
                    var allDayEventsOnDays = {}, allDayEvents = [];
                    return intervalPacker(dateRangeView.allDayEvents(isAllDay)).forEach(function(partition, row) {
                        partition.forEach(function(allDayEvent) {
                            if (row < maxNumberOfAllDayEventRows) {
                                var calendar = allDayEvent.eventInstance.event.calendar, topOffset = row * that.dimensions().allDayEventHeight + that.dimensions().headingHeight;
                                allDayEvents.push({
                                    css: {
                                        hidden: allDayEvent.eventInstance.state.hidden,
                                        startCutOff: allDayEvent.startCutOff,
                                        endCutOff: allDayEvent.endCutOff,
                                        readonly: allDayEvent.eventInstance.isReadonly()
                                    },
                                    style: {
                                        backgroundColor: calendar.backgroundColor,
                                        color: calendar.boxTextColor,
                                        borderColor: allDayEvent.startCutOff ? calendar.backgroundColor : calendar.borderColor,
                                        top: topOffset + "px",
                                        left: "calc(" + allDayEvent.start + " * (100% / 7) + 2px)",
                                        width: "calc(" + allDayEvent.days + " * (100% / 7) - 3px)"
                                    },
                                    eventInstance: allDayEvent.eventInstance,
                                    dragStart: function(model, e) {
                                        var eventInstance = model.eventInstance;
                                        if (eventInstance.isReadonly()) return !1;
                                        eventInstance.state.hidden(!0), that.resetDialog();
                                        var $element = $(this.element), mode = "drag";
                                        $element.is(".event-resize-handle.left") ? mode = "resize-left" : $element.is(".event-resize-handle.right") && (mode = "resize-right");
                                        var initialStartDate = eventInstance.startDate.convertToZone(that.state.timeZone()), durationToWeekStart = dateRangeView.dateRange().from.subtractDate(initialStartDate), daysToWeekStart = Math.ceil(durationToWeekStart.toDays());
                                        daysToWeekStart = daysToWeekStart > 0 ? daysToWeekStart : 0;
                                        var pixelsIntoEvent = e.pageX - $(this.element).offset().left, cursorOffset = Math.floor(pixelsIntoEvent / dimensions.dayWidth) + daysToWeekStart;
                                        that.draggedEvent(new DraggedEvent({
                                            summary: eventInstance.summary,
                                            startDate: initialStartDate,
                                            duration: eventInstance.details.duration,
                                            cursorOffset: cursorOffset,
                                            eventInstance: eventInstance,
                                            allDayEvent: !0,
                                            mode: mode,
                                            topOffset: topOffset
                                        }));
                                    },
                                    dragEnd: function(model) {
                                        model.eventInstance.event.isRecurring() || model.eventInstance.state.hidden(!1);
                                    }
                                });
                            }
                            for (var i = allDayEvent.start; i < allDayEvent.end; i += 1) allDayEventsOnDays[i] = {
                                shown: Math.min(row + 1, maxNumberOfAllDayEventRows),
                                hidden: Math.max(row + 1 - maxNumberOfAllDayEventRows, 0)
                            };
                        });
                    }), {
                        height: 100 / numberOfWeeks + "%",
                        allDayEvents: allDayEvents,
                        draggedEventSegment: ko.pureComputed(function() {
                            var draggedEvent = that.draggedEvent();
                            if (!draggedEvent) return null;
                            var dateRange = dateRangeView.dateRange();
                            if (dateRange.to.compare(draggedEvent.startDate()) <= 0) return null;
                            if (draggedEvent.endDate().compare(dateRange.from) <= 0) return null;
                            var calendar = draggedEvent.eventInstance.event.calendar, startDate = draggedEvent.startDate().compare(dateRange.from) < 0 ? dateRange.from : draggedEvent.startDate(), endDate = dateRange.to.compare(draggedEvent.endDate()) < 0 ? dateRange.to : draggedEvent.endDate(), startCutOff = startDate !== draggedEvent.startDate(), endCutOff = endDate !== draggedEvent.endDate(), daysToStart = startDate.subtractDate(dateRange.from).toDays(), daysToEnd = endDate.subtractDate(dateRange.from).toDays(), start = Math.floor(daysToStart), days = Math.ceil(daysToEnd) - start;
                            return util.extend({
                                style: {
                                    backgroundColor: calendar.backgroundColor,
                                    borderColor: startCutOff ? calendar.backgroundColor : calendar.borderColor,
                                    color: calendar.boxTextColor,
                                    left: "calc(" + start + " * (100% / 7) + 2px)",
                                    width: "calc(" + days + " * (100% / 7) - 3px)",
                                    top: draggedEvent.topOffset ? draggedEvent.topOffset + "px" : null,
                                    bottom: draggedEvent.topOffset ? null : 0
                                },
                                css: {
                                    startCutOff: startCutOff,
                                    endCutOff: endCutOff
                                }
                            }, draggedEvent);
                        }),
                        days: dateRangeView.eventInstancesForEachDay(isSingleDay).map(function(day, index) {
                            function listenForEventDialogDiscard(cb) {
                                var subscriptions = [];
                                subscriptions.push(eventDialog.model.subscribe(function(model) {
                                    model || (subscriptions.forEach(function(subscription) {
                                        subscription.dispose();
                                    }), that.draggedTimeLimitedEvent(null), that.draggedEvent(null), cb && cb());
                                }));
                            }
                            var allDayEventsOnDay = allDayEventsOnDays[index] || {
                                shown: 0,
                                hidden: 0
                            }, maxNumberOfEvents = Math.max(0, Math.floor((freeSpaceForEvents(dimensions) - (allDayEventsOnDay.shown || 0) * dimensions.allDayEventHeight) / dimensions.eventHeight)), events = dimensions.isMeasured ? Sort.eventInstances.byStartDateThenByCalendarName([].concat(day.eventInstances)) : [], eventInstances = ko.pureComputed(function() {
                                var draggedDayEvent = that.draggedTimeLimitedEvent();
                                return (draggedDayEvent && draggedDayEvent.date.year === day.date.year && draggedDayEvent.date.month === day.date.month && draggedDayEvent.date.day === day.date.day ? [ draggedDayEvent ].concat(events) : events).slice(0, maxNumberOfEvents);
                            }), hiddenEvents = dimensions.isMeasured ? Math.max(events.length - maxNumberOfEvents, 0) + allDayEventsOnDay.hidden : 0, isWeekend = weekend.indexOf(day.date.dayOfWeek()) > -1;
                            return {
                                date: day.date,
                                allDayEventMargin: (allDayEventsOnDay.shown || 0) * that.dimensions().allDayEventHeight + "px",
                                pastPresentFuture: day.pastPresentFuture,
                                outsideRange: !that.dateRange.peek().contains(day.date),
                                isWeekend: isWeekend,
                                hiddenEvents: hiddenEvents,
                                draggedTimeLimitedEvent: that.draggedTimeLimitedEvent,
                                click: function(target, e) {
                                    if (!$(e.target).parent(".week-day-event").length) {
                                        var firstVisibleOrDefault = calendars.getFirstVisible() || calendars.getDefault();
                                        if (firstVisibleOrDefault) {
                                            that.resetDialog();
                                            var startDate = target.date.clone().convertToZone(that.state.timeZone()), event = new Event();
                                            event.startDate = startDate, event.endDate = startDate.clone().dayAfter(), event.calendar = firstVisibleOrDefault, 
                                            that.draggedEvent(new DraggedEvent({
                                                summary: "",
                                                startDate: startDate,
                                                duration: Duration.fromData({
                                                    days: 1
                                                }),
                                                cursorOffset: 0,
                                                eventInstance: new EventInstance({
                                                    startDate: event.startDate,
                                                    endDate: event.endDate,
                                                    event: event
                                                }),
                                                mode: "resize-right",
                                                newEvent: !0
                                            })), this.drop();
                                        }
                                    }
                                },
                                showMore: function() {
                                    that.pageNavigator.show(new DateRange({
                                        from: day.date,
                                        duration: Duration.fromString("P1D")
                                    }), {
                                        showAllEvents: !0
                                    });
                                },
                                dragStart: function(model) {
                                    if (!that.embedded()) {
                                        var eventInstance = model.eventInstance;
                                        if (eventInstance.isReadonly()) return !1;
                                        that.resetDialog(), eventInstance.state.hidden(!0);
                                    }
                                },
                                dragEnd: function(model) {
                                    model.eventInstance.event.isRecurring() || model.eventInstance.state.hidden(!1);
                                },
                                dragOver: function(e, source, target) {
                                    if (!that.embedded()) {
                                        var draggedEvent = that.draggedEvent();
                                        if (draggedEvent) {
                                            var mode = draggedEvent.mode, handler = dragOverHandlers[mode];
                                            if (!handler) throw new Error("Unknown drag mode: " + mode);
                                            var cursorDate = target.date.clone();
                                            cursorDate.day -= draggedEvent.cursorOffset, cursorDate.isDate = !0, handler(e, draggedEvent, cursorDate);
                                        }
                                    }
                                },
                                drop: function(model, target) {
                                    if (!that.embedded()) {
                                        var eventInstance, startDate, endDate, duration, startDateDiff, newStartDate, draggedEvent = that.draggedEvent();
                                        draggedEvent ? (eventInstance = draggedEvent.eventInstance, draggedEvent.newEvent ? (eventInstance.startDate = draggedEvent.startDate(), 
                                        eventInstance.endDate = draggedEvent.endDate(), eventDialog.model({
                                            eventInstance: eventInstance
                                        }), draggedEvent.dropped(!0), listenForEventDialogDiscard()) : eventInstance.event.isRecurring() ? (eventDialog.model({
                                            eventInstance: eventInstance
                                        }), draggedEvent.dropped(!0), startDate = draggedEvent.startDate(), endDate = draggedEvent.endDate(), 
                                        duration = draggedEvent.duration(), startDate.isDate && (startDate = startDate.convertToZone(TimeZone.localTimezone), 
                                        endDate = endDate.convertToZone(TimeZone.localTimezone), duration.days -= 1), startDateDiff = startDate.subtractDateTz(eventInstance.startDate), 
                                        newStartDate = eventDialog.startDate.peek().clone().addDuration(startDateDiff), 
                                        eventDialog.startDate(newStartDate), eventDialog.endDate(newStartDate.clone().addDuration(duration)), 
                                        listenForEventDialogDiscard(function() {
                                            eventInstance.state.hidden(!1);
                                        }), eventDialog.saveScope()) : that.executeAction(new UpdateEventInstanceAction({
                                            eventInstance: eventInstance,
                                            data: {
                                                startDate: draggedEvent.startDate(),
                                                endDate: draggedEvent.endDate()
                                            }
                                        }), function(err) {
                                            if (err) return that.handleError(err);
                                            that.draggedEvent(null);
                                        })) : (eventInstance = model.eventInstance).event.isRecurring() ? (eventDialog.model({
                                            eventInstance: eventInstance
                                        }), that.draggedTimeLimitedEvent({
                                            eventInstance: eventInstance,
                                            date: target.date,
                                            dropped: ko.observable(!0),
                                            firstSegment: !0,
                                            startDate: eventInstance.startDate.clone(),
                                            endDate: eventInstance.endDate.clone()
                                        }), duration = eventInstance.details.duration, (startDate = eventInstance.startDate.clone()).year = target.date.year, 
                                        startDate.month = target.date.month, startDate.day = target.date.day, (endDate = startDate.clone()).addDuration(duration), 
                                        startDateDiff = startDate.subtractDateTz(eventInstance.startDate), newStartDate = eventDialog.startDate.peek().clone().addDuration(startDateDiff), 
                                        eventDialog.startDate(newStartDate), eventDialog.endDate(newStartDate.clone().addDuration(duration)), 
                                        listenForEventDialogDiscard(function() {
                                            eventInstance.state.hidden(!1);
                                        }), eventDialog.saveScope()) : (duration = eventInstance.details.duration, (startDate = eventInstance.startDate.clone()).year = target.date.year, 
                                        startDate.month = target.date.month, startDate.day = target.date.day, (endDate = startDate.clone()).addDuration(duration), 
                                        that.executeAction(new UpdateEventInstanceAction({
                                            eventInstance: model.eventInstance,
                                            data: {
                                                startDate: startDate,
                                                endDate: endDate
                                            }
                                        }), function(err) {
                                            if (err) return that.handleError(err);
                                            that.draggedEvent(null);
                                        }));
                                    }
                                },
                                eventInstances: eventInstances
                            };
                        })
                    };
                });
            });
        }
        return WeeksView.prototype.showToday = function() {
            this.pageNavigator.show(new DateRange({
                from: this.currentDate(),
                duration: Duration.fromData({
                    days: 1
                })
            }).expandToMonth());
        }, WeeksView.prototype.showPrevious = function() {
            var dateRange = this.dateRange(), monthRange = dateRange.expandToMonth();
            if (dateRange.equal(monthRange)) {
                var to = monthRange.from, from = to.clone();
                from.month -= 1, this.pageNavigator.show(new DateRange({
                    from: from,
                    to: to
                }));
            } else this.pageNavigator.show(this.dateRange().next());
        }, WeeksView.prototype.showNext = function() {
            var dateRange = this.dateRange(), monthRange = dateRange.expandToMonth();
            if (dateRange.equal(monthRange)) {
                var from = monthRange.to, to = from.clone();
                to.month += 1, this.pageNavigator.show(new DateRange({
                    from: from,
                    to: to
                }));
            } else this.pageNavigator.show(this.dateRange().next());
        }, WeeksView.prototype.showDayView = function() {
            this.pageNavigator.show(new DateRange({
                from: this.dateRange().contains(this.currentDate()) ? this.currentDate() : this.dateRange().from,
                duration: Duration.fromString("P1D")
            }));
        }, WeeksView.prototype.showWeekView = function() {
            this.pageNavigator.show(new DateRange({
                from: this.dateRange().contains(this.currentDate()) ? this.currentDate().startOfWeek() : this.dateRanges()[Math.round((this.dateRanges().length - 1) / 2)].from.startOfWeek(),
                duration: Duration.fromString("P1W")
            }));
        }, WeeksView.prototype.showMonthView = function() {
            this.pageNavigator.show(this.dateRange().expandToMonth());
        }, WeeksView.prototype.showAgendaView = function() {
            this.pageNavigator.show(this.dateRange().expandToMonth(), {
                view: "agenda"
            });
        }, WeeksView.prototype.updateDimensions = function() {
            this.dimensions(util.extend(this.dimensions(), {
                isMeasured: !0,
                headingHeight: $(".week-day-date-heading", this.element).outerHeight(),
                containerHeight: $(this.element).outerHeight(),
                dayWidth: $(".day", this.element).outerWidth()
            }));
        }, WeeksView.prototype.afterRender = function(element) {
            var that = this;
            that.element = element, setTimeout(function() {
                that.updateDimensions();
            }, 1);
            var resizeTimeout;
            $(window).resize(function(event) {
                event.isTrigger || (resizeTimeout && clearTimeout(resizeTimeout), resizeTimeout = setTimeout(function() {
                    that.updateDimensions();
                }, 500));
            });
        }, WeeksView;
    });
}(), function() {
    (0, System.amdDefine)("calendar/model/DateRange.js", [ "calendar/ical/Time.js", "calendar/ical/Duration.js", "calendar/ical/TimeZone.js" ], function(Time, Duration, TimeZone) {
        function InvalidDateRangeError(message) {
            var error = Error.call(this, message);
            this.name = "InvalidDateRangeError", this.message = error.message, this.stack = error.stack;
        }
        function DateRange(options) {
            if (this.from = options.from, !options.from) throw new InvalidDateRangeError("You must provide a from-date");
            if (options.to && options.duration) throw new InvalidDateRangeError("You can provide both to-date and a duration");
            if (options.to || options.duration) options.to ? this.to = options.to : options.duration && (this.to = this.from.clone(), 
            this.to.addDuration(options.duration)); else {
                var to = this.from.clone();
                to.addDuration(Duration.fromString("P1D")), this.to = to;
            }
            if (this.days = this.to.subtractDate(this.from).toDays(), !this.from.isDate || !this.to.isDate) throw new InvalidDateRangeError("Invalid date range: " + this.toString() + ", end point must be dates.");
            if (this.from.zone !== this.to.zone) throw new InvalidDateRangeError("Invalid date range: " + this.toString() + ", end point must have same time zone.");
            if (this.days < 1) throw new InvalidDateRangeError("Invalid date range: " + this.toString() + ", the range must be at least one day.");
        }
        var oneDay = Duration.fromData({
            days: 1
        });
        return InvalidDateRangeError.prototype = Object.create(Error.prototype), DateRange.InvalidDateRangeError = InvalidDateRangeError, 
        DateRange.fromTime = function(time) {
            return new DateRange({
                from: time.startOfDay()
            });
        }, DateRange.singleDateStringPattern = /^(\w{4})(\w{2})(\w{2})$/, DateRange.dateRangeStringPattern = /^(\w{4})(\w{2})(\w{2})-(\w{4})(\w{2})(\w{2})$/, 
        DateRange.isDateString = function(dateString) {
            return DateRange.singleDateStringPattern.test(dateString) || DateRange.dateRangeStringPattern.test(dateString) || !1;
        }, DateRange.fromString = function(dateString) {
            var m = DateRange.singleDateStringPattern.exec(dateString);
            if (m) {
                var from = Time.fromData({
                    year: parseInt(m[1], 10),
                    month: parseInt(m[2], 10),
                    day: parseInt(m[3], 10)
                }), to = from.clone();
                return to.addDuration(Duration.fromString("P1D")), new DateRange({
                    from: from,
                    to: to
                });
            }
            if (m = DateRange.dateRangeStringPattern.exec(dateString)) return new DateRange({
                from: Time.fromData({
                    year: parseInt(m[1], 10),
                    month: parseInt(m[2], 10),
                    day: parseInt(m[3], 10)
                }),
                to: Time.fromData({
                    year: parseInt(m[4], 10),
                    month: parseInt(m[5], 10),
                    day: parseInt(m[6], 10)
                })
            });
            throw new Error("Invalid date range: " + dateString);
        }, DateRange.prototype.contains = function(date) {
            return this.from.compare(date) <= 0 && date.compare(this.to) < 0;
        }, DateRange.prototype.toString = function() {
            return 1 === this.days ? this.from.toICALString() : this.from.toICALString() + "-" + this.to.toICALString();
        }, DateRange.prototype.convertToZone = function(zone) {
            return new DateRange({
                from: this.from.convertToZone(zone),
                to: this.to.convertToZone(zone)
            });
        }, DateRange.prototype.previous = function() {
            var from = this.from.clone(), to = this.from;
            return from.day -= this.days, new DateRange({
                from: from,
                to: to
            });
        }, DateRange.prototype.next = function() {
            var from = this.to, to = this.to.clone();
            return to.day += this.days, new DateRange({
                from: from,
                to: to
            });
        }, DateRange.prototype.expandToMonth = function() {
            var from = this.from.month !== this.to.month && this.days <= 2 * (this.to.day - 1) ? this.to.startOfMonth() : this.from.startOfMonth(), to = from.clone();
            return to.month += 1, new DateRange({
                from: from,
                to: to
            });
        }, DateRange.prototype.expandToWeeks = function() {
            return new DateRange({
                from: this.from.startOfWeek(),
                to: this.to.dayBefore().endOfWeek().dayAfter()
            });
        }, DateRange.prototype.dates = function(timezone) {
            var dateFrom = this.from;
            timezone && dateFrom.zone.equal(TimeZone.localTimeZone) && (dateFrom = dateFrom.convertToZone(timezone));
            for (var result = [ dateFrom ], i = 1; i < this.days; i += 1) {
                var nextDay = result[result.length - 1].clone();
                nextDay.addDuration(oneDay), result.push(nextDay);
            }
            return result;
        }, DateRange.prototype.equal = function(other) {
            return this.days === other.days && 0 === this.from.compare(other.from);
        }, DateRange;
    });
}(), function() {
    var define = System.amdDefine;
    !function(global, factory) {
        "object" == typeof exports && "undefined" != typeof module ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/queue.js", [], factory) && define("queue", [ "3rdparty/queue.js" ], function(m) {
            return m;
        }) : global.queue = factory();
    }(this, function() {
        "use strict";
        function noop() {}
        function newQueue(concurrency) {
            function start() {
                if (!starting) for (;starting = waiting && active < concurrency; ) {
                    var i = ended + active, t = tasks[i], j = t.length - 1, c = t[j];
                    t[j] = end(i), --waiting, ++active, tasks[i] = c.apply(null, t) || noabort;
                }
            }
            function end(i) {
                return function(e, r) {
                    if (!tasks[i]) throw new Error();
                    --active, ++ended, tasks[i] = null, null == error && (null != e ? abort(e) : (results[i] = r, 
                    waiting ? start() : active || notify()));
                };
            }
            function abort(e) {
                error = e, waiting = NaN, notify();
            }
            function notify() {
                null != error ? callback(error) : callbackAll ? callback(null, results) : callback.apply(null, success.concat(results));
            }
            if (!(concurrency >= 1)) throw new Error();
            var q, starting, error, tasks = [], results = [], waiting = 0, active = 0, ended = 0, callback = noop, callbackAll = !0;
            return q = {
                defer: function(f) {
                    if (callback !== noop) throw new Error();
                    var t = slice.call(arguments, 1);
                    return t.push(f), ++waiting, tasks.push(t), start(), q;
                },
                abort: function() {
                    if (null == error) {
                        for (var t, i = ended + active; --i >= 0; ) (t = tasks[i]) && t.abort && t.abort();
                        abort(new Error("abort"));
                    }
                    return q;
                },
                await: function(f) {
                    if (callback !== noop) throw new Error();
                    return callback = f, callbackAll = !1, waiting || active || notify(), q;
                },
                awaitAll: function(f) {
                    if (callback !== noop) throw new Error();
                    return callback = f, callbackAll = !0, waiting || active || notify(), q;
                }
            };
        }
        function queue(concurrency) {
            return newQueue(arguments.length ? +concurrency : 1 / 0);
        }
        var slice = [].slice, noabort = {}, success = [ null ];
        return queue.version = "1.2.1", queue;
    });
}(), function() {
    (0, System.amdDefine)("common/TraceLogging.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], function(ko) {
        function wrapFunction(name, target, property) {
            var original = target[property];
            return function() {
                return one.crashLogger.log("calling: " + name + "." + property), original.apply(this, arguments);
            };
        }
        function getName(Constructor) {
            return /^function\s+(.+?)\s*\(/.exec(Constructor.toString())[1];
        }
        return {
            injectTracing: function(Constructor) {
                var name = Constructor.name || getName(Constructor), target = Constructor.prototype;
                return target._tracingInjected || (Object.getOwnPropertyNames(target).filter(function(property) {
                    return "function" == typeof target[property] && !ko.isObservable(target[property]);
                }).forEach(function(property) {
                    target[property] = wrapFunction(name, target, property);
                }), target._tracingInjected = !0), target;
            }
        };
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/htmlEmailToText.js", [], factory) : root.text = factory();
    }(this, function() {
        function isLineBreakNode(node) {
            return "br" === node.nodeName.toLowerCase();
        }
        function isWhiteSpaceNode(node) {
            return 3 === node.nodeType && null !== node.nodeValue.match(/^[\n\r\s]*$/);
        }
        function splitIntoLines(text) {
            return text.split(/\r\n?|\n\r?/);
        }
        function reflowText(text, maxLineWidth) {
            var lines = splitIntoLines(text), wrappedLines = [];
            for (maxLineWidth = maxLineWidth || 72; lines.length; ) {
                var line = lines.shift(), prefix = line.match(/^(>[ >]*|)/)[1];
                if (prefix.length >= maxLineWidth && (prefix = ""), line.length > maxLineWidth) {
                    var spacePos = line.lastIndexOf(" ", maxLineWidth);
                    (-1 === spacePos || spacePos < prefix.length) && (spacePos = maxLineWidth), wrappedLines.push(line.slice(0, spacePos)), 
                    lines.unshift(prefix + line.substring(spacePos).replace(/^\s+/, ""));
                } else wrappedLines.push(line);
            }
            return wrappedLines.join("\n");
        }
        function blockLevelNodeToText(node, maxLineWidth) {
            var firstLinePrefix, text, i, nodeName = node.nodeName.toLowerCase(), generalPrefix = "";
            if ("blockquote" === nodeName) generalPrefix = "> "; else if ("li" === nodeName && node.parentNode) if ("ol" === node.parentNode.nodeName.toLowerCase()) {
                var listLength = 0, siblingNodes = node.parentNode.childNodes;
                for (i = 0; i < siblingNodes.length; i += 1) "li" === siblingNodes[i].nodeName.toLowerCase() && (listLength += 1, 
                siblingNodes[i] === node && (firstLinePrefix = listLength + ". "));
                for (generalPrefix = "  ", i = 0; i < listLength.toString().length; i += 1) generalPrefix += " ";
                for (;generalPrefix.length > firstLinePrefix.length; ) firstLinePrefix += " ";
            } else "ul" === node.parentNode.nodeName.toLowerCase() && (firstLinePrefix = "* ", 
            generalPrefix = "  ");
            if ("pre" === nodeName) {
                var html = node.innerHTML.toString();
                text = "", html.match(/^-- [\r\n]/) && (text += "-- \n", html = html.replace(/^-- [\r\n]/, "")), 
                html && (text += htmlEmailToText(html.replace(/\n/g, "<br>"), maxLineWidth));
            } else for (text = "", i = 0; i < node.childNodes.length; i += 1) text += htmlNodeToText(node.childNodes[i], maxLineWidth && maxLineWidth - generalPrefix.length);
            maxLineWidth && (maxLineWidth -= generalPrefix.length) > 10 && (text = reflowText(text, maxLineWidth)), 
            generalPrefix && (text = splitIntoLines(text).map(function(line, i) {
                return (!i && firstLinePrefix || generalPrefix) + line;
            }).join("\n"));
            var isFirstNode = !node.parentNode || blockLevelNodeNameRegExp.test(node.parentNode.nodeName) && (!node.previousSibling || isWhiteSpaceNode(node.previousSibling) && !node.previousSibling.previousSibling), isLastNode = !node.parentNode || blockLevelNodeNameRegExp.test(node.parentNode.nodeName) && (!node.nextSibling || isWhiteSpaceNode(node.nextSibling) && !node.nextSibling.nextSibling), hadDiv = !1, hadBr = !1, hadSpace = !1;
            for (i = 0; i < node.childNodes.length; i += 1) {
                var n1 = node.childNodes[i], name = n1.nodeName.toLowerCase();
                "#text" === name ? /^\s*$/.test(n1.nodeValue) && (hadSpace = !0) : "br" === name ? hadBr = !0 : "div" === name && (hadDiv = !0);
            }
            return isFirstNode || hadBr ? isLastNode || !hadSpace || hadDiv ? "blockquote" === node.nodeName.toLowerCase() && (text += "\n") : text += "\n" : text = "\n" + text, 
            text;
        }
        function htmlNodeToText(node, maxLineWidth) {
            var nodeName = 3 === node.nodeType ? "text" : node.nodeName.toLowerCase();
            if ("script" === nodeName || "style" === nodeName || "title" === nodeName) return "";
            var text = "";
            if (blockLevelNodeNameRegExp.test(node.nodeName)) return blockLevelNodeToText(node, maxLineWidth);
            for (var out = "", i = 0; i < node.childNodes.length; i += 1) text += htmlNodeToText(node.childNodes[i], maxLineWidth);
            if ("a" === nodeName) {
                var href = node.getAttribute("href");
                href && (href.match(/^mailto:/i) && (href = href.replace(/^mailto:([a-z0-9_\+\-\.]+\@(?:[a-z0-9][\w\.+\-]+\.[a-z]{2,}))/i, "$1")), 
                out = href.match(/^\#/) ? text : href === text || "<" + href + ">" === text || href === "http://" + text || href === "http://" + text + "/" || href === "mailto:" + text || text.match(/^[\r\n\s]*$/) ? "<" + href + ">" : text + " <" + href + ">");
            } else if ("img" === nodeName) out = node.alt || node.title || ""; else {
                if ("br" === nodeName) return "\n";
                if ("text" === nodeName) {
                    var textContents = node.nodeValue || "";
                    textContents.match(/^-- (?:\r|\n|$)/) && (out = "-- \n", textContents = textContents.replace(/^-- (?:\r|\n|$)/, "")), 
                    out += textContents.replace(/[\r\n]+/g, " ").replace(/\s{2,}/g, " ");
                } else out = text || "";
            }
            return out = !node.previousSibling || isLineBreakNode(node.previousSibling) || blockLevelNodeNameRegExp.test(node.previousSibling.nodeName) || !node.previousSibling.previousSibling && isWhiteSpaceNode(node.previousSibling) ? out.replace(/^\s+/, "") : out.replace(/^\s+/, " "), 
            out = !node.nextSibling || isLineBreakNode(node.nextSibling) || blockLevelNodeNameRegExp.test(node.nextSibling.nodeName) || !node.nextSibling.nextSibling && isWhiteSpaceNode(node.nextSibling) ? out.replace(/(^|[^\-]|[^\-]-)\s+$/, "$1") : out.replace(/\s+$/, " ");
        }
        function htmlEmailToText(html, maxLineWidth, noDoubleLines) {
            var tempDiv = document.createElement("div");
            return tempDiv.innerHTML = html.replace(/\r?\n|\r\n?/g, "\n"), htmlNodeToText(tempDiv, maxLineWidth);
        }
        var blockLevelNodeNameRegExp = /^(?:h[1-6]|pre|p|blockquote|div|ol|ul|li|table)$/i;
        return {
            htmlEmailToText: htmlEmailToText
        };
    });
}(), function() {
    (0, System.amdDefine)("common/FormBuilder.js", [], function() {
        function FormBuilder(url) {
            this.form = document.createElement("form"), this.form.setAttribute("action", url), 
            this.form.setAttribute("method", "post"), this.form.setAttribute("enctype", "multipart/form-data");
        }
        return FormBuilder.prototype.append = function(field) {
            this.form.appendChild(field);
        }, FormBuilder.prototype.appendInput = function(name, value) {
            var input = window.document.createElement("input");
            input.setAttribute("type", "hidden"), "string" != typeof name && (name = JSON.stringify(name)), 
            input.setAttribute("name", encodeURIComponent(name)), "string" != typeof value && (value = JSON.stringify(value)), 
            input.setAttribute("value", value), this.append(input);
        }, FormBuilder.prototype.create = function() {
            return this.form;
        }, FormBuilder;
    });
}(), function() {
    (0, System.amdDefine)("common/FormSubmitter.js", [ "common/util.js" ], function(util) {
        function FormSubmitter(form) {
            var target = encodeURIComponent(util.uuid());
            this.form = form, this.form.setAttribute("target", target), this.iframe = window.document.createElement("iframe"), 
            this.iframe.setAttribute("style", "display: none;"), this.iframe.setAttribute("id", target), 
            this.iframe.setAttribute("name", target);
        }
        function createDefaultParseError(message, responseText) {
            return {
                status: 500,
                statusText: message,
                response: null,
                responseText: responseText
            };
        }
        function createVarnishError(responseText) {
            var err = createDefaultParseError("Failed to parse Varnish error.", responseText), errorCodeMatch = responseText.match(/<h1>Error\s(\d+)\s([a-zA-Z ]+)/);
            return errorCodeMatch && (err.status = parseInt(errorCodeMatch[1], 10), err.statusText = errorCodeMatch[2]), 
            err;
        }
        function createNginxError(responseText) {
            var err = createDefaultParseError("Failed to parse nginx error.", responseText), errorCodeMatch = responseText.match(/<h1>(\d+)\s([a-zA-Z ]+)/);
            return errorCodeMatch && (err.status = parseInt(errorCodeMatch[1], 10), err.statusText = errorCodeMatch[2]), 
            err;
        }
        function createParseError(responseText) {
            return /<p>Varnish\scache\sserver<\/p>/.test(responseText) ? createVarnishError(responseText) : />nginx\//.test(responseText) ? createNginxError(responseText) : createDefaultParseError("Parse error", responseText);
        }
        function createServiceUnavailableError() {
            return {
                status: 502,
                responseText: "IFRAME denied access to response document."
            };
        }
        function createErrorFromResponse(response) {
            return {
                status: response.statusCode,
                statusText: response.error,
                response: response,
                responseText: JSON.stringify(response)
            };
        }
        function getIFrameDocument(iframe) {
            var doc = null;
            try {
                doc = iframe.contentWindow.document || iframe.contentDocument;
            } catch (e) {
                one.crashLogger.log("Error: Could not get hold of IFrame");
            }
            if (doc && doc.body) return doc;
            throw createServiceUnavailableError();
        }
        function getResponseText(doc) {
            try {
                return doc.getElementById("response").innerHTML.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&amp;/g, "&");
            } catch (e) {
                throw createParseError(doc.body.innerHTML);
            }
        }
        function parseResponse(responseText) {
            var response = null;
            try {
                response = JSON.parse(responseText);
            } catch (e) {
                throw createParseError(responseText);
            }
            if (response && response.error) throw createErrorFromResponse(response);
            return response;
        }
        return FormSubmitter.prototype.submit = function(onResponse) {
            function cleanUpDOM() {
                window.document.body.removeChild(form), form = null, window.document.body.removeChild(iframe), 
                iframe = null;
            }
            var iframe = this.iframe, form = this.form;
            window.document.body.appendChild(form), window.document.body.appendChild(iframe), 
            $(iframe).load(function() {
                var response = null, err = null;
                try {
                    var doc = getIFrameDocument(iframe);
                    if (!doc.body.innerHTML) return;
                    response = parseResponse(getResponseText(doc));
                } catch (e) {
                    err = {
                        status: e.status,
                        statusText: e.statusText,
                        response: e.response,
                        responseText: e.responseText
                    };
                }
                setTimeout(function() {
                    cleanUpDOM(), err ? onResponse(err, null) : onResponse(null, response);
                }, 0);
            }), form.submit();
        }, FormSubmitter;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/BeforeUnload.js", [], factory) : root.BeforeUnload = factory();
    }(this, function() {
        function BeforeUnload(message, conditions, register) {
            this.message = this.validateMessage(message), this.conditions = this.validateConditions(conditions), 
            this.handlerReference = null, (void 0 === register || register) && this.register();
        }
        return BeforeUnload.prototype.validateConditions = function(conditions) {
            return "function" == typeof conditions ? [ conditions ] : Array.isArray(conditions) ? conditions : void this.throwException("You must provide either a list of functions, a function, or nothing as the second parameter.");
        }, BeforeUnload.prototype.validateMessage = function(message) {
            return "string" != typeof message && this.throwException("You must provide a message."), 
            message;
        }, BeforeUnload.prototype.check = function() {
            var result = !1;
            return this.conditions.some(function(condition) {
                var conditionResult = condition();
                return conditionResult && (result = conditionResult), conditionResult;
            }), result;
        }, BeforeUnload.prototype.handler = function(e) {
            var check = this.check(), message = check && "string" == typeof check ? check : this.message;
            if (check) return (e || window.event).returnValue = message, message;
        }, BeforeUnload.prototype.register = function(target, handler) {
            target = target || window, this.handlerReference = handler || this.handler.bind(this), 
            target.addEventListener ? target.addEventListener("beforeunload", this.handlerReference) : target.attachEvent("onbeforeunload", this.handlerReference);
        }, BeforeUnload.prototype.unregister = function(target) {
            target = target || window, null !== this.handlerReference && (target.removeEventListener ? target.removeEventListener("beforeunload", this.handlerReference) : target.detachEvent("onbeforeunload", this.handlerReference), 
            this.handlerReference = null);
        }, BeforeUnload.prototype.confirmedIfNecessary = function(callback, preserveHandlers) {
            var conditions = this.check();
            conditions && !window.confirm("string" == typeof conditions ? conditions : this.message) || (preserveHandlers || this.unregister(), 
            callback());
        }, BeforeUnload.prototype.throwException = function(message) {
            throw new Error("before-unload: " + message);
        }, BeforeUnload;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/sha256hex.js", [], factory) : root.sha256hex = factory();
    }(this, function(tracking, ErrorTracker) {
        function hex_sha256(s) {
            return rstr2hex(rstr_sha256(str2rstr_utf8(s)));
        }
        function rstr_sha256(s) {
            return binb2rstr(binb_sha256(rstr2binb(s), 8 * s.length));
        }
        function rstr2hex(input) {
            for (var x, hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef", output = "", i = 0; i < input.length; i++) x = input.charCodeAt(i), 
            output += hex_tab.charAt(x >>> 4 & 15) + hex_tab.charAt(15 & x);
            return output;
        }
        function str2rstr_utf8(input) {
            for (var x, y, output = "", i = -1; ++i < input.length; ) x = input.charCodeAt(i), 
            y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0, 55296 <= x && x <= 56319 && 56320 <= y && y <= 57343 && (x = 65536 + ((1023 & x) << 10) + (1023 & y), 
            i++), x <= 127 ? output += String.fromCharCode(x) : x <= 2047 ? output += String.fromCharCode(192 | x >>> 6 & 31, 128 | 63 & x) : x <= 65535 ? output += String.fromCharCode(224 | x >>> 12 & 15, 128 | x >>> 6 & 63, 128 | 63 & x) : x <= 2097151 && (output += String.fromCharCode(240 | x >>> 18 & 7, 128 | x >>> 12 & 63, 128 | x >>> 6 & 63, 128 | 63 & x));
            return output;
        }
        function rstr2binb(input) {
            for (var output = Array(input.length >> 2), i = 0; i < output.length; i++) output[i] = 0;
            for (i = 0; i < 8 * input.length; i += 8) output[i >> 5] |= (255 & input.charCodeAt(i / 8)) << 24 - i % 32;
            return output;
        }
        function binb2rstr(input) {
            for (var output = "", i = 0; i < 32 * input.length; i += 8) output += String.fromCharCode(input[i >> 5] >>> 24 - i % 32 & 255);
            return output;
        }
        function sha256_S(X, n) {
            return X >>> n | X << 32 - n;
        }
        function sha256_R(X, n) {
            return X >>> n;
        }
        function sha256_Ch(x, y, z) {
            return x & y ^ ~x & z;
        }
        function sha256_Maj(x, y, z) {
            return x & y ^ x & z ^ y & z;
        }
        function sha256_Sigma0256(x) {
            return sha256_S(x, 2) ^ sha256_S(x, 13) ^ sha256_S(x, 22);
        }
        function sha256_Sigma1256(x) {
            return sha256_S(x, 6) ^ sha256_S(x, 11) ^ sha256_S(x, 25);
        }
        function sha256_Gamma0256(x) {
            return sha256_S(x, 7) ^ sha256_S(x, 18) ^ sha256_R(x, 3);
        }
        function sha256_Gamma1256(x) {
            return sha256_S(x, 17) ^ sha256_S(x, 19) ^ sha256_R(x, 10);
        }
        function binb_sha256(m, l) {
            var a, b, c, d, e, f, g, h, i, j, T1, T2, HASH = new Array(1779033703, -1150833019, 1013904242, -1521486534, 1359893119, -1694144372, 528734635, 1541459225), W = new Array(64);
            for (m[l >> 5] |= 128 << 24 - l % 32, m[15 + (l + 64 >> 9 << 4)] = l, i = 0; i < m.length; i += 16) {
                for (a = HASH[0], b = HASH[1], c = HASH[2], d = HASH[3], e = HASH[4], f = HASH[5], 
                g = HASH[6], h = HASH[7], j = 0; j < 64; j++) W[j] = j < 16 ? m[j + i] : safe_add(safe_add(safe_add(sha256_Gamma1256(W[j - 2]), W[j - 7]), sha256_Gamma0256(W[j - 15])), W[j - 16]), 
                T1 = safe_add(safe_add(safe_add(safe_add(h, sha256_Sigma1256(e)), sha256_Ch(e, f, g)), sha256_K[j]), W[j]), 
                T2 = safe_add(sha256_Sigma0256(a), sha256_Maj(a, b, c)), h = g, g = f, f = e, e = safe_add(d, T1), 
                d = c, c = b, b = a, a = safe_add(T1, T2);
                HASH[0] = safe_add(a, HASH[0]), HASH[1] = safe_add(b, HASH[1]), HASH[2] = safe_add(c, HASH[2]), 
                HASH[3] = safe_add(d, HASH[3]), HASH[4] = safe_add(e, HASH[4]), HASH[5] = safe_add(f, HASH[5]), 
                HASH[6] = safe_add(g, HASH[6]), HASH[7] = safe_add(h, HASH[7]);
            }
            return HASH;
        }
        function safe_add(x, y) {
            var lsw = (65535 & x) + (65535 & y);
            return (x >> 16) + (y >> 16) + (lsw >> 16) << 16 | 65535 & lsw;
        }
        var hexcase = 0, sha256_K = new Array(1116352408, 1899447441, -1245643825, -373957723, 961987163, 1508970993, -1841331548, -1424204075, -670586216, 310598401, 607225278, 1426881987, 1925078388, -2132889090, -1680079193, -1046744716, -459576895, -272742522, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, -1740746414, -1473132947, -1341970488, -1084653625, -958395405, -710438585, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, -2117940946, -1838011259, -1564481375, -1474664885, -1035236496, -949202525, -778901479, -694614492, -200395387, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, -2067236844, -1933114872, -1866530822, -1538233109, -1090935817, -965641998);
        return hex_sha256;
    });
}(), function() {
    (0, System.amdDefine)("common/migrations/migrateContactsCityToLocality.js", [], function() {
        function migrateContactsCityToLocality(data) {
            data && data.forEach(function(contact) {
                (contact.addresses || []).forEach(function(address) {
                    !address.locality && address.city && (address.locality = address.city), delete address.city;
                });
            });
        }
        return migrateContactsCityToLocality;
    });
}(), System.registerDynamic("calendar/timezones/**/*.ics!node_modules/systemjs-asset-plugin/asset-plugin.js", [], !0, function($__require, exports, module) {
    this || self;
    var obj = {
        "Africa/Abidjan": "/static/Abidjan.dc9468decb.ics",
        "Africa/Accra": "/static/Accra.86ddbc676c.ics",
        "Africa/Addis_Ababa": "/static/Addis_Ababa.3c5906f619.ics",
        "Africa/Algiers": "/static/Algiers.f240a1491a.ics",
        "Africa/Asmara": "/static/Asmara.876b2a9cb1.ics",
        "Africa/Asmera": "/static/Asmera.bf999f0361.ics",
        "Africa/Bamako": "/static/Bamako.37ed4bfb23.ics",
        "Africa/Bangui": "/static/Bangui.a535e7787c.ics",
        "Africa/Banjul": "/static/Banjul.db57889d81.ics",
        "Africa/Bissau": "/static/Bissau.d663fa03f0.ics",
        "Africa/Blantyre": "/static/Blantyre.bd4f1c7015.ics",
        "Africa/Brazzaville": "/static/Brazzaville.e32f24d245.ics",
        "Africa/Bujumbura": "/static/Bujumbura.f100cb163e.ics",
        "Africa/Cairo": "/static/Cairo.d3ff6cea9b.ics",
        "Africa/Casablanca": "/static/Casablanca.0e6bfe0253.ics",
        "Africa/Ceuta": "/static/Ceuta.8269343ee4.ics",
        "Africa/Conakry": "/static/Conakry.700b9ead56.ics",
        "Africa/Dakar": "/static/Dakar.deccdd6324.ics",
        "Africa/Dar_es_Salaam": "/static/Dar_es_Salaam.83d4830f4d.ics",
        "Africa/Djibouti": "/static/Djibouti.acc5e49e74.ics",
        "Africa/Douala": "/static/Douala.a81ee6fe62.ics",
        "Africa/El_Aaiun": "/static/El_Aaiun.562ac43ed7.ics",
        "Africa/Freetown": "/static/Freetown.8da670d12c.ics",
        "Africa/Gaborone": "/static/Gaborone.9bfc97aef6.ics",
        "Africa/Harare": "/static/Harare.a4a32e9785.ics",
        "Africa/Johannesburg": "/static/Johannesburg.a39046b0f3.ics",
        "Africa/Juba": "/static/Juba.3f633cfde1.ics",
        "Africa/Kampala": "/static/Kampala.69e4f167d0.ics",
        "Africa/Khartoum": "/static/Khartoum.e4a944da17.ics",
        "Africa/Kigali": "/static/Kigali.9c2beaea37.ics",
        "Africa/Kinshasa": "/static/Kinshasa.6f0817402c.ics",
        "Africa/Lagos": "/static/Lagos.c22edde6eb.ics",
        "Africa/Libreville": "/static/Libreville.cec7e6e2ca.ics",
        "Africa/Lome": "/static/Lome.4dd50f2ae0.ics",
        "Africa/Luanda": "/static/Luanda.8c7d918745.ics",
        "Africa/Lubumbashi": "/static/Lubumbashi.70fefbbf92.ics",
        "Africa/Lusaka": "/static/Lusaka.06813effc2.ics",
        "Africa/Malabo": "/static/Malabo.b1d825d648.ics",
        "Africa/Maputo": "/static/Maputo.6c35a7afdb.ics",
        "Africa/Maseru": "/static/Maseru.8896adae8c.ics",
        "Africa/Mbabane": "/static/Mbabane.cb73246c06.ics",
        "Africa/Mogadishu": "/static/Mogadishu.aeb9544650.ics",
        "Africa/Monrovia": "/static/Monrovia.25533dd158.ics",
        "Africa/Nairobi": "/static/Nairobi.0f834f9942.ics",
        "Africa/Ndjamena": "/static/Ndjamena.e42e7efb88.ics",
        "Africa/Niamey": "/static/Niamey.f360b823e1.ics",
        "Africa/Nouakchott": "/static/Nouakchott.0f9508cd3e.ics",
        "Africa/Ouagadougou": "/static/Ouagadougou.c0aaef7f39.ics",
        "Africa/Porto-Novo": "/static/Porto-Novo.f44b3e7916.ics",
        "Africa/Sao_Tome": "/static/Sao_Tome.1ac2bdc003.ics",
        "Africa/Timbuktu": "/static/Timbuktu.2379a50ce0.ics",
        "Africa/Tripoli": "/static/Tripoli.6e8040bfd8.ics",
        "Africa/Tunis": "/static/Tunis.ae5e2a52ff.ics",
        "Africa/Windhoek": "/static/Windhoek.f289f3354d.ics",
        "America/Adak": "/static/Adak.5c8a69164c.ics",
        "America/Anchorage": "/static/Anchorage.de9f2f0cfb.ics",
        "America/Anguilla": "/static/Anguilla.dbe16a1225.ics",
        "America/Antigua": "/static/Antigua.69e3a7a174.ics",
        "America/Araguaina": "/static/Araguaina.4d0786c2a5.ics",
        "America/Argentina/Buenos_Aires": "/static/Buenos_Aires.7c55847413.ics",
        "America/Argentina/Catamarca": "/static/Catamarca.dd84a9f200.ics",
        "America/Argentina/ComodRivadavia": "/static/ComodRivadavia.fa2eb8a113.ics",
        "America/Argentina/Cordoba": "/static/Cordoba.1d379d81a3.ics",
        "America/Argentina/Jujuy": "/static/Jujuy.0dc8dcd87b.ics",
        "America/Argentina/La_Rioja": "/static/La_Rioja.072849b212.ics",
        "America/Argentina/Mendoza": "/static/Mendoza.96329a35a4.ics",
        "America/Argentina/Rio_Gallegos": "/static/Rio_Gallegos.f8212b0766.ics",
        "America/Argentina/Salta": "/static/Salta.d957cf76d4.ics",
        "America/Argentina/San_Juan": "/static/San_Juan.72a2df029c.ics",
        "America/Argentina/San_Luis": "/static/San_Luis.31db41adcf.ics",
        "America/Argentina/Tucuman": "/static/Tucuman.97cc8fdae1.ics",
        "America/Argentina/Ushuaia": "/static/Ushuaia.e03471715d.ics",
        "America/Aruba": "/static/Aruba.877fdd70d2.ics",
        "America/Asuncion": "/static/Asuncion.b6d9cc532c.ics",
        "America/Atikokan": "/static/Atikokan.e4eebf7057.ics",
        "America/Atka": "/static/Atka.3518b4e404.ics",
        "America/Bahia_Banderas": "/static/Bahia_Banderas.d53625addc.ics",
        "America/Bahia": "/static/Bahia.2d34d74119.ics",
        "America/Barbados": "/static/Barbados.30bd971666.ics",
        "America/Belem": "/static/Belem.7ee3514e27.ics",
        "America/Belize": "/static/Belize.9ee73b369b.ics",
        "America/Blanc-Sablon": "/static/Blanc-Sablon.1b4b74fdfd.ics",
        "America/Boa_Vista": "/static/Boa_Vista.a55f4d01f1.ics",
        "America/Bogota": "/static/Bogota.cca1c4cc5d.ics",
        "America/Boise": "/static/Boise.0652f8de49.ics",
        "America/Buenos_Aires": "/static/Buenos_Aires.8814f42968.ics",
        "America/Cambridge_Bay": "/static/Cambridge_Bay.de9bb35f5c.ics",
        "America/Campo_Grande": "/static/Campo_Grande.b1a5e9641e.ics",
        "America/Cancun": "/static/Cancun.d90fe699b6.ics",
        "America/Caracas": "/static/Caracas.d905a6b904.ics",
        "America/Catamarca": "/static/Catamarca.3205d14837.ics",
        "America/Cayenne": "/static/Cayenne.298d74a012.ics",
        "America/Cayman": "/static/Cayman.8319a9f7d2.ics",
        "America/Chicago": "/static/Chicago.afaa6e4df3.ics",
        "America/Chihuahua": "/static/Chihuahua.43622e982e.ics",
        "America/Coral_Harbour": "/static/Coral_Harbour.714d0ae269.ics",
        "America/Cordoba": "/static/Cordoba.9608ec5834.ics",
        "America/Costa_Rica": "/static/Costa_Rica.146002314c.ics",
        "America/Creston": "/static/Creston.9c9826b4bd.ics",
        "America/Cuiaba": "/static/Cuiaba.33cbb21d48.ics",
        "America/Curacao": "/static/Curacao.0b270fa38a.ics",
        "America/Danmarkshavn": "/static/Danmarkshavn.a3175f6b91.ics",
        "America/Dawson_Creek": "/static/Dawson_Creek.74079eb0ff.ics",
        "America/Dawson": "/static/Dawson.92cc3b9eb6.ics",
        "America/Denver": "/static/Denver.436e14808b.ics",
        "America/Detroit": "/static/Detroit.719084f025.ics",
        "America/Dominica": "/static/Dominica.7a07f99ab5.ics",
        "America/Edmonton": "/static/Edmonton.a02dac4fc5.ics",
        "America/Eirunepe": "/static/Eirunepe.cc34b66260.ics",
        "America/El_Salvador": "/static/El_Salvador.15a3874396.ics",
        "America/Ensenada": "/static/Ensenada.6d84d01016.ics",
        "America/Fort_Nelson": "/static/Fort_Nelson.b87796b610.ics",
        "America/Fort_Wayne": "/static/Fort_Wayne.89d10c6899.ics",
        "America/Fortaleza": "/static/Fortaleza.5bb469255b.ics",
        "America/Glace_Bay": "/static/Glace_Bay.f0d7bfeb83.ics",
        "America/Godthab": "/static/Godthab.b164983aee.ics",
        "America/Goose_Bay": "/static/Goose_Bay.401fd812f6.ics",
        "America/Grand_Turk": "/static/Grand_Turk.0e97a322d3.ics",
        "America/Grenada": "/static/Grenada.ed3d7b7bb0.ics",
        "America/Guadeloupe": "/static/Guadeloupe.7b37cd74d6.ics",
        "America/Guatemala": "/static/Guatemala.3f5dcae7aa.ics",
        "America/Guayaquil": "/static/Guayaquil.21ed9dff66.ics",
        "America/Guyana": "/static/Guyana.e141f56ad7.ics",
        "America/Halifax": "/static/Halifax.2bb9574897.ics",
        "America/Havana": "/static/Havana.84655476c0.ics",
        "America/Hermosillo": "/static/Hermosillo.da0d9289c3.ics",
        "America/Indiana/Indianapolis": "/static/Indianapolis.d6c5e69d3f.ics",
        "America/Indiana/Knox": "/static/Knox.183979417f.ics",
        "America/Indiana/Marengo": "/static/Marengo.407883b0b9.ics",
        "America/Indiana/Petersburg": "/static/Petersburg.6042c39581.ics",
        "America/Indiana/Tell_City": "/static/Tell_City.150951054e.ics",
        "America/Indiana/Vevay": "/static/Vevay.554d78ee1f.ics",
        "America/Indiana/Vincennes": "/static/Vincennes.c536774aa4.ics",
        "America/Indiana/Winamac": "/static/Winamac.7401e1b6e0.ics",
        "America/Indianapolis": "/static/Indianapolis.6e96ffc0ee.ics",
        "America/Inuvik": "/static/Inuvik.75b287d7fa.ics",
        "America/Iqaluit": "/static/Iqaluit.02462e190e.ics",
        "America/Jamaica": "/static/Jamaica.6223651527.ics",
        "America/Jujuy": "/static/Jujuy.9af342d45a.ics",
        "America/Juneau": "/static/Juneau.14a98f49f1.ics",
        "America/Kentucky/Louisville": "/static/Louisville.dc14d1f327.ics",
        "America/Kentucky/Monticello": "/static/Monticello.5a10d04a0a.ics",
        "America/Knox_IN": "/static/Knox_IN.f1c0a5a9b7.ics",
        "America/Kralendijk": "/static/Kralendijk.532609ea9f.ics",
        "America/La_Paz": "/static/La_Paz.098e905a3d.ics",
        "America/Lima": "/static/Lima.435eabd8a0.ics",
        "America/Los_Angeles": "/static/Los_Angeles.780e53b44c.ics",
        "America/Louisville": "/static/Louisville.8846f514b0.ics",
        "America/Lower_Princes": "/static/Lower_Princes.7f4a0d78d4.ics",
        "America/Maceio": "/static/Maceio.f1d1e125c6.ics",
        "America/Managua": "/static/Managua.a42c67a869.ics",
        "America/Manaus": "/static/Manaus.bc91b57f39.ics",
        "America/Marigot": "/static/Marigot.219cf3ff91.ics",
        "America/Martinique": "/static/Martinique.decdff5a68.ics",
        "America/Matamoros": "/static/Matamoros.72a80a6d46.ics",
        "America/Mazatlan": "/static/Mazatlan.24c68eb3d8.ics",
        "America/Mendoza": "/static/Mendoza.8a6109cd33.ics",
        "America/Menominee": "/static/Menominee.9fb30be5fe.ics",
        "America/Merida": "/static/Merida.a0fae46b60.ics",
        "America/Metlakatla": "/static/Metlakatla.12976c8a70.ics",
        "America/Mexico_City": "/static/Mexico_City.2bf2d4a670.ics",
        "America/Miquelon": "/static/Miquelon.9544c4a062.ics",
        "America/Moncton": "/static/Moncton.454d97d9f3.ics",
        "America/Monterrey": "/static/Monterrey.972d0a68dc.ics",
        "America/Montevideo": "/static/Montevideo.bc71b44f01.ics",
        "America/Montreal": "/static/Montreal.f3818a6930.ics",
        "America/Montserrat": "/static/Montserrat.33c697bb4f.ics",
        "America/Nassau": "/static/Nassau.316623059a.ics",
        "America/New_York": "/static/New_York.7f02ecc0b9.ics",
        "America/Nipigon": "/static/Nipigon.3ac6a11d04.ics",
        "America/Nome": "/static/Nome.630b48d08b.ics",
        "America/Noronha": "/static/Noronha.1ecec7d8ed.ics",
        "America/North_Dakota/Beulah": "/static/Beulah.060d3de8fa.ics",
        "America/North_Dakota/Center": "/static/Center.7b99f45af7.ics",
        "America/North_Dakota/New_Salem": "/static/New_Salem.e363646cd3.ics",
        "America/Ojinaga": "/static/Ojinaga.158306a6a0.ics",
        "America/Panama": "/static/Panama.ac55fd15a3.ics",
        "America/Pangnirtung": "/static/Pangnirtung.14dcab83ce.ics",
        "America/Paramaribo": "/static/Paramaribo.13f0d12b04.ics",
        "America/Phoenix": "/static/Phoenix.36f6704008.ics",
        "America/Port_of_Spain": "/static/Port_of_Spain.e0bb07b4ce.ics",
        "America/Port-au-Prince": "/static/Port-au-Prince.a9d3c599c2.ics",
        "America/Porto_Acre": "/static/Porto_Acre.b2b04e3c9c.ics",
        "America/Porto_Velho": "/static/Porto_Velho.f78c4e4a4b.ics",
        "America/Puerto_Rico": "/static/Puerto_Rico.e8b25a2b23.ics",
        "America/Rainy_River": "/static/Rainy_River.d619aec7cf.ics",
        "America/Rankin_Inlet": "/static/Rankin_Inlet.a10b819963.ics",
        "America/Recife": "/static/Recife.20321ae3fd.ics",
        "America/Regina": "/static/Regina.2a81ea7d4c.ics",
        "America/Resolute": "/static/Resolute.7cb27278d7.ics",
        "America/Rio_Branco": "/static/Rio_Branco.51273c4521.ics",
        "America/Rosario": "/static/Rosario.4283b20ea1.ics",
        "America/Santa_Isabel": "/static/Santa_Isabel.5f4f9171ee.ics",
        "America/Santarem": "/static/Santarem.b8f9580b31.ics",
        "America/Santiago": "/static/Santiago.bfadaf3598.ics",
        "America/Santo_Domingo": "/static/Santo_Domingo.47d3a2d59a.ics",
        "America/Sao_Paulo": "/static/Sao_Paulo.2259ef5c2f.ics",
        "America/Scoresbysund": "/static/Scoresbysund.b77ab8f21a.ics",
        "America/Shiprock": "/static/Shiprock.0d1376f4dd.ics",
        "America/Sitka": "/static/Sitka.3471ced20f.ics",
        "America/St_Barthelemy": "/static/St_Barthelemy.282f73e528.ics",
        "America/St_Johns": "/static/St_Johns.08674807ec.ics",
        "America/St_Kitts": "/static/St_Kitts.40a657ac17.ics",
        "America/St_Lucia": "/static/St_Lucia.76cf7c0ae9.ics",
        "America/St_Thomas": "/static/St_Thomas.0dac89af79.ics",
        "America/St_Vincent": "/static/St_Vincent.6aae72797c.ics",
        "America/Swift_Current": "/static/Swift_Current.6a3d40f3be.ics",
        "America/Tegucigalpa": "/static/Tegucigalpa.4ccca02752.ics",
        "America/Thule": "/static/Thule.8407b37986.ics",
        "America/Thunder_Bay": "/static/Thunder_Bay.aca23e8da3.ics",
        "America/Tijuana": "/static/Tijuana.b4f2486c5f.ics",
        "America/Toronto": "/static/Toronto.6f3ca13503.ics",
        "America/Tortola": "/static/Tortola.c19dd4b874.ics",
        "America/Vancouver": "/static/Vancouver.df39037620.ics",
        "America/Virgin": "/static/Virgin.7f6b5b25ec.ics",
        "America/Whitehorse": "/static/Whitehorse.550b160273.ics",
        "America/Winnipeg": "/static/Winnipeg.bd1a4e7ccb.ics",
        "America/Yakutat": "/static/Yakutat.a7d1c7f8aa.ics",
        "America/Yellowknife": "/static/Yellowknife.5d5d8c3106.ics",
        "Antarctica/Casey": "/static/Casey.3308795470.ics",
        "Antarctica/Davis": "/static/Davis.b1e9fc34bd.ics",
        "Antarctica/DumontDUrville": "/static/DumontDUrville.86b0798b0a.ics",
        "Antarctica/Macquarie": "/static/Macquarie.22cf8fd0c1.ics",
        "Antarctica/Mawson": "/static/Mawson.c4c48c5496.ics",
        "Antarctica/McMurdo": "/static/McMurdo.3e1599b00f.ics",
        "Antarctica/Palmer": "/static/Palmer.caa20e26e6.ics",
        "Antarctica/Rothera": "/static/Rothera.bf685ca594.ics",
        "Antarctica/South_Pole": "/static/South_Pole.01586fbc05.ics",
        "Antarctica/Syowa": "/static/Syowa.414e5b8cef.ics",
        "Antarctica/Troll": "/static/Troll.6c9015fce7.ics",
        "Antarctica/Vostok": "/static/Vostok.80678f0408.ics",
        "Arctic/Longyearbyen": "/static/Longyearbyen.40145ed84d.ics",
        "Asia/Aden": "/static/Aden.5a0d022ed2.ics",
        "Asia/Almaty": "/static/Almaty.88feb91cce.ics",
        "Asia/Amman": "/static/Amman.ba1a51f6f6.ics",
        "Asia/Anadyr": "/static/Anadyr.a19f48017b.ics",
        "Asia/Aqtau": "/static/Aqtau.b4c4906955.ics",
        "Asia/Aqtobe": "/static/Aqtobe.c1af34b4f8.ics",
        "Asia/Ashgabat": "/static/Ashgabat.c0d6c6c760.ics",
        "Asia/Ashkhabad": "/static/Ashkhabad.8effbf320a.ics",
        "Asia/Baghdad": "/static/Baghdad.6b989fb5fc.ics",
        "Asia/Bahrain": "/static/Bahrain.246ef3782f.ics",
        "Asia/Baku": "/static/Baku.15a8ad80ea.ics",
        "Asia/Bangkok": "/static/Bangkok.0ee6b61e4d.ics",
        "Asia/Barnaul": "/static/Barnaul.a53eb2b99b.ics",
        "Asia/Beirut": "/static/Beirut.ec07a7c21e.ics",
        "Asia/Bishkek": "/static/Bishkek.4940b2b66e.ics",
        "Asia/Brunei": "/static/Brunei.21ce0c633c.ics",
        "Asia/Calcutta": "/static/Calcutta.43bbd7aad1.ics",
        "Asia/Chita": "/static/Chita.aa3cf97a83.ics",
        "Asia/Choibalsan": "/static/Choibalsan.5c5e9107e6.ics",
        "Asia/Chongqing": "/static/Chongqing.f27728f7cc.ics",
        "Asia/Chungking": "/static/Chungking.29688a8d83.ics",
        "Asia/Colombo": "/static/Colombo.db90d93971.ics",
        "Asia/Dacca": "/static/Dacca.0b4afb7a42.ics",
        "Asia/Damascus": "/static/Damascus.725cbf5cac.ics",
        "Asia/Dhaka": "/static/Dhaka.e206110113.ics",
        "Asia/Dili": "/static/Dili.f846195e2b.ics",
        "Asia/Dubai": "/static/Dubai.e762e58c96.ics",
        "Asia/Dushanbe": "/static/Dushanbe.ce2ef437c1.ics",
        "Asia/Gaza": "/static/Gaza.c391cc0f79.ics",
        "Asia/Harbin": "/static/Harbin.8cb255c03a.ics",
        "Asia/Hebron": "/static/Hebron.500e308342.ics",
        "Asia/Ho_Chi_Minh": "/static/Ho_Chi_Minh.c5cce4b0ba.ics",
        "Asia/Hong_Kong": "/static/Hong_Kong.2d71d21ac4.ics",
        "Asia/Hovd": "/static/Hovd.ef08e41133.ics",
        "Asia/Irkutsk": "/static/Irkutsk.1f6d999bab.ics",
        "Asia/Istanbul": "/static/Istanbul.4d7596ed78.ics",
        "Asia/Jakarta": "/static/Jakarta.37eb197c79.ics",
        "Asia/Jayapura": "/static/Jayapura.8872e943a4.ics",
        "Asia/Jerusalem": "/static/Jerusalem.85a1cb333e.ics",
        "Asia/Kabul": "/static/Kabul.aed7a26e32.ics",
        "Asia/Kamchatka": "/static/Kamchatka.1b733d7fef.ics",
        "Asia/Karachi": "/static/Karachi.0f86f0a833.ics",
        "Asia/Kashgar": "/static/Kashgar.50f9b83adc.ics",
        "Asia/Kathmandu": "/static/Kathmandu.2d26857827.ics",
        "Asia/Katmandu": "/static/Katmandu.dfcdb151e1.ics",
        "Asia/Khandyga": "/static/Khandyga.e1042a6d31.ics",
        "Asia/Kolkata": "/static/Kolkata.262f867727.ics",
        "Asia/Krasnoyarsk": "/static/Krasnoyarsk.11240abeb7.ics",
        "Asia/Kuala_Lumpur": "/static/Kuala_Lumpur.71f566a1dd.ics",
        "Asia/Kuching": "/static/Kuching.1825fa4a57.ics",
        "Asia/Kuwait": "/static/Kuwait.95c52f4d07.ics",
        "Asia/Macao": "/static/Macao.9c403f1990.ics",
        "Asia/Macau": "/static/Macau.97b56bc1c1.ics",
        "Asia/Magadan": "/static/Magadan.35b30282bd.ics",
        "Asia/Makassar": "/static/Makassar.d34ae21548.ics",
        "Asia/Manila": "/static/Manila.9d4ffa5583.ics",
        "Asia/Muscat": "/static/Muscat.4fef950b4b.ics",
        "Asia/Nicosia": "/static/Nicosia.89053abb8d.ics",
        "Asia/Novokuznetsk": "/static/Novokuznetsk.7301fd3c16.ics",
        "Asia/Novosibirsk": "/static/Novosibirsk.aa90f2f061.ics",
        "Asia/Omsk": "/static/Omsk.a894c96d9d.ics",
        "Asia/Oral": "/static/Oral.dd8cc94814.ics",
        "Asia/Phnom_Penh": "/static/Phnom_Penh.72952edd70.ics",
        "Asia/Pontianak": "/static/Pontianak.257fd7f7bf.ics",
        "Asia/Pyongyang": "/static/Pyongyang.f1a688c28c.ics",
        "Asia/Qatar": "/static/Qatar.1f5766aa37.ics",
        "Asia/Qyzylorda": "/static/Qyzylorda.4bd677b92a.ics",
        "Asia/Rangoon": "/static/Rangoon.c0defadd7d.ics",
        "Asia/Riyadh": "/static/Riyadh.02593ad914.ics",
        "Asia/Saigon": "/static/Saigon.189a1c810e.ics",
        "Asia/Sakhalin": "/static/Sakhalin.0c8deda971.ics",
        "Asia/Samarkand": "/static/Samarkand.9849795547.ics",
        "Asia/Seoul": "/static/Seoul.597564d369.ics",
        "Asia/Shanghai": "/static/Shanghai.b062a101bd.ics",
        "Asia/Singapore": "/static/Singapore.f2f8be5108.ics",
        "Asia/Srednekolymsk": "/static/Srednekolymsk.af06cde7ed.ics",
        "Asia/Taipei": "/static/Taipei.30a11bdf61.ics",
        "Asia/Tashkent": "/static/Tashkent.02a3e88487.ics",
        "Asia/Tbilisi": "/static/Tbilisi.5ff7e94fcb.ics",
        "Asia/Tehran": "/static/Tehran.a11dd9983f.ics",
        "Asia/Tel_Aviv": "/static/Tel_Aviv.a5c3bc9524.ics",
        "Asia/Thimbu": "/static/Thimbu.895c0dfb8f.ics",
        "Asia/Thimphu": "/static/Thimphu.3b523bb3f7.ics",
        "Asia/Tokyo": "/static/Tokyo.11f1afc021.ics",
        "Asia/Tomsk": "/static/Tomsk.7b0857f05a.ics",
        "Asia/Ujung_Pandang": "/static/Ujung_Pandang.8a094c3a68.ics",
        "Asia/Ulaanbaatar": "/static/Ulaanbaatar.1c9543f5d5.ics",
        "Asia/Ulan_Bator": "/static/Ulan_Bator.b322fe39ce.ics",
        "Asia/Urumqi": "/static/Urumqi.6dc92a1533.ics",
        "Asia/Ust-Nera": "/static/Ust-Nera.8c9b3bfc61.ics",
        "Asia/Vientiane": "/static/Vientiane.9cbe3d1ef1.ics",
        "Asia/Vladivostok": "/static/Vladivostok.0225dac991.ics",
        "Asia/Yakutsk": "/static/Yakutsk.96e54bb596.ics",
        "Asia/Yangon": "/static/Yangon.6a3bdef83f.ics",
        "Asia/Yekaterinburg": "/static/Yekaterinburg.ff65b039ed.ics",
        "Asia/Yerevan": "/static/Yerevan.47acbd0505.ics",
        "Atlantic/Azores": "/static/Azores.5048d535c5.ics",
        "Atlantic/Bermuda": "/static/Bermuda.c06818f966.ics",
        "Atlantic/Canary": "/static/Canary.95fc965719.ics",
        "Atlantic/Cape_Verde": "/static/Cape_Verde.486c6cca31.ics",
        "Atlantic/Faeroe": "/static/Faeroe.b494bcd3f5.ics",
        "Atlantic/Faroe": "/static/Faroe.0b8454be6b.ics",
        "Atlantic/Jan_Mayen": "/static/Jan_Mayen.fd246a3cc9.ics",
        "Atlantic/Madeira": "/static/Madeira.bcc7285c8b.ics",
        "Atlantic/Reykjavik": "/static/Reykjavik.86b16bc311.ics",
        "Atlantic/South_Georgia": "/static/South_Georgia.a39b381162.ics",
        "Atlantic/St_Helena": "/static/St_Helena.106bfe228e.ics",
        "Atlantic/Stanley": "/static/Stanley.75e381c168.ics",
        "Australia/ACT": "/static/ACT.a122be16c6.ics",
        "Australia/Adelaide": "/static/Adelaide.03c14d2911.ics",
        "Australia/Brisbane": "/static/Brisbane.bf3ea8a247.ics",
        "Australia/Broken_Hill": "/static/Broken_Hill.cade9fa08e.ics",
        "Australia/Canberra": "/static/Canberra.4b31678133.ics",
        "Australia/Currie": "/static/Currie.89eb08746b.ics",
        "Australia/Darwin": "/static/Darwin.4928a869fd.ics",
        "Australia/Eucla": "/static/Eucla.3c57079b8b.ics",
        "Australia/Hobart": "/static/Hobart.406bdd9695.ics",
        "Australia/LHI": "/static/LHI.3a697f264f.ics",
        "Australia/Lindeman": "/static/Lindeman.309abd74a2.ics",
        "Australia/Lord_Howe": "/static/Lord_Howe.b2a5e3d36d.ics",
        "Australia/Melbourne": "/static/Melbourne.4af8e05e72.ics",
        "Australia/North": "/static/North.1b75d25627.ics",
        "Australia/NSW": "/static/NSW.a9123b7446.ics",
        "Australia/Perth": "/static/Perth.5d1780e94d.ics",
        "Australia/Queensland": "/static/Queensland.59585c90de.ics",
        "Australia/South": "/static/South.fee294dea3.ics",
        "Australia/Sydney": "/static/Sydney.6937b3ce5e.ics",
        "Australia/Tasmania": "/static/Tasmania.3d961e6442.ics",
        "Australia/Victoria": "/static/Victoria.ffd795f3a8.ics",
        "Australia/West": "/static/West.02c7fba7a6.ics",
        "Australia/Yancowinna": "/static/Yancowinna.7d72dd3649.ics",
        "Brazil/Acre": "/static/Acre.ad33124888.ics",
        "Brazil/DeNoronha": "/static/DeNoronha.076a9732c2.ics",
        "Brazil/East": "/static/East.91a64115d6.ics",
        "Brazil/West": "/static/West.0418c9a738.ics",
        "Canada/Atlantic": "/static/Atlantic.2cbf7a81ab.ics",
        "Canada/Central": "/static/Central.6d646828ac.ics",
        "Canada/East-Saskatchewan": "/static/East-Saskatchewan.20b7d26855.ics",
        "Canada/Eastern": "/static/Eastern.18dfd0e4b1.ics",
        "Canada/Mountain": "/static/Mountain.00d54a5424.ics",
        "Canada/Newfoundland": "/static/Newfoundland.28502a1271.ics",
        "Canada/Pacific": "/static/Pacific.b090adfacf.ics",
        "Canada/Saskatchewan": "/static/Saskatchewan.264893463e.ics",
        "Canada/Yukon": "/static/Yukon.d72dbe952c.ics",
        "Chile/Continental": "/static/Continental.2195b14d49.ics",
        "Chile/EasterIsland": "/static/EasterIsland.a1d69fef37.ics",
        "Etc/GMT-0": "/static/GMT-0.744c1800ff.ics",
        "Etc/GMT-1": "/static/GMT-1.5ca94bda37.ics",
        "Etc/GMT-10": "/static/GMT-10.f9cca574ee.ics",
        "Etc/GMT-11": "/static/GMT-11.afb6ab0adb.ics",
        "Etc/GMT-12": "/static/GMT-12.73edf89659.ics",
        "Etc/GMT-13": "/static/GMT-13.e47c2b5193.ics",
        "Etc/GMT-14": "/static/GMT-14.ca2e29f324.ics",
        "Etc/GMT-2": "/static/GMT-2.5cc1547197.ics",
        "Etc/GMT-3": "/static/GMT-3.305b8d9dba.ics",
        "Etc/GMT-4": "/static/GMT-4.2453338f77.ics",
        "Etc/GMT-5": "/static/GMT-5.7115571a9b.ics",
        "Etc/GMT-6": "/static/GMT-6.4dcf16670e.ics",
        "Etc/GMT-7": "/static/GMT-7.645bb9fe3e.ics",
        "Etc/GMT-8": "/static/GMT-8.aa79f78107.ics",
        "Etc/GMT-9": "/static/GMT-9.01d7e0cd4e.ics",
        "Etc/GMT": "/static/GMT.ab58ab7e40.ics",
        "Etc/GMT+0": "/static/GMT+0.31ae129ddb.ics",
        "Etc/GMT+1": "/static/GMT+1.15db1644b1.ics",
        "Etc/GMT+10": "/static/GMT+10.3a0a6ccab3.ics",
        "Etc/GMT+11": "/static/GMT+11.84011890bb.ics",
        "Etc/GMT+12": "/static/GMT+12.a66155e453.ics",
        "Etc/GMT+2": "/static/GMT+2.23dc2c5471.ics",
        "Etc/GMT+3": "/static/GMT+3.3240b3eff4.ics",
        "Etc/GMT+4": "/static/GMT+4.0f6e75574f.ics",
        "Etc/GMT+5": "/static/GMT+5.34135750aa.ics",
        "Etc/GMT+6": "/static/GMT+6.833c1ebcec.ics",
        "Etc/GMT+7": "/static/GMT+7.70d6066e8e.ics",
        "Etc/GMT+8": "/static/GMT+8.db8038230c.ics",
        "Etc/GMT+9": "/static/GMT+9.b8026f23a2.ics",
        "Etc/GMT0": "/static/GMT0.220f0fe227.ics",
        "Etc/Greenwich": "/static/Greenwich.c19e43fa0d.ics",
        "Etc/UCT": "/static/UCT.9d822cf62e.ics",
        "Etc/Universal": "/static/Universal.9ecca00823.ics",
        "Etc/UTC": "/static/UTC.d50331d2de.ics",
        "Etc/Zulu": "/static/Zulu.760f08d7ad.ics",
        "Europe/Amsterdam": "/static/Amsterdam.c9008d7c6b.ics",
        "Europe/Andorra": "/static/Andorra.3b455db928.ics",
        "Europe/Astrakhan": "/static/Astrakhan.02a3eb6490.ics",
        "Europe/Athens": "/static/Athens.a6b491efd7.ics",
        "Europe/Belfast": "/static/Belfast.39a8054113.ics",
        "Europe/Belgrade": "/static/Belgrade.01899f70ed.ics",
        "Europe/Berlin": "/static/Berlin.7eff1fef65.ics",
        "Europe/Bratislava": "/static/Bratislava.4c177543b6.ics",
        "Europe/Brussels": "/static/Brussels.947ee56d6d.ics",
        "Europe/Bucharest": "/static/Bucharest.06f5949f16.ics",
        "Europe/Budapest": "/static/Budapest.7d42315fc9.ics",
        "Europe/Busingen": "/static/Busingen.7e93edc4d9.ics",
        "Europe/Chisinau": "/static/Chisinau.b609dfd5bc.ics",
        "Europe/Copenhagen": "/static/Copenhagen.2623d7ea24.ics",
        "Europe/Dublin": "/static/Dublin.e1a3557f80.ics",
        "Europe/Gibraltar": "/static/Gibraltar.c6ee0d8632.ics",
        "Europe/Guernsey": "/static/Guernsey.cc746c3c4e.ics",
        "Europe/Helsinki": "/static/Helsinki.7af522c8e3.ics",
        "Europe/Isle_of_Man": "/static/Isle_of_Man.a9d43de943.ics",
        "Europe/Istanbul": "/static/Istanbul.300a145bd8.ics",
        "Europe/Jersey": "/static/Jersey.0d7a5c63ac.ics",
        "Europe/Kaliningrad": "/static/Kaliningrad.afd265f294.ics",
        "Europe/Kiev": "/static/Kiev.e8d3adb6ed.ics",
        "Europe/Kirov": "/static/Kirov.582bd88206.ics",
        "Europe/Lisbon": "/static/Lisbon.1bf3cd0335.ics",
        "Europe/Ljubljana": "/static/Ljubljana.f19fdf5fae.ics",
        "Europe/London": "/static/London.d9c25d5b2e.ics",
        "Europe/Luxembourg": "/static/Luxembourg.7abe6541de.ics",
        "Europe/Madrid": "/static/Madrid.8e6ef7994f.ics",
        "Europe/Malta": "/static/Malta.e6e445c712.ics",
        "Europe/Mariehamn": "/static/Mariehamn.1a9a5556ae.ics",
        "Europe/Minsk": "/static/Minsk.7b7713393f.ics",
        "Europe/Monaco": "/static/Monaco.b9c2a904bd.ics",
        "Europe/Moscow": "/static/Moscow.235d105099.ics",
        "Europe/Nicosia": "/static/Nicosia.c7d45824eb.ics",
        "Europe/Oslo": "/static/Oslo.dc0867bc64.ics",
        "Europe/Paris": "/static/Paris.8dcfe790e2.ics",
        "Europe/Podgorica": "/static/Podgorica.189746d0f1.ics",
        "Europe/Prague": "/static/Prague.66c9d95e26.ics",
        "Europe/Riga": "/static/Riga.810e546078.ics",
        "Europe/Rome": "/static/Rome.6045fad13f.ics",
        "Europe/Samara": "/static/Samara.3ec712f5e7.ics",
        "Europe/San_Marino": "/static/San_Marino.73432e03ba.ics",
        "Europe/Sarajevo": "/static/Sarajevo.1fadc0b163.ics",
        "Europe/Simferopol": "/static/Simferopol.1e5058bc4f.ics",
        "Europe/Skopje": "/static/Skopje.169bf6247d.ics",
        "Europe/Sofia": "/static/Sofia.8e4d124d87.ics",
        "Europe/Stockholm": "/static/Stockholm.30ce2f0780.ics",
        "Europe/Tallinn": "/static/Tallinn.dc9718f85e.ics",
        "Europe/Tirane": "/static/Tirane.477f6423bb.ics",
        "Europe/Tiraspol": "/static/Tiraspol.db87d59b6a.ics",
        "Europe/Ulyanovsk": "/static/Ulyanovsk.f1a76bdfea.ics",
        "Europe/Uzhgorod": "/static/Uzhgorod.63a3843a52.ics",
        "Europe/Vaduz": "/static/Vaduz.f751185606.ics",
        "Europe/Vatican": "/static/Vatican.02695f2268.ics",
        "Europe/Vienna": "/static/Vienna.d4657964f7.ics",
        "Europe/Vilnius": "/static/Vilnius.8ea8a80909.ics",
        "Europe/Volgograd": "/static/Volgograd.01b0891b84.ics",
        "Europe/Warsaw": "/static/Warsaw.9011dff96a.ics",
        "Europe/Zagreb": "/static/Zagreb.28a36cb8a4.ics",
        "Europe/Zaporozhye": "/static/Zaporozhye.dddd16fdfb.ics",
        "Europe/Zurich": "/static/Zurich.f4cfe31d99.ics",
        "Indian/Antananarivo": "/static/Antananarivo.917c44a801.ics",
        "Indian/Chagos": "/static/Chagos.567365fd5a.ics",
        "Indian/Christmas": "/static/Christmas.78e32232b4.ics",
        "Indian/Cocos": "/static/Cocos.3ab1a4b77f.ics",
        "Indian/Comoro": "/static/Comoro.4489773149.ics",
        "Indian/Kerguelen": "/static/Kerguelen.b070832e03.ics",
        "Indian/Mahe": "/static/Mahe.eecf72296c.ics",
        "Indian/Maldives": "/static/Maldives.f72bd0ab06.ics",
        "Indian/Mauritius": "/static/Mauritius.1ef668c409.ics",
        "Indian/Mayotte": "/static/Mayotte.b167c17a0d.ics",
        "Indian/Reunion": "/static/Reunion.741555128a.ics",
        "Mexico/BajaNorte": "/static/BajaNorte.d43037b590.ics",
        "Mexico/BajaSur": "/static/BajaSur.8d51778693.ics",
        "Mexico/General": "/static/General.3b33093afd.ics",
        "Pacific/Apia": "/static/Apia.26019758f8.ics",
        "Pacific/Auckland": "/static/Auckland.31b52d1557.ics",
        "Pacific/Bougainville": "/static/Bougainville.abf6675f63.ics",
        "Pacific/Chatham": "/static/Chatham.0eb2a5bd48.ics",
        "Pacific/Chuuk": "/static/Chuuk.e27f3d7591.ics",
        "Pacific/Easter": "/static/Easter.7e6fa64c73.ics",
        "Pacific/Efate": "/static/Efate.9be7cc4691.ics",
        "Pacific/Enderbury": "/static/Enderbury.0cc659854c.ics",
        "Pacific/Fakaofo": "/static/Fakaofo.4c2841faa2.ics",
        "Pacific/Fiji": "/static/Fiji.c570712fbd.ics",
        "Pacific/Funafuti": "/static/Funafuti.8151c0448f.ics",
        "Pacific/Galapagos": "/static/Galapagos.36c139cfb7.ics",
        "Pacific/Gambier": "/static/Gambier.146cdb3c57.ics",
        "Pacific/Guadalcanal": "/static/Guadalcanal.ac17a77c46.ics",
        "Pacific/Guam": "/static/Guam.77d1448c52.ics",
        "Pacific/Honolulu": "/static/Honolulu.be013195b9.ics",
        "Pacific/Johnston": "/static/Johnston.82a4fca854.ics",
        "Pacific/Kiritimati": "/static/Kiritimati.8f91b87bd5.ics",
        "Pacific/Kosrae": "/static/Kosrae.d7026bbafd.ics",
        "Pacific/Kwajalein": "/static/Kwajalein.3f9fde4ba2.ics",
        "Pacific/Majuro": "/static/Majuro.0ba8b75760.ics",
        "Pacific/Marquesas": "/static/Marquesas.c0b76e212c.ics",
        "Pacific/Midway": "/static/Midway.2ea18044fa.ics",
        "Pacific/Nauru": "/static/Nauru.0a61ad27da.ics",
        "Pacific/Niue": "/static/Niue.104f51b652.ics",
        "Pacific/Norfolk": "/static/Norfolk.95d48120ce.ics",
        "Pacific/Noumea": "/static/Noumea.5a2e4e6bab.ics",
        "Pacific/Pago_Pago": "/static/Pago_Pago.28462857ff.ics",
        "Pacific/Palau": "/static/Palau.e47c8195ec.ics",
        "Pacific/Pitcairn": "/static/Pitcairn.1edbcbc683.ics",
        "Pacific/Pohnpei": "/static/Pohnpei.a35aee50c7.ics",
        "Pacific/Ponape": "/static/Ponape.dfcf75fdd4.ics",
        "Pacific/Port_Moresby": "/static/Port_Moresby.042a04dfc5.ics",
        "Pacific/Rarotonga": "/static/Rarotonga.09807d21db.ics",
        "Pacific/Saipan": "/static/Saipan.c851af47e8.ics",
        "Pacific/Samoa": "/static/Samoa.4d144eb4f7.ics",
        "Pacific/Tahiti": "/static/Tahiti.9ea877f5d4.ics",
        "Pacific/Tarawa": "/static/Tarawa.f081bd2e38.ics",
        "Pacific/Tongatapu": "/static/Tongatapu.2124717920.ics",
        "Pacific/Truk": "/static/Truk.f57c9c7a7b.ics",
        "Pacific/Wake": "/static/Wake.9ccddcd556.ics",
        "Pacific/Wallis": "/static/Wallis.bc5d9160c9.ics",
        "Pacific/Yap": "/static/Yap.721ea1e811.ics",
        "US/Alaska": "/static/Alaska.0079a04f2e.ics",
        "US/Aleutian": "/static/Aleutian.2e13d22a6f.ics",
        "US/Arizona": "/static/Arizona.37d8a4aaa8.ics",
        "US/Central": "/static/Central.bbd226d028.ics",
        "US/East-Indiana": "/static/East-Indiana.38b5608b46.ics",
        "US/Eastern": "/static/Eastern.6857581108.ics",
        "US/Hawaii": "/static/Hawaii.ec730fd926.ics",
        "US/Indiana-Starke": "/static/Indiana-Starke.4af4814790.ics",
        "US/Michigan": "/static/Michigan.cae1c31df8.ics",
        "US/Mountain": "/static/Mountain.85f5a54d3d.ics",
        "US/Pacific": "/static/Pacific.5867a98849.ics",
        "US/Samoa": "/static/Samoa.c3c91d4c59.ics"
    };
    return module.exports = function() {
        for (var output = obj, i = 0; i < arguments.length; i++) {
            if ("object" != typeof obj[arguments[i]] && i !== arguments.length - 1) throw new TypeError('Unable to read argument "' + arguments[i] + '" from glob in ' + module.id);
            output = output[arguments[i]];
        }
        return output;
    }, module.exports;
}), function() {
    (0, System.amdDefine)("common/Backend.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "3rdparty/queue.js", "common/util.js", "3rdparty/mario.js", "common/TraceLogging.js", "3rdparty/htmlEmailToText.js", "3rdparty/onevalidation/validation.js", "common/FormBuilder.js", "common/FormSubmitter.js", "3rdparty/Failboat.js", "3rdparty/BeforeUnload.js", "3rdparty/sha256hex.js", "common/migrations/migrateContactsCityToLocality.js", "calendar/timezones/**/*.ics!node_modules/systemjs-asset-plugin/asset-plugin.js", "3rdparty/jquery.cookie.js" ], function($, ko, queue, util, mario, TraceLogging, htmlEmailToText, validation, FormBuilder, FormSubmitter, Failboat, BeforeUnload, sha256hex, migrateContactsCityToLocality, timeZoneAssetUrlGetter) {
        function createError(xhr, url, options) {
            var error = new Error(), response = null;
            try {
                response = xhr.response || JSON.parse(xhr.responseText);
            } catch (e) {
                response = {};
            }
            var mappedStatus = winInetMapping[xhr.status];
            return Failboat.tag(error, "number" == typeof mappedStatus ? mappedStatus : xhr.status), 
            response.error && Failboat.tag(error, response.error), ko.utils.extend(error, {
                status: xhr.status,
                statusText: xhr.statusText,
                requestMethod: options && options.type || "GET",
                requestUrl: url,
                response: response,
                responseHeaders: xhr.getAllResponseHeaders && xhr.getAllResponseHeaders() || null,
                responseText: xhr.responseText || ""
            });
        }
        function createRequest(url, options, callback) {
            var cb = callback;
            return "function" == typeof options && (cb = options, options = {}), options.hasOwnProperty("formdata") && (options.data = options.formdata, 
            options.processData = !1, options.contentType = !1, options.formdata = void 0), 
            options.hasOwnProperty("fileobject") && (options.data = options.fileobject, options.processData = !1, 
            options.contentType = !1, options.fileobject = void 0), function(done) {
                options.url = url, options.success = function(data, status, xhr) {
                    cb(null, data, status, xhr), done();
                }, options.error = function(xhr, status, error) {
                    cb(createError(xhr, url, options), null, status, xhr), done();
                }, $.ajax(options);
            };
        }
        function createUrl(template, context) {
            return template.replace(/\{([^\}]+)\}/g, function(param, key) {
                var queries = [];
                if ("?" === key.charAt(0)) return key.substr(1).split(",").forEach(function(subkey) {
                    if (subkey in context) {
                        var type = typeof context[subkey];
                        "string" === type || "number" === type || "boolean" === type ? queries.push(encodeURIComponent(subkey) + "=" + encodeURIComponent(context[subkey])) : Array.isArray(context[subkey]) && context[subkey].forEach(function(value) {
                            queries.push(encodeURIComponent(subkey) + "=" + encodeURIComponent(value));
                        });
                    }
                }), 0 === queries.length ? "" : "?" + queries.join("&");
                if (context[key]) {
                    if ("string" == typeof context[key]) return encodeURIComponent(context[key]);
                    if ("number" == typeof context[key]) return context[key];
                }
            });
        }
        function stringifyObservables(key, value) {
            return ko.isObservable(value) ? value() : value;
        }
        function Backend() {
            var that = this;
            CONFIG.auth.useOneComAuth ? $.cookie("MailAuth") ? that.authMethod = "standard" : that.authMethod = "authv2" : that.authMethod = "standard", 
            "authv2" === that.authMethod ? (that.cookie = "ou", that.cookieVersion = "1") : (that.cookie = "MailAuth", 
            that.cookieVersion = "5"), this.oldAuthRecentlyChangedPassword = "standard" === this.authMethod && !!$.cookie("nextMailAuth"), 
            that.cookieTimeout = 864e5, that.queue = queue(), that.syncQueue = queue(1), that.beforeUnloadConditions = [], 
            that.beforeUnloadHandler = new BeforeUnload(TR("common.OnBeforeUnload", "You have unsaved changes. Do you want to leave the page?"), that.beforeUnloadConditions);
        }
        function redirectTo(url, hashParams) {
            hashParams && (url += "#" + util.encodePairs(hashParams)), window.location.replace(url);
        }
        function redirectToLogin(specifySelfAsSuccessUrl) {
            if (CONFIG.auth.useOneComAuth) redirectTo("/api/auth/2/login" + (specifySelfAsSuccessUrl ? "?successUrl=" + encodeURIComponent(window.location.href) : "")); else {
                var hashParams = {}, windowLocationHostname = window.location.hostname;
                if ("webmail.one.com" === windowLocationHostname && (windowLocationHostname = "mail.one.com"), 
                specifySelfAsSuccessUrl) {
                    var search = window.location.search;
                    search ? search += "&login=1" : search = "?login=1", hashParams.successUrl = window.location.protocol + "//" + windowLocationHostname + (window.location.port ? ":" + window.location.port : "") + window.location.pathname + search;
                }
                if ("mail.one.com" !== windowLocationHostname && (hashParams.loginUrl = window.location.protocol + "//" + windowLocationHostname + (window.location.port ? ":" + window.location.port : "") + "/api/auth/1/login"), 
                window.location.pathname.length > 4) {
                    var hashParts = window.location.pathname.substring(1).split("/");
                    /^(calendar|contacts|settings)$/.test(hashParts[0]) && hashParts.shift(), hashParams.username = hashParts.shift(), 
                    validation.email.test(hashParams.username) || delete hashParams.username;
                }
                var rt = encodeURIComponent("RGV0IGVyIG1pZyBkZXIgc3TDpXIgaGVydWRlIG9nIGJhbmtlciBww6UKb2cgYmVkZXIgZGlnIG9tIGF0IHByw7h2ZSBhdCBmb3JzdMOlCmplZyBreXNzZWRlIGhlbmRlIGt1biBww6UgaGVuZGVzIGtpbmQKc2lnIGF0IGRldCBlciBva2F5IG9nIGx1ayBtaWcgaW5k"), st = encodeURIComponent("TmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAKTmV2ZXIgZ29ubmEgbGV0IHlvdSBkb3duCk5ldmVyIGdvbm5hIHJ1biBhcm91bmQgYW5kIGRlc2VydCB5b3UKTmV2ZXIgZ29ubmEgbWFrZSB5b3UgY3J5Ck5ldmVyIGdvbm5hIHNheSBnb29kYnllCk5ldmVyIGdvbm5hIHRlbGwgYSBsaWUgYW5kIGh1cnQgeW91");
                redirectTo(CONFIG.auth.loginUrl + "?rt=" + rt + "&st=" + st, hashParams);
            }
        }
        var winInetMapping = {
            12002: 503,
            12007: 0,
            12017: 503,
            12019: 0,
            12029: 503,
            12030: 503,
            12031: 503,
            12152: 500,
            342: 502,
            343: 503,
            444: 404
        };
        Backend.prototype.hasAuthentication = function() {
            var cookie = $.cookie(this.cookie);
            return cookie && "" !== cookie.trim();
        }, Backend.prototype.logout = function(userInitialized) {
            function performLogoutRedirection() {
                $.cookie(that.cookie, "", {
                    path: "/",
                    expires: -1
                }), CONFIG.auth.useOneComAuth && "authv2" === that.authMethod ? userInitialized ? redirectTo("/api/auth/2/logout") : redirectToLogin() : redirectToLogin(!0);
            }
            var that = this;
            userInitialized ? that.beforeUnloadHandler.confirmedIfNecessary(performLogoutRedirection) : (that.beforeUnloadConditions.length = 0, 
            performLogoutRedirection());
        }, Backend.prototype.redirectIfNotAuthenticated = function() {
            return !this.hasAuthentication() && (redirectToLogin(!0), !0);
        }, Backend.prototype.refreshLogin = function() {
            redirectToLogin(!0);
        }, Backend.prototype.redirectToUpgradePage = function() {
            redirectTo("/upgrade", {
                successUrl: window.location.href
            });
        }, Backend.prototype.getAuthenticationData = function() {
            var that = this, data = null, payload = null, cookie = $.cookie(that.cookie);
            return "authv2" === that.authMethod ? cookie && "" !== cookie.trim() ? cookie = JSON.parse(decodeURIComponent(cookie)) : null : cookie && "" !== cookie.trim() && 3 === (cookie = cookie.split("|")).length && cookie[0] === that.cookieVersion ? (data = cookie[2].split(":").map(window.atob), 
            payload = data[1].split(";"), {
                user: data[0],
                expires: parseInt(payload[0], 10) + that.cookieTimeout
            }) : void 0;
        }, Backend.prototype.listFolders = function(username, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/", {
                username: username
            });
            that.queue.defer(createRequest(url, callback));
        }, Backend.prototype.getInbox = function(username, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/?inbox=true", {
                username: username
            });
            that.queue.defer(createRequest(url, callback));
        }, Backend.prototype.createFolder = function(username, folderName, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/{folderName}/", {
                username: username,
                folderName: folderName
            });
            that.queue.defer(createRequest(url, {
                type: "PUT"
            }, callback));
        }, Backend.prototype.deleteFolder = function(username, folderName, folderUidValidity, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/{folderName}/{folderUidValidity}/", {
                username: username,
                folderName: folderName,
                folderUidValidity: folderUidValidity
            });
            that.queue.defer(createRequest(url, {
                type: "DELETE"
            }, callback));
        }, Backend.prototype.emptyFolder = function(username, folderName, folderUidValidity, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/{folderName}/" + ("number" == typeof folderUidValidity ? "{folderUidValidity}/" : ""), {
                username: username,
                folderName: folderName,
                folderUidValidity: folderUidValidity
            });
            that.queue.defer(createRequest(url, {
                type: "POST",
                data: JSON.stringify({
                    action: "empty"
                }),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.moveMails = function(username, folderName, folderUidValidity, destFolderName, uids, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/{folderName}/{folderUidValidity}/", {
                username: username,
                folderName: folderName,
                folderUidValidity: folderUidValidity
            });
            that.queue.defer(createRequest(url, {
                type: "POST",
                data: JSON.stringify({
                    action: "move",
                    dest: destFolderName,
                    uids: uids
                }),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.getMailPart = function(username, folderName, folderUidValidity, uid, part, headers, allowExternalImages, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/{folderName}/{folderUidValidity}/{uid}/{part}{?headers,allowexternalimages}", {
                username: username,
                folderName: folderName,
                folderUidValidity: folderUidValidity,
                uid: uid,
                part: part,
                headers: headers,
                allowexternalimages: allowExternalImages
            });
            that.queue.defer(createRequest(url, callback));
        }, Backend.prototype.renameFolder = function(username, folderName, folderUidValidity, destFolderName, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/{folderName}/{folderUidValidity}/", {
                username: username,
                folderName: folderName,
                folderUidValidity: folderUidValidity
            });
            that.queue.defer(createRequest(url, {
                type: "POST",
                data: JSON.stringify({
                    action: "rename",
                    dest: destFolderName
                }),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.deleteMails = function(username, folderName, folderUidValidity, uids, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/{folderName}/{folderUidValidity}/", {
                username: username,
                folderName: folderName,
                folderUidValidity: folderUidValidity
            });
            that.queue.defer(createRequest(url, {
                type: "POST",
                data: JSON.stringify({
                    action: "del",
                    uids: uids
                }),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.removeFlags = function(username, folderName, folderUidValidity, uids, flags, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/{folderName}/{folderUidValidity}/flags", {
                username: username,
                folderName: folderName,
                folderUidValidity: folderUidValidity
            });
            that.syncQueue.defer(createRequest(url, {
                type: "DELETE",
                data: JSON.stringify({
                    uids: uids,
                    flags: flags
                }),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.addFlags = function(username, folderName, folderUidValidity, uids, flags, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/{folderName}/{folderUidValidity}/flags", {
                username: username,
                folderName: folderName,
                folderUidValidity: folderUidValidity
            });
            that.syncQueue.defer(createRequest(url, {
                type: "PUT",
                data: JSON.stringify({
                    uids: uids,
                    flags: flags
                }),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.queryFolder = function(username, folderName, folderUidValidity, sortExpression, filters, searchWord, first, last, headers, callback) {
            var that = this, url = createUrl("/api/{username}/mail/1/{folderName}/{folderUidValidity}/{?sort,dir,filter,search,first,last,headers}", {
                username: username,
                folderName: folderName,
                folderUidValidity: folderUidValidity,
                first: first,
                last: last,
                sort: sortExpression && sortExpression.map(function(e) {
                    return Object.keys(e)[0];
                }) || [],
                dir: sortExpression && sortExpression.map(function(e) {
                    return e[Object.keys(e)[0]];
                }) || [],
                filter: filters,
                search: searchWord,
                headers: headers
            });
            that.queue.defer(createRequest(url, callback));
        }, Backend.prototype.resyncFolder = function(username, folderName, folderUidValidity, resync, headers, callback) {
            var url = createUrl("/api/{username}/mail/1/{folderName}/{folderUidValidity}/{?headers,resync}", {
                username: username,
                folderName: folderName,
                folderUidValidity: folderUidValidity,
                resync: resync,
                headers: headers
            });
            this.queue.defer(createRequest(url, callback));
        }, Backend.prototype.getContactsAndGroups = function(username, callback) {
            var that = this, url = createUrl("/api/{username}/contacts/2/", {
                username: username
            });
            that.queue.defer(createRequest(url, function(err, data) {
                err || migrateContactsCityToLocality(data), callback(err, data);
            }));
        }, Backend.prototype.getContactStubsAndGroups = function(username, callback) {
            var that = this, url = createUrl("/api/{username}/contacts/2/?stubs=true", {
                username: username
            });
            that.queue.defer(createRequest(url, function(err, data) {
                err || migrateContactsCityToLocality(data), callback(err, data);
            }));
        }, Backend.prototype.getContactOrGroup = function(username, identifier, callback) {
            var that = this, url = createUrl("/api/{username}/contacts/2/{identifier}", {
                username: username,
                identifier: identifier
            });
            that.queue.defer(createRequest(url, callback));
        }, Backend.prototype.saveContactsOrGroups = function(username, contacts, callback) {
            var that = this, data = {};
            if (Array.isArray(contacts)) {
                contacts.forEach(function(contact) {
                    contact.id = contact.id || util.uuid(), data[contact.id] = contact;
                });
                var url = createUrl("/api/{username}/contacts/2/", {
                    username: username
                });
                that.queue.defer(createRequest(url, {
                    type: "POST",
                    data: JSON.stringify(data),
                    contentType: "application/json"
                }, function(err, responseObj) {
                    if (err) return callback(err);
                    callback(null, responseObj);
                }));
            }
        }, Backend.prototype.saveContactOrGroup = function(username, contact, callback) {
            var that = this;
            contact.id = contact.id || util.uuid();
            var url = createUrl("/api/{username}/contacts/2/{identifier}", {
                username: username,
                identifier: contact.id
            });
            that.queue.defer(createRequest(url, {
                type: "PUT",
                data: JSON.stringify(contact),
                contentType: "application/json"
            }, function(err, responseObj) {
                if (err) return callback(err);
                callback(null, responseObj._rev, responseObj.id);
            }));
        }, Backend.prototype.deleteContactOrGroup = function(username, identifier, callback) {
            var that = this, url = createUrl("/api/{username}/contacts/2/{identifier}", {
                username: username,
                identifier: identifier
            });
            that.queue.defer(createRequest(url, {
                type: "DELETE"
            }, callback));
        }, Backend.prototype.deleteContactsOrGroups = function(username, contacts, callback) {
            var that = this, data = contacts.map(function(contact) {
                return {
                    id: ko.utils.unwrapObservable(contact.id),
                    _rev: ko.utils.unwrapObservable(contact._rev)
                };
            }), url = createUrl("/api/{username}/contacts/2/", {
                username: username
            });
            that.queue.defer(createRequest(url, {
                type: "DELETE",
                data: JSON.stringify(data),
                contentType: "application/json"
            }, function(err, responseObj) {
                if (err) return callback(err);
                callback(null, responseObj);
            }));
        }, Backend.prototype.importContactFile = function(username, file, callback) {
            var url = createUrl("/api/{username}/contacts/2/?format=csv", {
                username: username
            });
            this.queue.defer(createRequest(url, {
                type: "POST",
                fileobject: file
            }, function(err, result) {
                if (err) return callback(err);
                callback(null, result);
            }));
        }, Backend.prototype.importContactData = function(username, importData, callback) {
            var url = createUrl("/api/{username}/contacts/2/?format=csv", {
                username: username
            });
            this.queue.defer(createRequest(url, {
                type: "POST",
                data: JSON.stringify(importData),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.countAutocompletions = function(username, callback) {
            var url = createUrl("/api/{username}/autocomplete/1/count", {
                username: username
            });
            this.queue.defer(createRequest(url, callback));
        }, Backend.prototype.saveAutocompletions = function(username, recipients, callback) {
            var url = createUrl("/api/{username}/autocomplete/1/", {
                username: username
            });
            this.queue.defer(createRequest(url, {
                type: "POST",
                data: JSON.stringify({
                    recipients: recipients
                }),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.queryAutocompletions = function(username, searchQuery, callback) {
            var url = createUrl("/api/{username}/autocomplete/1/0/8/?query={query}", {
                username: username,
                query: searchQuery
            });
            this.queue.defer(createRequest(url, callback));
        }, Backend.prototype.fetchAutocompletions = function(username, page, query, order, callback) {
            var pageStart = page * CONFIG.webmail.autocompleter.pageSize, params = {
                username: username,
                pageStart: pageStart + "",
                pageEnd: pageStart + CONFIG.webmail.autocompleter.pageSize + "",
                order: order
            }, urlTemplate = "/api/{username}/autocomplete/1/{pageStart}/{pageEnd}/?order={order}";
            query && (params.query = query.toLowerCase(), urlTemplate += "&query={query}");
            var url = createUrl(urlTemplate, params);
            this.queue.defer(createRequest(url, callback));
        }, Backend.prototype.deleteAutocompletions = function(username, emails, callback) {
            var url = createUrl("/api/{username}/autocomplete/1/", {
                username: username
            });
            this.queue.defer(createRequest(url, {
                type: "DELETE",
                data: JSON.stringify({
                    emails: emails
                }),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.setAddOnProductCoolOffCookie = function(username) {
            this.hasAddOnProductCoolOffCookie() || $.cookie("addonProductBlocker/" + username, !0, {
                path: "/",
                expires: 2
            });
        }, Backend.prototype.hasAddOnProductCoolOffCookie = function(username) {
            return !!$.cookie("addonProductBlocker/" + username);
        }, Backend.prototype.savePreference = function(username, namespace, preference, callback) {
            var that = this, tmpl = namespace ? "/api/{username}/preferences/1/{namespace}" : "/api/{username}/preferences/1/", context = {
                username: username
            };
            namespace && (context.namespace = namespace);
            var url = createUrl(tmpl, context);
            that.queue.defer(createRequest(url, {
                type: "PUT",
                data: JSON.stringify(preference, stringifyObservables),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.saveFilterData = function(username, filterData, rollbackData, callback) {
            var that = this, url = createUrl("/api/{username}/filters/3/", {
                username: username
            });
            that.syncQueue.defer(createRequest(url, {
                type: "PUT",
                data: JSON.stringify({
                    filterData: filterData,
                    rollbackData: rollbackData
                }),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.getFilterData = function(username, callback) {
            var that = this, url = createUrl("/api/{username}/filters/1/", {
                username: username
            });
            that.syncQueue.defer(createRequest(url, function(err, result) {
                err ? callback(err) : callback(null, result.filterData || {
                    blocked: [],
                    filters: []
                });
            }));
        }, Backend.prototype.uploadSignatureImage = function(username, preferenceId, imageId, preferenceRev, file, callback) {
            var url;
            url = preferenceRev ? createUrl("/api/{username}/preferences/1/{preferenceId}/photo/{imageId}?_rev={rev}", {
                username: username,
                preferenceId: preferenceId,
                rev: preferenceRev,
                imageId: imageId
            }) : createUrl("/api/{username}/preferences/1/{preferenceId}/photo/{imageId}", {
                username: username,
                preferenceId: preferenceId,
                imageId: imageId
            }), this.queue.defer(createRequest(url, {
                data: file,
                contentType: file.type,
                processData: !1,
                type: "PUT"
            }, callback));
        }, Backend.prototype.copyImageFromMailToSignature = function(username, folder, uidvalidity, uid, partId, photoId, preferenceId, preferenceRev, callback) {
            var url = createUrl("/api/{username}/mail/1/{folderName}/{uidvalidity}/", {
                username: username,
                folderName: folder,
                uidvalidity: uidvalidity
            });
            this.syncQueue.defer(createRequest(url, {
                type: "POST",
                data: JSON.stringify({
                    action: "copyMailPartToPreferences",
                    uid: uid,
                    part: partId,
                    preferenceId: preferenceId,
                    photoId: photoId,
                    _rev: preferenceRev
                }),
                contentType: "application/json"
            }, callback));
        };
        var defaultPreferences = {
            global: {
                id: "global",
                locale: "en_US",
                country: "GB",
                displayName: null,
                timeZone: "Europe/London",
                weekStart: 1,
                weekendStart: 6,
                weekNumbering: "firstFourDayWeek"
            },
            mail: {
                id: "mail",
                replyTo: null,
                signature: null,
                showUIUpdate: 0,
                showIntroScreen: !0
            },
            trustedSenders: {
                id: "trustedSenders",
                sources: []
            },
            calendar: {
                id: "calendar",
                defaultView: "week"
            }
        };
        return Backend.prototype.getPreferences = function(username, namespaces, callback) {
            var that = this, url = createUrl("/api/{username}/preferences/1/{?id}", {
                id: namespaces,
                username: username
            });
            that.queue.defer(createRequest(url, function(err, result) {
                if (err) return callback(err);
                namespaces.forEach(function(namespace) {
                    result[namespace] || (result[namespace] = {}, defaultPreferences[namespace] && util.extend(result[namespace], defaultPreferences[namespace]));
                }), result.global && ("number" != typeof result.global.weekStart && (result.global.weekStart = 1), 
                "number" != typeof result.global.weekendStart && (result.global.weekStart = 6), 
                "string" != typeof result.global.weekNumbering && (result.global.weekNumbering = "firstFourDayWeek")), 
                callback(null, result);
            }));
        }, Backend.prototype.saveMail = function(username, folder, outgoingMail, callback) {
            function sendCallback(err, response) {
                one.crashLogger.log("Backend.sendMail: response"), err ? err = createError(err, url, {
                    type: "POST"
                }) : one.crashLogger.log("Backend.sendMail: success!"), callback(err, response);
            }
            one.crashLogger.log("Backend.sendMail start");
            var headers = outgoingMail.headers, attachments = outgoingMail.attachments, emailHeader = {};
            [ "from", "to", "cc", "bcc", "replyTo", "subject", "deleteOtherEmailUponSuccess", "draftInfo", "flags", "date" ].forEach(function(field) {
                headers[field] && ("replyTo" !== field || validation.email.test(headers[field].email)) && (emailHeader[field] = headers[field]);
            }), [ "inReplyTo", "references" ].forEach(function(field) {
                /^[ -~]+$/.test(headers[field]) && (emailHeader[field] = headers[field]);
            }), emailHeader.numPrimaryParts = 2, emailHeader.hasAttachments = !!attachments.length;
            var folderUidValidity = folder.uidvalidity(), url = "/api/{username}/mail/1/{folderName}";
            "number" == typeof folderUidValidity && (url += "/{folderUidValidity}"), url += "{?headers}";
            var urlParameters = {
                username: username,
                folderName: folder.id(),
                folderUidValidity: folderUidValidity,
                headers: [ "References", "X-OneCom-Draft-Info" ]
            };
            one.crashLogger.log("Backend.sendMail: request"), url = createUrl(url, urlParameters);
            var formData = new FormData();
            formData.append("headers", JSON.stringify(emailHeader)), void 0 !== outgoingMail.text ? formData.append(encodeURIComponent(JSON.stringify({
                type: "primary",
                contentType: "text/plain",
                id: 1
            })), outgoingMail.text) : (formData.append(encodeURIComponent(JSON.stringify({
                type: "primary",
                contentType: "text/plain",
                id: 1
            })), htmlEmailToText.htmlEmailToText(outgoingMail.html)), formData.append(encodeURIComponent(JSON.stringify({
                type: "primary",
                contentType: "text/html",
                id: 2
            })), outgoingMail.html), outgoingMail.newRelated && outgoingMail.newRelated.forEach(function(related) {
                formData.append(related.input.name, related.input.files[0], related.displayName);
            })), attachments.forEach(function(attachment, index) {
                attachment.justAdded ? formData.append(attachment.input.name, attachment.input.files[0], attachment.input.value.replace(/^.*[\/\\]/, "")) : formData.append(encodeURIComponent(JSON.stringify({
                    type: "attachment",
                    id: attachment.id,
                    isExisting: !0
                })), JSON.stringify({
                    folderName: attachment.mail.folder().id(),
                    uid: attachment.mail.uid,
                    part: attachment.part
                }));
            }), this.queue.defer(createRequest(url, {
                formdata: formData,
                type: "POST"
            }, sendCallback));
        }, Backend.prototype.sendMail = function(username, mail, callback) {
            function proceed() {
                var c = that.c, s = 0;
                !function solveAndSend() {
                    for (var count = 100; --count > 0; ) if (s += 1, /^00/.test(sha256hex(c + String(s)))) {
                        var url = createUrl("/api/{username}/mail/1/{folderName}/{uidvalidity}/{uid}?s={s}", {
                            username: username,
                            folderName: mail.folder().id(),
                            uidvalidity: mail.folder().uidvalidity(),
                            uid: mail.uid,
                            s: s
                        });
                        return void that.queue.defer(createRequest(url, {
                            type: "POST",
                            contentType: "application/json"
                        }, callback));
                    }
                    setTimeout(solveAndSend, 25);
                }();
            }
            var that = this;
            that.cAt > Date.now() - 9e5 ? proceed() : that.getTtl(proceed);
        }, Backend.prototype.migrateLangCookie = function() {
            var MailLang = $.cookie("MailLang"), OneLang = $.cookie("OneLang");
            if (MailLang && ($.cookie("MailLang", null), !OneLang)) {
                var hostname = location.hostname, cookieDomain = "";
                return "localhost" !== hostname && (cookieDomain = "." + hostname.split(".").splice(-2, 2).join(".")), 
                $.cookie("OneLang", MailLang, {
                    expires: 730,
                    path: "/",
                    domain: cookieDomain
                }), document.location.reload(!0), !0;
            }
            return !1;
        }, Backend.prototype.getMailAccountSettings = function(username, callback) {
            var that = this, url = createUrl("/api/{username}/account/1/", {
                username: username
            });
            that.queue.defer(createRequest(url, callback));
        }, Backend.prototype.saveMailAccountSettings = function(username, accountData, callback) {
            var that = this, url = createUrl("/api/{username}/account/1/", {
                username: username
            });
            that.queue.defer(createRequest(url, {
                type: "POST",
                data: JSON.stringify(accountData),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.getTimeZone = function(username, tzid, callback) {
            this.queue.defer(createRequest(timeZoneAssetUrlGetter(tzid), {}, callback));
        }, Backend.prototype.getCalendars = function(username, filter, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/2/own/{?events,start,end}", util.extend(filter, {
                username: username,
                events: !0
            }));
            that.queue.defer(createRequest(url, callback));
        }, Backend.prototype.getCalendar = function(username, calendarId, options, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/2/own/{calendarId}/{?events}", util.extend({
                username: username,
                events: !1,
                calendarId: calendarId
            }, options));
            that.queue.defer(createRequest(url, callback));
        }, Backend.prototype.saveCalendarResource = function(username, calendarId, resource, data, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/1/own/{calendarId}/components/{resourceId}", {
                username: username,
                calendarId: calendarId,
                resourceId: resource.id
            }), headers = {};
            resource.etag && (headers["If-Match"] = resource.etag), that.queue.defer(createRequest(url, {
                type: "PUT",
                data: data,
                contentType: "text/calendar",
                headers: headers
            }, function(err, data, status, xhr) {
                callback(err, {
                    headers: {
                        etag: !err && xhr.getResponseHeader("ETag")
                    }
                });
            }));
        }, Backend.prototype.deleteCalendarResource = function(username, calendarId, resource, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/1/own/{calendarId}/components/{resourceId}", {
                username: username,
                calendarId: calendarId,
                resourceId: resource.id
            });
            that.queue.defer(createRequest(url, {
                type: "DELETE"
            }, function(err, data, status, xhr) {
                callback(err);
            }));
        }, Backend.prototype.saveCalendar = function(username, calendarId, data, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/1/own/{calendarId}", {
                username: username,
                calendarId: calendarId
            });
            that.queue.defer(createRequest(url, {
                type: "POST",
                data: JSON.stringify(data),
                contentType: "application/json"
            }, function(err, data, status, xhr) {
                callback(err);
            }));
        }, Backend.prototype.createCalendar = function(username, calendarId, data, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/1/own/{calendarId}", {
                username: username,
                calendarId: calendarId
            });
            that.queue.defer(createRequest(url, {
                type: "PUT",
                data: JSON.stringify(data),
                contentType: "application/json"
            }, function(err, data, status, xhr) {
                callback(err);
            }));
        }, Backend.prototype.deleteCalendar = function(username, calendarId, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/1/own/{calendarId}", {
                username: username,
                calendarId: calendarId
            });
            that.queue.defer(createRequest(url, {
                type: "DELETE"
            }, function(err, data, status, xhr) {
                callback(err);
            }));
        }, Backend.prototype.importCalendarFile = function(username, calendarId, file, callback) {
            var url = createUrl("/api/{username}/calendars/1/own/{calendarId}/ics/", {
                username: username,
                calendarId: calendarId
            }), formData = new FormData();
            formData.append("icalfile", file), this.queue.defer(createRequest(url, {
                type: "POST",
                fileobject: formData,
                contentType: !1
            }, function(err, result) {
                if (err) return callback(err);
                callback(null, result);
            }));
        }, Backend.prototype.getTtl = function(callback) {
            var that = this, url = createUrl("/api/session/1");
            that.queue.defer(createRequest(url, {
                type: "GET"
            }, function(err, data, status, xhr) {
                data && (that.c = data.c, that.cAt = Date.now()), callback(err, data && data.ttl);
            }));
        }, Backend.prototype.exportCalendar = function(username, calendarId, filename, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/1/own/{calendarId}/ics/{filename}", {
                username: username,
                calendarId: calendarId,
                filename: filename
            });
            that.queue.defer(createRequest(url, {
                type: "GET"
            }, function(err, data, status, xhr) {
                callback(err, data), location.href = url;
            }));
        }, Backend.prototype.getExternalCalendar = function(urlOrToken, callback) {
            var that = this, url = createUrl("/api/externalCalendars/2/{urlOrToken}", {
                urlOrToken: urlOrToken
            });
            that.queue.defer(createRequest(url, callback));
        }, Backend.prototype.getCalendarSharedLinks = function(username, calendarId, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/1/publications/{calendarId}", {
                username: username,
                calendarId: calendarId
            });
            that.queue.defer(createRequest(url, {
                type: "GET"
            }, function(err, data, status, xhr) {
                callback(err, data);
            }));
        }, Backend.prototype.createCalendarSharedLink = function(username, calendarId, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/1/publications/{calendarId}", {
                username: username,
                calendarId: calendarId
            }), data = {
                method: "create",
                params: {
                    calendarId: calendarId,
                    permanent: !1,
                    active: !0
                }
            };
            that.queue.defer(createRequest(url, {
                type: "POST",
                data: JSON.stringify(data),
                contentType: "application/json"
            }, function(err, data, status, xhr) {
                callback(err, data);
            }));
        }, Backend.prototype.updateCalendarSharedLink = function(username, calendarId, linkId, data, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/1/publications/{calendarId}/{linkId}", {
                username: username,
                calendarId: calendarId,
                linkId: linkId
            }), postData = {
                method: "update",
                params: {
                    id: linkId,
                    calendarId: calendarId,
                    permanent: !1,
                    active: data && (!data.hasOwnProperty("active") || data.active),
                    comment: data && data.comment
                }
            };
            that.queue.defer(createRequest(url, {
                type: "PUT",
                data: JSON.stringify(postData),
                contentType: "application/json"
            }, function(err, data, status, xhr) {
                callback(err, data);
            }));
        }, Backend.prototype.deleteCalendarSharedLink = function(username, calendarId, linkId, callback) {
            var that = this, url = createUrl("/api/{username}/calendars/1/publications/{calendarId}/{linkId}", {
                username: username,
                calendarId: calendarId,
                linkId: linkId
            }), data = {
                method: "destroy",
                params: {
                    id: linkId
                }
            };
            that.queue.defer(createRequest(url, {
                type: "DELETE",
                data: JSON.stringify(data),
                contentType: "application/json"
            }, function(err, data, status, xhr) {
                callback(err, data);
            }));
        }, Backend.prototype.addTrustedSender = function(username, sender, callback) {
            var that = this, url = createUrl("/api/{username}/trusted_senders/1/", {
                username: username
            });
            that.queue.defer(createRequest(url, {
                type: "POST",
                data: JSON.stringify(sender),
                contentType: "application/json"
            }, callback));
        }, Backend.prototype.queryAddOnProduct = function(username, productName, callback) {
            var that = this, url = createUrl("/api/{username}/addOnProducts/1/{productName}", {
                username: username,
                productName: productName
            });
            that.queue.defer(createRequest(url, callback));
        }, Backend.prototype.activateAddOnProduct = function(username, productName, callback) {
            var that = this, url = createUrl("/api/{username}/addOnProducts/1/{productName}/activate", {
                username: username,
                productName: productName
            });
            that.queue.defer(createRequest(url, {
                type: "POST"
            }, callback));
        }, Backend.prototype.deactivateAddOnProduct = function(username, productName, callback) {
            var that = this, url = createUrl("/api/{username}/addOnProducts/1/{productName}/deactivate", {
                username: username,
                productName: productName
            });
            that.queue.defer(createRequest(url, {
                type: "POST"
            }, callback));
        }, TraceLogging.injectTracing(Backend), Backend;
    });
}(), System.registerDynamic("locale", [], !0, function($__require, exports, module) {
    this || self;
    var localeId = function() {
        function normalizeLocaleId(localeId) {
            return localeId && localeId.replace(/-/g, "_").toLowerCase();
        }
        var documentElement = document && document.documentElement, documentElementLang = documentElement && normalizeLocaleId(documentElement.getAttribute("lang"));
        if (documentElementLang) return documentElementLang;
        if (window.location && location.href) {
            var matchLocationHref = location.href.match(/\?(?:|[^#]*&)locale=([\w\-_]+)(?:[&#]|$)/);
            if (matchLocationHref) return normalizeLocaleId(matchLocationHref[1]);
        }
        var matchLocaleCookieValue = document.cookie && document.cookie.match(/\bOneLang=([\w-]+)/);
        return matchLocaleCookieValue ? normalizeLocaleId(matchLocaleCookieValue[1]) : window.navigator && navigator.language && "C" !== navigator.language ? normalizeLocaleId(navigator.language) : "en_us";
    }();
    return "undefined" != typeof document && document.documentElement && localeId !== document.documentElement.getAttribute("lang") && document.documentElement.setAttribute("lang", localeId), 
    module.exports = localeId, module.exports;
}), function() {
    (0, System.amdDefine)("common/LocaleSwitcher.js", [ "locale", "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "3rdparty/jquery.cookie.js" ], function(currentLocaleId, $, ko, util) {
        function LocaleSwitcher(supportedLocaleIds) {
            var that = this;
            that.localeMap = {}, supportedLocaleIds && supportedLocaleIds.length > 0 && (that.localeInfos = that.localeInfos.filter(function(locale) {
                return -1 !== supportedLocaleIds.indexOf(locale.id);
            }), that.localeInfos.forEach(function(locale) {
                that.localeMap[locale.id] = locale.displayName;
            }));
        }
        return LocaleSwitcher.prototype.switchLocale = function(localeId) {
            if (localeId !== currentLocaleId) {
                var hostname = location.hostname, cookieDomain = "";
                "localhost" !== hostname && (cookieDomain = "." + hostname.split(".").splice(-2, 2).join(".")), 
                $.cookie("OneLang", localeId, {
                    expires: 730,
                    path: "/",
                    domain: cookieDomain
                }), document.location.reload(!0);
            }
        }, LocaleSwitcher.prototype.localeInfos = [ {
            id: "cs",
            displayName: "Čeština"
        }, {
            id: "da",
            displayName: "Dansk"
        }, {
            id: "de",
            displayName: "Deutsch"
        }, {
            id: "en_gb",
            displayName: "English (UK)"
        }, {
            id: "en_us",
            displayName: "English (US)"
        }, {
            id: "es",
            displayName: "Español"
        }, {
            id: "fr",
            displayName: "Français"
        }, {
            id: "it",
            displayName: "Italiano"
        }, {
            id: "nl",
            displayName: "Nederlands"
        }, {
            id: "nb",
            displayName: "Norsk"
        }, {
            id: "pl",
            displayName: "Polski"
        }, {
            id: "pt",
            displayName: "Português (Portugal)"
        }, {
            id: "pt_br",
            displayName: "Português (Brasil)"
        }, {
            id: "ru",
            displayName: "Pусский"
        }, {
            id: "sv",
            displayName: "Svenska"
        }, {
            id: "fi",
            displayName: "Suomi"
        } ], LocaleSwitcher.prototype.getLanguage = function(localeId) {
            return this.localeInfos.filter(function(info) {
                return info.id === localeId;
            })[0];
        }, LocaleSwitcher;
    });
}(), function() {
    (0, System.amdDefine)("common/ViewBehavior.js", [], function() {
        return {
            installInto: function(target) {
                if (!target.actionExecutor) throw new Error("ViewBehavior requires an action executor");
                if (!target.errorHandler) throw new Error("ViewBehavior requires an error handler");
                target.executeAction = function() {
                    this.actionExecutor.enqueue.apply(this.actionExecutor, arguments);
                }, target.handleError = function() {
                    this.errorHandler.handleError.apply(this.errorHandler, arguments);
                };
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("common/actions/LoadPreferencesAction.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "common/ActionBehavior.js" ], function(ko, util, ActionBehavior) {
        function LoadPreferencesAction(options) {
            util.extend(this, {
                retries: 1
            }, util.pick(options, "retries")), ActionBehavior.installInto(this);
        }
        return LoadPreferencesAction.prototype.name = "LoadPreferencesAction", LoadPreferencesAction.prototype.models = function(context) {
            return context.state.preferences;
        }, LoadPreferencesAction.prototype.execute = function(context, cb) {
            var that = this, state = context.state, backend = context.backend;
            that.setBusyFlags();
            var namespaces = [ "global", "mail", "trustedSenders", "calendar" ].filter(function(namespace) {
                return ko.isObservable(state.preferences[namespace]);
            });
            backend.getPreferences(state.user(), namespaces, function(err, data) {
                that.removeBusyFlags(), err || namespaces.forEach(function(namespace) {
                    state.preferences[namespace](data[namespace]);
                }), cb(err);
            });
        }, LoadPreferencesAction;
    });
}(), function() {
    (0, System.amdDefine)("common/EASAdministrationView.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], function(ko) {
        function EASAdministrationView(options) {
            this.state = options.state, this.backend = options.backend, this.loading = ko.observable(!0), 
            this.failed = ko.observable(!1), this.active = ko.observable(!1), this.currencyCode = ko.observable(), 
            this.currencyFactor = ko.observable(), this.price = ko.observable(), this.includeVat = ko.observable(), 
            this.startTime = ko.observable(), this.state.preferences[PRODUCT_NAME] = ko.observable({});
        }
        function updatePreferences(err, data) {
            err || (this.active(data.active), this.currencyCode(data.currencyCode), this.currencyFactor(data.currencyFactor), 
            this.price(data.price), this.includeVat(data.includeVat), this.startTime(data.startTime), 
            this.state.preferences[PRODUCT_NAME](data), this.loading(!1));
        }
        var PRODUCT_NAME = "EAS";
        return EASAdministrationView.prototype.init = function(callback) {
            var user = this.state.user();
            this.execute(function() {
                var preferences = this.state.preferences[PRODUCT_NAME]();
                this.active(preferences.active), this.currencyCode(preferences.currencyCode), this.currencyFactor(preferences.currencyFactor), 
                this.price(preferences.price), this.includeVat(preferences.includeVat), this.startTime(preferences.startTime), 
                this.active.subscribe(function(active) {
                    this.loading(!0), active ? this.backend.activateAddOnProduct(user, PRODUCT_NAME, updatePreferences.bind(this)) : this.backend.deactivateAddOnProduct(user, PRODUCT_NAME, updatePreferences.bind(this));
                }, this), "function" == typeof callback && callback();
            });
        }, EASAdministrationView.prototype.start = function() {
            this.loading(!0), this.backend.activateAddOnProduct(this.state.user(), PRODUCT_NAME, updatePreferences.bind(this));
        }, EASAdministrationView.prototype.loadData = function() {
            this.loading(!1);
        }, EASAdministrationView.prototype.execute = function(callback) {
            var that = this;
            this.backend.queryAddOnProduct(that.state.user(), PRODUCT_NAME, function(err, data) {
                err || that.state.preferences[PRODUCT_NAME](data), "function" == typeof callback && callback.call(that);
            });
        }, EASAdministrationView;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "function" == typeof define && define.amd ? define("3rdparty/mousetrap-domain.js", [ "3rdparty/mousetrap.js" ], factory) : root.amdWeb = factory(root.Mousetrap);
    }(this, function(Mousetrap) {
        function _domainKeyHandler(key) {
            return function(event, combo) {
                if (_currentDomain && _domainCallbacks[_currentDomain] && _domainCallbacks[_currentDomain][key]) return _domainCallbacks[_currentDomain][key](event, combo);
            };
        }
        function _keyUnused(key) {
            return Object.keys(_domainCallbacks).every(function(domain) {
                return !_domainCallbacks[domain][key];
            });
        }
        var _currentDomain = null, _domainCallbacks = {}, _oldReset = Mousetrap.prototype.reset;
        return Mousetrap.prototype.reset = function() {
            _currentDomain = null, _domainCallbacks = {}, _oldReset.apply(this, arguments);
        }, Mousetrap.prototype.setDomain = function(name) {
            _currentDomain = name;
        }, Mousetrap.prototype.bindDomain = function(domains, keys, handlerFunc) {
            var that = this;
            "string" == typeof domains && (domains = [ domains ]), "string" == typeof keys && (keys = [ keys ]), 
            keys.forEach(function(key) {
                _keyUnused(key) && that.bind(key, _domainKeyHandler(key));
            }), domains.forEach(function(domain) {
                _domainCallbacks[domain] || (_domainCallbacks[domain] = {}), keys.forEach(function(key) {
                    _domainCallbacks[domain][key] = handlerFunc;
                });
            });
        }, Mousetrap.prototype.unbindDomain = function(domains, keys) {
            var that = this;
            "string" == typeof domains && (domains = [ domains ]), "string" == typeof keys && (keys = [ keys ]), 
            domains.forEach(function(domain) {
                keys.forEach(function(key) {
                    delete _domainCallbacks[domain][key];
                }), 0 === Object.keys(_domainCallbacks[domain]).length && delete _domainCallbacks[domain];
            }), keys.forEach(function(key) {
                _keyUnused(key) && that.unbind(key);
            });
        }, Mousetrap.init(), Mousetrap;
    });
}(), function() {
    var define = System.amdDefine;
    !function(window, document, undefined) {
        function _addEvent(object, type, callback) {
            if (object.addEventListener) return void object.addEventListener(type, callback, !1);
            object.attachEvent("on" + type, callback);
        }
        function _characterFromEvent(e) {
            if ("keypress" == e.type) {
                var character = String.fromCharCode(e.which);
                return e.shiftKey || (character = character.toLowerCase()), character;
            }
            return _MAP[e.which] ? _MAP[e.which] : _KEYCODE_MAP[e.which] ? _KEYCODE_MAP[e.which] : String.fromCharCode(e.which).toLowerCase();
        }
        function _modifiersMatch(modifiers1, modifiers2) {
            return modifiers1.sort().join(",") === modifiers2.sort().join(",");
        }
        function _eventModifiers(e) {
            var modifiers = [];
            return e.shiftKey && modifiers.push("shift"), e.altKey && modifiers.push("alt"), 
            e.ctrlKey && modifiers.push("ctrl"), e.metaKey && modifiers.push("meta"), modifiers;
        }
        function _preventDefault(e) {
            if (e.preventDefault) return void e.preventDefault();
            e.returnValue = !1;
        }
        function _stopPropagation(e) {
            if (e.stopPropagation) return void e.stopPropagation();
            e.cancelBubble = !0;
        }
        function _isModifier(key) {
            return "shift" == key || "ctrl" == key || "alt" == key || "meta" == key;
        }
        function _getReverseMap() {
            if (!_REVERSE_MAP) {
                _REVERSE_MAP = {};
                for (var key in _MAP) key > 95 && key < 112 || _MAP.hasOwnProperty(key) && (_REVERSE_MAP[_MAP[key]] = key);
            }
            return _REVERSE_MAP;
        }
        function _pickBestAction(key, modifiers, action) {
            return action || (action = _getReverseMap()[key] ? "keydown" : "keypress"), "keypress" == action && modifiers.length && (action = "keydown"), 
            action;
        }
        function _keysFromString(combination) {
            return "+" === combination ? [ "+" ] : (combination = combination.replace(/\+{2}/g, "+plus")).split("+");
        }
        function _getKeyInfo(combination, action) {
            var keys, key, i, modifiers = [];
            for (keys = _keysFromString(combination), i = 0; i < keys.length; ++i) key = keys[i], 
            _SPECIAL_ALIASES[key] && (key = _SPECIAL_ALIASES[key]), action && "keypress" != action && _SHIFT_MAP[key] && (key = _SHIFT_MAP[key], 
            modifiers.push("shift")), _isModifier(key) && modifiers.push(key);
            return action = _pickBestAction(key, modifiers, action), {
                key: key,
                modifiers: modifiers,
                action: action
            };
        }
        function _belongsTo(element, ancestor) {
            return element !== document && (element === ancestor || _belongsTo(element.parentNode, ancestor));
        }
        function Mousetrap(targetElement) {
            function _resetSequences(doNotReset) {
                doNotReset = doNotReset || {};
                var key, activeSequences = !1;
                for (key in _sequenceLevels) doNotReset[key] ? activeSequences = !0 : _sequenceLevels[key] = 0;
                activeSequences || (_nextExpectedAction = !1);
            }
            function _getMatches(character, modifiers, e, sequenceName, combination, level) {
                var i, callback, matches = [], action = e.type;
                if (!self._callbacks[character]) return [];
                for ("keyup" == action && _isModifier(character) && (modifiers = [ character ]), 
                i = 0; i < self._callbacks[character].length; ++i) if (callback = self._callbacks[character][i], 
                (sequenceName || !callback.seq || _sequenceLevels[callback.seq] == callback.level) && action == callback.action && ("keypress" == action && !e.metaKey && !e.ctrlKey || _modifiersMatch(modifiers, callback.modifiers))) {
                    var deleteCombo = !sequenceName && callback.combo == combination, deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;
                    (deleteCombo || deleteSequence) && self._callbacks[character].splice(i, 1), matches.push(callback);
                }
                return matches;
            }
            function _fireCallback(callback, e, combo, sequence) {
                self.stopCallback(e, e.target || e.srcElement, combo, sequence) || !1 === callback(e, combo) && (_preventDefault(e), 
                _stopPropagation(e));
            }
            function _handleKeyEvent(e) {
                "number" != typeof e.which && (e.which = e.keyCode);
                var character = _characterFromEvent(e);
                if (character) return "keyup" == e.type && _ignoreNextKeyup === character ? void (_ignoreNextKeyup = !1) : void self.handleKey(character, _eventModifiers(e), e);
            }
            function _resetSequenceTimer() {
                clearTimeout(_resetTimer), _resetTimer = setTimeout(_resetSequences, 1e3);
            }
            function _bindSequence(combo, keys, callback, action) {
                function _callbackAndReset(e) {
                    _fireCallback(callback, e, combo), "keyup" !== action && (_ignoreNextKeyup = _characterFromEvent(e)), 
                    setTimeout(_resetSequences, 10);
                }
                _sequenceLevels[combo] = 0;
                for (var i = 0; i < keys.length; ++i) {
                    var wrappedCallback = i + 1 === keys.length ? _callbackAndReset : function(nextAction) {
                        return function() {
                            _nextExpectedAction = nextAction, ++_sequenceLevels[combo], _resetSequenceTimer();
                        };
                    }(action || _getKeyInfo(keys[i + 1]).action);
                    _bindSingle(keys[i], wrappedCallback, action, combo, i);
                }
            }
            function _bindSingle(combination, callback, action, sequenceName, level) {
                self._directMap[combination + ":" + action] = callback;
                var info, sequence = (combination = combination.replace(/\s+/g, " ")).split(" ");
                if (sequence.length > 1) return void _bindSequence(combination, sequence, callback, action);
                info = _getKeyInfo(combination, action), self._callbacks[info.key] = self._callbacks[info.key] || [], 
                _getMatches(info.key, info.modifiers, {
                    type: info.action
                }, sequenceName, combination, level), self._callbacks[info.key][sequenceName ? "unshift" : "push"]({
                    callback: callback,
                    modifiers: info.modifiers,
                    action: info.action,
                    seq: sequenceName,
                    level: level,
                    combo: combination
                });
            }
            var self = this;
            if (targetElement = targetElement || document, !(self instanceof Mousetrap)) return new Mousetrap(targetElement);
            self.target = targetElement, self._callbacks = {}, self._directMap = {};
            var _resetTimer, _sequenceLevels = {}, _ignoreNextKeyup = !1, _ignoreNextKeypress = !1, _nextExpectedAction = !1;
            self._handleKey = function(character, modifiers, e) {
                var i, callbacks = _getMatches(character, modifiers, e), doNotReset = {}, maxLevel = 0, processedSequenceCallback = !1;
                for (i = 0; i < callbacks.length; ++i) callbacks[i].seq && (maxLevel = Math.max(maxLevel, callbacks[i].level));
                for (i = 0; i < callbacks.length; ++i) if (callbacks[i].seq) {
                    if (callbacks[i].level != maxLevel) continue;
                    processedSequenceCallback = !0, doNotReset[callbacks[i].seq] = 1, _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);
                } else processedSequenceCallback || _fireCallback(callbacks[i].callback, e, callbacks[i].combo);
                var ignoreThisKeypress = "keypress" == e.type && _ignoreNextKeypress;
                e.type != _nextExpectedAction || _isModifier(character) || ignoreThisKeypress || _resetSequences(doNotReset), 
                _ignoreNextKeypress = processedSequenceCallback && "keydown" == e.type;
            }, self._bindMultiple = function(combinations, callback, action) {
                for (var i = 0; i < combinations.length; ++i) _bindSingle(combinations[i], callback, action);
            }, _addEvent(targetElement, "keypress", _handleKeyEvent), _addEvent(targetElement, "keydown", _handleKeyEvent), 
            _addEvent(targetElement, "keyup", _handleKeyEvent);
        }
        for (var _REVERSE_MAP, _MAP = {
            8: "backspace",
            9: "tab",
            13: "enter",
            16: "shift",
            17: "ctrl",
            18: "alt",
            20: "capslock",
            27: "esc",
            32: "space",
            33: "pageup",
            34: "pagedown",
            35: "end",
            36: "home",
            37: "left",
            38: "up",
            39: "right",
            40: "down",
            45: "ins",
            46: "del",
            91: "meta",
            93: "meta",
            224: "meta"
        }, _KEYCODE_MAP = {
            106: "*",
            107: "+",
            109: "-",
            110: ".",
            111: "/",
            186: ";",
            187: "=",
            188: ",",
            189: "-",
            190: ".",
            191: "/",
            192: "`",
            219: "[",
            220: "\\",
            221: "]",
            222: "'"
        }, _SHIFT_MAP = {
            "~": "`",
            "!": "1",
            "@": "2",
            "#": "3",
            $: "4",
            "%": "5",
            "^": "6",
            "&": "7",
            "*": "8",
            "(": "9",
            ")": "0",
            _: "-",
            "+": "=",
            ":": ";",
            '"': "'",
            "<": ",",
            ">": ".",
            "?": "/",
            "|": "\\"
        }, _SPECIAL_ALIASES = {
            option: "alt",
            command: "meta",
            return: "enter",
            escape: "esc",
            plus: "+",
            mod: /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? "meta" : "ctrl"
        }, i = 1; i < 20; ++i) _MAP[111 + i] = "f" + i;
        for (i = 0; i <= 9; ++i) _MAP[i + 96] = i;
        Mousetrap.prototype.bind = function(keys, callback, action) {
            var self = this;
            return keys = keys instanceof Array ? keys : [ keys ], self._bindMultiple.call(self, keys, callback, action), 
            self;
        }, Mousetrap.prototype.unbind = function(keys, action) {
            var self = this;
            return self.bind.call(self, keys, function() {}, action);
        }, Mousetrap.prototype.trigger = function(keys, action) {
            var self = this;
            return self._directMap[keys + ":" + action] && self._directMap[keys + ":" + action]({}, keys), 
            self;
        }, Mousetrap.prototype.reset = function() {
            var self = this;
            return self._callbacks = {}, self._directMap = {}, self;
        }, Mousetrap.prototype.stopCallback = function(e, element) {
            var self = this;
            return !((" " + element.className + " ").indexOf(" mousetrap ") > -1) && (!_belongsTo(element, self.target) && ("INPUT" == element.tagName || "SELECT" == element.tagName || "TEXTAREA" == element.tagName || element.isContentEditable));
        }, Mousetrap.prototype.handleKey = function() {
            var self = this;
            return self._handleKey.apply(self, arguments);
        }, Mousetrap.init = function() {
            var documentMousetrap = Mousetrap(document);
            for (var method in documentMousetrap) "_" !== method.charAt(0) && (Mousetrap[method] = function(method) {
                return function() {
                    return documentMousetrap[method].apply(documentMousetrap, arguments);
                };
            }(method));
        }, Mousetrap.init(), window.Mousetrap = Mousetrap, "undefined" != typeof module && module.exports && (module.exports = Mousetrap), 
        "function" == typeof define && define.amd && define("3rdparty/mousetrap.js", [], function() {
            return Mousetrap;
        });
    }(window, document);
}(), function() {
    (0, System.amdDefine)("common/mousetrap-globalize.js", [ "3rdparty/mousetrap.js" ], function(Mousetrap) {
        var _globalCallbacks = {}, _oldStopCallback = Mousetrap.prototype.stopCallback;
        Mousetrap.prototype.stopCallback = function(e, element, combo, sequence) {
            var that = this;
            return !!that.paused || !_globalCallbacks[combo] && !_globalCallbacks[sequence] && _oldStopCallback.call(that, e, element, combo);
        }, Mousetrap.prototype.globalize = function(keys) {
            if (Array.isArray(keys)) return void keys.forEach(function(key) {
                _globalCallbacks[key] = !0;
            });
            _globalCallbacks[keys] = !0;
        }, Mousetrap.init();
    });
}(), function() {
    (0, System.amdDefine)("common/KeyHandler.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "3rdparty/mousetrap-domain.js", "common/mousetrap-globalize.js" ], function(ko, Mousetrap) {
        function KeyHandler() {
            function mousedownHandler(event) {
                handlingMousedown = !0;
                var targetDomain = that.findDomainContaining(event.target), focusIsInDomain = !!document.activeElement && targetDomain === that.findDomainContaining(document.activeElement);
                setTimeout(function() {
                    (that.isLockingFocus(targetDomain) || !focusWasReset && !focusIsInDomain) && that.focusDomain(targetDomain), 
                    focusWasReset = !1, handlingMousedown = !1;
                }, 0);
            }
            function focusHandler(event) {
                if (event.target !== document.body || document.body.hasAttribute("data-keydomain")) {
                    handlingMousedown && (focusWasReset = !0);
                    var targetDomain = that.findDomainContaining(event.target);
                    targetDomain !== currentDomain && (that.focusDomain(targetDomain, !0), lastFocused = event.target);
                }
            }
            var that = this, currentDomain = null, allDomains = {}, defaultDomain = null;
            that.getDomain = function(domain) {
                return allDomains[domain];
            }, that.listDomains = function() {
                return Object.keys(allDomains);
            }, that.getCurrentDomain = function() {
                return currentDomain;
            }, that.getCurrentDomainElement = function() {
                return currentDomain ? allDomains[currentDomain] : null;
            }, that.addDomain = function(domain, element) {
                if (allDomains[domain]) throw new Error("Cannot add already existing domain " + domain);
                allDomains[domain] = element, currentDomain === domain && this.focusDomain(domain);
            }, that.removeDomain = function(domain) {
                allDomains[domain] && (currentDomain === domain && that.focusDomain(defaultDomain), 
                delete allDomains[domain]);
            };
            var lastFocused;
            that.setDefaultDomain = function(domainName) {
                defaultDomain = domainName, that.focusDomain(domainName);
            }, that.isLockingFocus = function(domainName) {
                return !(!allDomains[domainName] || !allDomains[domainName].focusLock);
            }, that.focusDomain = function(domainName, noDomFocus) {
                if ("---" !== domainName) {
                    var domain = allDomains[domainName];
                    domain || (domain = (domainName = defaultDomain) ? allDomains[domainName] : null);
                    var element;
                    if (lastFocused && (lastFocused !== document.body && lastFocused.blur(), lastFocused = null), 
                    currentDomain = domainName, domain) if ("string" != typeof domain.focus || !domain.focusLock && noDomFocus) {
                        if (!noDomFocus) if (domain.element.setActive) try {
                            domain.element.setActive();
                        } catch (e) {} else domain.element.focus();
                    } else if (element = domain.element, domain.focus.length > 0 && (element = element.querySelector(domain.focus)), 
                    element) {
                        if (element.setActive) try {
                            element.setActive();
                        } catch (e) {} else element.focus();
                        lastFocused = element;
                    }
                    mousetrap.setDomain(currentDomain);
                }
            }, that.findDomainContaining = function(element) {
                return element.hasAttribute("data-keydomain") ? element.getAttribute("data-keydomain") : element !== document.body && element.parentElement ? that.findDomainContaining(element.parentElement) : null;
            };
            var keybinds = {}, lastId = 0;
            that.register = function(domains, keys, handlerFunction) {
                2 === arguments.length && (handlerFunction = keys, keys = domains, domains = null);
                var id = lastId;
                return lastId += 1, keybinds[id] = {
                    keys: keys,
                    domains: domains
                }, domains ? mousetrap.bindDomain(domains, keys, handlerFunction) : mousetrap.bind(keys, handlerFunction), 
                id;
            }, that.unregister = function(handlerId) {
                var identity = keybinds[handlerId];
                identity.domains ? mousetrap.unbindDomain(identity.domains, identity.keys) : mousetrap.unbind(identity.keys);
            }, that.globalize = function(combo) {
                mousetrap.globalize(combo);
            }, that.trigger = function(combo) {
                mousetrap.trigger(combo);
            };
            var handlingMousedown = !1, focusWasReset = !1;
            document.body.addEventListener("mousedown", mousedownHandler, !0), document.body.addEventListener("focus", focusHandler, !0), 
            that.removeListeners = function() {
                document.body.removeEventListener("mousedown", mousedownHandler, !0), document.body.removeEventListener("focus", focusHandler, !0);
            };
        }
        function getInstance() {
            return instance || (instance = new KeyHandler()), instance;
        }
        function makeDomain(element, firstFocus, lock) {
            var domain = {
                element: element
            };
            return "string" == typeof firstFocus && (domain.focus = firstFocus, lock && (domain.focusLock = !0)), 
            domain;
        }
        var instance, mousetrap = new Mousetrap(document);
        return KeyHandler.prototype.reset = function() {
            instance && (instance.removeListeners(), instance = null, mousetrap.reset(), mousetrap = new Mousetrap(document));
        }, ko.bindingHandlers.keybindDomain = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                var name, firstFocus, focusLock, keyhandler = getInstance(), value = valueAccessor();
                if ("string" == typeof value) name = value; else {
                    if ("object" != typeof value || !value.name) throw new Error("keybindDomain must have a name.");
                    name = value.name, firstFocus = value.firstFocus, focusLock = value.lock;
                }
                element.setAttribute("data-keydomain", name), element.hasAttribute("tabindex") || -1 === [ "INPUT", "BUTTON", "TEXTAREA", "SELECT" ].indexOf(element.nodeName) || element.setAttribute("tabindex", "-1"), 
                keyhandler.addDomain(name, makeDomain(element, firstFocus, focusLock)), value.noDispose || ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                    keyhandler.removeDomain(name);
                });
            }
        }, getInstance;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/passError.js", [], factory) : root.passError = factory();
    }(this, function() {
        return function(errorCallback, successCallback) {
            if ("function" != typeof errorCallback || "function" != typeof successCallback) throw new Error("passError: Two function arguments required");
            var called = !1;
            return function(err) {
                if (called) throw new Error("passError: The callback was called again with " + (err ? err.stack : "no error"));
                called = !0, err ? errorCallback(err) : successCallback.apply(this, [].slice.call(arguments, 1));
            };
        };
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/LoadCalendarsAction.js", [ "3rdparty/async.js", "common/util.js", "3rdparty/passError.js", "calendar/model/Calendar.js", "calendar/ical/Time.js", "calendar/ical/TimeZone.js", "3rdparty/insection.js", "common/ActionBehavior.js", "calendar/actions/FormatSanitationAction.js" ], function(async, util, passError, Calendar, Time, TimeZone, insection, ActionBehavior, FormatSanitationAction) {
        function LoadCalendarsAction(options) {
            util.extend(this, util.pick(options, "startDate", "endDate")), ActionBehavior.installInto(this);
        }
        return LoadCalendarsAction.prototype.name = "LoadCalendarsAction", LoadCalendarsAction.prototype.models = function(context) {
            return [ context.state.calendars ];
        }, LoadCalendarsAction.prototype.validate = function() {
            if (!this.startDate || !this.endDate) throw new Error("LoadCalendarsActions requires a startDate and an endDate");
        }, LoadCalendarsAction.prototype.execute = function(context, cb) {
            var that = this, state = context.state, backend = context.backend, start = this.startDate.convertToZone(TimeZone.utcTimeZone), end = this.endDate.convertToZone(TimeZone.utcTimeZone);
            start.isDate = !1, end.isDate = !1;
            var gaps = state.cacheIndex.getGaps(start.toUnixTime(), end.toUnixTime());
            that.setBusyFlags(), async.mapLimit(gaps, 2, function(gap, next) {
                var start = new Time();
                start.fromUnixTime(gap.start);
                var end = new Time();
                end.fromUnixTime(gap.end);
                var filter = {
                    start: start.toICALString(),
                    end: end.toICALString()
                };
                backend.getCalendars(state.user(), filter, passError(next, function(data) {
                    var calendarTasks = (data.calendars || []).map(function(calendarData) {
                        return function(taskCallback) {
                            new FormatSanitationAction({
                                calendarData: calendarData
                            }).execute(context, function(err, sanitizedCalendarData) {
                                if (err) return taskCallback(err);
                                taskCallback(null, sanitizedCalendarData);
                            });
                        };
                    });
                    async.parallelLimit(calendarTasks, 2, function(err, results) {
                        if (err) return next(err);
                        next(null, {
                            start: start,
                            end: end,
                            data: {
                                calendars: results
                            }
                        });
                    });
                }));
            }, passError(cb, function(results) {
                that.removeBusyFlags(), state.calendars.version.pause(), results.forEach(function(result) {
                    var remoteCalendars = result.data.calendars || [], remoteCalendarIndex = util.uniqueIndexBy(remoteCalendars, function(calendarData) {
                        return calendarData.id;
                    });
                    state.calendars.all().forEach(function(calendar) {
                        calendar.extern || remoteCalendarIndex[calendar.id] || state.calendars.remove(calendar);
                    }), remoteCalendars.forEach(function(calendarData) {
                        var calendar = state.calendars.get(calendarData.id);
                        calendar ? calendar.update(result.start, result.end, calendarData) : state.calendars.add(new Calendar(calendarData, state.timeZone));
                    }), state.cacheIndex.add(start.toUnixTime(), end.toUnixTime(), null);
                }), state.calendars.version.resume(!0), cb();
            }));
        }, LoadCalendarsAction;
    });
}(), function() {
    var define = System.amdDefine;
    !function(e) {
        if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define("3rdparty/insection.js", [], e); else {
            var o;
            "undefined" != typeof window ? o = window : "undefined" != typeof global ? o = global : "undefined" != typeof self && (o = self);
            var n = o;
            (n = (n = n.com || (n.com = {})).one || (n.one = {})).insection = e();
        }
    }(function() {
        return function e(t, n, r) {
            function s(o, u) {
                if (!n[o]) {
                    if (!t[o]) {
                        var a = "function" == typeof require && require;
                        if (!u && a) return a(o, !0);
                        if (i) return i(o, !0);
                        var f = new Error("Cannot find module '" + o + "'");
                        throw f.code = "MODULE_NOT_FOUND", f;
                    }
                    var l = n[o] = {
                        exports: {}
                    };
                    t[o][0].call(l.exports, function(e) {
                        var n = t[o][1][e];
                        return s(n || e);
                    }, l, l.exports, e, t, n, r);
                }
                return n[o].exports;
            }
            for (var i = "function" == typeof require && require, o = 0; o < r.length; o++) s(r[o]);
            return s;
        }({
            1: [ function(require, module, exports) {
                function augmenter(value, x, y) {
                    var interval = value.interval;
                    if (!x && !y) return interval;
                    var minStart = interval, maxEnd = interval;
                    return x && (x.start < minStart.start || x.start === minStart.start && minStart.isStartOpen()) && (minStart = x), 
                    x && (x.end > maxEnd.end || x.end === maxEnd.end && maxEnd.isEndOpen()) && (maxEnd = x), 
                    y && (y.end > maxEnd.end || y.end === maxEnd.end && maxEnd.isEndOpen()) && (maxEnd = y), 
                    Interval.create(minStart.startString, minStart.start, maxEnd.end, maxEnd.endString);
                }
                function defaultValueComparer(x, y) {
                    return x < y ? -1 : x > y ? 1 : 0;
                }
                function intervalComparer(x, y) {
                    return x.start < y.start ? -1 : x.start > y.start ? 1 : x.end < y.end ? -1 : x.end > y.end ? 1 : !x.isStartOpen() && y.isStartOpen() ? -1 : x.isStartOpen() && !y.isStartOpen() ? 1 : !x.isEndOpen() && y.isEndOpen() ? -1 : x.isEndOpen() && !y.isEndOpen() ? 1 : 0;
                }
                function Insection(valueComparer) {
                    if (!(this instanceof Insection)) return new Insection(valueComparer);
                    valueComparer = valueComparer || defaultValueComparer, this.data = new RedBlackTree(function(x, y) {
                        var c = intervalComparer(x.interval, y.interval);
                        return 0 !== c ? c : valueComparer(x.value, y.value);
                    }, augmenter);
                }
                function pointsOrder(a, b) {
                    if (a.point < b.point) return -1;
                    if (a.point > b.point) return 1;
                    if (a.isOpen || b.isOpen) {
                        if (a.isStart && b.isEnd) return 1;
                        if (a.isEnd && b.isStart) return -1;
                    } else {
                        if (a.isStart && b.isEnd) return -1;
                        if (a.isEnd && b.isStart) return 1;
                    }
                    if (a.isStart) {
                        if (a.isOpen && !b.isOpen) return 1;
                        if (!a.isOpen && b.isOpen) return -1;
                    } else {
                        if (a.isOpen && !b.isOpen) return -1;
                        if (!a.isOpen && b.isOpen) return 1;
                    }
                    return 0;
                }
                function unique(points) {
                    return points.reduce(function(result, point) {
                        return 0 !== result.length && 0 === pointsOrder(result[result.length - 1], point) || result.push(point), 
                        result;
                    }, []);
                }
                function isInfinite(value) {
                    return value === 1 / 0 || value === -1 / 0;
                }
                require(3);
                var Interval = require(2), RedBlackTree = require(4);
                Insection.interval = function(startString, start, end, endString) {
                    return 1 === arguments.length ? arguments[0] instanceof Interval ? arguments[0] : Insection.interval("[", arguments[0], arguments[0], "]") : 2 === arguments.length ? Insection.interval("[", arguments[0], arguments[1], "]") : Interval.create(startString, start, end, endString);
                }, Insection.prototype.interval = function() {
                    return Insection.interval.apply(null, arguments);
                }, Insection.prototype.isEmpty = function() {
                    return this.data.isEmpty();
                }, Insection.prototype.add = function() {
                    var data = this.data, intervalArgs = Array.prototype.slice.call(arguments, 0, -1), interval = Insection.interval.apply(null, intervalArgs), value = arguments[arguments.length - 1];
                    return data.add({
                        interval: interval,
                        value: value
                    }), this;
                }, Insection.prototype.remove = function() {
                    var data = this.data, intervalArgs = Array.prototype.slice.call(arguments, 0, -1), interval = Insection.interval.apply(null, intervalArgs), value = arguments[arguments.length - 1];
                    return data.remove({
                        interval: interval,
                        value: value
                    }), this;
                }, Insection.prototype.contains = function() {
                    var interval = Insection.interval.apply(null, arguments);
                    return !this.data.isEmpty() && (!!interval.intersect(this.data.root.hierarchicalData) && null !== this.data.find(function(value) {
                        return intervalComparer(interval, value.interval);
                    }));
                }, Insection.prototype.forEachEntry = function() {
                    var intervalArgs = Array.prototype.slice.call(arguments, 0, -1), callback = arguments[arguments.length - 1], interval = 0 === intervalArgs.length ? {
                        intersect: function() {
                            return !0;
                        }
                    } : Insection.interval.apply(null, intervalArgs), root = this.data.root, queue = [];
                    for (root && queue.push(root); queue.length; ) {
                        var node = queue.pop();
                        if (interval.intersect(node.value.interval)) {
                            var result = callback.call(null, node.value);
                            if (void 0 !== result) return result;
                        }
                        var left = node.left;
                        left && interval.intersect(left.hierarchicalData) && queue.push(left);
                        var right = node.right;
                        right && interval.intersect(right.hierarchicalData) && queue.push(right);
                    }
                }, Insection.prototype.getEntries = function() {
                    var result = [], args = Array.prototype.slice.call(arguments);
                    return args.push(function(value) {
                        result.push(value);
                    }), this.forEachEntry.apply(this, args), result;
                }, Insection.prototype.get = function() {
                    return this.getEntries.apply(this, arguments).map(function(entry) {
                        return entry.value;
                    });
                }, Insection.prototype.getIntervals = function() {
                    return this.getEntries.apply(this, arguments).map(function(entry) {
                        return entry.interval;
                    });
                }, Insection.prototype.getIntersection = function() {
                    if (0 === arguments.length) return this.getIntervals();
                    var queryInterval = Insection.interval.apply(null, arguments);
                    return this.getIntervals(queryInterval).map(function(interval) {
                        return queryInterval.getIntersection(interval);
                    });
                }, Insection.prototype.getGaps = function() {
                    var queryInterval = Insection.interval.apply(null, arguments), intervals = new Insection(), points = [ {
                        point: queryInterval.start,
                        isStart: !0,
                        isOpen: queryInterval.isStartOpen()
                    }, {
                        point: queryInterval.end,
                        isEnd: !0,
                        isOpen: queryInterval.isEndOpen()
                    } ];
                    this.getIntersection(queryInterval).forEach(function(interval) {
                        points.push({
                            point: interval.start,
                            isEnd: !0,
                            isOpen: !interval.isStartOpen()
                        }), points.push({
                            point: interval.end,
                            isStart: !0,
                            isOpen: !interval.isEndOpen()
                        }), intervals.add(interval, interval);
                    }), points = unique(points.sort(pointsOrder));
                    var lastStart, result = [];
                    return (points = points.filter(function(point) {
                        if (point.point === -1 / 0 || point.point === 1 / 0) return !0;
                        var expectedNumberOfIntervals = point.isOpen ? 1 : 0, i = 0;
                        return !intervals.forEachEntry(point.point, function(entry) {
                            if (expectedNumberOfIntervals === i) return !0;
                            i += 1;
                        });
                    })).forEach(function(endPoint) {
                        endPoint.isStart ? lastStart = endPoint : lastStart && (lastStart.point === endPoint.point && (isInfinite(lastStart.point) || lastStart.isOpen && endPoint.isOpen) || result.push(Insection.interval(lastStart.isOpen ? "(" : "[", lastStart.point, endPoint.point, endPoint.isOpen ? ")" : "]")), 
                        lastStart = null);
                    }), result;
                }, module.exports = Insection;
            }, {} ],
            2: [ function(require, module, exports) {
                function isFinite(value) {
                    return value !== 1 / 0 && value !== -1 / 0;
                }
                function Interval(start, end) {
                    this.start = start, this.end = end;
                }
                function ensureValidInterval(startString, start, end, endString) {
                    var startType = typeof start;
                    if (startType !== typeof end || "number" !== startType && "string" !== startType || start > end) throw new InvalidIntervalError(startString, start, end, endString);
                    var intervalEndRequirement = intervalEndRequirements[startString + endString];
                    if (!intervalEndRequirement || !intervalEndRequirement(start, end)) throw new InvalidIntervalError(startString, start, end, endString);
                }
                function endPointToInt(text) {
                    return "Infinity" === text ? 1 / 0 : "-Infinity" === text ? -1 / 0 : text.match(/^-?\d+$/) ? parseInt(text, 10) : text;
                }
                function OpenOpenInterval(start, end) {
                    Interval.call(this, start, end), this.startString = "(", this.endString = ")";
                }
                function OpenClosedInterval(start, end) {
                    Interval.call(this, start, end), this.startString = "(", this.endString = "]";
                }
                function ClosedOpenInterval(start, end) {
                    Interval.call(this, start, end), this.startString = "[", this.endString = ")";
                }
                function ClosedClosedInterval(start, end) {
                    Interval.call(this, start, end), this.startString = "[", this.endString = "]";
                }
                var InvalidIntervalError = require(3), intervalEndRequirements = {
                    "[]": function(start, end) {
                        return isFinite(start) && isFinite(end);
                    },
                    "(]": function(start, end) {
                        return isFinite(end);
                    },
                    "[)": function(start, end) {
                        return isFinite(start);
                    },
                    "()": function(start, end) {
                        return !0;
                    }
                };
                Interval.create = function(startString, start, end, endString) {
                    switch (ensureValidInterval(startString, start, end, endString), startString + endString) {
                      case "[]":
                        return new ClosedClosedInterval(start, end);

                      case "[)":
                        return new ClosedOpenInterval(start, end);

                      case "(]":
                        return new OpenClosedInterval(start, end);

                      case "()":
                        return new OpenOpenInterval(start, end);
                    }
                }, Interval.fromString = function(text) {
                    var m = text.match(/^([\[\(])([^;]+);\s?([^\]\)]+)([\]\)])$/);
                    if (m) {
                        var start = endPointToInt(m[2]), end = endPointToInt(m[3]);
                        return Interval.create(m[1], start, end, m[4]);
                    }
                    throw new Error('Could not parse "' + text + '" as an interval');
                }, Interval.prototype.toString = function(detailed) {
                    return detailed ? "Insection.interval('" + this.startString + "'," + this.start + "," + this.end + ",'" + this.endString + "')" : this.startString + this.start + ";" + this.end + this.endString;
                }, Interval.prototype.intersect = function(other) {
                    return !(this.end < other.start || this.start > other.end || this.end === other.start && (this.isEndOpen() || other.isStartOpen()) || this.start === other.end && (this.isStartOpen() || other.isEndOpen()));
                }, Interval.prototype.getIntersection = function(other) {
                    var startPoint = this.start > other.start ? this : other, endPoint = this.end < other.end ? this : other;
                    return this.start === other.start && (startPoint = this.isStartOpen() ? this : other), 
                    this.end === other.end && (endPoint = this.isEndOpen() ? this : other), Interval.create(startPoint.isStartOpen() ? "(" : "[", startPoint.start, endPoint.end, endPoint.isEndOpen() ? ")" : "]");
                }, OpenOpenInterval.prototype = Object.create(Interval.prototype), OpenOpenInterval.prototype.isStartOpen = function() {
                    return !0;
                }, OpenOpenInterval.prototype.isEndOpen = function() {
                    return !0;
                }, OpenClosedInterval.prototype = Object.create(Interval.prototype), OpenClosedInterval.prototype.isStartOpen = function() {
                    return !0;
                }, OpenClosedInterval.prototype.isEndOpen = function() {
                    return !1;
                }, ClosedOpenInterval.prototype = Object.create(Interval.prototype), ClosedOpenInterval.prototype.isStartOpen = function() {
                    return !1;
                }, ClosedOpenInterval.prototype.isEndOpen = function() {
                    return !0;
                }, ClosedClosedInterval.prototype = Object.create(Interval.prototype), ClosedClosedInterval.prototype.isStartOpen = function() {
                    return !1;
                }, ClosedClosedInterval.prototype.isEndOpen = function() {
                    return !1;
                }, module.exports = Interval;
            }, {} ],
            3: [ function(require, module, exports) {
                function InvalidIntervalError(startString, start, end, endString) {
                    var argsString = [ startString, start, end, endString ].join(", "), error = Error.call(this, "Insection.interval was called with " + argsString + ' valid signatures are:\nInsection.interval(start,end)\nInsection.interval("[",start,end,"]")\nInsection.interval("[",start,end,")")\nInsection.interval("(",start,end,"]")\nInsection.interval("(",start,end,")")\nwhere start <= end.');
                    this.name = "InvalidIntervalError", this.message = error.message, this.stack = error.stack;
                }
                InvalidIntervalError.prototype = Object.create(Error.prototype), module.exports = InvalidIntervalError;
            }, {} ],
            4: [ function(require, module, exports) {
                function nodeColor(node) {
                    return null === node ? BLACK : node.color;
                }
                function Node(value) {
                    this.value = value, this.color = RED, this.left = null, this.right = null, this.parent = null;
                }
                function RedBlackTree(comparefn, augmenterfn) {
                    this.root = null, this.comparefn = comparefn, this.augmenterfn = augmenterfn, this.balancer = new Balancer(this);
                }
                function Balancer(tree) {
                    this.tree = tree;
                }
                var BLACK = "black", RED = "red";
                Node.prototype.grandparent = function() {
                    return null === this.parent ? null : this.parent.parent;
                }, Node.prototype.sibling = function() {
                    return null === this.parent ? null : this === this.parent.left ? this.parent.right : this.parent.left;
                }, Node.prototype.uncle = function() {
                    return null === this.parent ? null : this.parent.sibling();
                }, RedBlackTree.prototype.augmentNode = function(node) {
                    node.hierarchicalData = this.augmenterfn(node.value, node.left && node.left.hierarchicalData, node.right && node.right.hierarchicalData);
                }, RedBlackTree.prototype.augmentAncestors = function(node) {
                    for (node = node && node.parent; node; ) this.augmentNode(node), node = node.parent;
                }, RedBlackTree.prototype.augmentNodeAndAncestors = function(node) {
                    node && (this.augmentNode(node), this.augmentAncestors(node));
                }, RedBlackTree.prototype.isEmpty = function() {
                    return null === this.root;
                }, RedBlackTree.prototype.add = function(value) {
                    var newNode = new Node(value);
                    if (this.isEmpty()) this.root = newNode; else {
                        for (var node = this.root; ;) {
                            var c = this.comparefn(value, node.value);
                            if (c < 0) {
                                if (null === node.left) {
                                    node.left = newNode;
                                    break;
                                }
                                node = node.left;
                            } else {
                                if (!(0 < c)) return void (node.value = value);
                                if (null === node.right) {
                                    node.right = newNode;
                                    break;
                                }
                                node = node.right;
                            }
                        }
                        newNode.parent = node;
                    }
                    this.augmentNodeAndAncestors(newNode), this.balancer.inserted(newNode);
                }, RedBlackTree.prototype.findNode = function(navigator) {
                    for (var node = this.root; null !== node; ) {
                        var c = navigator(node);
                        if (c < 0) node = node.left; else {
                            if (!(0 < c)) return node;
                            node = node.right;
                        }
                    }
                    return null;
                }, RedBlackTree.prototype.find = function(navigator) {
                    var node = this.findNode(function(node) {
                        return navigator(node.value);
                    });
                    return node && node.value;
                }, RedBlackTree.prototype.remove = function(value) {
                    var comparefn = this.comparefn, node = this.findNode(function(node) {
                        return comparefn(value, node.value);
                    });
                    if (null !== node) {
                        if (null !== node.left && null !== node.right) {
                            for (var pred = node.left; null !== pred.right; ) pred = pred.right;
                            node.value = pred.value, node = pred;
                        }
                        this.augmentNodeAndAncestors(node);
                        var child = null === node.right ? node.left : node.right;
                        nodeColor(node) === BLACK && (node.color = nodeColor(child), this.balancer.deleted(node)), 
                        this.balancer.replaceNode(node, child), this.augmentNodeAndAncestors(child), nodeColor(this.root) === RED && (this.root.color = BLACK);
                    }
                }, Balancer.prototype.inserted = function(node) {
                    this.insertCase1(node);
                }, Balancer.prototype.deleted = function(node) {
                    this.deleteCase1(node);
                }, Balancer.prototype.replaceNode = function(original, replacement) {
                    null === original.parent ? this.tree.root = replacement : original === original.parent.left ? original.parent.left = replacement : original.parent.right = replacement, 
                    null !== replacement && (replacement.parent = original.parent);
                }, Balancer.prototype.rotateLeft = function(node) {
                    var right = node.right;
                    this.replaceNode(node, right), node.right = right.left, null !== right.left && (right.left.parent = node), 
                    right.left = node, node.parent = right, this.tree.augmentNodeAndAncestors(node);
                }, Balancer.prototype.rotateRight = function(node) {
                    var left = node.left;
                    this.replaceNode(node, left), node.left = left.right, null !== left.right && (left.right.parent = node), 
                    left.right = node, node.parent = left, this.tree.augmentNodeAndAncestors(node);
                }, Balancer.prototype.insertCase1 = function(node) {
                    null === node.parent ? node.color = BLACK : this.insertCase2(node);
                }, Balancer.prototype.insertCase2 = function(node) {
                    nodeColor(node.parent) !== BLACK && this.insertCase3(node);
                }, Balancer.prototype.insertCase3 = function(node) {
                    var uncle = node.uncle(), grandparent = node.grandparent();
                    null !== uncle && nodeColor(uncle) === RED ? (node.parent.color = BLACK, uncle.color = BLACK, 
                    grandparent.color = RED, this.insertCase1(grandparent)) : this.insertCase4(node);
                }, Balancer.prototype.insertCase4 = function(node) {
                    var grandparent = node.grandparent();
                    node === node.parent.right && node.parent === grandparent.left ? (this.rotateLeft(node.parent), 
                    node = node.left) : node === node.parent.left && node.parent === grandparent.right && (this.rotateRight(node.parent), 
                    node = node.right), this.insertCase5(node);
                }, Balancer.prototype.insertCase5 = function(node) {
                    var grandparent = node.grandparent();
                    node.parent.color = BLACK, grandparent.color = RED, node === node.parent.left && node.parent === grandparent.left ? this.rotateRight(grandparent) : node === node.parent.right && node.parent === grandparent.right && this.rotateLeft(grandparent);
                }, Balancer.prototype.deleteCase1 = function(node) {
                    null !== node.parent && this.deleteCase2(node);
                }, Balancer.prototype.deleteCase2 = function(node) {
                    var sibling = node.sibling();
                    nodeColor(sibling) === RED && (node.parent.color = RED, sibling.color = BLACK, node === node.parent.left ? this.rotateLeft(node.parent) : this.rotateRight(node.parent)), 
                    this.deleteCase3(node);
                }, Balancer.prototype.deleteCase3 = function(node) {
                    var sibling = node.sibling();
                    nodeColor(node.parent) === BLACK && nodeColor(sibling) === BLACK && nodeColor(sibling.left) === BLACK && nodeColor(sibling.right) === BLACK ? (sibling.color = RED, 
                    this.deleteCase1(node.parent)) : this.deleteCase4(node);
                }, Balancer.prototype.deleteCase4 = function(node) {
                    var sibling = node.sibling();
                    nodeColor(node.parent) === RED && nodeColor(sibling) === BLACK && nodeColor(sibling.left) === BLACK && nodeColor(sibling.right) === BLACK ? (sibling.color = RED, 
                    node.parent.color = BLACK) : this.deleteCase5(node);
                }, Balancer.prototype.deleteCase5 = function(node) {
                    var sibling = node.sibling();
                    node === node.parent.left && nodeColor(sibling) === BLACK && nodeColor(sibling.left) === RED && nodeColor(sibling.right) === BLACK ? (sibling.color = RED, 
                    sibling.left.color = BLACK, this.rotateRight(sibling)) : node === node.parent.right && nodeColor(sibling) === BLACK && nodeColor(sibling.right) === RED && nodeColor(sibling.left) === BLACK && (sibling.color = RED, 
                    sibling.right.color = BLACK, this.rotateLeft(sibling)), this.deleteCase6(node);
                }, Balancer.prototype.deleteCase6 = function(node) {
                    var sibling = node.sibling();
                    sibling.color = nodeColor(node.parent), node.parent.color = BLACK, node === node.parent.left ? (sibling.right.color = BLACK, 
                    this.rotateLeft(node.parent)) : (sibling.left.color = BLACK, this.rotateRight(node.parent));
                }, module.exports = RedBlackTree;
            }, {} ]
        }, {}, [ 1 ])(1);
    });
}(), function() {
    (0, System.amdDefine)("calendar/ical/Time.js", [ "3rdparty/ical.js" ], function(ical) {
        ical.Time.prototype.startOfDay = function() {
            var result = this.clone();
            return result.hour = 0, result.minute = 0, result.second = 0, result.isDate = !0, 
            result._normalize(), result;
        }, ical.Time.prototype.dayBefore = function() {
            var result = this.clone();
            return result.day -= 1, result.hour = 0, result.minute = 0, result.second = 0, result.isDate = !0, 
            result._normalize(), result;
        }, ical.Time.prototype.dayAfter = function() {
            var result = this.clone();
            return result.day += 1, result.hour = 0, result.minute = 0, result.second = 0, result.isDate = !0, 
            result._normalize(), result;
        }, ical.Time.weekStart = ical.Time.DEFAULT_WEEK_START, ical.Time.prototype.startOfWeek = function(aWeekStart) {
            var firstDow = ical.Time.weekStart || aWeekStart || ical.Time.SUNDAY, result = this.clone();
            return result.day -= (this.dayOfWeek() + 7 - firstDow) % 7, result.isDate = !0, 
            result.hour = 0, result.minute = 0, result.second = 0, result._normalize(), result;
        }, ical.Time.prototype.endOfWeek = function(aWeekStart) {
            var firstDow = ical.Time.weekStart || aWeekStart || ical.Time.SUNDAY, result = this.clone();
            return result.day += (7 - this.dayOfWeek() + firstDow - ical.Time.SUNDAY) % 7, result.isDate = !0, 
            result.hour = 0, result.minute = 0, result.second = 0, result._normalize(), result;
        }, ical.Time.prototype.dayOfWeekId = function() {
            var dayOfWeekNumber = this.dayOfWeek();
            return ical.Recur.numericDayToIcalDay(dayOfWeekNumber);
        };
        var addDuration = ical.Time.prototype.addDuration;
        return ical.Time.prototype.addDuration = function() {
            return addDuration.apply(this, arguments), this._normalize(), this;
        }, ical.Time.prototype.compareTz = function(other, tz) {
            var a = this.convertToZone(tz), b = other.convertToZone(tz);
            return a.compare(b);
        }, ical.Time.fromICALString = function(str) {
            return 8 === str.length ? ical.Time.fromData({
                year: ical.helpers.strictParseInt(str.substr(0, 4)),
                month: ical.helpers.strictParseInt(str.substr(4, 2)),
                day: ical.helpers.strictParseInt(str.substr(6, 2)),
                isDate: !0
            }) : ical.Time.fromData({
                year: ical.helpers.strictParseInt(str.substr(0, 4)),
                month: ical.helpers.strictParseInt(str.substr(4, 2)),
                day: ical.helpers.strictParseInt(str.substr(6, 2)),
                hour: ical.helpers.strictParseInt(str.substr(11, 2)),
                minute: ical.helpers.strictParseInt(str.substr(13, 2)),
                second: ical.helpers.strictParseInt(str.substr(15, 2)),
                isDate: !1
            });
        }, ical.Time;
    });
}(), function() {
    (0, System.amdDefine)("calendar/model/EventInstance.js", [ "calendar/ical/Event.js", "calendar/ical/Time.js", "calendar/ical/Duration.js" ], function(Event, Time, Duration) {
        function EventInstance(data) {
            this.recurrenceId = data.recurrenceId, this.startDate = data.startDate, this.endDate = data.endDate, 
            this.details = data.details, this.event = data.event;
        }
        var oneDay = Duration.fromData({
            days: 1
        });
        return EventInstance.prototype.isAllDay = function() {
            return oneDay.compare(this.details.duration) <= 0;
        }, EventInstance.prototype.isTimeDelimited = function() {
            return !this.startDate.isDate || !this.endDate.isDate;
        }, EventInstance.prototype.isNew = function() {
            return !(this.details && this.details.uid || this.event && this.event.uid);
        }, EventInstance.prototype.isReadonly = function() {
            return !this.isNew() && (this.calendar.extern || !this.calendar.writable);
        }, EventInstance.prototype.createException = function() {
            var exception = new Event();
            return exception.uid = this.event.uid, exception.startDate = this.startDate, exception.endDate = this.endDate, 
            exception.recurrenceId = this.recurrenceId, exception.creationTime = Time.fromJSDate(new Date(), !0), 
            exception;
        }, [ "summary", "description", "location" ].forEach(function(property) {
            Object.defineProperty(EventInstance.prototype, property, {
                get: function() {
                    return this.details && property in this.details && null !== this.details[property] ? this.details[property] : property in this.event ? this.event[property] : null;
                }
            });
        }), EventInstance.prototype.removeFromCalendar = function() {
            this.event.calendar.removeEventInstances(this);
        }, EventInstance.prototype.startDateAsZone = function(timeZone) {
            return this.startDate && this.startDate.convertToZone(timeZone);
        }, EventInstance.prototype.endDateAsZone = function(timeZone) {
            return this.endDate && this.endDate.convertToZone(timeZone);
        }, EventInstance.toDisplayEndDate = function(endDate) {
            return endDate && endDate.isDate ? endDate.addDuration(Duration.fromData({
                days: 1
            })) : endDate;
        }, Object.defineProperty(EventInstance.prototype, "calendar", {
            get: function() {
                return this.event.calendar;
            }
        }), Object.defineProperty(EventInstance.prototype, "displayStartDate", {
            get: function() {
                return this.startDate;
            },
            set: function(newStartDate) {
                this.startDate = newStartDate;
            }
        }), Object.defineProperty(EventInstance.prototype, "displayEndDate", {
            get: function() {
                return this.endDate && this.endDate.isDate ? this.endDate.clone().addDuration(Duration.fromData({
                    days: -1
                })) : this.endDate;
            },
            set: function(newEndDate) {
                this.endDate = EventInstance.toDisplayEndDate(newEndDate);
            }
        }), EventInstance;
    });
}(), function() {
    (0, System.amdDefine)("calendar/ical/Property.js", [ "3rdparty/ical.js" ], function(ical) {
        return ical.Property;
    });
}(), function() {
    (0, System.amdDefine)("calendar/ical/TimeZone.js", [ "3rdparty/ical.js" ], function(ical) {
        var TimeZone = ical.Timezone;
        return TimeZone.utcTimeZone = TimeZone.utcTimezone, TimeZone.localTimeZone = TimeZone.localTimezone, 
        TimeZone.prototype.equal = function(b) {
            return !(!this || !b || this.toString() !== b.toString());
        }, TimeZone.prototype.isLocal = function() {
            return this.toString() === TimeZone.localTimeZone.toString();
        }, TimeZone;
    });
}(), function() {
    (0, System.amdDefine)("calendar/ical/Recur.js", [ "3rdparty/ical.js" ], function(ical) {
        return ical.Recur;
    });
}(), function() {
    (0, System.amdDefine)("calendar/model/RecurrenceRule.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/ical/Recur.js" ], function(ko, Recur) {
        function RecurrenceRule(rrule) {
            this.rrule = rrule.clone();
        }
        RecurrenceRule.supportedFrequencies = [ "yearly", "monthly", "weekly", "daily" ], 
        RecurrenceRule.prototype.normalizeUntil = function(dtstart) {
            var rrule = this.rrule, until = rrule.until;
            if (until && dtstart && rrule) {
                rrule.until = null;
                var deadline = until;
                deadline.isDate ? dtstart.isDate || (deadline = deadline.clone().dayAfter()) : dtstart.isDate ? (deadline = deadline.clone().startOfDay()).isDate = !0 : (deadline = deadline.clone().dayAfter().startOfDay()).isDate = !1;
                var iterator = rrule.iterator(dtstart);
                iterator.next();
                var lastInstanceStartTime;
                do {
                    if (iterator.last.compare(deadline) > 0) break;
                    lastInstanceStartTime = iterator.last.clone();
                } while (iterator.next());
                rrule.until = lastInstanceStartTime || until;
            }
        }, RecurrenceRule.prototype.isEmpty = function() {
            return !this.rrule.freq;
        }, RecurrenceRule.prototype.tooComplex = function() {
            if (!this.isEmpty()) {
                if (this.rrule.freq && -1 === RecurrenceRule.supportedFrequencies.indexOf(this.rrule.freq.toLowerCase())) return !0;
                var parts = this.rrule.parts && this.rrule.parts;
                return !![ "bysecond", "byminute", "byhour", "byyearday", "byweekno", "bysetpos" ].some(function(bypart) {
                    return parts && parts[bypart.toUpperCase()];
                });
            }
        }, RecurrenceRule.prototype.toLocaleString = function(startDate, globalPreferences) {
            function zeroIndexedIcalDayNumber(iCalDay) {
                return weekDays.indexOf(iCalDay);
            }
            var weekStart = globalPreferences.weekStart, weekendStart = globalPreferences.weekendStart, freq = this.rrule.freq;
            if (this.isEmpty()) return "";
            if (this.tooComplex()) return TR("calendar.RecurrenceRule.TooComplex", "Complex repetition rule");
            var arg, frequencyString = freq.toLowerCase(), byday = this.rrule.getComponent("byday"), bymonthday = this.rrule.getComponent("bymonthday"), dayNames = inter.calendars.gregorian.dayNames.standAlone.wide, weekDays = [ "SU", "MO", "TU", "WE", "TH", "FR", "SA", "SU", "MO", "TU", "WE", "TH", "FR", "SA" ];
            if (byday && byday.length) {
                (byday = byday.filter(function(iCalDay, index, bydayArray) {
                    return index === bydayArray.indexOf(iCalDay);
                })).sort(function(a, b) {
                    return (zeroIndexedIcalDayNumber(a.match(/(MO|TU|WE|TH|FR|SA|SU)$/)[1]) + 7 - weekStart) % 7 - (zeroIndexedIcalDayNumber(b.match(/(MO|TU|WE|TH|FR|SA|SU)$/)[1]) + 7 - weekStart) % 7;
                });
                var isWeekdaysOnly = !0;
                if (byday.forEach(function(iCalDay) {
                    var dayNo = zeroIndexedIcalDayNumber(iCalDay);
                    dayNo !== weekendStart && dayNo !== (weekendStart + 1) % 7 || (isWeekdaysOnly = !1);
                }), 7 === byday.length) arg = TR("calendar.RecurrenceRule.AllDays", "all days"); else if (byday.length >= 5) if (isWeekdaysOnly) freq === RecurrenceRule.frequencies.daily ? frequencyString = "dailyWeekdays" : arg = TR("calendar.RecurrenceRule.Weekdays", "weekdays"); else {
                    var daysNotSeen = weekDays.slice(weekStart, weekStart + 7).filter(function(val) {
                        return -1 === byday.indexOf(val);
                    });
                    arg = TR.PAT("calendar.RecurrenceRule.AllDaysExcept", "all days except {0}")(inter.renderList(daysNotSeen.map(function(iCalDay) {
                        return dayNames[zeroIndexedIcalDayNumber(iCalDay)];
                    })));
                } else arg = inter.renderList(byday.map(function(iCalDay) {
                    var m = iCalDay.match(/^(-1|[1-9][0-9]*)?(MO|TU|WE|TH|FR|SA|SU)$/);
                    if (m) {
                        var no = parseInt(m[1], 10), weekDayNo = zeroIndexedIcalDayNumber(m[2]);
                        return no ? -1 === no ? TR.PAT("calendar.RecurrenceRule.ByLastDay", "the last {0}")(dayNames[weekDayNo]) : TR.PAT("calendar.RecurrenceRule.ByDay", "the {0} {1}")(RecurrenceRule.dayOfTheMonthOrdinals[no - 1], dayNames[weekDayNo]) : dayNames[weekDayNo];
                    }
                }));
            } else bymonthday && bymonthday.length ? arg = inter.renderList(bymonthday.map(function(monthDay) {
                return TR.PAT("calendar.RecurrenceRule.ByMonthDay", "day {0}")(monthDay);
            })) : freq === RecurrenceRule.frequencies.weekly ? arg = dayNames[zeroIndexedIcalDayNumber(startDate.dayOfWeekId())] : freq === RecurrenceRule.frequencies.monthly ? arg = TR.PAT("calendar.RecurrenceRule.ByMonthDay", "day {0}")(startDate.day) : freq === RecurrenceRule.frequencies.yearly && (arg = inter.renderDate(startDate, "MMMMd"));
            var components = [ inter.trQuantity(RecurrenceRule.parameterizedIntervalPatternByFrequencyAndQuantity[frequencyString], this.rrule.interval || 1, arg) ];
            if (this.rrule.until) {
                var untilPattern = TR.PAT("calendar.RecurrenceRule.Until", "until {0}"), untilFormattedDate = inter.renderDate(this.rrule.until, "longDate");
                components.push(untilPattern(untilFormattedDate));
            } else this.rrule.count && components.push(inter.trQuantity(TR("calendar.RecurrenceRule.Count", {
                one: "for one occurrence",
                other: "for {0} occurrences"
            }), this.rrule.count));
            return components.join(", ");
        };
        var frequencies = {
            daily: "DAILY",
            weekly: "WEEKLY",
            monthly: "MONTHLY",
            yearly: "YEARLY"
        };
        Object.defineProperty(RecurrenceRule, "frequencies", {
            get: function() {
                return frequencies;
            }
        });
        var dayOfTheMonthOrdinals = TR("calendar.RecurrenceRule.DayOfTheMonthOrdinals", [ "1st", "2nd", "3rd", "4th", "5th", "6th", "7th", "8th", "9th", "10th", "11th", "12th", "13th", "14th", "15th", "16th", "17th", "18th", "19th", "20th", "21st", "22nd", "23rd", "24th", "25th", "26th", "27th", "28th", "29th", "30th", "31st" ]);
        Object.defineProperty(RecurrenceRule, "dayOfTheMonthOrdinals", {
            get: function() {
                return dayOfTheMonthOrdinals;
            }
        });
        var intervalPatternByFrequencyAndQuantity = TR("calendar.RecurrenceRule.IntervalPatternByFrequencyAndQuantity", {
            dailyWeekdays: {
                one: "Daily on weekdays",
                other: "Every {0} weekdays"
            },
            daily: {
                one: "Daily",
                other: "Every {0} days"
            },
            weekly: {
                one: "Weekly",
                other: "Every {0} weeks"
            },
            monthly: {
                one: "Monthly",
                other: "Every {0} months"
            },
            yearly: {
                one: "Yearly",
                other: "Every {0} years"
            }
        });
        Object.defineProperty(RecurrenceRule, "intervalPatternByFrequencyAndQuantity", {
            get: function() {
                return intervalPatternByFrequencyAndQuantity;
            }
        });
        var parameterizedIntervalPatternByFrequencyAndQuantity = TR("calendar.RecurrenceRule.ParameterizedIntervalPatternByFrequencyAndQuantity", {
            daily: {
                one: "Daily",
                other: "Every {0} days"
            },
            dailyWeekdays: {
                one: "Daily on weekdays",
                other: "Every {0} weekdays"
            },
            monthly: {
                one: "Monthly on {1}",
                other: "Every {0} months on {1}"
            },
            weekly: {
                one: "Weekly on {1}",
                other: "Every {0} weeks on {1}"
            },
            yearly: {
                one: "Yearly on {1}",
                other: "Every {0} years on {1}"
            }
        });
        return Object.defineProperty(RecurrenceRule, "parameterizedIntervalPatternByFrequencyAndQuantity", {
            get: function() {
                return parameterizedIntervalPatternByFrequencyAndQuantity;
            }
        }), RecurrenceRule;
    });
}(), function() {
    (0, System.amdDefine)("calendar/ical/Event.js", [ "3rdparty/ical.js", "calendar/ical/Property.js", "calendar/ical/TimeZone.js", "calendar/model/RecurrenceRule.js" ], function(ical, Property, TimeZone, RecurrenceRule) {
        return Object.defineProperty(ical.Event.prototype, "creationTime", {
            get: function() {
                return this._firstProp("dtstamp");
            },
            set: function(value) {
                this._setTime("dtstamp", value);
            }
        }), Object.defineProperty(ical.Event.prototype, "recurrenceId", {
            get: function() {
                return this._firstProp("recurrence-id");
            },
            set: function(value) {
                this._setTime("recurrence-id", value);
            }
        }), Object.defineProperty(ical.Event.prototype, "recurrence", {
            get: function() {
                var rrule = this._firstProp("rrule");
                return rrule && new RecurrenceRule(rrule);
            }
        }), ical.Event.prototype.clearExceptions = function() {
            this._rangeExceptionCache = Object.create(null), this.exceptions = Object.create(null), 
            this.rangeExceptions = [];
        }, ical.Event.prototype.addExDate = function(date) {
            var property = new Property("exdate");
            date.zone !== TimeZone.localTimeZone && date.zone !== TimeZone.utcTimeZone && property.setParameter("tzid", date.zone.tzid), 
            property.setValue(date.clone()), this.component.addProperty(property);
        }, ical.Event;
    });
}(), function() {
    (0, System.amdDefine)("calendar/ical/Duration.js", [ "3rdparty/ical.js" ], function(ical) {
        return ical.Duration.prototype.toDays = function() {
            return this.toHours() / 24;
        }, ical.Duration.prototype.toHours = function() {
            return this.toSeconds() / 3600;
        }, ical.Duration;
    });
}(), function() {
    function ONECOLOR(obj) {
        if ("[object Array]" === Object.prototype.toString.apply(obj)) {
            if ("string" == typeof obj[0] && "function" == typeof ONECOLOR[obj[0]]) return new ONECOLOR[obj[0]](obj.slice(1, obj.length));
            if (4 === obj.length) return new ONECOLOR.RGB(obj[0] / 255, obj[1] / 255, obj[2] / 255, obj[3] / 255);
        } else if ("string" == typeof obj) {
            var lowerCased = obj.toLowerCase();
            namedColors[lowerCased] && (obj = "#" + namedColors[lowerCased]), "transparent" === lowerCased && (obj = "rgba(0,0,0,0)");
            var matchCssSyntax = obj.match(cssColorRegExp);
            if (matchCssSyntax) {
                var colorSpaceName = matchCssSyntax[1].toUpperCase(), alpha = undef(matchCssSyntax[8]) ? matchCssSyntax[8] : parseFloat(matchCssSyntax[8]), hasHue = "H" === colorSpaceName[0], firstChannelDivisor = matchCssSyntax[3] ? 100 : hasHue ? 360 : 255, secondChannelDivisor = matchCssSyntax[5] || hasHue ? 100 : 255, thirdChannelDivisor = matchCssSyntax[7] || hasHue ? 100 : 255;
                if (undef(ONECOLOR[colorSpaceName])) throw new Error("one.color." + colorSpaceName + " is not installed.");
                return new ONECOLOR[colorSpaceName](parseFloat(matchCssSyntax[2]) / firstChannelDivisor, parseFloat(matchCssSyntax[4]) / secondChannelDivisor, parseFloat(matchCssSyntax[6]) / thirdChannelDivisor, alpha);
            }
            obj.length < 6 && (obj = obj.replace(/^#?([0-9a-f])([0-9a-f])([0-9a-f])$/i, "$1$1$2$2$3$3"));
            var hexMatch = obj.match(/^#?([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])$/i);
            if (hexMatch) return new ONECOLOR.RGB(parseInt(hexMatch[1], 16) / 255, parseInt(hexMatch[2], 16) / 255, parseInt(hexMatch[3], 16) / 255);
        } else if ("object" == typeof obj && obj.isColor) return obj;
        return !1;
    }
    function installColorSpace(colorSpaceName, propertyNames, config) {
        function installForeignMethods(targetColorSpaceName, sourceColorSpaceName) {
            var obj = {};
            obj[sourceColorSpaceName.toLowerCase()] = new Function("return this.rgb()." + sourceColorSpaceName.toLowerCase() + "();"), 
            ONECOLOR[sourceColorSpaceName].propertyNames.forEach(function(propertyName, i) {
                obj[propertyName] = obj["black" === propertyName ? "k" : propertyName[0]] = new Function("value", "isDelta", "return this." + sourceColorSpaceName.toLowerCase() + "()." + propertyName + "(value, isDelta);");
            });
            for (var prop in obj) obj.hasOwnProperty(prop) && void 0 === ONECOLOR[targetColorSpaceName].prototype[prop] && (ONECOLOR[targetColorSpaceName].prototype[prop] = obj[prop]);
        }
        ONECOLOR[colorSpaceName] = new Function(propertyNames.join(","), "if (Object.prototype.toString.apply(" + propertyNames[0] + ") === '[object Array]') {" + propertyNames.map(function(propertyName, i) {
            return propertyName + "=" + propertyNames[0] + "[" + i + "];";
        }).reverse().join("") + "}if (" + propertyNames.filter(function(propertyName) {
            return "alpha" !== propertyName;
        }).map(function(propertyName) {
            return "isNaN(" + propertyName + ")";
        }).join("||") + '){throw new Error("[' + colorSpaceName + ']: Invalid color: ("+' + propertyNames.join('+","+') + '+")");}' + propertyNames.map(function(propertyName) {
            return "hue" === propertyName ? "this._hue=hue<0?hue-Math.floor(hue):hue%1" : "alpha" === propertyName ? "this._alpha=(isNaN(alpha)||alpha>1)?1:(alpha<0?0:alpha);" : "this._" + propertyName + "=" + propertyName + "<0?0:(" + propertyName + ">1?1:" + propertyName + ")";
        }).join(";") + ";"), ONECOLOR[colorSpaceName].propertyNames = propertyNames;
        var prototype = ONECOLOR[colorSpaceName].prototype;
        [ "valueOf", "hex", "hexa", "css", "cssa" ].forEach(function(methodName) {
            prototype[methodName] = prototype[methodName] || ("RGB" === colorSpaceName ? prototype.hex : new Function("return this.rgb()." + methodName + "();"));
        }), prototype.isColor = !0, prototype.equals = function(otherColor, epsilon) {
            undef(epsilon) && (epsilon = 1e-10), otherColor = otherColor[colorSpaceName.toLowerCase()]();
            for (var i = 0; i < propertyNames.length; i += 1) if (Math.abs(this["_" + propertyNames[i]] - otherColor["_" + propertyNames[i]]) > epsilon) return !1;
            return !0;
        }, prototype.toJSON = new Function("return ['" + colorSpaceName + "', " + propertyNames.map(function(propertyName) {
            return "this._" + propertyName;
        }, this).join(", ") + "];");
        for (var propertyName in config) if (config.hasOwnProperty(propertyName)) {
            var matchFromColorSpace = propertyName.match(/^from(.*)$/);
            matchFromColorSpace ? ONECOLOR[matchFromColorSpace[1].toUpperCase()].prototype[colorSpaceName.toLowerCase()] = config[propertyName] : prototype[propertyName] = config[propertyName];
        }
        prototype[colorSpaceName.toLowerCase()] = function() {
            return this;
        }, prototype.toString = new Function('return "[one.color.' + colorSpaceName + ':"+' + propertyNames.map(function(propertyName, i) {
            return '" ' + propertyNames[i] + '="+this._' + propertyName;
        }).join("+") + '+"]";'), propertyNames.forEach(function(propertyName, i) {
            prototype[propertyName] = prototype["black" === propertyName ? "k" : propertyName[0]] = new Function("value", "isDelta", "if (typeof value === 'undefined') {return this._" + propertyName + ";}if (isDelta) {return new this.constructor(" + propertyNames.map(function(otherPropertyName, i) {
                return "this._" + otherPropertyName + (propertyName === otherPropertyName ? "+value" : "");
            }).join(", ") + ");}return new this.constructor(" + propertyNames.map(function(otherPropertyName, i) {
                return propertyName === otherPropertyName ? "value" : "this._" + otherPropertyName;
            }).join(", ") + ");");
        }), installedColorSpaces.forEach(function(otherColorSpaceName) {
            installForeignMethods(colorSpaceName, otherColorSpaceName), installForeignMethods(otherColorSpaceName, colorSpaceName);
        }), installedColorSpaces.push(colorSpaceName);
    }
    var define = System.amdDefine, installedColorSpaces = [], namedColors = {}, undef = function(obj) {
        return void 0 === obj;
    }, channelRegExp = /\s*(\.\d+|\d+(?:\.\d+)?)(%)?\s*/, cssColorRegExp = new RegExp("^(rgb|hsl|hsv)a?\\(" + channelRegExp.source + "," + channelRegExp.source + "," + channelRegExp.source + "(?:," + /\s*(\.\d+|\d+(?:\.\d+)?)\s*/.source + ")?\\)$", "i");
    ONECOLOR.installMethod = function(name, fn) {
        installedColorSpaces.forEach(function(colorSpace) {
            ONECOLOR[colorSpace].prototype[name] = fn;
        });
    }, installColorSpace("RGB", [ "red", "green", "blue", "alpha" ], {
        hex: function() {
            var hexString = (65536 * Math.round(255 * this._red) + 256 * Math.round(255 * this._green) + Math.round(255 * this._blue)).toString(16);
            return "#" + "00000".substr(0, 6 - hexString.length) + hexString;
        },
        hexa: function() {
            var alphaString = Math.round(255 * this._alpha).toString(16);
            return "#" + "00".substr(0, 2 - alphaString.length) + alphaString + this.hex().substr(1, 6);
        },
        css: function() {
            return "rgb(" + Math.round(255 * this._red) + "," + Math.round(255 * this._green) + "," + Math.round(255 * this._blue) + ")";
        },
        cssa: function() {
            return "rgba(" + Math.round(255 * this._red) + "," + Math.round(255 * this._green) + "," + Math.round(255 * this._blue) + "," + this._alpha + ")";
        }
    }), "function" != typeof define || undef(define.amd) ? "object" == typeof exports ? module.exports = ONECOLOR : (one = window.one || {}, 
    one.color = ONECOLOR) : define("3rdparty/onecolor/one-color-debug.js", [], function() {
        return ONECOLOR;
    }), "undefined" != typeof jQuery && undef(jQuery.color) && (jQuery.color = ONECOLOR), 
    installColorSpace("HSV", [ "hue", "saturation", "value", "alpha" ], {
        rgb: function() {
            var red, green, blue, hue = this._hue, saturation = this._saturation, value = this._value, i = Math.min(5, Math.floor(6 * hue)), f = 6 * hue - i, p = value * (1 - saturation), q = value * (1 - f * saturation), t = value * (1 - (1 - f) * saturation);
            switch (i) {
              case 0:
                red = value, green = t, blue = p;
                break;

              case 1:
                red = q, green = value, blue = p;
                break;

              case 2:
                red = p, green = value, blue = t;
                break;

              case 3:
                red = p, green = q, blue = value;
                break;

              case 4:
                red = t, green = p, blue = value;
                break;

              case 5:
                red = value, green = p, blue = q;
            }
            return new ONECOLOR.RGB(red, green, blue, this._alpha);
        },
        hsl: function() {
            var saturation, l = (2 - this._saturation) * this._value, sv = this._saturation * this._value, svDivisor = l <= 1 ? l : 2 - l;
            return saturation = svDivisor < 1e-9 ? 0 : sv / svDivisor, new ONECOLOR.HSL(this._hue, saturation, l / 2, this._alpha);
        },
        fromRgb: function() {
            var hue, red = this._red, green = this._green, blue = this._blue, max = Math.max(red, green, blue), delta = max - Math.min(red, green, blue), saturation = 0 === max ? 0 : delta / max, value = max;
            if (0 === delta) hue = 0; else switch (max) {
              case red:
                hue = (green - blue) / delta / 6 + (green < blue ? 1 : 0);
                break;

              case green:
                hue = (blue - red) / delta / 6 + 1 / 3;
                break;

              case blue:
                hue = (red - green) / delta / 6 + 2 / 3;
            }
            return new ONECOLOR.HSV(hue, saturation, value, this._alpha);
        }
    }), installColorSpace("HSL", [ "hue", "saturation", "lightness", "alpha" ], {
        hsv: function() {
            var saturation, l = 2 * this._lightness, s = this._saturation * (l <= 1 ? l : 2 - l);
            return saturation = l + s < 1e-9 ? 0 : 2 * s / (l + s), new ONECOLOR.HSV(this._hue, saturation, (l + s) / 2, this._alpha);
        },
        rgb: function() {
            return this.hsv().rgb();
        },
        fromRgb: function() {
            return this.hsv().hsl();
        }
    });
}(), function() {
    (0, System.amdDefine)("calendar/Colors.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "3rdparty/onecolor/one-color-debug.js" ], function(ko, oneColor) {
        function Colors(colorObservable) {
            return {
                backgroundColor: ko.computed(function() {
                    return oneColor(colorObservable()).lightness(.9).saturation(.6).hex();
                }),
                boxTextColor: ko.computed(function() {
                    return oneColor(colorObservable()).lightness(.2).saturation(.6).hex();
                }),
                borderColor: ko.computed(function() {
                    return oneColor(colorObservable()).lightness(.8).saturation(.6).hex();
                }),
                darkBackgroundColor: ko.computed(function() {
                    return oneColor(colorObservable()).lightness(.6).saturation(.6).hex();
                })
            };
        }
        var colorChoices = [ "#B50000", "#B54B00", "#B59700", "#88B500", "#3CB500", "#00B50F", "#00B55B", "#00B5A6", "#0079B5", "#002DB5", "#1E00B5", "#6A00B5", "#B500B5", "#B5006A" ];
        return {
            createColors: function(colorObservable) {
                return new Colors(colorObservable);
            },
            colorChoices: colorChoices.slice(),
            defaultColor: colorChoices.slice()[0],
            nextColor: function(calendars) {
                for (var colorsCount = {}, i = 0; i < colorChoices.length; i++) colorsCount[colorChoices[i]] = calendars.filter(function(calendar) {
                    return calendar.color() === colorChoices[i];
                }).length;
                var minCount = Number.MAX_VALUE;
                return Object.keys(colorsCount).forEach(function(color) {
                    colorsCount[color] < minCount && (minCount = colorsCount[color]);
                }), Object.keys(colorsCount).filter(function(color) {
                    return minCount === colorsCount[color];
                })[0];
            },
            validateColor: function(color) {
                var colorPattern = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;
                return !!color && colorPattern.test(color);
            },
            sanitizeColor: function(color) {
                if (color) {
                    if (this.validateColor(color)) return color;
                    var trimmed = color.substr(0, 7);
                    if (this.validateColor(trimmed)) return trimmed;
                }
                return null;
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("calendar/fixUpJcal.js", [], function() {
        function hash(str) {
            var i, len, hash = 0;
            if (0 === str.length) return hash;
            for (i = 0, len = str.length; i < len; i++) hash = (hash << 5) - hash + str.charCodeAt(i), 
            hash |= 0;
            return hash;
        }
        return function(jCal) {
            var remappedTzidByTzid = {};
            return function traverse(jCal) {
                if ("vtimezone" === jCal[0]) {
                    var tzid = jCal[1] && "tzid" === jCal[1][0][0] && jCal[1][0][3];
                    "EAS-GENERATED-TIMEZONE" === tzid && (remappedTzidByTzid[tzid] = jCal[1][0][3] = tzid + "-" + hash(JSON.stringify(jCal)));
                }
                jCal[1].forEach(function(property) {
                    if ("dtstart" === property[0] || "dtend" === property[0] || "exdate" === property[0] || "rdate" === property[0] || "recurrence-id" === property[0]) {
                        !property[1].value && "date-time" === property[2] && /T::$/.test(property[3]) && (property[2] = "date", 
                        property[3] = property[3].replace(/T::$/, ""));
                        var tzid = property[1].tzid;
                        tzid && remappedTzidByTzid[tzid] && (property[1].tzid = remappedTzidByTzid[tzid]);
                    }
                }), jCal[2].forEach(traverse);
            }(jCal), jCal;
        };
    });
}(), function() {
    (0, System.amdDefine)("calendar/model/SharedLinks.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js" ], function(ko, util) {
        function SharedLinks() {
            var that = this;
            that.byId = ko.observable({}), that.version = ko.computed(function() {
                return Object.keys(that.byId()).map(function(key) {
                    return key + that.get(key).version();
                }).join(",");
            }).extend({
                pause: !1
            });
        }
        return SharedLinks.prototype.has = function(id) {
            return id in this.byId.peek();
        }, SharedLinks.prototype.add = function(sharedLink) {
            var byId = this.byId.peek();
            byId[sharedLink.id] = sharedLink, this.byId(byId);
        }, SharedLinks.prototype.get = function(id) {
            return this.byId.peek()[id];
        }, SharedLinks.prototype.remove = function(id) {
            var byId = this.byId.peek();
            delete byId[id], this.byId(byId);
        }, SharedLinks.prototype.all = function() {
            var that = this;
            return Object.keys(that.byId.peek()).map(function(key) {
                return that.get(key);
            });
        }, SharedLinks;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/url-template.js", [], factory) : root.urltemplate = factory();
    }(this, function() {
        function UrlTemplate() {}
        return UrlTemplate.prototype.encodeReserved = function(str) {
            return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {
                return /%[0-9A-Fa-f]/.test(part) || (part = encodeURI(part)), part;
            }).join("");
        }, UrlTemplate.prototype.encodeValue = function(operator, value, key) {
            return value = "+" === operator || "#" === operator ? this.encodeReserved(value) : encodeURIComponent(value), 
            key ? encodeURIComponent(key) + "=" + value : value;
        }, UrlTemplate.prototype.isDefined = function(value) {
            return void 0 !== value && null !== value;
        }, UrlTemplate.prototype.isKeyOperator = function(operator) {
            return ";" === operator || "&" === operator || "?" === operator;
        }, UrlTemplate.prototype.getValues = function(context, operator, key, modifier) {
            var value = context[key], result = [];
            if (this.isDefined(value) && "" !== value) if ("string" == typeof value || "number" == typeof value || "boolean" == typeof value) value = value.toString(), 
            modifier && "*" !== modifier && (value = value.substring(0, parseInt(modifier, 10))), 
            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null)); else if ("*" === modifier) Array.isArray(value) ? value.filter(this.isDefined).forEach(function(value) {
                result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));
            }, this) : Object.keys(value).forEach(function(k) {
                this.isDefined(value[k]) && result.push(this.encodeValue(operator, value[k], k));
            }, this); else {
                var tmp = [];
                Array.isArray(value) ? value.filter(this.isDefined).forEach(function(value) {
                    tmp.push(this.encodeValue(operator, value));
                }, this) : Object.keys(value).forEach(function(k) {
                    this.isDefined(value[k]) && (tmp.push(encodeURIComponent(k)), tmp.push(this.encodeValue(operator, value[k].toString())));
                }, this), this.isKeyOperator(operator) ? result.push(encodeURIComponent(key) + "=" + tmp.join(",")) : 0 !== tmp.length && result.push(tmp.join(","));
            } else ";" === operator ? result.push(encodeURIComponent(key)) : "" !== value || "&" !== operator && "?" !== operator ? "" === value && result.push("") : result.push(encodeURIComponent(key) + "=");
            return result;
        }, UrlTemplate.prototype.parse = function(template) {
            var that = this, operators = [ "+", "#", ".", "/", ";", "?", "&" ];
            return {
                expand: function(context) {
                    return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function(_, expression, literal) {
                        if (expression) {
                            var operator = null, values = [];
                            if (-1 !== operators.indexOf(expression.charAt(0)) && (operator = expression.charAt(0), 
                            expression = expression.substr(1)), expression.split(/,/g).forEach(function(variable) {
                                var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
                                values.push.apply(values, that.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
                            }), operator && "+" !== operator) {
                                var separator = ",";
                                return "?" === operator ? separator = "&" : "#" !== operator && (separator = operator), 
                                (0 !== values.length ? operator : "") + values.join(separator);
                            }
                            return values.join(",");
                        }
                        return that.encodeReserved(literal);
                    });
                }
            };
        }, new UrlTemplate();
    });
}(), function() {
    (0, System.amdDefine)("calendar/model/Calendar.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "3rdparty/insection.js", "calendar/model/EventInstance.js", "calendar/ical/parser.js", "calendar/ical/TimeZone.js", "calendar/ical/TimeZoneService.js", "calendar/ical/Event.js", "calendar/ical/Component.js", "calendar/ical/Duration.js", "calendar/Colors.js", "calendar/fixUpJcal.js", "calendar/model/SharedLinks.js", "3rdparty/url-template.js" ], function(ko, util, insection, EventInstance, icalParser, TimeZone, TimeZoneService, Event, Component, Duration, Colors, fixUpJcal, SharedLinks, urlTemplate) {
        function eventsFromVCalendar(vcalendar, settingsTimeZone) {
            function getTimezone(tzid) {
                var tz;
                return timeZones.some(function(timeZone) {
                    var isCorrectTimeZone = timeZone.toString() === tzid;
                    return isCorrectTimeZone && (tz = timeZone), isCorrectTimeZone;
                }), tz;
            }
            var events = {};
            settingsTimeZone = ko.isObservable(settingsTimeZone) ? settingsTimeZone() : settingsTimeZone;
            var vTimeZones = vcalendar.getAllSubcomponents("vtimezone"), timeZones = vTimeZones && vTimeZones.map(function(vTimeZone) {
                return TimeZone.fromData(vTimeZone);
            });
            timeZones.length && timeZones.forEach(function(timeZone) {
                timeZone.tzid && !TimeZoneService.has(timeZone.tzid) && TimeZoneService.register(timeZone.tzid, timeZone);
            });
            var defaultTimezone = settingsTimeZone;
            return vcalendar.getAllSubcomponents("vevent").forEach(function(eventData) {
                var event = new Event(eventData), eventTimeZone = getTimezone(event.startDate.timezone) || defaultTimezone;
                eventTimeZone && event.startDate.zone.equal(TimeZone.localTimeZone) && !event.startDate.isDate && (event.startDate = event.startDate.convertToZone(eventTimeZone)), 
                eventTimeZone && event.endDate.zone.equal(TimeZone.localTimeZone) && !event.endDate.isDate && (event.endDate = event.endDate.convertToZone(eventTimeZone)), 
                event.isRecurrenceException() ? events[event.uid] && events[event.uid].relateException(event) : events[event.uid] = event;
            }), Object.keys(events).map(function(uid) {
                return events[uid];
            });
        }
        function eventsFromResource(icalEntry, timeZone) {
            var icsData = fixUpJcal(icalParser(icalEntry.calData)), vcalendar = new Component(icsData);
            return vcalendar.resource = {
                id: icalEntry.res,
                etag: icalEntry.etag
            }, eventsFromVCalendar(vcalendar, timeZone);
        }
        function eventsFromResources(resources, timeZone) {
            var events = [];
            return resources.forEach(function(icalEntry) {
                eventsFromResource(icalEntry, timeZone).forEach(function(event) {
                    if (event.startDate && event.endDate && event.startDate.isDate && 0 === event.startDate.compare(event.endDate) && event.endDate.adjust(1), 
                    !event.isRecurring() && event.startDate.compare(event.endDate) > 0 && event.endDate.zone === event.startDate.zone) {
                        var startDate = event.startDate, endDate = event.endDate;
                        event.startDate = endDate.clone(), event.endDate = startDate.clone();
                    }
                    events.push(event);
                });
            }), events;
        }
        function eventsFromCalendarData(data, timeZone) {
            return eventsFromResources(data.icalendar && data.icalendar.children || [], timeZone);
        }
        function Calendar(data, timeZone) {
            var that = this;
            util.extend(this, util.pick(data, "ctag", "own", "writable", "extern", "id")), that.timeZone = ko.isObservable(timeZone) ? timeZone : ko.observable(timeZone || TimeZone.utcTimeZone), 
            that.name = ko.observable(data.name), that.defaultCalendar = ko.observable(!!data.default), 
            that.color = ko.observable(Colors.sanitizeColor(data.color) || Colors.defaultColor), 
            that.sharedLinks = new SharedLinks(), that.sharedLinksLoaded = ko.observable(!1), 
            that.failedLoading = ko.observable(!!data.failedLoading);
            var colors = Colors.createColors(that.color);
            util.extend(this, util.pick(colors, "backgroundColor", "boxTextColor", "borderColor", "darkBackgroundColor")), 
            that.version = ko.observable(0), that.enabled = ko.observable(!!data.enabled), that.eventInstances = insection(function(a, b) {
                return a.details.uid < b.details.uid ? -1 : a.details.uid > b.details.uid ? 1 : !a.details.recurrenceId && b.details.recurrenceId ? 1 : a.details.recurrenceId && !b.details.recurrenceId ? -1 : a.details.recurrenceId && b.details.recurrenceId ? a.details.recurrenceId.compare(b.details.recurrenceId) : 0;
            }), that.events = {}, eventsFromCalendarData(data, timeZone).forEach(function(event) {
                that.addEvent(event), event.calendar = that;
            });
        }
        function getExpansionEndDate(event, until) {
            var result = until;
            return Object.keys(event.exceptions).forEach(function(key) {
                var exception = event.exceptions[key];
                if (exception.startDate.compare(until) <= 0) {
                    var recurrenceId = exception.recurrenceId;
                    until.compare(recurrenceId) <= 0 && result.compare(recurrenceId) < 0 && (result = recurrenceId);
                }
            }), result;
        }
        return Calendar.prototype.addEvent = function(event) {
            event.calendar = this, this.events[event.uid] = event;
        }, Calendar.prototype.update = function(start, end, data) {
            var that = this;
            util.extend(this, util.pick(data, "ctag", "own", "writable", "extern")), that.name(data.name), 
            that.defaultCalendar(!!data.default), that.color(Colors.sanitizeColor(data.color) || Colors.defaultColor), 
            that.enabled(!!data.enabled);
            var localResourceIndex = util.uniqueIndexBy(Object.keys(that.events).map(function(uid) {
                return that.events[uid].component.parent.resource;
            }), function(resource) {
                return resource.id;
            }), updatedResources = (data.icalendar && data.icalendar.children || []).filter(function(resource) {
                return !localResourceIndex[resource.res] || localResourceIndex[resource.res].etag !== resource.etag;
            }), remoteEvents = util.uniqueIndexBy(eventsFromResources(updatedResources), function(event) {
                return event.uid;
            }), localEvents = util.uniqueIndexBy(that.getEventInstances(start, end), function(eventInstance) {
                return eventInstance.details.uid;
            }), uidsForAdding = Object.keys(remoteEvents).filter(function(uid) {
                return !localEvents[uid];
            }), uidsForUpdate = Object.keys(localEvents).filter(function(uid) {
                var remoteEvent = remoteEvents[uid];
                if (!remoteEvent) return !1;
                var localEventResource = localEvents[uid].event.component.parent.resource, remoteEventResource = remoteEvent.component.parent.resource;
                return localEventResource.id !== remoteEventResource.id || localEventResource.etag !== remoteEventResource.etag;
            }), remoteResourceIndex = util.uniqueIndexBy(data.icalendar && data.icalendar.children || [], function(resource) {
                return resource.res;
            }), uidsForRemoval = Object.keys(localEvents).filter(function(uid) {
                return !remoteResourceIndex[that.events[uid].component.parent.resource.id];
            });
            Object.keys(remoteEvents).forEach(function(uid) {
                that.events[uid] = remoteEvents[uid], that.events[uid].calendar = that;
            }), uidsForUpdate.length + uidsForRemoval.length > 0 && that.removeEventInstanceByEventUids(uidsForUpdate.concat(uidsForRemoval)), 
            uidsForRemoval.forEach(function(uid) {
                delete that.events[uid];
            }), uidsForAdding.length + uidsForUpdate.length + uidsForRemoval.length > 0 && that.version(that.version() + 1);
        }, Calendar.prototype.toUnixTime = function(date) {
            var that = this;
            return date.isDate && (date = date.convertToZone(that.timeZone())), date.toUnixTime();
        }, Calendar.prototype.resourceUrl = function(email) {
            return urlTemplate.parse("https://caldav.one.com/calendars/users/{email}/{calendarId}/").expand({
                calendarId: this.id,
                email: email
            }).replace("%40", "@");
        }, Calendar.prototype.removeEventInstanceByEventUids = function(uids) {
            Array.isArray(uids) || (uids = [ uids ]);
            var that = this;
            uids.forEach(function(uid) {
                that.events[uid].expantionIterator = null;
            });
            var uidRemoveIndex = util.uniqueIndexBy(uids);
            that.eventInstances.getEntries().filter(function(entry) {
                return uidRemoveIndex[entry.value.event.uid];
            }).forEach(function(entry) {
                that.eventInstances.remove(entry.interval, entry.value);
            });
        }, Calendar.prototype.removeEventInstanceByEvents = function(events) {
            Array.isArray(events) || (events = [ events ]), this.removeEventInstanceByEventUids(events.map(function(event) {
                return event.uid;
            }));
        }, Calendar.prototype.removeEventInstances = function(eventInstances) {
            var that = this;
            Array.isArray(eventInstances) || (eventInstances = [ eventInstances ]), eventInstances.forEach(function(eventInstance) {
                eventInstance.event.expantionIterator = null;
                var start = eventInstance.startDate, end = eventInstance.endDate;
                that.eventInstances.remove(that.toUnixTime(start), that.toUnixTime(end), eventInstance);
            });
        }, Calendar.prototype.expandEventTo = function(event, until) {
            var iterator = event.expantionIterator;
            if (iterator) {
                if (iterator.complete) return;
            } else (iterator = event.iterator()).next(), iterator.count = 0;
            var that = this, expansionEndDate = getExpansionEndDate(event, until);
            if (!(iterator.last.compare(expansionEndDate) > 0)) {
                var next, first = !event.expantionIterator;
                do {
                    var occurrenceDetails = event.getOccurrenceDetails(iterator.last), eventInstance = new EventInstance(occurrenceDetails);
                    eventInstance.details = occurrenceDetails.item || event, eventInstance.event = event, 
                    eventInstance.state = {
                        hidden: ko.observable(!1)
                    }, eventInstance.count = iterator.count;
                    var start = that.toUnixTime(eventInstance.startDate), end = that.toUnixTime(eventInstance.endDate);
                    end = Math.max(start, end), that.eventInstances.add(start, end, eventInstance), 
                    next = iterator.next(), iterator.count += 1, eventInstance.last = !next, eventInstance.first = first, 
                    first = !1;
                } while (next && iterator.last.compare(expansionEndDate) <= 0);
                event.expantionIterator = iterator;
            }
        }, Calendar.prototype.expandTo = function(until) {
            var that = this;
            that.enabled() && Object.keys(that.events).forEach(function(uid) {
                that.expandEventTo(that.events[uid], until);
            });
        }, Calendar.prototype.getEventInstances = function(startDate, endDate) {
            var that = this, utcEndDate = endDate.convertToZone(TimeZone.utcTimeZone);
            return this.expandTo(utcEndDate), this.eventInstances.get("(", that.toUnixTime(startDate), that.toUnixTime(utcEndDate), ")");
        }, Calendar.prototype.hasEventInstances = function(startDate, endDate) {
            var that = this, utcEndDate = endDate.convertToZone(TimeZone.utcTimeZone);
            return this.expandTo(utcEndDate), this.eventInstances.forEachEntry("(", that.toUnixTime(startDate), that.toUnixTime(utcEndDate), ")", function(entry) {
                return !0;
            }) || !1;
        }, Calendar;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/GetTimeZoneAction.js", [ "common/util.js", "calendar/ical/TimeZoneService.js", "calendar/ical/Component.js", "calendar/ical/parser.js" ], function(util, TimeZoneService, Component, icalParser) {
        function parseTimeZone(icsData) {
            return new Component(icalParser(icsData)).getFirstSubcomponent("vtimezone");
        }
        function GetTimeZoneAction(options) {
            util.extend(this, util.pick(options, "tzid"));
        }
        return GetTimeZoneAction.prototype.name = "GetTimeZoneAction", GetTimeZoneAction.prototype.execute = function(context, cb) {
            var state = context.state, backend = context.backend, tzid = this.tzid;
            backend.getTimeZone(state.user(), tzid, function(err, timeZoneDefinition) {
                err ? cb(err) : (TimeZoneService.register(parseTimeZone(timeZoneDefinition)), cb(null, TimeZoneService.get(tzid)));
            });
        }, GetTimeZoneAction;
    });
}(), function() {
    var define = System.amdDefine;
    !function() {
        function only_once(fn) {
            var called = !1;
            return function() {
                if (called) throw new Error("Callback was already called.");
                called = !0, fn.apply(root, arguments);
            };
        }
        var root, previous_async, async = {};
        null != (root = this) && (previous_async = root.async), async.noConflict = function() {
            return root.async = previous_async, async;
        };
        var _toString = Object.prototype.toString, _isArray = Array.isArray || function(obj) {
            return "[object Array]" === _toString.call(obj);
        }, _each = function(arr, iterator) {
            if (arr.forEach) return arr.forEach(iterator);
            for (var i = 0; i < arr.length; i += 1) iterator(arr[i], i, arr);
        }, _map = function(arr, iterator) {
            if (arr.map) return arr.map(iterator);
            var results = [];
            return _each(arr, function(x, i, a) {
                results.push(iterator(x, i, a));
            }), results;
        }, _reduce = function(arr, iterator, memo) {
            return arr.reduce ? arr.reduce(iterator, memo) : (_each(arr, function(x, i, a) {
                memo = iterator(memo, x, i, a);
            }), memo);
        }, _keys = function(obj) {
            if (Object.keys) return Object.keys(obj);
            var keys = [];
            for (var k in obj) obj.hasOwnProperty(k) && keys.push(k);
            return keys;
        };
        "undefined" != typeof process && process.nextTick ? (async.nextTick = process.nextTick, 
        "undefined" != typeof setImmediate ? async.setImmediate = function(fn) {
            setImmediate(fn);
        } : async.setImmediate = async.nextTick) : "function" == typeof setImmediate ? (async.nextTick = function(fn) {
            setImmediate(fn);
        }, async.setImmediate = async.nextTick) : (async.nextTick = function(fn) {
            setTimeout(fn, 0);
        }, async.setImmediate = async.nextTick), async.each = function(arr, iterator, callback) {
            function done(err) {
                err ? (callback(err), callback = function() {}) : (completed += 1) >= arr.length && callback();
            }
            if (callback = callback || function() {}, !arr.length) return callback();
            var completed = 0;
            _each(arr, function(x) {
                iterator(x, only_once(done));
            });
        }, async.forEach = async.each, async.eachSeries = function(arr, iterator, callback) {
            if (callback = callback || function() {}, !arr.length) return callback();
            var completed = 0, iterate = function() {
                iterator(arr[completed], function(err) {
                    err ? (callback(err), callback = function() {}) : (completed += 1) >= arr.length ? callback() : iterate();
                });
            };
            iterate();
        }, async.forEachSeries = async.eachSeries, async.eachLimit = function(arr, limit, iterator, callback) {
            _eachLimit(limit).apply(null, [ arr, iterator, callback ]);
        }, async.forEachLimit = async.eachLimit;
        var _eachLimit = function(limit) {
            return function(arr, iterator, callback) {
                if (callback = callback || function() {}, !arr.length || limit <= 0) return callback();
                var completed = 0, started = 0, running = 0;
                !function replenish() {
                    if (completed >= arr.length) return callback();
                    for (;running < limit && started < arr.length; ) running += 1, iterator(arr[(started += 1) - 1], function(err) {
                        err ? (callback(err), callback = function() {}) : (running -= 1, (completed += 1) >= arr.length ? callback() : replenish());
                    });
                }();
            };
        }, doParallel = function(fn) {
            return function() {
                var args = Array.prototype.slice.call(arguments);
                return fn.apply(null, [ async.each ].concat(args));
            };
        }, doParallelLimit = function(limit, fn) {
            return function() {
                var args = Array.prototype.slice.call(arguments);
                return fn.apply(null, [ _eachLimit(limit) ].concat(args));
            };
        }, doSeries = function(fn) {
            return function() {
                var args = Array.prototype.slice.call(arguments);
                return fn.apply(null, [ async.eachSeries ].concat(args));
            };
        }, _asyncMap = function(eachfn, arr, iterator, callback) {
            if (arr = _map(arr, function(x, i) {
                return {
                    index: i,
                    value: x
                };
            }), callback) {
                var results = [];
                eachfn(arr, function(x, callback) {
                    iterator(x.value, function(err, v) {
                        results[x.index] = v, callback(err);
                    });
                }, function(err) {
                    callback(err, results);
                });
            } else eachfn(arr, function(x, callback) {
                iterator(x.value, function(err) {
                    callback(err);
                });
            });
        };
        async.map = doParallel(_asyncMap), async.mapSeries = doSeries(_asyncMap), async.mapLimit = function(arr, limit, iterator, callback) {
            return _mapLimit(limit)(arr, iterator, callback);
        };
        var _mapLimit = function(limit) {
            return doParallelLimit(limit, _asyncMap);
        };
        async.reduce = function(arr, memo, iterator, callback) {
            async.eachSeries(arr, function(x, callback) {
                iterator(memo, x, function(err, v) {
                    memo = v, callback(err);
                });
            }, function(err) {
                callback(err, memo);
            });
        }, async.inject = async.reduce, async.foldl = async.reduce, async.reduceRight = function(arr, memo, iterator, callback) {
            var reversed = _map(arr, function(x) {
                return x;
            }).reverse();
            async.reduce(reversed, memo, iterator, callback);
        }, async.foldr = async.reduceRight;
        var _filter = function(eachfn, arr, iterator, callback) {
            var results = [];
            eachfn(arr = _map(arr, function(x, i) {
                return {
                    index: i,
                    value: x
                };
            }), function(x, callback) {
                iterator(x.value, function(v) {
                    v && results.push(x), callback();
                });
            }, function(err) {
                callback(_map(results.sort(function(a, b) {
                    return a.index - b.index;
                }), function(x) {
                    return x.value;
                }));
            });
        };
        async.filter = doParallel(_filter), async.filterSeries = doSeries(_filter), async.select = async.filter, 
        async.selectSeries = async.filterSeries;
        var _reject = function(eachfn, arr, iterator, callback) {
            var results = [];
            eachfn(arr = _map(arr, function(x, i) {
                return {
                    index: i,
                    value: x
                };
            }), function(x, callback) {
                iterator(x.value, function(v) {
                    v || results.push(x), callback();
                });
            }, function(err) {
                callback(_map(results.sort(function(a, b) {
                    return a.index - b.index;
                }), function(x) {
                    return x.value;
                }));
            });
        };
        async.reject = doParallel(_reject), async.rejectSeries = doSeries(_reject);
        var _detect = function(eachfn, arr, iterator, main_callback) {
            eachfn(arr, function(x, callback) {
                iterator(x, function(result) {
                    result ? (main_callback(x), main_callback = function() {}) : callback();
                });
            }, function(err) {
                main_callback();
            });
        };
        async.detect = doParallel(_detect), async.detectSeries = doSeries(_detect), async.some = function(arr, iterator, main_callback) {
            async.each(arr, function(x, callback) {
                iterator(x, function(v) {
                    v && (main_callback(!0), main_callback = function() {}), callback();
                });
            }, function(err) {
                main_callback(!1);
            });
        }, async.any = async.some, async.every = function(arr, iterator, main_callback) {
            async.each(arr, function(x, callback) {
                iterator(x, function(v) {
                    v || (main_callback(!1), main_callback = function() {}), callback();
                });
            }, function(err) {
                main_callback(!0);
            });
        }, async.all = async.every, async.sortBy = function(arr, iterator, callback) {
            async.map(arr, function(x, callback) {
                iterator(x, function(err, criteria) {
                    err ? callback(err) : callback(null, {
                        value: x,
                        criteria: criteria
                    });
                });
            }, function(err, results) {
                if (err) return callback(err);
                var fn = function(left, right) {
                    var a = left.criteria, b = right.criteria;
                    return a < b ? -1 : a > b ? 1 : 0;
                };
                callback(null, _map(results.sort(fn), function(x) {
                    return x.value;
                }));
            });
        }, async.auto = function(tasks, callback) {
            callback = callback || function() {};
            var keys = _keys(tasks), remainingTasks = keys.length;
            if (!remainingTasks) return callback();
            var results = {}, listeners = [], addListener = function(fn) {
                listeners.unshift(fn);
            }, removeListener = function(fn) {
                for (var i = 0; i < listeners.length; i += 1) if (listeners[i] === fn) return void listeners.splice(i, 1);
            }, taskComplete = function() {
                remainingTasks--, _each(listeners.slice(0), function(fn) {
                    fn();
                });
            };
            addListener(function() {
                if (!remainingTasks) {
                    var theCallback = callback;
                    callback = function() {}, theCallback(null, results);
                }
            }), _each(keys, function(k) {
                var task = _isArray(tasks[k]) ? tasks[k] : [ tasks[k] ], taskCallback = function(err) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    if (args.length <= 1 && (args = args[0]), err) {
                        var safeResults = {};
                        _each(_keys(results), function(rkey) {
                            safeResults[rkey] = results[rkey];
                        }), safeResults[k] = args, callback(err, safeResults), callback = function() {};
                    } else results[k] = args, async.setImmediate(taskComplete);
                }, requires = task.slice(0, Math.abs(task.length - 1)) || [], ready = function() {
                    return _reduce(requires, function(a, x) {
                        return a && results.hasOwnProperty(x);
                    }, !0) && !results.hasOwnProperty(k);
                };
                if (ready()) task[task.length - 1](taskCallback, results); else {
                    var listener = function() {
                        ready() && (removeListener(listener), task[task.length - 1](taskCallback, results));
                    };
                    addListener(listener);
                }
            });
        }, async.retry = function(times, task, callback) {
            var attempts = [];
            "function" == typeof times && (callback = task, task = times, times = 5), times = parseInt(times, 10) || 5;
            var wrappedTask = function(wrappedCallback, wrappedResults) {
                for (;times; ) attempts.push(function(task, finalAttempt) {
                    return function(seriesCallback) {
                        task(function(err, result) {
                            seriesCallback(!err || finalAttempt, {
                                err: err,
                                result: result
                            });
                        }, wrappedResults);
                    };
                }(task, !(times -= 1)));
                async.series(attempts, function(done, data) {
                    data = data[data.length - 1], (wrappedCallback || callback)(data.err, data.result);
                });
            };
            return callback ? wrappedTask() : wrappedTask;
        }, async.waterfall = function(tasks, callback) {
            if (callback = callback || function() {}, !_isArray(tasks)) {
                var err = new Error("First argument to waterfall must be an array of functions");
                return callback(err);
            }
            if (!tasks.length) return callback();
            var wrapIterator = function(iterator) {
                return function(err) {
                    if (err) callback.apply(null, arguments), callback = function() {}; else {
                        var args = Array.prototype.slice.call(arguments, 1), next = iterator.next();
                        next ? args.push(wrapIterator(next)) : args.push(callback), async.setImmediate(function() {
                            iterator.apply(null, args);
                        });
                    }
                };
            };
            wrapIterator(async.iterator(tasks))();
        };
        var _parallel = function(eachfn, tasks, callback) {
            if (callback = callback || function() {}, _isArray(tasks)) eachfn.map(tasks, function(fn, callback) {
                fn && fn(function(err) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    args.length <= 1 && (args = args[0]), callback.call(null, err, args);
                });
            }, callback); else {
                var results = {};
                eachfn.each(_keys(tasks), function(k, callback) {
                    tasks[k](function(err) {
                        var args = Array.prototype.slice.call(arguments, 1);
                        args.length <= 1 && (args = args[0]), results[k] = args, callback(err);
                    });
                }, function(err) {
                    callback(err, results);
                });
            }
        };
        async.parallel = function(tasks, callback) {
            _parallel({
                map: async.map,
                each: async.each
            }, tasks, callback);
        }, async.parallelLimit = function(tasks, limit, callback) {
            _parallel({
                map: _mapLimit(limit),
                each: _eachLimit(limit)
            }, tasks, callback);
        }, async.series = function(tasks, callback) {
            if (callback = callback || function() {}, _isArray(tasks)) async.mapSeries(tasks, function(fn, callback) {
                fn && fn(function(err) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    args.length <= 1 && (args = args[0]), callback.call(null, err, args);
                });
            }, callback); else {
                var results = {};
                async.eachSeries(_keys(tasks), function(k, callback) {
                    tasks[k](function(err) {
                        var args = Array.prototype.slice.call(arguments, 1);
                        args.length <= 1 && (args = args[0]), results[k] = args, callback(err);
                    });
                }, function(err) {
                    callback(err, results);
                });
            }
        }, async.iterator = function(tasks) {
            var makeCallback = function(index) {
                var fn = function() {
                    return tasks.length && tasks[index].apply(null, arguments), fn.next();
                };
                return fn.next = function() {
                    return index < tasks.length - 1 ? makeCallback(index + 1) : null;
                }, fn;
            };
            return makeCallback(0);
        }, async.apply = function(fn) {
            var args = Array.prototype.slice.call(arguments, 1);
            return function() {
                return fn.apply(null, args.concat(Array.prototype.slice.call(arguments)));
            };
        };
        var _concat = function(eachfn, arr, fn, callback) {
            var r = [];
            eachfn(arr, function(x, cb) {
                fn(x, function(err, y) {
                    r = r.concat(y || []), cb(err);
                });
            }, function(err) {
                callback(err, r);
            });
        };
        async.concat = doParallel(_concat), async.concatSeries = doSeries(_concat), async.whilst = function(test, iterator, callback) {
            test() ? iterator(function(err) {
                if (err) return callback(err);
                async.whilst(test, iterator, callback);
            }) : callback();
        }, async.doWhilst = function(iterator, test, callback) {
            iterator(function(err) {
                if (err) return callback(err);
                var args = Array.prototype.slice.call(arguments, 1);
                test.apply(null, args) ? async.doWhilst(iterator, test, callback) : callback();
            });
        }, async.until = function(test, iterator, callback) {
            test() ? callback() : iterator(function(err) {
                if (err) return callback(err);
                async.until(test, iterator, callback);
            });
        }, async.doUntil = function(iterator, test, callback) {
            iterator(function(err) {
                if (err) return callback(err);
                var args = Array.prototype.slice.call(arguments, 1);
                test.apply(null, args) ? callback() : async.doUntil(iterator, test, callback);
            });
        }, async.queue = function(worker, concurrency) {
            function _insert(q, data, pos, callback) {
                if (q.started || (q.started = !0), _isArray(data) || (data = [ data ]), 0 == data.length) return async.setImmediate(function() {
                    q.drain && q.drain();
                });
                _each(data, function(task) {
                    var item = {
                        data: task,
                        callback: "function" == typeof callback ? callback : null
                    };
                    pos ? q.tasks.unshift(item) : q.tasks.push(item), q.saturated && q.tasks.length === q.concurrency && q.saturated(), 
                    async.setImmediate(q.process);
                });
            }
            void 0 === concurrency && (concurrency = 1);
            var workers = 0, q = {
                tasks: [],
                concurrency: concurrency,
                saturated: null,
                empty: null,
                drain: null,
                started: !1,
                paused: !1,
                push: function(data, callback) {
                    _insert(q, data, !1, callback);
                },
                kill: function() {
                    q.drain = null, q.tasks = [];
                },
                unshift: function(data, callback) {
                    _insert(q, data, !0, callback);
                },
                process: function() {
                    if (!q.paused && workers < q.concurrency && q.tasks.length) {
                        var task = q.tasks.shift();
                        q.empty && 0 === q.tasks.length && q.empty(), workers += 1;
                        var cb = only_once(function() {
                            workers -= 1, task.callback && task.callback.apply(task, arguments), q.drain && q.tasks.length + workers === 0 && q.drain(), 
                            q.process();
                        });
                        worker(task.data, cb);
                    }
                },
                length: function() {
                    return q.tasks.length;
                },
                running: function() {
                    return workers;
                },
                idle: function() {
                    return q.tasks.length + workers === 0;
                },
                pause: function() {
                    !0 !== q.paused && (q.paused = !0, q.process());
                },
                resume: function() {
                    !1 !== q.paused && (q.paused = !1, q.process());
                }
            };
            return q;
        }, async.priorityQueue = function(worker, concurrency) {
            function _compareTasks(a, b) {
                return a.priority - b.priority;
            }
            function _binarySearch(sequence, item, compare) {
                for (var beg = -1, end = sequence.length - 1; beg < end; ) {
                    var mid = beg + (end - beg + 1 >>> 1);
                    compare(item, sequence[mid]) >= 0 ? beg = mid : end = mid - 1;
                }
                return beg;
            }
            function _insert(q, data, priority, callback) {
                if (q.started || (q.started = !0), _isArray(data) || (data = [ data ]), 0 == data.length) return async.setImmediate(function() {
                    q.drain && q.drain();
                });
                _each(data, function(task) {
                    var item = {
                        data: task,
                        priority: priority,
                        callback: "function" == typeof callback ? callback : null
                    };
                    q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item), q.saturated && q.tasks.length === q.concurrency && q.saturated(), 
                    async.setImmediate(q.process);
                });
            }
            var q = async.queue(worker, concurrency);
            return q.push = function(data, priority, callback) {
                _insert(q, data, priority, callback);
            }, delete q.unshift, q;
        }, async.cargo = function(worker, payload) {
            var working = !1, tasks = [], cargo = {
                tasks: tasks,
                payload: payload,
                saturated: null,
                empty: null,
                drain: null,
                drained: !0,
                push: function(data, callback) {
                    _isArray(data) || (data = [ data ]), _each(data, function(task) {
                        tasks.push({
                            data: task,
                            callback: "function" == typeof callback ? callback : null
                        }), cargo.drained = !1, cargo.saturated && tasks.length === payload && cargo.saturated();
                    }), async.setImmediate(cargo.process);
                },
                process: function process() {
                    if (!working) {
                        if (0 === tasks.length) return cargo.drain && !cargo.drained && cargo.drain(), void (cargo.drained = !0);
                        var ts = "number" == typeof payload ? tasks.splice(0, payload) : tasks.splice(0, tasks.length), ds = _map(ts, function(task) {
                            return task.data;
                        });
                        cargo.empty && cargo.empty(), working = !0, worker(ds, function() {
                            working = !1;
                            var args = arguments;
                            _each(ts, function(data) {
                                data.callback && data.callback.apply(null, args);
                            }), process();
                        });
                    }
                },
                length: function() {
                    return tasks.length;
                },
                running: function() {
                    return working;
                }
            };
            return cargo;
        };
        var _console_fn = function(name) {
            return function(fn) {
                var args = Array.prototype.slice.call(arguments, 1);
                fn.apply(null, args.concat([ function(err) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    "undefined" != typeof console && (err ? console.error : console[name] && _each(args, function(x) {}));
                } ]));
            };
        };
        async.log = _console_fn("log"), async.dir = _console_fn("dir"), async.memoize = function(fn, hasher) {
            var memo = {}, queues = {};
            hasher = hasher || function(x) {
                return x;
            };
            var memoized = function() {
                var args = Array.prototype.slice.call(arguments), callback = args.pop(), key = hasher.apply(null, args);
                key in memo ? async.nextTick(function() {
                    callback.apply(null, memo[key]);
                }) : key in queues ? queues[key].push(callback) : (queues[key] = [ callback ], fn.apply(null, args.concat([ function() {
                    memo[key] = arguments;
                    var q = queues[key];
                    delete queues[key];
                    for (var i = 0, l = q.length; i < l; i++) q[i].apply(null, arguments);
                } ])));
            };
            return memoized.memo = memo, memoized.unmemoized = fn, memoized;
        }, async.unmemoize = function(fn) {
            return function() {
                return (fn.unmemoized || fn).apply(null, arguments);
            };
        }, async.times = function(count, iterator, callback) {
            for (var counter = [], i = 0; i < count; i++) counter.push(i);
            return async.map(counter, iterator, callback);
        }, async.timesSeries = function(count, iterator, callback) {
            for (var counter = [], i = 0; i < count; i++) counter.push(i);
            return async.mapSeries(counter, iterator, callback);
        }, async.seq = function() {
            var fns = arguments;
            return function() {
                var that = this, args = Array.prototype.slice.call(arguments), callback = args.pop();
                async.reduce(fns, args, function(newargs, fn, cb) {
                    fn.apply(that, newargs.concat([ function() {
                        var err = arguments[0], nextargs = Array.prototype.slice.call(arguments, 1);
                        cb(err, nextargs);
                    } ]));
                }, function(err, results) {
                    callback.apply(that, [ err ].concat(results));
                });
            };
        }, async.compose = function() {
            return async.seq.apply(null, Array.prototype.reverse.call(arguments));
        };
        var _applyEach = function(eachfn, fns) {
            var go = function() {
                var that = this, args = Array.prototype.slice.call(arguments), callback = args.pop();
                return eachfn(fns, function(fn, cb) {
                    fn.apply(that, args.concat([ cb ]));
                }, callback);
            };
            if (arguments.length > 2) {
                var args = Array.prototype.slice.call(arguments, 2);
                return go.apply(this, args);
            }
            return go;
        };
        async.applyEach = doParallel(_applyEach), async.applyEachSeries = doSeries(_applyEach), 
        async.forever = function(fn, callback) {
            function next(err) {
                if (err) {
                    if (callback) return callback(err);
                    throw err;
                }
                fn(next);
            }
            next();
        }, "undefined" != typeof module && module.exports ? module.exports = async : void 0 !== define && define.amd ? define("3rdparty/async.js", [], function() {
            return async;
        }) : root.async = async;
    }();
}(), function() {
    (0, System.amdDefine)("calendar/actions/FormatSanitationAction.js", [ "common/util.js", "calendar/actions/GetTimeZoneAction.js", "3rdparty/async.js", "calendar/ical/TimeZoneService.js" ], function(util, GetTimeZoneAction, async, TimeZoneService) {
        function FormatSanitationAction(options) {
            util.extend(this, util.pick(options, "calendarData"));
        }
        return FormatSanitationAction.prototype.name = "FormatSanitationAction", FormatSanitationAction.prototype.sanitizeIcalData = function(icalData, context, cb) {
            var tzidsToReplace = [], timeZoneMatch = (icalData = icalData.replace(/<!--(.*?)-->/g, "")).match(/BEGIN:VTIMEZONE([\s\S]*?)END:VTIMEZONE/g);
            if (timeZoneMatch) for (var i = 0; i < timeZoneMatch.length; i++) {
                var timeZone = timeZoneMatch[i];
                if (timeZone.replace(/\r?\n\s/g, "").match(/RRULE.*((BYMONTH=|BYWEEKNO=|BYMONTHDAY=|BYDAY=).*BYYEARDAY=|BYYEARDAY=.*(BYMONTH=|BYWEEKNO=|BYMONTHDAY=|BYDAY=))/g)) {
                    var tzidMatch = /TZID:(.*)/g.exec(timeZone), tzid = tzidMatch && tzidMatch[1];
                    tzidsToReplace.push({
                        tzid: tzid,
                        toReplace: timeZone
                    });
                }
            }
            var tzTasks = tzidsToReplace.map(function(tzidToReplace) {
                return function(callback) {
                    var tzid = tzidToReplace.tzid;
                    if (TimeZoneService.has(tzid)) return tzidToReplace.timeZone = TimeZoneService.get(tzid), 
                    callback(null, tzidToReplace);
                    new GetTimeZoneAction({
                        tzid: tzid
                    }).execute(context, function(err, timeZone) {
                        if (err || !timeZone) return callback(err || new Error("no time zone found"));
                        tzidToReplace.timeZone = timeZone, callback(null, tzidToReplace);
                    });
                };
            });
            async.parallelLimit(tzTasks, 2, function(err, results) {
                if (err) return cb(err);
                for (var i = 0; i < results.length; i++) {
                    var tzidToReplace = results[i];
                    icalData = icalData.replace(tzidToReplace.toReplace, tzidToReplace.timeZone.component.toString());
                }
                cb(null, icalData);
            });
        }, FormatSanitationAction.prototype.execute = function(context, callback) {
            var that = this, calendarData = that.calendarData;
            if ("string" == typeof calendarData) return that.sanitizeIcalData(calendarData, context, callback);
            if (!calendarData || !calendarData.icalendar) return callback(null, calendarData);
            var icalDataChildren = calendarData.icalendar.children;
            async.map(icalDataChildren, function(child, next) {
                that.sanitizeIcalData(child.calData, context, function(err, calData) {
                    err || (child.calData = calData), next(err, child);
                });
            }, function(err, children) {
                if (err) return callback(err, calendarData);
                calendarData.icalendar.children = children, callback(null, calendarData);
            });
        }, FormatSanitationAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/actions/LoadExternalCalendarsAction.js", [ "common/util.js", "3rdparty/async.js", "3rdparty/Failboat.js", "calendar/model/Calendar.js", "common/ActionBehavior.js", "calendar/actions/FormatSanitationAction.js" ], function(util, async, Failboat, Calendar, ActionBehavior, FormatSanitationAction) {
        function LoadExternalCalendarsAction() {
            ActionBehavior.installInto(this);
        }
        return LoadExternalCalendarsAction.prototype.name = "LoadExternalCalendarsAction", 
        LoadExternalCalendarsAction.prototype.execute = function(context, cb) {
            var state = context.state, backend = context.backend, subscribedCalendars = (state.preferences.calendar() || {}).subscribedCalendars || [], loadedCalendars = [], processedCalendars = 0;
            async.eachLimit(subscribedCalendars, 2, function(subscribedCalendar, next) {
                backend.getExternalCalendar(subscribedCalendar.url, function(err, data) {
                    if (err) return loadedCalendars.push({
                        calendar: subscribedCalendar,
                        error: err
                    }), next();
                    new FormatSanitationAction({
                        calendarData: data
                    }).execute(context, function(err, sanitizedCalendarData) {
                        loadedCalendars.push({
                            calendar: subscribedCalendar,
                            error: err,
                            calData: sanitizedCalendarData
                        }), next();
                    });
                });
            });
            var errors = [], refreshInterval = setInterval(function() {
                if (processedCalendars === subscribedCalendars.length) if (clearInterval(refreshInterval), 
                errors.length > 0) {
                    var error = new Error("Unable load external calendars");
                    error.errors = errors, Failboat.tag(error, "FAILED_LOADING_EXTERNAL_ERRORS"), cb(error);
                } else cb(); else state.blockRenderingView && state.blockRenderingView() || (state.calendars.version.pause(), 
                loadedCalendars.forEach(function(entry) {
                    var subscribedCalendar = entry.calendar;
                    entry.error && errors.push(util.extend(entry.error, {
                        id: subscribedCalendar.id,
                        name: subscribedCalendar.displayName || subscribedCalendar.url,
                        url: subscribedCalendar.url
                    }));
                    var calendarData = util.extend({
                        writable: !1,
                        extern: !0,
                        own: !1,
                        failedLoading: !!entry.error
                    }, util.pick(subscribedCalendar, "id", "color", "enabled"));
                    calendarData.name = subscribedCalendar.displayName, calendarData.icalendar = {
                        children: [ {
                            res: subscribedCalendar.url,
                            etag: "",
                            calData: entry.calData || "BEGIN:VCALENDAR\r\nEND:VCALENDAR"
                        } ]
                    }, state.calendars.hasCalendar(calendarData.id) || state.calendars.add(new Calendar(calendarData, state.timeZone));
                }), processedCalendars += loadedCalendars.length, loadedCalendars = [], state.calendars.version.resume(!0));
            }, 400);
        }, LoadExternalCalendarsAction;
    });
}(), function() {
    (0, System.amdDefine)("common/BaseErrorHandler.js", [ "3rdparty/Failboat.js", "3rdparty/tracking-analytics/ErrorTracker.js", "common/util.js" ], function(Failboat, ErrorTracker, util) {
        function missingHandlerMessage(err) {
            return 'Missing handler for error "' + err.tags.join(" ") + '".';
        }
        var BaseErrorHandler = {};
        return BaseErrorHandler.create = function(application) {
            var noConnectionMessage = TR("errorHandler.NoConnection", "Could not connect to the server, please try again later."), failboat = new Failboat({
                0: function(err) {
                    this.showWarning(noConnectionMessage);
                },
                "500, 502": function(err) {
                    this.showErrorAndReportTaggedCrashWithUser(err, noConnectionMessage);
                },
                409: function(err) {
                    this.showWarning(TR("errorHandler.ObjectConflict", "The item you are interacting with has been updated. Please refresh your browser window.")), 
                    this.reportTaggedCrashWithUser(err, missingHandlerMessage(err));
                },
                413: function(err) {
                    this.showWarning(TR("errorHandler.TooLargeUpload", "The file you attempted to upload is too large."));
                },
                "503, 200": function(err) {
                    this.showErrorAndReportTaggedCrashWithUser(err, TR("errorHandler.ServiceUnavailable", "Our webmail servers are currently unavailable due to a temporary overloading or maintenance. Please try again later."));
                },
                504: function(err) {
                    this.showErrorAndReportTaggedCrashWithUser(err, TR("errorHandler.GatewayTimeout", "A proxy timeout has occurred. Please try again later. If you are using a (corporate) proxy, please contact the service staff maintaining your proxy."));
                },
                400: function(err) {
                    var message = TR("errorHandler.ConnectionProblem", "There was a problem connecting to the server, please try again.");
                    this.showErrorAndReportTaggedCrashWithUser(err, message);
                },
                "401, 403 INVALIDORMISSINGCOOKIE": function(err) {
                    /\/calendars\/2\/own\/\?events=true/.test(err.requestUrl) && one.application.composeMail || this.logout();
                },
                "403 AUTHENTICATIONFAILED": function(err) {
                    this.logout();
                },
                "403 SUSPENDED": function(err) {
                    this.showError(TR("mail.AccountSuspendedOrDeactivated", "Sorry, your account has been suspended or deactivated. Please contact the support."));
                },
                "403 SMTPSUSPENDED": function(err) {
                    this.showError(TR("mail.SmtpSuspended", "Sorry, we had to temporarily suspend outgoing emails on your domain. Please contact the support to get information about how to get the suspension lifted."));
                },
                "403 Suspended": function(err) {
                    this.showError(TR("mail.AccountSuspended", "Sorry, your account has been suspended. Please contact the support."));
                },
                "403 Inactive": function(err) {
                    this.showError(TR("mail.AccountInactive", "Sorry, your account is inactive. Your domain administrator can enable it from the Control Panel."));
                },
                403: "503",
                407: function() {
                    this.showWarning(TR("errorHandler.ProxyAuthenticationNeeded", "There was a problem connecting to the server. Please try to log into your (corporate) proxy again."));
                },
                "502 ACCOUNTCREATIONPENDING": "ACCOUNTCREATIONPENDING",
                ACCOUNTCREATIONPENDING: function(err) {
                    window.location.replace("https://login.one.com/mail#error-login-imap-account-not-ready-yet");
                }
            }, util.extend(application, {
                reportTaggedCrashWithUser: function(err, message) {
                    this.state && this.state.user && (err.user = this.state.user().toString()), one.crashReporter.reportTaggedCrash(err, message);
                },
                showErrorAndReportTaggedCrashWithUser: function(err, message) {
                    err.crashReportId = util.uuid(15), this.showError(message + " Code: " + err.crashReportId), 
                    this.reportTaggedCrashWithUser(err, message);
                }
            }));
            return failboat.onErrorRouted = function(err, matchingRoute) {
                matchingRoute ? ErrorTracker.track(err) : (this.showErrorAndReportTaggedCrashWithUser(err, missingHandlerMessage(err)), 
                ErrorTracker.track(err, "errors"));
            }, failboat;
        }, BaseErrorHandler;
    });
}(), function() {
    (0, System.amdDefine)("calendar/CalendarErrorHandler.js", [ "common/BaseErrorHandler.js" ], function(BaseErrorHandler) {
        var CalendarErrorHandler = {};
        return CalendarErrorHandler.create = function(application) {
            return BaseErrorHandler.create(application).extend({
                FAILED_LOADING_EXTERNAL_ERRORS: function(err) {
                    var calendarNames = err.errors.map(function(err) {
                        return err.name;
                    });
                    this.showWarning(TR.PAT("calendar.LoadingExternalCalendarsError", "Failed to load the following external calendars: {0}")(calendarNames.join(", ")));
                },
                CANCELLED: function() {},
                "404 NotFound SubscribeExternalCalendarAction": function() {
                    this.showWarning(TR("calendar.Error.404SubscribeNotFoundError", "Nothing was found at the provided URL"));
                },
                CANNOT_SUBSCRIBE_TO_CALDAV_ONE_COM_URL: function() {
                    this.showWarning(TR("calendar.Error.CannotSubscribeToCaldavOneCom", "Cannot subscribe to the CalDAV url of a One.com calendar. Please share the calendar and use the iCal url instead"));
                }
            });
        }, CalendarErrorHandler;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory(require("./ActionNotReadyError")) : "function" == typeof define && define.amd ? define("3rdparty/action-executor/ActionExecutor.js", [ "3rdparty/action-executor/ActionNotReadyError.js" ], factory) : (root.com = root.com || {}, 
        root.com.one = root.com.one || {}, root.com.one.ActionExecutor = factory(root.com.one.ActionNotReadyError));
    }(this, function(ActionNotReadyError) {
        function ActionExecutor(options) {
            var that = this;
            that.onEmptyQueue = options.onEmptyQueue, that.onStatusChange = options.onStatusChange, 
            that.shouldRetryOnError = options.shouldRetryOnError, that.interceptor = options.interceptor, 
            that.context = options.context, that.queue = [];
        }
        function fib(n) {
            var i, fibTable = [];
            for (fibTable[0] = 0, fibTable[1] = 1, i = 2; i <= n; i += 1) fibTable[i] = fibTable[i - 2] + fibTable[i - 1];
            return fibTable[n];
        }
        return ActionExecutor.prototype.setTaskStatus = function(task, status) {
            task.status = status, this.onStatusChange && this.onStatusChange.apply(this, arguments);
        }, ActionExecutor.prototype.executeQueuedActions = function() {
            var that = this;
            this.queue = this.queue.filter(function(task) {
                return "done" !== task.status && "failed" !== task.status;
            }), 0 === this.queue.length && this.onEmptyQueue && this.onEmptyQueue(), this.queue.filter(function(task) {
                return "not ready" === task.status || "retrying" === task.status;
            }).forEach(function(task) {
                that.execute(task);
            });
        }, ActionExecutor.prototype.shouldRetry = function(task, err) {
            return err && "number" == typeof task.retries && task.retries > 0 && this.shouldRetryOnError && this.shouldRetryOnError(err);
        }, ActionExecutor.prototype.intercept = function(task, args, cb) {
            this.interceptor ? this.interceptor.call(null, task.action, args, cb) : cb();
        }, ActionExecutor.prototype.callTaskCallback = function(task, args, cb) {
            this.intercept(task, args, function() {
                task.callback && task.callback.apply(null, args), cb();
            });
        }, ActionExecutor.prototype.queueForRetryTask = function(task, err) {
            var that = this, timeout = fib(task.action.retries - task.retries + 14);
            this.setTaskStatus(task, "queued for retrying", err), task.retries -= 1, setTimeout(function() {
                that.setTaskStatus(task, "retrying"), that.executeQueuedActions();
            }, timeout);
        }, ActionExecutor.prototype.execute = function(task) {
            var that = this;
            this.setTaskStatus(task, "running"), task.action.execute(this.context, function(err) {
                var args = Array.prototype.slice.call(arguments);
                err instanceof ActionNotReadyError ? that.setTaskStatus(task, "not ready") : that.shouldRetry(task, err) ? that.intercept(task, args, function() {
                    that.queueForRetryTask(task, err), that.executeQueuedActions();
                }) : that.callTaskCallback(task, args, function() {
                    err ? that.setTaskStatus(task, "failed", err) : that.setTaskStatus(task, "done"), 
                    that.executeQueuedActions();
                });
            });
        }, ActionExecutor.prototype.validateAction = function(action) {
            if (null === action || "object" != typeof action) throw new Error("Expect actions to be objects. " + action);
            var name = action.name;
            if ("string" != typeof name || 0 === name.length) throw new Error("Expect actions to have an unique name. " + action);
            if ("function" != typeof action.execute) throw new Error("Expect actions to have an execute method. " + action.name);
        }, ActionExecutor.prototype.enqueue = function(action, cb) {
            this.validateAction(action);
            var task = {
                action: action,
                callback: cb,
                retries: action.retries
            };
            this.queue.push(task), this.execute(task);
        }, ActionExecutor;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/Failboat.js", [], factory) : (root.com = root.com || {}, 
        root.com.one = root.com.one || {}, root.com.one.FailBoat = factory());
    }(this, function() {
        function Failboat(routes, context, parent) {
            this.routes = Object.keys(routes || {}).reduce(function(result, key) {
                var handler = routes[key];
                return key.split(/\s*,\s*/).forEach(function(route) {
                    result[route] = handler;
                }), result;
            }, {}), this._context = context || {}, this._parent = parent || null;
        }
        function score(tags, route) {
            var routeSegments = route.split(" ");
            return routeSegments.length > tags.length ? 0 : routeSegments.every(function(routeSegment, index) {
                return tags[index] === routeSegment;
            }) ? routeSegments.length : 0;
        }
        function maxBy(arr, selector) {
            return arr.reduce(function(max, current) {
                return max[selector] < current[selector] ? current : max;
            });
        }
        Failboat.prototype.emitErrorRouted = function(err, matchingRoute) {
            this.onErrorRouted && this.onErrorRouted.call(this._context, err, matchingRoute);
        }, Failboat.prototype.parents = function() {
            var parent = this._parent;
            return parent ? [ parent ].concat(parent.parents()) : [];
        }, Failboat.prototype.convoy = function() {
            return [ this ].concat(this.parents());
        }, Failboat.prototype.routeError = function(tags, err) {
            var matchingRoute = null, routesWithScore = Object.keys(this.routes).map(function(route) {
                return {
                    score: score(tags, route),
                    route: route
                };
            }).filter(function(routeWithScore) {
                return routeWithScore.score > 0;
            });
            if (routesWithScore.length > 0 ? matchingRoute = maxBy(routesWithScore, "score").route : "*" in this.routes && (matchingRoute = "*"), 
            matchingRoute) {
                var handler = this.routes[matchingRoute];
                if ("string" == typeof handler) {
                    var alias = handler;
                    return this.routeError(alias.split(" "), err);
                }
                return handler.call(this._context, err), this.convoy().forEach(function(failboat) {
                    failboat.emitErrorRouted(err, matchingRoute);
                }), !0;
            }
            return this.emitErrorRouted(err, matchingRoute), !!this._parent && this._parent.routeError(tags, err);
        }, Failboat.prototype.handleError = function(err, routes) {
            if (routes) return this.extend(routes).handleError(err);
            if (!err) return this;
            if (!Array.isArray(err.tags)) throw new Error("Failboat.handleError requires a tagged error object as the first argument");
            return this.routeError(err.tags, err);
        };
        return Failboat.tag = function(err) {
            if (null === err || "object" != typeof err) throw new Error("Failboat.tag requires an object as the first paramenter");
            var tags = Array.prototype.slice.call(arguments, 1);
            return tags.forEach(function(tag) {
                var type = typeof tag;
                if ("string" !== type && "number" !== type) throw new Error('Failboat.tag require tags to be strings or numbers was given: "' + tag + '"');
            }), (tags = tags.map(function(tag) {
                return "" + tag;
            }).reduce(function(tags, tag) {
                return tags.concat(tag.split(" "));
            }, []).filter(function(tag) {
                return tag.length > 0;
            })).forEach(function(tag) {
                if (!tag.match(/^\w+$/)) throw new Error('Failboat.tag require tags to be strings or numbers without special characters was given: "' + tag + '"');
            }), err.tags = (err.tags || []).concat(tags), err;
        }, Failboat.prototype.extend = function(routes) {
            return new Failboat(routes, this._context, this);
        }, Failboat;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/action-executor/ActionCancelledError.js", [], factory) : (root.com = root.com || {}, 
        root.com.one = root.com.one || {}, root.com.one.ActionCancelledError = factory());
    }(this, function() {
        function ActionCancelledError() {}
        return ActionCancelledError.prototype = new Error(), ActionCancelledError;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory(require("Failboat"), require("ActionCancelledError")) : "function" == typeof define && define.amd ? define("3rdparty/actionInterceptor.js", [ "3rdparty/Failboat.js", "3rdparty/action-executor/ActionCancelledError.js" ], factory) : (root.com = root.com || {}, 
        root.com.one = root.com.one || {}, root.com.one.actionInterceptor = factory(root.com.one.Failboat, root.com.one.ActionCancelledError));
    }(this, function(Failboat, ActionCancelledError) {
        return function(action, args, next) {
            var err = args[0];
            err && (err instanceof ActionCancelledError && Failboat.tag(err, "CANCELLED"), Failboat.tag(err, action.name), 
            err.action = action), next();
        };
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory(require("tracking")) : "function" == typeof define && define.amd ? define("3rdparty/tracking-analytics/ErrorTracker.js", [ "3rdparty/tracking-analytics/tracking.js" ], factory) : (root.com = root.com || {}, 
        root.com.one = root.com.one || {}, root.com.one.ErrorTracker = factory(root.com.one.tracking));
    }(this, function(tracking) {
        function isServerError(err) {
            var status = err.status;
            return 500 <= status && status < 600;
        }
        return {
            track: function(err, category) {
                category = category || (400 === err.status || 200 === err.status || isServerError(err) ? "errors" : "warnings"), 
                tracking.track(category, err.tags[0], err.tags.join(" "));
            }
        };
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory(require("tracking"), require("ErrorTracker")) : "function" == typeof define && define.amd ? define("3rdparty/retryTracker.js", [ "3rdparty/tracking-analytics/tracking.js", "3rdparty/tracking-analytics/ErrorTracker.js" ], factory) : (root.com = root.com || {}, 
        root.com.one = root.com.one || {}, root.com.one.tracking = factory(root.com.one.tracking, root.com.one.ErrorTracker));
    }(this, function(tracking, ErrorTracker) {
        return function(task, status, err) {
            if (task && "action" in task && void 0 !== task.action.retries) {
                var usedRetries = Math.abs(task.retries - task.action.retries);
                "queued for retrying" === status ? (ErrorTracker.track(err), tracking.track("retries", task.action.name, "retrying", usedRetries)) : "failed" === status && usedRetries > 0 ? tracking.track("retries", task.action.name, "failed", usedRetries) : "done" === status && usedRetries > 0 && tracking.track("retries", task.action.name, "success", usedRetries);
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("common/shouldRetryActionOnError.js", [], function() {
        return function(err) {
            return 503 === err.status || 502 === err.status;
        };
    });
}(), function() {
    (0, System.amdDefine)("3rdparty/version-tracking/Version.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], function(ko) {
        function Version() {
            function parseFromDocument() {
                var documentElement = document.documentElement, version = (documentElement && documentElement.getAttribute("data-version") || "").match(/(?:\d+\.?)+/);
                return version && version[0].match(versionPattern) ? version[0] : null;
            }
            function segmentVersionNumber(version) {
                var segments = version.match(versionPattern);
                if (segments) return {
                    major: parseInt(segments[1], 10),
                    minor: parseInt(segments[2], 10),
                    patch: parseInt(segments[3], 10)
                };
            }
            function isLessThanVersion(current, other) {
                return current.major < other.major || current.major === other.major && current.minor < other.minor || current.major === other.major && current.minor === other.minor && current.patch < other.patch;
            }
            var that = this, versionPattern = /^(\d+)\.(\d+)\.(\d+)$/;
            that.clientVersion = ko.observable(""), that.serverVersion = ko.observable(""), 
            that.minimumClientVersion = ko.observable(""), that.updatePriority = ko.pureComputed(function() {
                var client = segmentVersionNumber(that.clientVersion()), server = segmentVersionNumber(that.serverVersion()), minimumClientVersion = segmentVersionNumber(that.minimumClientVersion());
                return client && minimumClientVersion && isLessThanVersion(client, minimumClientVersion) ? 3 : server && client ? isLessThanVersion(server, client) ? -2 : server.major > client.major ? 3 : server.minor > client.minor ? 2 : server.patch > client.patch ? 1 : 0 : -1;
            }), that.init = function() {
                var clientVersion = parseFromDocument();
                clientVersion && (that.clientVersion(clientVersion), that.serverVersion(clientVersion));
            }, that.init();
        }
        var instance = new Version();
        return window.one = window.one || {}, window.one.version = instance, instance;
    });
}(), function() {
    (0, System.amdDefine)("3rdparty/version-tracking/VersionTracker.js", [ "node_modules/jquery/dist/jquery.js", "3rdparty/version-tracking/Version.js" ], function($, Version) {
        function VersionTracker() {
            var doc = $(document), that = this;
            doc.ajaxSend(function(e, xhr, ajaxOptions) {
                var clientVersion;
                that.enabled && (ajaxOptions.crossDomain || (clientVersion = Version.clientVersion()) && xhr.setRequestHeader("X-One-Version", clientVersion));
            }), doc.ajaxComplete(function(e, xhr, ajaxOptions) {
                var serverVersion, minimumClientVersion;
                that.enabled && (ajaxOptions.crossDomain || ((serverVersion = xhr.getResponseHeader("X-One-Version")) && Version.serverVersion(serverVersion), 
                (minimumClientVersion = xhr.getResponseHeader("X-One-Minimum-Client-Version")) && Version.minimumClientVersion(minimumClientVersion)));
            }), that.enabled = !0;
        }
        return VersionTracker.prototype.start = function() {
            this.enabled = !0;
        }, VersionTracker.prototype.stop = function() {
            this.enabled = !1;
        }, new VersionTracker();
    });
}(), function() {
    (0, System.amdDefine)("3rdparty/version-tracking/VersionUpgradeTimer.js", [], function() {
        function VersionUpgradeTimer(options) {
            options = options || {};
            this.timeBeforeStartingUpgrade = Math.floor(6 * Math.random() * 36e5), this.idleTimeBeforeUpgrading = 18e4, 
            this.upgradeTimer = null, this.idleTimer = null, this.readyToUpgrade = !1, this.onReadyToUpgrade = options.onReadyToUpgrade;
        }
        return VersionUpgradeTimer.prototype._startIdleTimer = function() {
            var that = this;
            this.idleTimer = setTimeout(function() {
                that.readyToUpgrade = !0, that.onReadyToUpgrade && that.onReadyToUpgrade();
            }, this.idleTimeBeforeUpgrading);
        }, VersionUpgradeTimer.prototype.start = function() {
            var that = this;
            this.upgradeTimer || (this.upgradeTimer = setTimeout(function() {
                that._startIdleTimer();
            }, this.timeBeforeStartingUpgrade));
        }, VersionUpgradeTimer.prototype.restartIdleTimer = function() {
            !this.readyToUpgrade && this.idleTimer && (clearTimeout(this.idleTimer), this._startIdleTimer());
        }, VersionUpgradeTimer.prototype.upgradeIfReady = function() {
            this.readyToUpgrade && window.location.reload(!0);
        }, VersionUpgradeTimer;
    });
}(), function() {
    (0, System.amdDefine)("theme/LoadingScreen.js", [], function() {
        var loadingScreenElement = document.getElementById("loadingScreen");
        return {
            show: function() {
                loadingScreenElement.style.display = "";
            },
            hide: function() {
                loadingScreenElement.style.display = "none";
            }
        };
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/tracking-analytics/tracking.js", [], factory) : (root.com = root.com || {}, 
        root.com.one = root.com.one || {}, root.com.one.tracking = factory());
    }(this, function() {
        function extend(obj1, obj2) {
            for (var prop in obj2) obj2.hasOwnProperty(prop) && (obj1[prop] = obj2[prop]);
            return obj1;
        }
        function sendEventToAppEventCollector(tag, input) {
            var url = CONFIG.appEventCollector.url, app = CONFIG.appEventCollector.app, env = CONFIG.appEventCollector.env;
            if (url && app && env) {
                url = url.replace(/\/$/, "");
                var body = extend({}, input);
                if ("errors" === (body = extend(body, {
                    app: app,
                    env: env
                })).category || "errors shown to users" === body.category) {
                    var user = "object" == typeof one && one && one.application && one.application.user;
                    user && ("function" == typeof user && (user = user()), body.user = user);
                }
                var clientVersion = document.documentElement.getAttribute("data-version");
                clientVersion && (body.clientVersion = clientVersion);
                var xhr = new XMLHttpRequest();
                xhr.open("POST", url + "/event/" + tag), xhr.withCredentials = !0;
                var payload;
                "function" == typeof FormData ? (payload = new FormData(), Object.keys(body).forEach(function(key) {
                    void 0 !== body[key] && payload.append(key, body[key]);
                })) : (xhr.setRequestHeader("Content-Type", "application/json;charset=utf-8"), payload = JSON.stringify(body)), 
                xhr.send(payload);
            }
        }
        var tracking = {
            options: {
                randomSeed: Math.random(),
                sampleLimit: {}
            }
        };
        return tracking.sendGoogleAnalyticsEventToAppEventCollector = function(event) {
            return sendEventToAppEventCollector("trackevent", {
                eventtype: event[0],
                category: event[1],
                action: event[2],
                opt_label: event[3],
                opt_value: event[4],
                opt_noninteraction: event[5]
            });
        }, tracking.sendUniversalGoogleAnaytics = function(category, action, label, value, optInteraction) {
            if (!label) return void ga("send", "event", category, action);
            optInteraction || (optInteraction = {
                nonInteraction: !0
            }), value && !isNaN(value) ? ga("send", "event", category, action, label, value, optInteraction) : ga("send", "event", category, action, label, optInteraction);
        }, tracking.sendHeartbeat = function() {
            sendEventToAppEventCollector("heartbeat", {
                eventtype: "heartbeat"
            });
        }, tracking.shouldSendToGoogle = function(event) {
            if (!Array.isArray(event) || "_trackEvent" !== event[0]) return !1;
            var categoryWhitelist;
            try {
                categoryWhitelist = CONFIG.trackingAnalytics.googleAnalyticsCategoryWhitelist;
            } catch (e) {
                categoryWhitelist = [];
            }
            return categoryWhitelist.some(function(allowedEvent) {
                return new RegExp(allowedEvent).test(event[1]);
            });
        }, tracking.sendGoogleAnalytics = function(event) {
            if (window._gaq && tracking.shouldSendToGoogle(event)) return void _gaq.push(event);
            if (window.ga && tracking.shouldSendToGoogle(event)) {
                var eventsForGa = event.slice(1);
                tracking.sendUniversalGoogleAnaytics.apply(null, eventsForGa);
            }
        }, tracking.sendEvent = function(event) {
            tracking.sendGoogleAnalytics(event), tracking.sendGoogleAnalyticsEventToAppEventCollector(event);
        }, tracking.track = function(category, action, opt_label, opt_value, opt_noninteraction) {
            var sampleLimitPercentage = tracking.options.sampleLimit[category];
            if (!(sampleLimitPercentage && sampleLimitPercentage < tracking.options.randomSeed)) {
                var event = [ "_trackEvent", category, action, opt_label, opt_value, opt_noninteraction ], indexOfFirstUndefined = event.indexOf(void 0);
                -1 !== indexOfFirstUndefined && (event = event.slice(0, indexOfFirstUndefined)), 
                tracking.sendEvent(event);
            }
        }, tracking.limitSampling = function(category, percentage) {
            tracking.options.sampleLimit[category] = percentage;
        }, tracking;
    });
}(), function() {
    var define = System.amdDefine;
    !function(factory) {
        "function" == typeof define && define.amd ? define("3rdparty/knockout.autocomplete.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "node_modules/jquery/dist/jquery.js" ], factory) : factory(ko, jQuery);
    }(function(ko, $) {
        function ScrollPane(container) {
            this.container = $(container);
        }
        function top(element) {
            return $(element).offset().top;
        }
        function bottom(element) {
            return top(element) + $(element).outerHeight();
        }
        var ua = navigator.userAgent, safari = /safari/i.test(ua), iphone = /\(iphone;/i.test(ua), ipad = /\(ipad;/i.test(ua), mobileSafari = safari && (ipad || iphone), utils = ko.utils, triggerEvent = utils.triggerEvent, unwrapObservable = utils.unwrapObservable, arrayMap = utils.arrayMap, arrayFilter = utils.arrayFilter, keys = {
            escape: 27,
            up: 38,
            down: 40,
            pageUp: 33,
            pageDown: 34,
            enter: 13,
            tab: 9,
            shift: 16
        }, defaultOptions = {
            minLength: 1,
            maxItems: 8,
            separators: null,
            format: function(item) {
                return item.toString();
            }
        };
        ScrollPane.prototype.alignWithTop = function(element) {
            this.container.scrollTop(this.container.scrollTop() + top(element) - top(this.container));
        }, ScrollPane.prototype.alignWithBottom = function(element) {
            this.container.scrollTop(this.container.scrollTop() + bottom(element) - bottom(this.container));
        }, ScrollPane.prototype.isAboveScrollArea = function(element) {
            return top(element) < top(this.container);
        }, ScrollPane.prototype.isBelowScrollArea = function(element) {
            return bottom(element) > bottom(this.container);
        }, ScrollPane.prototype.scrollIntoView = function(element) {
            this.isAboveScrollArea(element) ? this.alignWithTop(element) : this.isBelowScrollArea(element) && this.alignWithBottom(element);
        }, ko.bindingHandlers.autocomplete = {
            init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                function fireOnSelect() {
                    var newValue = options.onSelect.apply(null, arguments) || "";
                    element.value = newValue, triggerEvent(element, "change"), query(newValue), menuShown(!1);
                }
                function wrapIndex(index, length) {
                    return index < 0 ? Math.max(0, suggestions().length - 1) : suggestions().length <= index ? 0 : index;
                }
                function moveSelection(fromIndex, toIndex) {
                    toIndex = wrapIndex(toIndex);
                    var toElement = $dropdown.children()[toIndex], hasSelection = -1 !== fromIndex;
                    if (hasSelection) {
                        var fromElement = $dropdown.children()[fromIndex];
                        $(fromElement).toggleClass("selected", !1);
                    }
                    return $(toElement).toggleClass("selected", !0), selectedIndex = toIndex, new ScrollPane($dropdown).scrollIntoView(toElement), 
                    hasSelection;
                }
                function selectPrevious() {
                    if (menuShown()) {
                        if (-1 !== selectedIndex) {
                            var i = selectedIndex;
                            moveSelection(i, i - 1);
                        }
                    } else menuShown(!0), 0 === selectedIndex && moveSelection(selectedIndex, suggestions().length - 1);
                    return !1;
                }
                function selectNext() {
                    if (menuShown()) {
                        if (-1 !== selectedIndex) {
                            var i = selectedIndex;
                            return moveSelection(i, i + 1);
                        }
                    } else menuShown(!0);
                    return !1;
                }
                function selectSuggestion(index) {
                    return moveSelection(selectedIndex, index);
                }
                function renderSuggestions($target, suggestions) {
                    return suggestions.map(renderSuggestion);
                }
                function freeTextSelect() {
                    var value = element.value, texts = value ? value.split(separators) : [];
                    texts = arrayMap(texts, function(text) {
                        return text.trim();
                    }), fireOnSelect(texts = arrayFilter(texts, function(text) {
                        return text.length > 0;
                    }), justPasted);
                }
                function selectItem(item) {
                    fireOnSelect(separators ? [ item ] : item), options.target && setTimeout(function() {
                        element.scrollIntoView(!1);
                    }, 1);
                }
                function select() {
                    var items = suggestions(), i = selectedIndex;
                    return -1 !== i ? (selectItem(items[i].item), !0) : separators ? (freeTextSelect(), 
                    !0) : void 0;
                }
                function preventDefault(e) {
                    return e.preventDefault && e.preventDefault(), !1;
                }
                function mouseEnterDropdown() {
                    mouseInDropdown = !0;
                }
                function mouseLeaveDropdown() {
                    mouseInDropdown = !1;
                }
                function updateVisibilityOption(value) {
                    ko.isObservable(options.visible) && options.visible.peek() !== value && options.visible(value);
                }
                function handleTouchStart(e) {
                    moves = 0;
                    var $target = $(e.target);
                    return $highlightedElements = $target.closest("li"), $("li", $dropdown).removeClass("touching"), 
                    setTimeout(function() {
                        $highlightedElements && $highlightedElements.addClass("touching");
                    }, 50), e.stopPropagation && e.stopPropagation(), !0;
                }
                function handleTouchMove(e) {
                    return moves += 1, $highlightedElements && $highlightedElements.removeClass("touching"), 
                    e.stopPropagation && e.stopPropagation(), !0;
                }
                function handleTouchEnd(e) {
                    if (setTimeout(function() {
                        $highlightedElements && ($highlightedElements.removeClass("touching"), $highlightedElements = null);
                    }, 300), moves > 1) return !0;
                    var targetIndex = $(e.target).closest("li").attr("data-index");
                    return selectItem(suggestions()[targetIndex].item), e.stopPropagation && e.stopPropagation(), 
                    preventDefault(e);
                }
                function handleMouseEnter(e) {
                    var index = $(this).data("index");
                    moveSelection(selectedIndex, index);
                }
                function handleMouseDown(e) {
                    if ("mousedown" === e.type && 1 !== e.which) return !1;
                    var targetIndex = $(e.target).closest("li").attr("data-index");
                    return selectItem(suggestions()[targetIndex].item), e.stopPropagation && e.stopPropagation(), 
                    preventDefault(e);
                }
                function positionMenu() {
                    var offset = $element.offset(), elementHeight = $element.outerHeight(), elementBottom = offset.top + elementHeight, windowHeight = $window.height(), spaceBelow = (offset.top, 
                    windowHeight - elementBottom);
                    $dropdown.css("bottom", "auto");
                    var dropdownHeight = $dropdown.outerHeight(), dropdownWidth = $dropdown.outerWidth(), top = elementHeight + offset.top, left = offset.left, right = left + dropdownWidth, bottom = null;
                    (mobileSafari && spaceBelow < 600 || dropdownHeight > spaceBelow) && (top = offset.top - dropdownHeight - 5), 
                    right > $window.width() ? left = Math.max($window.width() - dropdownWidth, 0) : left -= document.body.scrollLeft, 
                    top < document.body.scrollTop ? (top = document.body.scrollTop, bottom = $window.height() - (offset.top - 5)) : top -= document.body.scrollTop, 
                    top + dropdownHeight > windowHeight && (bottom = 0), $dropdown.css("top", top + "px"), 
                    $dropdown.css("left", left + "px"), null !== bottom && ($dropdown.css("overflow", "auto"), 
                    $dropdown.css("bottom", bottom + "px"));
                }
                var value = valueAccessor(), options = unwrapObservable(value), subscriptions = [], $element = $(element), $window = $(window), $dropdown = $('<ul class="knockout-autocomplete menu scrollable popup-container"></ul>');
                options.className && $dropdown.addClass(options.className);
                var $container;
                options.target ? ($container = $("#" + options.target), $dropdown.appendTo($container)) : options.after ? ($container = $dropdown, 
                $element.after($dropdown), $dropdown.addClass("after-menu")) : ($container = $dropdown, 
                $dropdown.appendTo("body")), $container.hide(), $dropdown.hide(), ko.utils.domData.set($dropdown[0], "anchor", {
                    $element: $element,
                    $popupHolder: $dropdown
                });
                var format = options.format || defaultOptions.format, maxItems = options.maxItems || defaultOptions.maxItems, minLength = "number" == typeof options.minLength ? options.minLength : defaultOptions.minLength, separators = options.separators || defaultOptions.separators;
                separators = separators && new RegExp("[" + separators + "]");
                var floatingMenu = !options.target && !options.after;
                $dropdown.toggleClass("floating-menu", floatingMenu), options.onSelect = options.onSelect || function(item) {
                    return item.toString();
                };
                var query = ko.isObservable(options.query) ? options.query : ko.observable(""), selectedIndex = -1, suggestions = ko.computed(function() {
                    var data = unwrapObservable(options.data), queryText = (unwrapObservable(query) || "").trim().toLowerCase();
                    if (queryText.length < minLength) return [];
                    var matches;
                    return matches = options.noFilter ? data : utils.arrayFilter(data, function(item) {
                        return -1 !== format(item).toLowerCase().indexOf(queryText);
                    }).slice(0, maxItems), arrayMap(matches, function(item) {
                        var label = format(item);
                        return {
                            item: item,
                            query: queryText,
                            label: label
                        };
                    });
                });
                subscriptions.push(suggestions);
                var renderSuggestion = "function" == typeof options.renderSuggestion ? function(completionItem, index) {
                    var $result = $("<li>").append(options.renderSuggestion(completionItem));
                    return $result.attr("data-index", index), $result;
                } : function(completionItem, index) {
                    var offset = completionItem.label.toLowerCase().indexOf(completionItem.query), before = completionItem.label.substring(0, offset), match = completionItem.label.substring(offset, offset + completionItem.query.length), after = completionItem.label.substring(offset + completionItem.query.length), $result = $('<li><span class="before"></span><strong class="match"></strong><span class="after"></span></li>');
                    return $result.attr("data-index", index), $(".before", $result).text(before), $(".match", $result).text(match), 
                    $(".after", $result).text(after), $result;
                }, justPasted = !1;
                $element.on("paste", function(e) {
                    if (window.clipboardData) {
                        var clipped = window.clipboardData.getData("Text");
                        return clipped = clipped.replace(/(\r\n|\n|\r)/gm, " "), $(this).val(clipped), !1;
                    }
                    justPasted = !0;
                });
                var keyClose = !1;
                $element.on("keydown", function(e) {
                    if (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey) return !0;
                    switch (e.which) {
                      case keys.up:
                        if (selectPrevious()) return preventDefault(e);
                        break;

                      case keys.down:
                        if (selectNext()) return preventDefault(e);
                        break;

                      case keys.enter:
                        if (select()) return preventDefault(e);
                        break;

                      case keys.tab:
                        select();
                        break;

                      case keys.escape:
                        var isMenuShown = menuShown(), bubble = !isMenuShown || preventDefault(e);
                        return isMenuShown ? menuShown(!1) : (keyClose = !0, $element.blur()), bubble;
                    }
                    return !0;
                }), $element.on("keyup", function(e) {
                    if (keyClose = !1, justPasted || separators && separators.test(element.value)) return freeTextSelect(), 
                    void (justPasted = !1);
                    if (Object.keys(keys).every(function(key) {
                        return e.which !== keys[key];
                    })) {
                        var text = element.value;
                        query(text);
                    }
                });
                var mouseInDropdown = !1, menuShown = ko.computed({
                    read: function() {
                        return this.state();
                    },
                    write: function(value) {
                        value ? suggestions().length && (this.state() || $dropdown.on("mouseenter", mouseEnterDropdown).on("mouseleave", mouseLeaveDropdown), 
                        this.state(!0), updateVisibilityOption(!0)) : (!options.target || options.minLength > 0) && (this.state(!1), 
                        updateVisibilityOption(!1), $dropdown.off("mouseenter", mouseEnterDropdown).off("mouseleave", mouseLeaveDropdown));
                    }
                }, {
                    state: ko.observable(!1)
                });
                ko.isObservable(options.visible) && (menuShown(options.visible()), subscriptions.push(options.visible.subscribe(function(visible) {
                    if (visible && "" !== query()) {
                        var currentSuggestion = suggestions(), currentSelectedIndex = selectedIndex;
                        if (query(""), currentSuggestion.length > 0) {
                            var allSuggestions = suggestions();
                            moveSelection(currentSelectedIndex, arrayMap(allSuggestions, function(suggestion) {
                                return suggestion.label;
                            }).indexOf(currentSuggestion[0].label));
                        }
                    }
                    menuShown(visible);
                }))), subscriptions.push(menuShown.subscribe(function(value) {
                    value ? ($dropdown.show(), $container.show(), floatingMenu && positionMenu()) : ($container.hide(), 
                    $dropdown.hide());
                })), floatingMenu && ($window.on("scroll.autocomplete", positionMenu), $window.on("resize.autocomplete", positionMenu), 
                $dropdown.on("scroll.autocomplete", positionMenu)), $element.on("blur.autocomplete", function(e) {
                    if (menuShown() && mouseInDropdown && !keyClose) return e.preventDefault(), $element.focus(), 
                    !1;
                    menuShown(!1), mouseInDropdown = !1, "" !== query() && setTimeout(function() {
                        $(":focus").first().each(function(i, el) {
                            $dropdown.has(el).length > 0 && el.scrollIntoView(!1);
                        });
                    }, 10);
                });
                var $highlightedElements, moves;
                $dropdown.on("touchstart", "li", handleTouchStart), $dropdown.on("touchmove", "li", handleTouchMove), 
                $dropdown.on("touchend", "li", handleTouchEnd), $dropdown.on("mouseenter", "li", handleMouseEnter), 
                $dropdown.on("mousedown", "li", handleMouseDown), subscriptions.push(suggestions.subscribe(function(newValue) {
                    selectedIndex = -1, $dropdown.empty(), newValue.length ? ($dropdown.append(renderSuggestions($dropdown, newValue)), 
                    selectSuggestion(0), floatingMenu && positionMenu(), menuShown(!0)) : menuShown(!1);
                })), suggestions().length && ($dropdown.append(renderSuggestions($dropdown, suggestions())), 
                selectSuggestion(0)), options.target && 0 === options.minLength && menuShown(!0), 
                utils.domNodeDisposal.addDisposeCallback(element, function() {
                    $window.off("scroll.autocomplete", positionMenu), $window.off("resize.autocomplete", positionMenu), 
                    $dropdown.off("scroll.autocomplete", positionMenu), $dropdown.off("touchstart", "li", handleTouchStart), 
                    $dropdown.off("touchmove", "li", handleTouchMove), $dropdown.off("touchend", "li", handleTouchEnd), 
                    $dropdown.off("mouseenter", "li", handleMouseEnter), $dropdown.off("mousedown", "li", handleMouseDown), 
                    query(""), $dropdown.remove(), subscriptions.forEach(function(subscription) {
                        subscription.dispose();
                    });
                });
            }
        };
    });
}(), function() {
    var define = System.amdDefine;
    !function(e) {
        if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define("3rdparty/page.js", [], e); else {
            var f;
            "undefined" != typeof window ? f = window : "undefined" != typeof global ? f = global : "undefined" != typeof self && (f = self), 
            f.page = e();
        }
    }(function() {
        return function e(t, n, r) {
            function s(o, u) {
                if (!n[o]) {
                    if (!t[o]) {
                        var a = "function" == typeof require && require;
                        if (!u && a) return a(o, !0);
                        if (i) return i(o, !0);
                        var f = new Error("Cannot find module '" + o + "'");
                        throw f.code = "MODULE_NOT_FOUND", f;
                    }
                    var l = n[o] = {
                        exports: {}
                    };
                    t[o][0].call(l.exports, function(e) {
                        var n = t[o][1][e];
                        return s(n || e);
                    }, l, l.exports, e, t, n, r);
                }
                return n[o].exports;
            }
            for (var i = "function" == typeof require && require, o = 0; o < r.length; o++) s(r[o]);
            return s;
        }({
            1: [ function(require, module, exports) {
                (function(process) {
                    "use strict";
                    function page(path, fn) {
                        if ("function" == typeof path) return page("*", path);
                        if ("function" == typeof fn) for (var route = new Route(path), i = 1; i < arguments.length; ++i) page.callbacks.push(route.middleware(arguments[i])); else "string" == typeof path ? page["string" == typeof fn ? "redirect" : "show"](path, fn) : page.start(path);
                    }
                    function unhandled(ctx) {
                        if (!ctx.handled) {
                            (hashbang ? base + location.hash.replace("#!", "") : location.pathname + location.search) !== ctx.canonicalPath && (page.stop(), 
                            ctx.handled = !1, location.href = ctx.canonicalPath);
                        }
                    }
                    function decodeURLEncodedURIComponent(val) {
                        return "string" != typeof val ? val : decodeURLComponents ? decodeURIComponent(val.replace(/\+/g, " ")) : val;
                    }
                    function Context(path, state) {
                        "/" === path[0] && 0 !== path.indexOf(base) && (path = base + (hashbang ? "#!" : "") + path);
                        var i = path.indexOf("?");
                        if (this.canonicalPath = path, this.path = path.replace(base, "") || "/", hashbang && (this.path = this.path.replace("#!", "") || "/"), 
                        this.title = document.title, this.state = state || {}, this.state.path = path, this.querystring = ~i ? decodeURLEncodedURIComponent(path.slice(i + 1)) : "", 
                        this.pathname = decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path), this.params = {}, 
                        this.hash = "", !hashbang) {
                            if (!~this.path.indexOf("#")) return;
                            var parts = this.path.split("#");
                            this.path = parts[0], this.hash = decodeURLEncodedURIComponent(parts[1]) || "", 
                            this.querystring = this.querystring.split("#")[0];
                        }
                    }
                    function Route(path, options) {
                        options = options || {}, this.path = "*" === path ? "(.*)" : path, this.method = "GET", 
                        this.regexp = pathtoRegexp(this.path, this.keys = [], options.sensitive, options.strict);
                    }
                    function onclick(e) {
                        if (1 === which(e) && !(e.metaKey || e.ctrlKey || e.shiftKey || e.defaultPrevented)) {
                            for (var el = e.target; el && "A" !== el.nodeName; ) el = el.parentNode;
                            if (el && "A" === el.nodeName && !el.hasAttribute("download") && "external" !== el.getAttribute("rel")) {
                                var link = el.getAttribute("href");
                                if ((hashbang || el.pathname !== location.pathname || !el.hash && "#" !== link) && !(link && link.indexOf("mailto:") > -1) && !el.target && sameOrigin(el.href)) {
                                    var path = el.pathname + el.search + (el.hash || "");
                                    void 0 !== process && path.match(/^\/[a-zA-Z]:\//) && (path = path.replace(/^\/[a-zA-Z]:\//, "/"));
                                    var orig = path;
                                    0 === path.indexOf(base) && (path = path.substr(base.length)), hashbang && (path = path.replace("#!", "")), 
                                    base && orig === path || (e.preventDefault(), page.show(orig));
                                }
                            }
                        }
                    }
                    function which(e) {
                        return e = e || window.event, null === e.which ? e.button : e.which;
                    }
                    function sameOrigin(href) {
                        var origin = location.protocol + "//" + location.hostname;
                        return location.port && (origin += ":" + location.port), href && 0 === href.indexOf(origin);
                    }
                    var pathtoRegexp = require("path-to-regexp");
                    module.exports = page;
                    var running, prevContext, clickEvent = "undefined" != typeof document && document.ontouchstart ? "touchstart" : "click", location = "undefined" != typeof window && (window.history.location || window.location), dispatch = !0, decodeURLComponents = !0, base = "", hashbang = !1;
                    page.callbacks = [], page.exits = [], page.current = "", page.len = 0, page.base = function(path) {
                        if (0 === arguments.length) return base;
                        base = path;
                    }, page.start = function(options) {
                        if (options = options || {}, !running && (running = !0, !1 === options.dispatch && (dispatch = !1), 
                        !1 === options.decodeURLComponents && (decodeURLComponents = !1), !1 !== options.popstate && window.addEventListener("popstate", onpopstate, !1), 
                        !1 !== options.click && document.addEventListener(clickEvent, onclick, !1), !0 === options.hashbang && (hashbang = !0), 
                        dispatch)) {
                            var url = hashbang && ~location.hash.indexOf("#!") ? location.hash.substr(2) + location.search : location.pathname + location.search + location.hash;
                            page.replace(url, null, !0, dispatch);
                        }
                    }, page.stop = function() {
                        running && (page.current = "", page.len = 0, running = !1, document.removeEventListener(clickEvent, onclick, !1), 
                        window.removeEventListener("popstate", onpopstate, !1));
                    }, page.show = function(path, state, dispatch, push) {
                        function dispatchNext() {
                            !1 !== dispatch && page.dispatchEnter(ctx), !1 !== ctx.handled && !1 !== push && ctx.pushState();
                        }
                        var ctx = new Context(path, state);
                        return page.current = ctx.path, !1 !== dispatch ? page.dispatchExit(dispatchNext) : dispatchNext(), 
                        ctx;
                    }, page.back = function(path, state) {
                        page.len > 0 ? (history.back(), page.len--) : path ? setTimeout(function() {
                            page.show(path, state);
                        }) : setTimeout(function() {
                            page.show(base, state);
                        });
                    }, page.redirect = function(from, to) {
                        "string" == typeof from && "string" == typeof to && page(from, function(e) {
                            setTimeout(function() {
                                page.replace(to);
                            }, 0);
                        }), "string" == typeof from && void 0 === to && setTimeout(function() {
                            page.replace(from);
                        }, 0);
                    }, page.replace = function(path, state, init, dispatch) {
                        var ctx = new Context(path, state);
                        return page.current = ctx.path, ctx.init = init, ctx.save(), !1 !== dispatch && page.dispatch(ctx), 
                        ctx;
                    }, page.dispatchExit = function(cb) {
                        function nextExit() {
                            var fn = page.exits[i++];
                            if (!fn) return inExitChain = !1, cb();
                            fn(prev, nextExit);
                        }
                        var prev = prevContext, i = 0, inExitChain = !0;
                        prev ? (nextExit(), inExitChain && page.revertState && page.revertState(prev), page.revertState = null) : cb();
                    }, page.dispatchEnter = function(ctx) {
                        function nextEnter() {
                            var fn = page.callbacks[i++];
                            return ctx.path !== page.current ? void (ctx.handled = !1) : fn ? void fn(ctx, nextEnter) : unhandled(ctx);
                        }
                        var i = 0;
                        prevContext = ctx, nextEnter();
                    }, page.dispatch = function(ctx) {
                        page.dispatchExit(function() {
                            page.dispatchEnter(ctx);
                        });
                    }, page.exit = function(path, fn) {
                        if ("function" == typeof path) return page.exit("*", path);
                        for (var route = new Route(path), i = 1; i < arguments.length; ++i) page.exits.push(route.middleware(arguments[i]));
                    }, page.Context = Context, Context.prototype.pushState = function() {
                        page.len++, history.pushState(this.state, this.title, hashbang && "/" !== this.path ? "#!" + this.path : this.canonicalPath);
                    }, Context.prototype.save = function() {
                        history.replaceState(this.state, this.title, hashbang && "/" !== this.path ? "#!" + this.path : this.canonicalPath);
                    }, page.Route = Route, Route.prototype.middleware = function(fn) {
                        var self = this;
                        return function(ctx, next) {
                            if (self.match(ctx.path, ctx.params)) return fn(ctx, next);
                            next();
                        };
                    }, Route.prototype.match = function(path, params) {
                        var keys = this.keys, qsIndex = path.indexOf("?"), pathname = ~qsIndex ? path.slice(0, qsIndex) : path, m = this.regexp.exec(pathname);
                        if (!m) return !1;
                        for (var i = 1, len = m.length; i < len; ++i) {
                            var key = keys[i - 1], val = decodeURLEncodedURIComponent(m[i]);
                            void 0 === val && hasOwnProperty.call(params, key.name) || (params[key.name] = val);
                        }
                        return !0;
                    };
                    var onpopstate = function() {
                        var loaded = !1;
                        if ("undefined" != typeof window) return "complete" === document.readyState ? loaded = !0 : window.addEventListener("load", function() {
                            setTimeout(function() {
                                loaded = !0;
                            }, 0);
                        }), function(e) {
                            if (loaded) if (page.revertState = function(prevState) {
                                page.show(prevState.pathname, prevState.state, !1);
                            }, e.state) {
                                var path = e.state.path;
                                page.replace(path, e.state);
                            } else page.show(location.pathname + location.hash, void 0, void 0, !1);
                        };
                    }();
                    page.sameOrigin = sameOrigin;
                }).call(this, require("_process"));
            }, {
                _process: 2,
                "path-to-regexp": 3
            } ],
            2: [ function(require, module, exports) {
                function noop() {}
                var process = module.exports = {};
                process.nextTick = function() {
                    var canSetImmediate = "undefined" != typeof window && window.setImmediate, canMutationObserver = "undefined" != typeof window && window.MutationObserver, canPost = "undefined" != typeof window && window.postMessage && window.addEventListener;
                    if (canSetImmediate) return function(f) {
                        return window.setImmediate(f);
                    };
                    var queue = [];
                    if (canMutationObserver) {
                        var hiddenDiv = document.createElement("div");
                        return new MutationObserver(function() {
                            var queueList = queue.slice();
                            queue.length = 0, queueList.forEach(function(fn) {
                                fn();
                            });
                        }).observe(hiddenDiv, {
                            attributes: !0
                        }), function(fn) {
                            queue.length || hiddenDiv.setAttribute("yes", "no"), queue.push(fn);
                        };
                    }
                    return canPost ? (window.addEventListener("message", function(ev) {
                        var source = ev.source;
                        source !== window && null !== source || "process-tick" !== ev.data || (ev.stopPropagation(), 
                        queue.length > 0 && queue.shift()());
                    }, !0), function(fn) {
                        queue.push(fn), window.postMessage("process-tick", "*");
                    }) : function(fn) {
                        setTimeout(fn, 0);
                    };
                }(), process.title = "browser", process.browser = !0, process.env = {}, process.argv = [], 
                process.on = noop, process.addListener = noop, process.once = noop, process.off = noop, 
                process.removeListener = noop, process.removeAllListeners = noop, process.emit = noop, 
                process.binding = function(name) {
                    throw new Error("process.binding is not supported");
                }, process.cwd = function() {
                    return "/";
                }, process.chdir = function(dir) {
                    throw new Error("process.chdir is not supported");
                };
            }, {} ],
            3: [ function(require, module, exports) {
                function escapeGroup(group) {
                    return group.replace(/([=!:$\/()])/g, "\\$1");
                }
                function attachKeys(re, keys) {
                    return re.keys = keys, re;
                }
                function flags(options) {
                    return options.sensitive ? "" : "i";
                }
                function regexpToRegexp(path, keys) {
                    var groups = path.source.match(/\((?!\?)/g);
                    if (groups) for (var i = 0; i < groups.length; i++) keys.push({
                        name: i,
                        delimiter: null,
                        optional: !1,
                        repeat: !1
                    });
                    return attachKeys(path, keys);
                }
                function arrayToRegexp(path, keys, options) {
                    for (var parts = [], i = 0; i < path.length; i++) parts.push(pathToRegexp(path[i], keys, options).source);
                    return attachKeys(new RegExp("(?:" + parts.join("|") + ")", flags(options)), keys);
                }
                function replacePath(path, keys) {
                    function replace(_, escaped, prefix, key, capture, group, suffix, escape) {
                        if (escaped) return escaped;
                        if (escape) return "\\" + escape;
                        var repeat = "+" === suffix || "*" === suffix, optional = "?" === suffix || "*" === suffix;
                        return keys.push({
                            name: key || index++,
                            delimiter: prefix || "/",
                            optional: optional,
                            repeat: repeat
                        }), prefix = prefix ? "\\" + prefix : "", capture = escapeGroup(capture || group || "[^" + (prefix || "\\/") + "]+?"), 
                        repeat && (capture = capture + "(?:" + prefix + capture + ")*"), optional ? "(?:" + prefix + "(" + capture + "))?" : prefix + "(" + capture + ")";
                    }
                    var index = 0;
                    return path.replace(PATH_REGEXP, replace);
                }
                function pathToRegexp(path, keys, options) {
                    if (keys = keys || [], isArray(keys) ? options || (options = {}) : (options = keys, 
                    keys = []), path instanceof RegExp) return regexpToRegexp(path, keys, options);
                    if (isArray(path)) return arrayToRegexp(path, keys, options);
                    var strict = options.strict, end = !1 !== options.end, route = replacePath(path, keys), endsWithSlash = "/" === path.charAt(path.length - 1);
                    return strict || (route = (endsWithSlash ? route.slice(0, -2) : route) + "(?:\\/(?=$))?"), 
                    route += end ? "$" : strict && endsWithSlash ? "" : "(?=\\/|$)", attachKeys(new RegExp("^" + route, flags(options)), keys);
                }
                var isArray = require("isarray");
                module.exports = pathToRegexp;
                var PATH_REGEXP = new RegExp([ "(\\\\.)", "([\\/.])?(?:\\:(\\w+)(?:\\(((?:\\\\.|[^)])*)\\))?|\\(((?:\\\\.|[^)])*)\\))([+*?])?", "([.+*?=^!:${}()[\\]|\\/])" ].join("|"), "g");
            }, {
                isarray: 4
            } ],
            4: [ function(require, module, exports) {
                module.exports = Array.isArray || function(arr) {
                    return "[object Array]" == Object.prototype.toString.call(arr);
                };
            }, {} ]
        }, {}, [ 1 ])(1);
    });
}(), function() {
    (0, System.amdDefine)("common/model/EmailNotification.js", [ "3rdparty/page.js" ], function(page) {
        function EmailNotification(options) {
            if ("Notification" in window) {
                var that = this, mails = Object.keys(options.mails).map(function(key) {
                    return options.mails[key];
                }), timeout = options.timeout || 1e4;
                if (this.user = options.user, !this.user) throw new Error("PushNotification: user not defined");
                this.title = titleComposer(mails), this.link = getLink(this.user, mails), this.notification = new window.Notification(this.title, {
                    body: bodyComposer(mails),
                    tag: "one_email_received",
                    icon: "/static/mail.svgfilter--runScript..-colorFilter.js,--color-236e9c42-inkscape--export-width45.fd4055fdd4.png"
                }), this.notification.addEventListener("click", function() {
                    window.focus(), page.show(that.link), that.notification.close();
                }), this.closeTimeout = window.setTimeout(function() {
                    that.notification && that.notification.close();
                }, timeout);
            }
        }
        function titleComposer(mails) {
            return mails.length > 1 ? inter.trQuantity(TR("mail.notification.YouHaveXMails", {
                one: "You have {0} mail",
                other: "You have {0} mails"
            }), mails.length) : TR("mail.notification.YouHaveMail", "You have mail");
        }
        function getTruncatedSubject(mail, bodySize) {
            bodySize = bodySize || 24;
            var subject = mail.subject();
            return subject.length >= bodySize && (subject = subject.substring(0, bodySize) + " ..."), 
            subject;
        }
        function bodyComposer(mails) {
            return mails.length > 1 ? TR("mail.notification.GoToInbox", "Go to inbox") : getTruncatedSubject(mails[0]);
        }
        function getLink(user, mails) {
            return "/" + user + "/INBOX/1/" + (mails.length > 1 ? "" : mails[0].uid);
        }
        return EmailNotification;
    });
}(), function() {
    (0, System.amdDefine)("common/model/Flag.js", [], function() {
        function Flag(name, imap) {
            var that = this;
            that.name = name, that.imap = imap;
        }
        return Flag.SEEN = new Flag("seen", "\\Seen"), Flag.ANSWERED = new Flag("answered", "\\Answered"), 
        Flag.FORWARDED = new Flag("forwarded", "$Forwarded"), Flag.FLAGGED = new Flag("flagged", "\\Flagged"), 
        Flag.ONECOMLOADIMG = new Flag("oneComLoadImg", "OneComLoadImg"), Flag.ONECOMDISREGARDSPF = new Flag("oneComDisregardSPF", "oneComDisregardSPF"), 
        Flag.SUBMITPENDING = new Flag("submitPending", "$SubmitPending"), Flag;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root) {
        function error(type) {
            throw RangeError(errors[type]);
        }
        function map(array, fn) {
            for (var length = array.length, result = []; length--; ) result[length] = fn(array[length]);
            return result;
        }
        function mapDomain(string, fn) {
            var parts = string.split("@"), result = "";
            return parts.length > 1 && (result = parts[0] + "@", string = parts[1]), result + map(string.split(regexSeparators), fn).join(".");
        }
        function ucs2decode(string) {
            for (var value, extra, output = [], counter = 0, length = string.length; counter < length; ) (value = string.charCodeAt(counter++)) >= 55296 && value <= 56319 && counter < length ? 56320 == (64512 & (extra = string.charCodeAt(counter++))) ? output.push(((1023 & value) << 10) + (1023 & extra) + 65536) : (output.push(value), 
            counter--) : output.push(value);
            return output;
        }
        function ucs2encode(array) {
            return map(array, function(value) {
                var output = "";
                return value > 65535 && (output += stringFromCharCode((value -= 65536) >>> 10 & 1023 | 55296), 
                value = 56320 | 1023 & value), output += stringFromCharCode(value);
            }).join("");
        }
        function basicToDigit(codePoint) {
            return codePoint - 48 < 10 ? codePoint - 22 : codePoint - 65 < 26 ? codePoint - 65 : codePoint - 97 < 26 ? codePoint - 97 : base;
        }
        function digitToBasic(digit, flag) {
            return digit + 22 + 75 * (digit < 26) - ((0 != flag) << 5);
        }
        function adapt(delta, numPoints, firstTime) {
            var k = 0;
            for (delta = firstTime ? floor(delta / damp) : delta >> 1, delta += floor(delta / numPoints); delta > baseMinusTMin * tMax >> 1; k += base) delta = floor(delta / baseMinusTMin);
            return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
        }
        function decode(input) {
            var out, basic, j, index, oldi, w, k, digit, t, baseMinusT, output = [], inputLength = input.length, i = 0, n = initialN, bias = initialBias;
            for ((basic = input.lastIndexOf(delimiter)) < 0 && (basic = 0), j = 0; j < basic; ++j) input.charCodeAt(j) >= 128 && error("not-basic"), 
            output.push(input.charCodeAt(j));
            for (index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {
                for (oldi = i, w = 1, k = base; index >= inputLength && error("invalid-input"), 
                ((digit = basicToDigit(input.charCodeAt(index++))) >= base || digit > floor((maxInt - i) / w)) && error("overflow"), 
                i += digit * w, t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias, !(digit < t); k += base) w > floor(maxInt / (baseMinusT = base - t)) && error("overflow"), 
                w *= baseMinusT;
                bias = adapt(i - oldi, out = output.length + 1, 0 == oldi), floor(i / out) > maxInt - n && error("overflow"), 
                n += floor(i / out), i %= out, output.splice(i++, 0, n);
            }
            return ucs2encode(output);
        }
        function encode(input) {
            var n, delta, handledCPCount, basicLength, bias, j, m, q, k, t, currentValue, inputLength, handledCPCountPlusOne, baseMinusT, qMinusT, output = [];
            for (inputLength = (input = ucs2decode(input)).length, n = initialN, delta = 0, 
            bias = initialBias, j = 0; j < inputLength; ++j) (currentValue = input[j]) < 128 && output.push(stringFromCharCode(currentValue));
            for (handledCPCount = basicLength = output.length, basicLength && output.push(delimiter); handledCPCount < inputLength; ) {
                for (m = maxInt, j = 0; j < inputLength; ++j) (currentValue = input[j]) >= n && currentValue < m && (m = currentValue);
                for (m - n > floor((maxInt - delta) / (handledCPCountPlusOne = handledCPCount + 1)) && error("overflow"), 
                delta += (m - n) * handledCPCountPlusOne, n = m, j = 0; j < inputLength; ++j) if ((currentValue = input[j]) < n && ++delta > maxInt && error("overflow"), 
                currentValue == n) {
                    for (q = delta, k = base; t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias, 
                    !(q < t); k += base) qMinusT = q - t, baseMinusT = base - t, output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))), 
                    q = floor(qMinusT / baseMinusT);
                    output.push(stringFromCharCode(digitToBasic(q, 0))), bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength), 
                    delta = 0, ++handledCPCount;
                }
                ++delta, ++n;
            }
            return output.join("");
        }
        function toUnicode(input) {
            return mapDomain(input, function(string) {
                return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
            });
        }
        function toASCII(input) {
            return mapDomain(input, function(string) {
                return regexNonASCII.test(string) ? "xn--" + encode(string) : string;
            });
        }
        var freeExports = "object" == typeof exports && exports && !exports.nodeType && exports, freeModule = "object" == typeof module && module && !module.nodeType && module, freeGlobal = "object" == typeof global && global;
        freeGlobal.global !== freeGlobal && freeGlobal.window !== freeGlobal && freeGlobal.self !== freeGlobal || (root = freeGlobal);
        var punycode, key, maxInt = 2147483647, base = 36, tMin = 1, tMax = 26, skew = 38, damp = 700, initialBias = 72, initialN = 128, delimiter = "-", regexPunycode = /^xn--/, regexNonASCII = /[^\x20-\x7E]/, regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, errors = {
            overflow: "Overflow: input needs wider integers to process",
            "not-basic": "Illegal input >= 0x80 (not a basic code point)",
            "invalid-input": "Invalid input"
        }, baseMinusTMin = base - tMin, floor = Math.floor, stringFromCharCode = String.fromCharCode;
        if (punycode = {
            version: "1.3.1",
            ucs2: {
                decode: ucs2decode,
                encode: ucs2encode
            },
            decode: decode,
            encode: encode,
            toASCII: toASCII,
            toUnicode: toUnicode
        }, "function" == typeof define && "object" == typeof define.amd && define.amd) define("3rdparty/punycode.js", [], function() {
            return punycode;
        }) && define("punycode", [ "3rdparty/punycode.js" ], function(m) {
            return m;
        }); else if (freeExports && freeModule) if (module.exports == freeExports) freeModule.exports = punycode; else for (key in punycode) punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]); else root.punycode = punycode;
    }(this);
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/unicodeRegExp.js", [], factory) : root.unicodeRegExp = factory();
    }(this, function(xregexp) {
        function parseCharCode(u4, x2, literal) {
            return u4 || x2 ? parseInt(u4 || x2, 16) : literal.charCodeAt(0);
        }
        function charCodeToRegExpToken(charCode) {
            if (charCode >= 32 && charCode < 127) return String.fromCharCode(charCode);
            var hexStr = charCode.toString(16);
            return "\\u" + "0000".slice(hexStr.length) + hexStr;
        }
        var unicodeRegExp = {};
        unicodeRegExp.letter = /[A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]/, 
        unicodeRegExp.mark = /[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u08FE\u0900-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C01-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C82\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D02\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1DC0-\u1DE6\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE26]/, 
        unicodeRegExp.number = /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/, 
        unicodeRegExp.punctuation = /[\u0021-\u0023\u0025-\u002A\u002C-\u002F\u003A\u003B\u003F\u0040\u005B-\u005D\u005F\u007B\u007D\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E3B\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/, 
        unicodeRegExp.symbol = /[\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/, 
        unicodeRegExp.separator = /[\u0020\u00A0\u1680\u180E\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/, 
        unicodeRegExp.other = /[\u0000-\u001F\u007F-\u009F\u00AD\u0378\u0379\u037F-\u0383\u038B\u038D\u03A2\u0528-\u0530\u0557\u0558\u0560\u0588\u058B-\u058E\u0590\u05C8-\u05CF\u05EB-\u05EF\u05F5-\u0605\u061C\u061D\u06DD\u070E\u070F\u074B\u074C\u07B2-\u07BF\u07FB-\u07FF\u082E\u082F\u083F\u085C\u085D\u085F-\u089F\u08A1\u08AD-\u08E3\u08FF\u0978\u0980\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA\u09BB\u09C5\u09C6\u09C9\u09CA\u09CF-\u09D6\u09D8-\u09DB\u09DE\u09E4\u09E5\u09FC-\u0A00\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A\u0A3B\u0A3D\u0A43-\u0A46\u0A49\u0A4A\u0A4E-\u0A50\u0A52-\u0A58\u0A5D\u0A5F-\u0A65\u0A76-\u0A80\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA\u0ABB\u0AC6\u0ACA\u0ACE\u0ACF\u0AD1-\u0ADF\u0AE4\u0AE5\u0AF2-\u0B00\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A\u0B3B\u0B45\u0B46\u0B49\u0B4A\u0B4E-\u0B55\u0B58-\u0B5B\u0B5E\u0B64\u0B65\u0B78-\u0B81\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BBD\u0BC3-\u0BC5\u0BC9\u0BCE\u0BCF\u0BD1-\u0BD6\u0BD8-\u0BE5\u0BFB-\u0C00\u0C04\u0C0D\u0C11\u0C29\u0C34\u0C3A-\u0C3C\u0C45\u0C49\u0C4E-\u0C54\u0C57\u0C5A-\u0C5F\u0C64\u0C65\u0C70-\u0C77\u0C80\u0C81\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA\u0CBB\u0CC5\u0CC9\u0CCE-\u0CD4\u0CD7-\u0CDD\u0CDF\u0CE4\u0CE5\u0CF0\u0CF3-\u0D01\u0D04\u0D0D\u0D11\u0D3B\u0D3C\u0D45\u0D49\u0D4F-\u0D56\u0D58-\u0D5F\u0D64\u0D65\u0D76-\u0D78\u0D80\u0D81\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0DC9\u0DCB-\u0DCE\u0DD5\u0DD7\u0DE0-\u0DF1\u0DF5-\u0E00\u0E3B-\u0E3E\u0E5C-\u0E80\u0E83\u0E85\u0E86\u0E89\u0E8B\u0E8C\u0E8E-\u0E93\u0E98\u0EA0\u0EA4\u0EA6\u0EA8\u0EA9\u0EAC\u0EBA\u0EBE\u0EBF\u0EC5\u0EC7\u0ECE\u0ECF\u0EDA\u0EDB\u0EE0-\u0EFF\u0F48\u0F6D-\u0F70\u0F98\u0FBD\u0FCD\u0FDB-\u0FFF\u10C6\u10C8-\u10CC\u10CE\u10CF\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B\u135C\u137D-\u137F\u139A-\u139F\u13F5-\u13FF\u169D-\u169F\u16F1-\u16FF\u170D\u1715-\u171F\u1737-\u173F\u1754-\u175F\u176D\u1771\u1774-\u177F\u17DE\u17DF\u17EA-\u17EF\u17FA-\u17FF\u180F\u181A-\u181F\u1878-\u187F\u18AB-\u18AF\u18F6-\u18FF\u191D-\u191F\u192C-\u192F\u193C-\u193F\u1941-\u1943\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19CF\u19DB-\u19DD\u1A1C\u1A1D\u1A5F\u1A7D\u1A7E\u1A8A-\u1A8F\u1A9A-\u1A9F\u1AAE-\u1AFF\u1B4C-\u1B4F\u1B7D-\u1B7F\u1BF4-\u1BFB\u1C38-\u1C3A\u1C4A-\u1C4C\u1C80-\u1CBF\u1CC8-\u1CCF\u1CF7-\u1CFF\u1DE7-\u1DFB\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FC5\u1FD4\u1FD5\u1FDC\u1FF0\u1FF1\u1FF5\u1FFF\u200B-\u200F\u202A-\u202E\u2060-\u206F\u2072\u2073\u208F\u209D-\u209F\u20BA-\u20CF\u20F1-\u20FF\u218A-\u218F\u23F4-\u23FF\u2427-\u243F\u244B-\u245F\u2700\u2B4D-\u2B4F\u2B5A-\u2BFF\u2C2F\u2C5F\u2CF4-\u2CF8\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D71-\u2D7E\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF\u2E3C-\u2E7F\u2E9A\u2EF4-\u2EFF\u2FD6-\u2FEF\u2FFC-\u2FFF\u3040\u3097\u3098\u3100-\u3104\u312E-\u3130\u318F\u31BB-\u31BF\u31E4-\u31EF\u321F\u32FF\u4DB6-\u4DBF\u9FCD-\u9FFF\uA48D-\uA48F\uA4C7-\uA4CF\uA62C-\uA63F\uA698-\uA69E\uA6F8-\uA6FF\uA78F\uA794-\uA79F\uA7AB-\uA7F7\uA82C-\uA82F\uA83A-\uA83F\uA878-\uA87F\uA8C5-\uA8CD\uA8DA-\uA8DF\uA8FC-\uA8FF\uA954-\uA95E\uA97D-\uA97F\uA9CE\uA9DA-\uA9DD\uA9E0-\uA9FF\uAA37-\uAA3F\uAA4E\uAA4F\uAA5A\uAA5B\uAA7C-\uAA7F\uAAC3-\uAADA\uAAF7-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F-\uABBF\uABEE\uABEF\uABFA-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBC2-\uFBD2\uFD40-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFE\uFDFF\uFE1A-\uFE1F\uFE27-\uFE2F\uFE53\uFE67\uFE6C-\uFE6F\uFE75\uFEFD-\uFF00\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFDF\uFFE7\uFFEF-\uFFFB\uFFFE\uFFFF]/, 
        unicodeRegExp.spliceCharacterClassRegExps = function() {
            var args = Array.prototype.slice.call(arguments);
            return new RegExp("[" + args.map(function(regExp) {
                return regExp.source.replace(/^\[|\]$/g, "");
            }).join("") + "]");
        }, unicodeRegExp.visible = unicodeRegExp.spliceCharacterClassRegExps(unicodeRegExp.letter, unicodeRegExp.mark, unicodeRegExp.number, unicodeRegExp.punctuation, unicodeRegExp.symbol), 
        unicodeRegExp.printable = unicodeRegExp.spliceCharacterClassRegExps(unicodeRegExp.visible, unicodeRegExp.separator);
        return unicodeRegExp.removeCharacterFromCharacterClassRegExp = function(regExp, ch) {
            var charCode = ch.charCodeAt(0);
            return new RegExp("[" + regExp.source.replace(/^\[|\]$/g, "").replace(/(?:\\u([0-9a-f]{4})|\\x([0-9a-f]{2})|([^\-]))(?:-(?:\\u([0-9a-f]{4})|\\x([0-9a-f]{2})|([^\-])))?/gi, function($0, fromU4, fromX2, fromLiteral, toU4, toX2, toLiteral) {
                var fromCharCode = parseCharCode(fromU4, fromX2, fromLiteral);
                if (toU4 || toX2 || toLiteral) {
                    var toCharCode = parseCharCode(toU4, toX2, toLiteral);
                    return charCode === fromCharCode ? charCode + 1 < toCharCode ? charCodeToRegExpToken(charCode + 1) + "-" + charCodeToRegExpToken(toCharCode) : charCodeToRegExpToken(toCharCode) : charCode === toCharCode ? fromCharCode < charCode - 1 ? charCodeToRegExpToken(fromCharCode) + "-" + charCodeToRegExpToken(charCode - 1) : charCodeToRegExpToken(fromCharCode) : charCode > fromCharCode && charCode < toCharCode ? charCodeToRegExpToken(fromCharCode) + (charCode > fromCharCode + 1 ? "-" + charCodeToRegExpToken(charCode - 1) : "") + (charCode + 1 < toCharCode ? charCodeToRegExpToken(charCode + 1) + "-" : "") + charCodeToRegExpToken(toCharCode) : $0;
                }
                return charCode === fromCharCode ? "" : charCodeToRegExpToken(fromCharCode);
            }) + "]");
        }, unicodeRegExp;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory(require("one-validation"), require("punycode"), require("unicoderegexp")) : "function" == typeof define && define.amd ? define("3rdparty/purify.js", [ "3rdparty/onevalidation/validation.js", "3rdparty/punycode.js", "3rdparty/unicodeRegExp.js" ], factory) : root.purify = factory(root.one.validation, root.punycode, root.unicodeRegExp);
    }(this, function(oneValidation, punycode, unicodeRegExp) {
        var purify = {};
        purify.boolean = function(rawValue, defaultValue) {
            if ("boolean" == typeof rawValue) return rawValue;
            if ("string" == typeof rawValue) {
                var isTrue = /^(?:1|on|true|yes)$/i.test(rawValue), isFalse = /^(?:0|off|false|no)$/i.test(rawValue);
                return !!isTrue || !isFalse && defaultValue;
            }
            return defaultValue;
        }, purify.email = purify.emailAddress = function(rawValue, defaultValue) {
            var fragments, encodedEmail, encodedDomain;
            try {
                if ("string" == typeof rawValue && oneValidation.emailIdn.test(rawValue)) {
                    fragments = rawValue.split("@"), encodedDomain = 2 === fragments.length && punycode.toASCII(fragments[1]).toLowerCase();
                    var decodedDomain = punycode.toUnicode(encodedDomain);
                    /\.[^\.]{2,}$/.test(decodedDomain) || (encodedDomain = void 0);
                }
            } catch (e) {
                encodedDomain = void 0;
            } finally {
                return encodedEmail = encodedDomain && fragments[0] + "@" + encodedDomain, "string" == typeof encodedEmail && oneValidation.email.test(encodedEmail) ? encodedEmail : defaultValue;
            }
        }, purify.emailIdn = purify.emailAddressIdn = function(rawValue, defaultValue) {
            var fragments, decodedDomain, decodedEmail;
            try {
                "string" == typeof rawValue && oneValidation.emailIdn.test(rawValue) && (fragments = rawValue.split("@"), 
                decodedDomain = 2 === fragments.length && punycode.toUnicode(fragments[1]).toLowerCase(), 
                /\.[^\.]{2,}$/.test(decodedDomain) || (decodedDomain = void 0));
            } catch (e) {
                decodedDomain = void 0;
            } finally {
                return decodedEmail = decodedDomain && fragments[0] + "@" + decodedDomain, "string" == typeof decodedEmail && oneValidation.emailIdn.test(decodedEmail) ? decodedEmail : defaultValue;
            }
        }, purify.domain = purify.domainName = function(rawValue, defaultValue) {
            var encodedDomain;
            try {
                if ("string" == typeof rawValue && oneValidation.domainIdn.test(rawValue)) {
                    encodedDomain = punycode.toASCII(rawValue.toLowerCase());
                    var decodedDomain = punycode.toUnicode(encodedDomain);
                    /\.[^\.]{2,}$/.test(decodedDomain) || (encodedDomain = void 0);
                }
            } catch (e) {
                encodedDomain = void 0;
            } finally {
                return "string" == typeof encodedDomain && oneValidation.domain.test(encodedDomain) ? encodedDomain : defaultValue;
            }
        }, purify.domainIdn = purify.domainNameIdn = function(rawValue, defaultValue) {
            var decodedDomain;
            try {
                "string" == typeof rawValue && oneValidation.domainIdn.test(rawValue) && (decodedDomain = punycode.toUnicode(rawValue.toLowerCase()), 
                /\.[^\.]{2,}$/.test(decodedDomain) || (decodedDomain = void 0));
            } catch (e) {
                decodedDomain = void 0;
            } finally {
                return "string" == typeof decodedDomain && oneValidation.domainIdn.test(decodedDomain) ? decodedDomain : defaultValue;
            }
        }, purify.url = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && oneValidation.httpUrl.test(rawValue) ? rawValue : defaultValue;
        };
        var urlWithLocalhostRegExp = new RegExp("^(?:" + oneValidation.createHttpishUrlRegExp({
            scheme: /https?/,
            localhost: !0
        }).source + ")$");
        purify.urlWithLocalhost = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && urlWithLocalhostRegExp.test(rawValue) ? rawValue : defaultValue;
        }, purify.integer = function(rawValue, defaultValue) {
            var integer;
            return "string" == typeof rawValue ? integer = parseInt(rawValue, 10) : "number" == typeof rawValue && (integer = Math.floor(rawValue)), 
            "number" == typeof integer && isFinite(integer) && !isNaN(integer) ? integer : defaultValue;
        }, purify.integerInRange = function(rawValue, lower, upper, defaultValue) {
            var integer = purify.integer(rawValue);
            return "number" == typeof integer && !isNaN(integer) && isFinite(integer) && (void 0 === lower || integer >= lower) && (void 0 === upper || integer <= upper) ? integer : defaultValue;
        }, purify.positiveInteger = function(rawValue, defaultValue) {
            var integer = purify.integer(rawValue);
            return void 0 !== integer && !isNaN(integer) && isFinite(integer) && integer >= 1 ? integer : defaultValue;
        }, purify.positiveIntegerOrZero = function(rawValue, defaultValue) {
            var integer = purify.integer(rawValue);
            return void 0 !== integer && !isNaN(integer) && isFinite(integer) && integer >= 0 ? integer : defaultValue;
        }, purify.float = function(rawValue, defaultValue) {
            var number;
            return "string" == typeof rawValue ? /^[\-+]?[0-9]*\.?[0-9]+$/.test(rawValue) && (number = parseFloat(rawValue)) : "number" == typeof rawValue && (number = rawValue), 
            void 0 !== number && !isNaN(number) && isFinite(number) ? number : defaultValue;
        }, purify.positiveFloat = function(rawValue, defaultValue) {
            var number;
            return "string" == typeof rawValue ? /^\+?[0-9]*\.?[0-9]+$/.test(rawValue) && (number = parseFloat(rawValue)) : "number" == typeof rawValue && (number = rawValue), 
            void 0 !== number && !isNaN(number) && isFinite(number) && number > 0 ? number : defaultValue;
        }, purify.positiveFloatOrZero = function(rawValue, defaultValue) {
            var number;
            return "string" == typeof rawValue ? /^\+?[0-9]*\.?[0-9]+$/.test(rawValue) && (number = parseFloat(rawValue)) : "number" == typeof rawValue && (number = rawValue), 
            void 0 !== number && !isNaN(number) && isFinite(number) && number >= 0 ? number : defaultValue;
        };
        var nonEmptyVisibleUnicodeRegExp = new RegExp("^" + unicodeRegExp.visible.source + "+$");
        purify.nonEmptyVisibleUnicode = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && nonEmptyVisibleUnicodeRegExp.test(rawValue) ? rawValue : defaultValue;
        };
        var visibleUnicodeRegExp = new RegExp("^" + unicodeRegExp.visible.source + "*$");
        purify.visibleUnicode = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && visibleUnicodeRegExp.test(rawValue) ? rawValue : defaultValue;
        };
        var nonEmptyPrintableUnicodeRegExp = new RegExp("^" + unicodeRegExp.printable.source + "+$");
        purify.nonEmptyPrintableUnicode = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && nonEmptyPrintableUnicodeRegExp.test(rawValue) ? rawValue : defaultValue;
        };
        var printableUnicodeRegExp = new RegExp("^" + unicodeRegExp.printable.source + "*$");
        return purify.printableUnicode = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && printableUnicodeRegExp.test(rawValue) ? rawValue : defaultValue;
        }, purify.nonEmptyVisibleAscii = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && /^[\x21-\x7e]+$/.test(rawValue) ? rawValue : defaultValue;
        }, purify.visibleAscii = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && /^[\x21-\x7e]*$/.test(rawValue) ? rawValue : defaultValue;
        }, purify.nonEmptyPrintableAscii = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && /^[\x20-\x7e]+$/.test(rawValue) ? rawValue : defaultValue;
        }, purify.printableAscii = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && /^[\x20-\x7e]*$/.test(rawValue) ? rawValue : defaultValue;
        }, purify.alphaNumeric = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && /^[a-z0-9]*$/i.test(rawValue) ? rawValue : "number" == typeof rawValue && isFinite(rawValue) && !isNaN(rawValue) && rawValue === Math.floor(rawValue) ? String(rawValue) : defaultValue;
        }, purify.nonEmptyAlphaNumeric = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && /^[a-z0-9]+$/i.test(rawValue) ? rawValue : "number" == typeof rawValue && isFinite(rawValue) && !isNaN(rawValue) && rawValue === Math.floor(rawValue) ? String(rawValue) : defaultValue;
        }, purify.alphaNumericWithDot = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && /^[a-z0-9\.]*$/i.test(rawValue) ? rawValue : "number" == typeof rawValue && isFinite(rawValue) && !isNaN(rawValue) ? String(rawValue) : defaultValue;
        }, purify.nonEmptyAlphaNumericWithDot = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && /^[a-z0-9\.]+$/i.test(rawValue) ? rawValue : "number" == typeof rawValue && isFinite(rawValue) && !isNaN(rawValue) ? String(rawValue) : defaultValue;
        }, purify.uuid = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && oneValidation.uuid.test(rawValue) ? rawValue : defaultValue;
        }, purify.upperCaseUuid = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && oneValidation.upperCaseUuid.test(rawValue) ? rawValue : defaultValue;
        }, purify.lowerCaseUuid = function(rawValue, defaultValue) {
            return "string" == typeof rawValue && oneValidation.lowerCaseUuid.test(rawValue) ? rawValue : defaultValue;
        }, purify.json = function(rawValue, defaultValue) {
            if ("string" == typeof rawValue) try {
                return JSON.parse(rawValue);
            } catch (e) {}
            return defaultValue;
        }, purify;
    });
}(), function() {
    (0, System.amdDefine)("webmail/model/Recipient.js", [ "3rdparty/onevalidation/validation.js", "3rdparty/purify.js" ], function(validation, purify) {
        function Recipient(data) {
            if ("string" == typeof data) return Recipient.from(data);
            this.email = purify.email(data.email), this.displayEmail = purify.emailIdn(data.email) || "", 
            !data.email || this.email || data.displayName || (data.displayName = data.email), 
            this.displayName = data.displayName || data.displayname, this.photoUrl = data.photo, 
            this.id = data.id;
        }
        Recipient.prototype.toArray = function() {
            return {
                email: this.email,
                displayEmail: this.displayEmail,
                displayName: this.displayName,
                photoUrl: this.photoUrl,
                id: this.id
            };
        }, Recipient.prototype.toString = function() {
            return this.displayName && this.displayName !== this.email ? this.displayName + (this.email ? " <" + this.email + ">" : "") : this.email || "";
        }, Recipient.prototype.getEmail = function() {
            return this.email;
        }, Recipient.prototype.toEditDisplayString = function() {
            var displayName = this.displayName;
            return displayName && displayName !== this.displayEmail ? (displayName.match(/^".*"$/) && (displayName = '"' + displayName + '"'), 
            displayName + (this.displayEmail ? " <" + this.displayEmail + ">" : "")) : this.displayEmail;
        }, Recipient.prototype.toDisplayString = function() {
            return this.displayName || this.displayEmail;
        }, Recipient.prototype.hasEmail = function(email) {
            return this.email && this.email.toLowerCase() === email.toLowerCase();
        }, Recipient.prototype.sortKey = function() {
            return this.toString().toLowerCase();
        }, Recipient.toJS = function(recipient) {
            var result = {
                email: purify.email(recipient.email)
            };
            return recipient.displayName && (result.displayName = recipient.displayName), result;
        }, Recipient.prototype.isInvalidEmail = function() {
            return !validation.email.test(this.email);
        };
        var displayNameAndEmailRegExp = new RegExp("^(.+)(?:<(" + validation.fragments.emailIdn.source + ")>|\\s+(" + validation.fragments.emailIdn.source + "))$", "i");
        return Recipient.from = function(text) {
            text = (text || "").trim();
            var displayName, email, matches = displayNameAndEmailRegExp.exec(text), recipientProperties = {};
            return matches ? ((displayName = matches[1].trim()) && displayName.match(/^".*"$/) && (displayName = displayName.replace(/^"/, "").replace(/"$/, "")), 
            email = matches[2] || matches[3], recipientProperties.displayName = displayName, 
            recipientProperties.email = purify.email(email)) : (email = purify.email(text)) ? recipientProperties.email = email : recipientProperties.displayName = text, 
            new Recipient(recipientProperties);
        }, Recipient;
    });
}(), function() {
    (0, System.amdDefine)("webmail/model/mailparts/TextPart.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "webmail/model/MailPart.js", "3rdparty/mario.js" ], function($, ko, MailPart, mario) {
        function TextPart(part, mail) {
            MailPart.call(this, part, mail), this.renderLimit = CONFIG.webmail.htmlPartSizeRenderLimit, 
            this.template = "mailPartText", this.htmlContent = ko.observable(""), this.isLoaded = ko.observable(!1), 
            this.hasExternalImages = ko.observable(!1), this.domReference = null;
        }
        return TextPart.prototype = Object.create(MailPart.prototype), TextPart.prototype.constructor = TextPart, 
        TextPart.prototype.mailPartTooBig = function() {
            return "text/html" === this.contentType && this.size() > this.renderLimit;
        }, TextPart.prototype.url = function() {
            return this.mail.getMailUrl() + "/" + this.partId + "?preserveoriginal=true";
        }, TextPart.prototype.urlWithExternalImagesAllowed = function() {
            return this.mail.getMailUrl() + "/" + this.partId + "?preserveoriginal=true&allowexternalimages=true";
        }, TextPart.prototype.afterLoad = function(html) {
            this.htmlContent(this.cleanupHTML(html)), this.handleExternalImages(), this.isLoaded(!0);
        }, TextPart.prototype.cleanupHTML = function(htmlString) {
            mario.firefox && (htmlString = htmlString.replace(/<div class="oneComWebmail\-html oneComWebmail\-mail"><div class="oneComWebmail\-body">/g, ""));
            var elements = $.parseHTML(htmlString) || [];
            return $("div.oneComWebmail-html > div.oneComWebmail-body", elements).each(function() {
                var parent = this.parentNode, $parent = $(parent);
                1 === this.attributes.length && 1 === parent.attributes.length && $parent.parent().is("div.oneComWebmail-html > div.oneComWebmail-body") && $parent.before(this.childNodes);
            }), $("div.oneComWebmail-html > div.oneComWebmail-body", elements).each(function() {
                this.childNodes.length < 1 && $(this).parent().remove();
            }), $("img", elements).each(function() {
                $(this).attr("src") || $(this).attr("data-src") || $(this).remove();
            }), elements.map(function(node) {
                return 1 === node.nodeType ? node.outerHTML : node.data.replace(/</g, "&lt;");
            }).join("");
        }, TextPart.prototype.setDomReference = function(element) {
            this.domReference = element;
        }, TextPart.prototype.getOrCreateElement = function() {
            return this.domReference ? this.domReference : $("<div>").html(this.htmlContent());
        }, TextPart.prototype.handleExternalImages = function(element) {
            element = element || this.getOrCreateElement(), $(element).find("span#externalImagesFiltered").length > 0 && (this.mail.oneComLoadImg() && this.loadExternalImages(element), 
            this.hasExternalImages(!0));
        }, TextPart.prototype.loadExternalImages = function(element) {
            element = element || this.getOrCreateElement(), $(element).find("table[data-src], tr[data-src], td[data-src], th[data-src], img[data-src]").each(function() {
                var $this = $(this);
                $this.attr("img" === this.nodeName.toLowerCase() ? "src" : "background", $this.attr("data-src")), 
                $this.removeAttr("data-src");
            }), this.htmlContent($(element).html());
        }, TextPart;
    });
}(), function() {
    (0, System.amdDefine)("webmail/model/mailparts/InlineImagePart.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "webmail/model/MailPart.js" ], function(ko, util, MailPart) {
        function InlineImagePart(part, mail) {
            MailPart.call(this, part, mail), this.template = "mailPartInlineImage";
        }
        return InlineImagePart.prototype = Object.create(MailPart.prototype), InlineImagePart.prototype.constructor = InlineImagePart, 
        InlineImagePart.prototype.url = function() {
            return this.mail.getMailUrl() + "/" + this.partId;
        }, InlineImagePart.prototype.urlWithContentId = function() {
            var contentId = this.contentId ? "contentId=" + this.contentId : "setContentId=" + util.uuid();
            return this.mail.getMailUrl() + "/" + this.partId + "?" + contentId;
        }, InlineImagePart;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = {
            binary: {},
            application: {
                "atom+xml": {
                    extensions: [ "atom" ],
                    className: "sgml",
                    path: "source"
                },
                "atomcat+xml": {
                    extensions: [ "atomcat" ],
                    className: "sgml",
                    path: "source"
                },
                "atomsvc+xml": {
                    extensions: [ "atomsvc" ],
                    className: "sgml",
                    path: "source"
                },
                "ccxml+xml": {
                    extensions: [ "ccxml" ],
                    className: "sgml",
                    path: "source"
                },
                "davmount+xml": {
                    extensions: [ "davmount" ],
                    className: "sgml",
                    path: "source"
                },
                "dssc+xml": {
                    extensions: [ "xdssc" ],
                    className: "sgml",
                    path: "source"
                },
                ecmascript: {
                    extensions: [ "ecma" ],
                    path: "source"
                },
                "emma+xml": {
                    extensions: [ "emma" ],
                    className: "sgml",
                    path: "source"
                },
                "epub+zip": {
                    extensions: [ "epub" ],
                    path: "archive"
                },
                "inkml+xml": {
                    extensions: [ "ink", "inkml" ],
                    className: "sgml",
                    path: "source"
                },
                "java-archive": {
                    extensions: [ "jar" ],
                    path: "archive"
                },
                javascript: {
                    extensions: [ "js" ],
                    className: "sgml",
                    path: "source"
                },
                json: {
                    extensions: [ "json" ],
                    className: "sgml",
                    path: "source"
                },
                "lost+xml": {
                    extensions: [ "lostxml" ],
                    className: "sgml",
                    path: "source"
                },
                "mads+xml": {
                    extensions: [ "mads" ],
                    className: "sgml",
                    path: "source"
                },
                "marcxml+xml": {
                    extensions: [ "mrcx" ],
                    className: "sgml",
                    path: "source"
                },
                "mathml+xml": {
                    extensions: [ "mathml" ],
                    className: "sgml",
                    path: "source"
                },
                "mediaservercontrol+xml": {
                    extensions: [ "mscml" ],
                    className: "sgml",
                    path: "source"
                },
                "metalink4+xml": {
                    extensions: [ "meta4" ],
                    className: "sgml",
                    path: "source"
                },
                "mets+xml": {
                    extensions: [ "mets" ],
                    className: "sgml",
                    path: "source"
                },
                "mods+xml": {
                    extensions: [ "mods" ],
                    className: "sgml",
                    path: "source"
                },
                msword: {
                    extensions: [ "doc", "dot" ],
                    className: "x-office-document",
                    path: "document"
                },
                "oebps-package+xml": {
                    extensions: [ "opf" ],
                    className: "sgml",
                    path: "source"
                },
                "patch-ops-error+xml": {
                    extensions: [ "xer" ],
                    className: "sgml",
                    path: "source"
                },
                pdf: {
                    extensions: [ "pdf" ],
                    className: "pdf"
                },
                "pls+xml": {
                    extensions: [ "pls" ],
                    className: "sgml",
                    path: "source"
                },
                "pskc+xml": {
                    extensions: [ "pskcxml" ],
                    className: "sgml",
                    path: "source"
                },
                "rdf+xml": {
                    extensions: [ "rdf" ],
                    className: "sgml",
                    path: "source"
                },
                "reginfo+xml": {
                    extensions: [ "rif" ],
                    className: "sgml",
                    path: "source"
                },
                "resource-lists+xml": {
                    extensions: [ "rl" ],
                    className: "sgml",
                    path: "source"
                },
                "resource-lists-diff+xml": {
                    extensions: [ "rld" ],
                    className: "sgml",
                    path: "source"
                },
                "rls-services+xml": {
                    extensions: [ "rs" ],
                    className: "sgml",
                    path: "source"
                },
                "rsd+xml": {
                    extensions: [ "rsd" ],
                    className: "sgml",
                    path: "source"
                },
                "rss+xml": {
                    extensions: [ "rss" ],
                    className: "sgml",
                    path: "source"
                },
                rtf: {
                    extensions: [ "rtf" ],
                    path: "document"
                },
                "sbml+xml": {
                    extensions: [ "sbml" ],
                    className: "sgml",
                    path: "source"
                },
                "shf+xml": {
                    extensions: [ "shf" ],
                    className: "sgml",
                    path: "source"
                },
                "smil+xml": {
                    extensions: [ "smi", "smil" ],
                    className: "sgml",
                    path: "source"
                },
                "sparql-results+xml": {
                    extensions: [ "srx" ],
                    className: "sgml",
                    path: "source"
                },
                "srgs+xml": {
                    extensions: [ "grxml" ],
                    className: "sgml",
                    path: "source"
                },
                "sru+xml": {
                    extensions: [ "sru" ],
                    className: "sgml",
                    path: "source"
                },
                "ssml+xml": {
                    extensions: [ "ssml" ],
                    className: "sgml",
                    path: "source"
                },
                "tei+xml": {
                    extensions: [ "tei", "teicorpus" ],
                    className: "sgml",
                    path: "source"
                },
                "thraud+xml": {
                    extensions: [ "tfi" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.adobe.air-application-installer-package+zip": {
                    extensions: [ "air" ],
                    path: "archive"
                },
                "vnd.adobe.xdp+xml": {
                    extensions: [ "xdp" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.android.package-archive": {
                    extensions: [ "apk" ],
                    path: "archive"
                },
                "vnd.apple.installer+xml": {
                    extensions: [ "mpkg" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.chemdraw+xml": {
                    extensions: [ "cdxml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.criticaltools.wbs+xml": {
                    extensions: [ "wbs" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.dece.ttml+xml": {
                    extensions: [ "uvt", "uvvt" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.eszigno3+xml": {
                    extensions: [ "es3", "et3" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.google-earth.kml+xml": {
                    extensions: [ "kml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.hal+xml": {
                    extensions: [ "hal" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.handheld-entertainment+xml": {
                    extensions: [ "zmm" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.irepository.package+xml": {
                    extensions: [ "irp" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.kde.kword": {
                    extensions: [ "kwd", "kwt" ],
                    path: "document"
                },
                "vnd.las.las+xml": {
                    extensions: [ "lasxml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.llamagraphics.life-balance.exchange+xml": {
                    extensions: [ "lbe" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.mozilla.xul+xml": {
                    extensions: [ "xul" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.ms-excel": {
                    extensions: [ "xls", "xlm", "xla", "xlc", "xlt", "xlw" ],
                    className: "x-office-spreadsheet",
                    path: "document"
                },
                "vnd.ms-powerpoint": {
                    extensions: [ "ppt", "pps", "pot" ],
                    className: "x-office-presentation",
                    path: "document"
                },
                "vnd.oasis.opendocument.presentation": {
                    extensions: [ "odp" ],
                    className: "x-office-presentation",
                    path: "document"
                },
                "vnd.oasis.opendocument.spreadsheet": {
                    extensions: [ "ods" ],
                    className: "x-office-spreadsheet",
                    path: "document"
                },
                "vnd.oasis.opendocument.text": {
                    extensions: [ "odt" ],
                    className: "x-office-document",
                    path: "document"
                },
                "vnd.oma.dd2+xml": {
                    extensions: [ "dd2" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.openxmlformats-officedocument.presentationml.presentation": {
                    extensions: [ "pptx" ],
                    className: "x-office-presentation",
                    path: "document"
                },
                "vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                    extensions: [ "xlsx" ],
                    className: "x-office-spreadsheet",
                    path: "document"
                },
                "vnd.openxmlformats-officedocument.wordprocessingml.document": {
                    extensions: [ "docx" ],
                    className: "x-office-document",
                    path: "document"
                },
                "vnd.recordare.musicxml": {
                    extensions: [ "mxl" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.recordare.musicxml+xml": {
                    extensions: [ "musicxml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.route66.link66+xml": {
                    extensions: [ "link66" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.solent.sdkm+xml": {
                    extensions: [ "sdkm", "sdkd" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.calc": {
                    extensions: [ "sxc" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.calc.template": {
                    extensions: [ "stc" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.draw": {
                    extensions: [ "sxd" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.draw.template": {
                    extensions: [ "std" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.impress": {
                    extensions: [ "sxi" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.impress.template": {
                    extensions: [ "sti" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.math": {
                    extensions: [ "sxm" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.writer": {
                    extensions: [ "sxw" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.writer.global": {
                    extensions: [ "sxg" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.writer.template": {
                    extensions: [ "stw" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.syncml+xml": {
                    extensions: [ "xsm" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.syncml.dm+wbxml": {
                    extensions: [ "bdm" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.syncml.dm+xml": {
                    extensions: [ "xdm" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.tcpdump.pcap": {
                    extensions: [ "pcap", "cap", "dmp" ],
                    path: "archive"
                },
                "vnd.uoml+xml": {
                    extensions: [ "uoml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.wap.wbxml": {
                    extensions: [ "wbxml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.wordperfect": {
                    extensions: [ "wpd" ],
                    path: "document"
                },
                "vnd.yamaha.openscoreformat.osfpvg+xml": {
                    extensions: [ "osfpvg" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.zzazz.deck+xml": {
                    extensions: [ "zaz" ],
                    className: "sgml",
                    path: "source"
                },
                "voicexml+xml": {
                    extensions: [ "vxml" ],
                    className: "sgml",
                    path: "source"
                },
                "wsdl+xml": {
                    extensions: [ "wsdl" ],
                    className: "sgml",
                    path: "source"
                },
                "wspolicy+xml": {
                    extensions: [ "wspolicy" ],
                    className: "sgml",
                    path: "source"
                },
                "x-7z-compressed": {
                    extensions: [ "7z" ],
                    path: "archive"
                },
                "x-abiword": {
                    extensions: [ "abw" ],
                    path: "document"
                },
                "x-ace-compressed": {
                    extensions: [ "ace" ],
                    path: "archive"
                },
                "x-bzip": {
                    extensions: [ "bz" ],
                    className: "zip",
                    path: "archive"
                },
                "x-bzip2": {
                    extensions: [ "boz" ],
                    className: "zip",
                    path: "archive"
                },
                "x-csh": {
                    extensions: [ "csh" ],
                    className: "x-sh"
                },
                "x-debian-package": {
                    extensions: [ "deb", "udeb" ],
                    path: "archive"
                },
                "x-dtbncx+xml": {
                    extensions: [ "ncx" ],
                    className: "sgml",
                    path: "source"
                },
                "x-dtbook+xml": {
                    extensions: [ "dtb" ],
                    className: "sgml",
                    path: "source"
                },
                "x-dtbresource+xml": {
                    extensions: [ "res" ],
                    className: "sgml",
                    path: "source"
                },
                "x-gtar": {
                    extensions: [ "gtar" ],
                    path: "archive"
                },
                "x-latex": {
                    extensions: [ "latex" ],
                    path: "source"
                },
                "x-msdownload": {
                    extensions: [ "exe", "dll", "com", "bat", "msi" ],
                    className: "x-sh"
                },
                "x-rar-compressed": {
                    extensions: [ "rar" ],
                    className: "rar",
                    path: "archive"
                },
                "x-sh": {
                    extensions: [ "sh" ],
                    className: "x-sh"
                },
                "x-shockwave-flash": {
                    extensions: [ "swf", "fla" ],
                    className: "x-shockwave-flash"
                },
                "x-stuffit": {
                    extensions: [ "sit" ],
                    path: "archive"
                },
                "x-tar": {
                    extensions: [ "tar" ],
                    path: "archive"
                },
                "x-tex": {
                    extensions: [ "tex" ],
                    path: "source"
                },
                "xcap-diff+xml": {
                    extensions: [ "xdf" ],
                    className: "sgml",
                    path: "source"
                },
                "xenc+xml": {
                    extensions: [ "xenc" ],
                    className: "sgml",
                    path: "source"
                },
                "xhtml+xml": {
                    extensions: [ "xhtml", "xht" ],
                    className: "sgml",
                    path: "source"
                },
                xml: {
                    extensions: [ "xml", "xsl" ],
                    className: "sgml",
                    path: "source"
                },
                "xml-dtd": {
                    extensions: [ "dtd" ],
                    className: "sgml",
                    path: "source"
                },
                "xop+xml": {
                    extensions: [ "xop" ],
                    className: "sgml",
                    path: "source"
                },
                "xslt+xml": {
                    extensions: [ "xslt" ],
                    className: "sgml",
                    path: "source"
                },
                "xspf+xml": {
                    extensions: [ "xspf" ],
                    className: "sgml",
                    path: "source"
                },
                "xv+xml": {
                    extensions: [ "mxml", "xhvml", "xvml", "xvm" ],
                    className: "sgml",
                    path: "source"
                },
                "yin+xml": {
                    extensions: [ "yin" ],
                    className: "sgml",
                    path: "source"
                },
                zip: {
                    extensions: [ "zip" ],
                    className: "zip",
                    path: "archive"
                }
            },
            archive: {
                "*": {
                    extensions: [ "lzh", "iso", "dmg", "pkg" ]
                },
                zip: {
                    extensions: [ "bz2", "gz", "gzip", "z" ],
                    className: "zip"
                }
            },
            audio: {
                "*": {
                    extensions: [ "adp", "au", "snd", "mid", "midi", "kar", "rmi", "oga", "ogg", "spx", "uva", "uvva", "eol", "dra", "dts", "dtshd", "lvp", "pya", "ecelp4800", "ecelp7470", "ecelp9600", "rip", "weba", "aac", "aif", "aiff", "aifc", "m3u", "wax", "wma", "ram", "ra", "rmp", "flac" ]
                },
                mp4: {
                    extensions: [ "mp4a", "m4a" ],
                    className: "mpeg"
                },
                mpeg: {
                    extensions: [ "mpga", "mp2", "mp2a", "mp3", "m2a", "m3a" ],
                    className: "mpeg"
                },
                "x-wav": {
                    extensions: [ "wav" ],
                    className: "x-wav"
                }
            },
            image: {
                bmp: {
                    extensions: [ "bmp" ],
                    className: "bmp"
                },
                "*": {
                    extensions: [ "cgm", "g3", "ief", "ktx", "btif", "psd", "uvi", "uvvi", "uvg", "uvvg", "djvu", "djv", "dwg", "dxf", "fbs", "fpx", "fst", "mmr", "rlc", "mdi", "npx", "wbmp", "xif", "webp", "ras", "cmx", "fh", "fhc", "fh4", "fh5", "fh7", "ico", "pcx", "pic", "pct", "pnm", "pbm", "pgm", "ppm", "rgb", "xbm", "xpm", "xwd" ]
                },
                gif: {
                    extensions: [ "gif" ],
                    className: "gif"
                },
                jpeg: {
                    extensions: [ "jpeg", "jpg", "jpe" ],
                    className: "jpeg"
                },
                png: {
                    extensions: [ "png" ],
                    className: "png"
                },
                "svg+xml": {
                    extensions: [ "svg", "svgz" ],
                    className: "sgml",
                    path: "source"
                },
                tiff: {
                    extensions: [ "tiff", "tif" ],
                    className: "tiff"
                }
            },
            text: {
                "*": {
                    extensions: [ "sub", "ics", "ifb", "csv", "n3", "txt", "text", "conf", "def", "list", "log", "in", "dsc", "rtx", "tsv", "t", "tr", "roff", "man", "me", "ms", "ttl", "uri", "uris", "urls", "vcard", "curl", "dcurl", "scurl", "mcurl", "fly", "flx", "gv", "3dml", "spot", "jad", "wml", "wmls", "etx", "uu", "vcs", "vcf", "htc", "ini", "gitignore", "htaccess", "htpasswd", "config" ]
                },
                css: {
                    extensions: [ "css" ],
                    className: "css"
                },
                html: {
                    extensions: [ "html", "htm" ],
                    className: "sgml",
                    path: "source"
                },
                sgml: {
                    extensions: [ "sgml", "sgm" ],
                    className: "sgml",
                    path: "source"
                },
                "x-asm": {
                    extensions: [ "s", "asm" ],
                    path: "source"
                },
                "x-c": {
                    extensions: [ "c", "cc", "cxx", "cpp", "hh", "dic" ],
                    path: "source"
                },
                "x-fortran": {
                    extensions: [ "f", "for", "f77", "f90" ],
                    path: "source"
                },
                "x-pascal": {
                    extensions: [ "p", "pas" ],
                    path: "source"
                },
                "x-java-source": {
                    extensions: [ "java" ],
                    path: "source"
                },
                "cache-manifest": {
                    extensions: [ "appcache", "manifest" ],
                    path: "source"
                }
            },
            source: {
                "*": {
                    extensions: [ "h", "pl", "py", "rb", "less", "sass", "sml", "sql", "vb", "php", "php3", "inc", "asp", "as" ]
                }
            },
            video: {
                "*": {
                    extensions: [ "3gp", "3g2", "h261", "h263", "h264", "jpgv", "jpm", "jpgm", "mj2", "mjp2", "mpeg", "mpg", "mpe", "m1v", "m2v", "ogv", "qt", "mov", "uvh", "uvvh", "uvm", "uvvm", "uvp", "uvvp", "uvs", "uvvs", "uvv", "uvvv", "dvb", "fvt", "mxu", "m4u", "pyv", "uvu", "uvvu", "viv", "webm", "f4v", "fli", "m4v", "asf", "asx", "wm", "wmx", "wvx", "movie", "ts" ]
                },
                mp4: {
                    extensions: [ "mp4", "mp4v", "mpg4" ],
                    className: "mp4"
                },
                "x-flv": {
                    extensions: [ "flv" ],
                    className: "x-flv"
                },
                "x-ms-wmv": {
                    extensions: [ "wmv" ],
                    className: "x-ms-wmv"
                },
                "x-msvideo": {
                    extensions: [ "avi" ],
                    className: "x-msvideo"
                }
            }
        } : "function" == typeof define && define.amd && define("3rdparty/mime/types.js", [], factory);
    }(0, function() {
        return {
            binary: {},
            application: {
                "atom+xml": {
                    extensions: [ "atom" ],
                    className: "sgml",
                    path: "source"
                },
                "atomcat+xml": {
                    extensions: [ "atomcat" ],
                    className: "sgml",
                    path: "source"
                },
                "atomsvc+xml": {
                    extensions: [ "atomsvc" ],
                    className: "sgml",
                    path: "source"
                },
                "ccxml+xml": {
                    extensions: [ "ccxml" ],
                    className: "sgml",
                    path: "source"
                },
                "davmount+xml": {
                    extensions: [ "davmount" ],
                    className: "sgml",
                    path: "source"
                },
                "dssc+xml": {
                    extensions: [ "xdssc" ],
                    className: "sgml",
                    path: "source"
                },
                ecmascript: {
                    extensions: [ "ecma" ],
                    path: "source"
                },
                "emma+xml": {
                    extensions: [ "emma" ],
                    className: "sgml",
                    path: "source"
                },
                "epub+zip": {
                    extensions: [ "epub" ],
                    path: "archive"
                },
                "inkml+xml": {
                    extensions: [ "ink", "inkml" ],
                    className: "sgml",
                    path: "source"
                },
                "java-archive": {
                    extensions: [ "jar" ],
                    path: "archive"
                },
                javascript: {
                    extensions: [ "js" ],
                    className: "sgml",
                    path: "source"
                },
                json: {
                    extensions: [ "json" ],
                    className: "sgml",
                    path: "source"
                },
                "lost+xml": {
                    extensions: [ "lostxml" ],
                    className: "sgml",
                    path: "source"
                },
                "mads+xml": {
                    extensions: [ "mads" ],
                    className: "sgml",
                    path: "source"
                },
                "marcxml+xml": {
                    extensions: [ "mrcx" ],
                    className: "sgml",
                    path: "source"
                },
                "mathml+xml": {
                    extensions: [ "mathml" ],
                    className: "sgml",
                    path: "source"
                },
                "mediaservercontrol+xml": {
                    extensions: [ "mscml" ],
                    className: "sgml",
                    path: "source"
                },
                "metalink4+xml": {
                    extensions: [ "meta4" ],
                    className: "sgml",
                    path: "source"
                },
                "mets+xml": {
                    extensions: [ "mets" ],
                    className: "sgml",
                    path: "source"
                },
                "mods+xml": {
                    extensions: [ "mods" ],
                    className: "sgml",
                    path: "source"
                },
                msword: {
                    extensions: [ "doc", "dot" ],
                    className: "x-office-document",
                    path: "document"
                },
                "oebps-package+xml": {
                    extensions: [ "opf" ],
                    className: "sgml",
                    path: "source"
                },
                "patch-ops-error+xml": {
                    extensions: [ "xer" ],
                    className: "sgml",
                    path: "source"
                },
                pdf: {
                    extensions: [ "pdf" ],
                    className: "pdf"
                },
                "pls+xml": {
                    extensions: [ "pls" ],
                    className: "sgml",
                    path: "source"
                },
                "pskc+xml": {
                    extensions: [ "pskcxml" ],
                    className: "sgml",
                    path: "source"
                },
                "rdf+xml": {
                    extensions: [ "rdf" ],
                    className: "sgml",
                    path: "source"
                },
                "reginfo+xml": {
                    extensions: [ "rif" ],
                    className: "sgml",
                    path: "source"
                },
                "resource-lists+xml": {
                    extensions: [ "rl" ],
                    className: "sgml",
                    path: "source"
                },
                "resource-lists-diff+xml": {
                    extensions: [ "rld" ],
                    className: "sgml",
                    path: "source"
                },
                "rls-services+xml": {
                    extensions: [ "rs" ],
                    className: "sgml",
                    path: "source"
                },
                "rsd+xml": {
                    extensions: [ "rsd" ],
                    className: "sgml",
                    path: "source"
                },
                "rss+xml": {
                    extensions: [ "rss" ],
                    className: "sgml",
                    path: "source"
                },
                rtf: {
                    extensions: [ "rtf" ],
                    path: "document"
                },
                "sbml+xml": {
                    extensions: [ "sbml" ],
                    className: "sgml",
                    path: "source"
                },
                "shf+xml": {
                    extensions: [ "shf" ],
                    className: "sgml",
                    path: "source"
                },
                "smil+xml": {
                    extensions: [ "smi", "smil" ],
                    className: "sgml",
                    path: "source"
                },
                "sparql-results+xml": {
                    extensions: [ "srx" ],
                    className: "sgml",
                    path: "source"
                },
                "srgs+xml": {
                    extensions: [ "grxml" ],
                    className: "sgml",
                    path: "source"
                },
                "sru+xml": {
                    extensions: [ "sru" ],
                    className: "sgml",
                    path: "source"
                },
                "ssml+xml": {
                    extensions: [ "ssml" ],
                    className: "sgml",
                    path: "source"
                },
                "tei+xml": {
                    extensions: [ "tei", "teicorpus" ],
                    className: "sgml",
                    path: "source"
                },
                "thraud+xml": {
                    extensions: [ "tfi" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.adobe.air-application-installer-package+zip": {
                    extensions: [ "air" ],
                    path: "archive"
                },
                "vnd.adobe.xdp+xml": {
                    extensions: [ "xdp" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.android.package-archive": {
                    extensions: [ "apk" ],
                    path: "archive"
                },
                "vnd.apple.installer+xml": {
                    extensions: [ "mpkg" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.chemdraw+xml": {
                    extensions: [ "cdxml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.criticaltools.wbs+xml": {
                    extensions: [ "wbs" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.dece.ttml+xml": {
                    extensions: [ "uvt", "uvvt" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.eszigno3+xml": {
                    extensions: [ "es3", "et3" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.google-earth.kml+xml": {
                    extensions: [ "kml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.hal+xml": {
                    extensions: [ "hal" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.handheld-entertainment+xml": {
                    extensions: [ "zmm" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.irepository.package+xml": {
                    extensions: [ "irp" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.kde.kword": {
                    extensions: [ "kwd", "kwt" ],
                    path: "document"
                },
                "vnd.las.las+xml": {
                    extensions: [ "lasxml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.llamagraphics.life-balance.exchange+xml": {
                    extensions: [ "lbe" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.mozilla.xul+xml": {
                    extensions: [ "xul" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.ms-excel": {
                    extensions: [ "xls", "xlm", "xla", "xlc", "xlt", "xlw" ],
                    className: "x-office-spreadsheet",
                    path: "document"
                },
                "vnd.ms-powerpoint": {
                    extensions: [ "ppt", "pps", "pot" ],
                    className: "x-office-presentation",
                    path: "document"
                },
                "vnd.oasis.opendocument.presentation": {
                    extensions: [ "odp" ],
                    className: "x-office-presentation",
                    path: "document"
                },
                "vnd.oasis.opendocument.spreadsheet": {
                    extensions: [ "ods" ],
                    className: "x-office-spreadsheet",
                    path: "document"
                },
                "vnd.oasis.opendocument.text": {
                    extensions: [ "odt" ],
                    className: "x-office-document",
                    path: "document"
                },
                "vnd.oma.dd2+xml": {
                    extensions: [ "dd2" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.openxmlformats-officedocument.presentationml.presentation": {
                    extensions: [ "pptx" ],
                    className: "x-office-presentation",
                    path: "document"
                },
                "vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                    extensions: [ "xlsx" ],
                    className: "x-office-spreadsheet",
                    path: "document"
                },
                "vnd.openxmlformats-officedocument.wordprocessingml.document": {
                    extensions: [ "docx" ],
                    className: "x-office-document",
                    path: "document"
                },
                "vnd.recordare.musicxml": {
                    extensions: [ "mxl" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.recordare.musicxml+xml": {
                    extensions: [ "musicxml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.route66.link66+xml": {
                    extensions: [ "link66" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.solent.sdkm+xml": {
                    extensions: [ "sdkm", "sdkd" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.calc": {
                    extensions: [ "sxc" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.calc.template": {
                    extensions: [ "stc" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.draw": {
                    extensions: [ "sxd" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.draw.template": {
                    extensions: [ "std" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.impress": {
                    extensions: [ "sxi" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.impress.template": {
                    extensions: [ "sti" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.math": {
                    extensions: [ "sxm" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.writer": {
                    extensions: [ "sxw" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.writer.global": {
                    extensions: [ "sxg" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.sun.xml.writer.template": {
                    extensions: [ "stw" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.syncml+xml": {
                    extensions: [ "xsm" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.syncml.dm+wbxml": {
                    extensions: [ "bdm" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.syncml.dm+xml": {
                    extensions: [ "xdm" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.tcpdump.pcap": {
                    extensions: [ "pcap", "cap", "dmp" ],
                    path: "archive"
                },
                "vnd.uoml+xml": {
                    extensions: [ "uoml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.wap.wbxml": {
                    extensions: [ "wbxml" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.wordperfect": {
                    extensions: [ "wpd" ],
                    path: "document"
                },
                "vnd.yamaha.openscoreformat.osfpvg+xml": {
                    extensions: [ "osfpvg" ],
                    className: "sgml",
                    path: "source"
                },
                "vnd.zzazz.deck+xml": {
                    extensions: [ "zaz" ],
                    className: "sgml",
                    path: "source"
                },
                "voicexml+xml": {
                    extensions: [ "vxml" ],
                    className: "sgml",
                    path: "source"
                },
                "wsdl+xml": {
                    extensions: [ "wsdl" ],
                    className: "sgml",
                    path: "source"
                },
                "wspolicy+xml": {
                    extensions: [ "wspolicy" ],
                    className: "sgml",
                    path: "source"
                },
                "x-7z-compressed": {
                    extensions: [ "7z" ],
                    path: "archive"
                },
                "x-abiword": {
                    extensions: [ "abw" ],
                    path: "document"
                },
                "x-ace-compressed": {
                    extensions: [ "ace" ],
                    path: "archive"
                },
                "x-bzip": {
                    extensions: [ "bz" ],
                    className: "zip",
                    path: "archive"
                },
                "x-bzip2": {
                    extensions: [ "boz" ],
                    className: "zip",
                    path: "archive"
                },
                "x-csh": {
                    extensions: [ "csh" ],
                    className: "x-sh"
                },
                "x-debian-package": {
                    extensions: [ "deb", "udeb" ],
                    path: "archive"
                },
                "x-dtbncx+xml": {
                    extensions: [ "ncx" ],
                    className: "sgml",
                    path: "source"
                },
                "x-dtbook+xml": {
                    extensions: [ "dtb" ],
                    className: "sgml",
                    path: "source"
                },
                "x-dtbresource+xml": {
                    extensions: [ "res" ],
                    className: "sgml",
                    path: "source"
                },
                "x-gtar": {
                    extensions: [ "gtar" ],
                    path: "archive"
                },
                "x-latex": {
                    extensions: [ "latex" ],
                    path: "source"
                },
                "x-msdownload": {
                    extensions: [ "exe", "dll", "com", "bat", "msi" ],
                    className: "x-sh"
                },
                "x-rar-compressed": {
                    extensions: [ "rar" ],
                    className: "rar",
                    path: "archive"
                },
                "x-sh": {
                    extensions: [ "sh" ],
                    className: "x-sh"
                },
                "x-shockwave-flash": {
                    extensions: [ "swf", "fla" ],
                    className: "x-shockwave-flash"
                },
                "x-stuffit": {
                    extensions: [ "sit" ],
                    path: "archive"
                },
                "x-tar": {
                    extensions: [ "tar" ],
                    path: "archive"
                },
                "x-tex": {
                    extensions: [ "tex" ],
                    path: "source"
                },
                "xcap-diff+xml": {
                    extensions: [ "xdf" ],
                    className: "sgml",
                    path: "source"
                },
                "xenc+xml": {
                    extensions: [ "xenc" ],
                    className: "sgml",
                    path: "source"
                },
                "xhtml+xml": {
                    extensions: [ "xhtml", "xht" ],
                    className: "sgml",
                    path: "source"
                },
                xml: {
                    extensions: [ "xml", "xsl" ],
                    className: "sgml",
                    path: "source"
                },
                "xml-dtd": {
                    extensions: [ "dtd" ],
                    className: "sgml",
                    path: "source"
                },
                "xop+xml": {
                    extensions: [ "xop" ],
                    className: "sgml",
                    path: "source"
                },
                "xslt+xml": {
                    extensions: [ "xslt" ],
                    className: "sgml",
                    path: "source"
                },
                "xspf+xml": {
                    extensions: [ "xspf" ],
                    className: "sgml",
                    path: "source"
                },
                "xv+xml": {
                    extensions: [ "mxml", "xhvml", "xvml", "xvm" ],
                    className: "sgml",
                    path: "source"
                },
                "yin+xml": {
                    extensions: [ "yin" ],
                    className: "sgml",
                    path: "source"
                },
                zip: {
                    extensions: [ "zip" ],
                    className: "zip",
                    path: "archive"
                }
            },
            archive: {
                "*": {
                    extensions: [ "lzh", "iso", "dmg", "pkg" ]
                },
                zip: {
                    extensions: [ "bz2", "gz", "gzip", "z" ],
                    className: "zip"
                }
            },
            audio: {
                "*": {
                    extensions: [ "adp", "au", "snd", "mid", "midi", "kar", "rmi", "oga", "ogg", "spx", "uva", "uvva", "eol", "dra", "dts", "dtshd", "lvp", "pya", "ecelp4800", "ecelp7470", "ecelp9600", "rip", "weba", "aac", "aif", "aiff", "aifc", "m3u", "wax", "wma", "ram", "ra", "rmp", "flac" ]
                },
                mp4: {
                    extensions: [ "mp4a", "m4a" ],
                    className: "mpeg"
                },
                mpeg: {
                    extensions: [ "mpga", "mp2", "mp2a", "mp3", "m2a", "m3a" ],
                    className: "mpeg"
                },
                "x-wav": {
                    extensions: [ "wav" ],
                    className: "x-wav"
                }
            },
            image: {
                bmp: {
                    extensions: [ "bmp" ],
                    className: "bmp"
                },
                "*": {
                    extensions: [ "cgm", "g3", "ief", "ktx", "btif", "psd", "uvi", "uvvi", "uvg", "uvvg", "djvu", "djv", "dwg", "dxf", "fbs", "fpx", "fst", "mmr", "rlc", "mdi", "npx", "wbmp", "xif", "webp", "ras", "cmx", "fh", "fhc", "fh4", "fh5", "fh7", "ico", "pcx", "pic", "pct", "pnm", "pbm", "pgm", "ppm", "rgb", "xbm", "xpm", "xwd" ]
                },
                gif: {
                    extensions: [ "gif" ],
                    className: "gif"
                },
                jpeg: {
                    extensions: [ "jpeg", "jpg", "jpe" ],
                    className: "jpeg"
                },
                png: {
                    extensions: [ "png" ],
                    className: "png"
                },
                "svg+xml": {
                    extensions: [ "svg", "svgz" ],
                    className: "sgml",
                    path: "source"
                },
                tiff: {
                    extensions: [ "tiff", "tif" ],
                    className: "tiff"
                }
            },
            text: {
                "*": {
                    extensions: [ "sub", "ics", "ifb", "csv", "n3", "txt", "text", "conf", "def", "list", "log", "in", "dsc", "rtx", "tsv", "t", "tr", "roff", "man", "me", "ms", "ttl", "uri", "uris", "urls", "vcard", "curl", "dcurl", "scurl", "mcurl", "fly", "flx", "gv", "3dml", "spot", "jad", "wml", "wmls", "etx", "uu", "vcs", "vcf", "htc", "ini", "gitignore", "htaccess", "htpasswd", "config" ]
                },
                css: {
                    extensions: [ "css" ],
                    className: "css"
                },
                html: {
                    extensions: [ "html", "htm" ],
                    className: "sgml",
                    path: "source"
                },
                sgml: {
                    extensions: [ "sgml", "sgm" ],
                    className: "sgml",
                    path: "source"
                },
                "x-asm": {
                    extensions: [ "s", "asm" ],
                    path: "source"
                },
                "x-c": {
                    extensions: [ "c", "cc", "cxx", "cpp", "hh", "dic" ],
                    path: "source"
                },
                "x-fortran": {
                    extensions: [ "f", "for", "f77", "f90" ],
                    path: "source"
                },
                "x-pascal": {
                    extensions: [ "p", "pas" ],
                    path: "source"
                },
                "x-java-source": {
                    extensions: [ "java" ],
                    path: "source"
                },
                "cache-manifest": {
                    extensions: [ "appcache", "manifest" ],
                    path: "source"
                }
            },
            source: {
                "*": {
                    extensions: [ "h", "pl", "py", "rb", "less", "sass", "sml", "sql", "vb", "php", "php3", "inc", "asp", "as" ]
                }
            },
            video: {
                "*": {
                    extensions: [ "3gp", "3g2", "h261", "h263", "h264", "jpgv", "jpm", "jpgm", "mj2", "mjp2", "mpeg", "mpg", "mpe", "m1v", "m2v", "ogv", "qt", "mov", "uvh", "uvvh", "uvm", "uvvm", "uvp", "uvvp", "uvs", "uvvs", "uvv", "uvvv", "dvb", "fvt", "mxu", "m4u", "pyv", "uvu", "uvvu", "viv", "webm", "f4v", "fli", "m4v", "asf", "asx", "wm", "wmx", "wvx", "movie", "ts" ]
                },
                mp4: {
                    extensions: [ "mp4", "mp4v", "mpg4" ],
                    className: "mp4"
                },
                "x-flv": {
                    extensions: [ "flv" ],
                    className: "x-flv"
                },
                "x-ms-wmv": {
                    extensions: [ "wmv" ],
                    className: "x-ms-wmv"
                },
                "x-msvideo": {
                    extensions: [ "avi" ],
                    className: "x-msvideo"
                }
            }
        };
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory(require("./types")) : "function" == typeof define && define.amd ? define("3rdparty/mime/wtf.js", [ "3rdparty/mime/types.js" ], factory) : factory(mimeTypes);
    }(0, function(types) {
        function fileNameExtension(fileName) {
            var separatorIdx = fileName.lastIndexOf(".");
            return separatorIdx > -1 ? fileName.substr(separatorIdx + 1).toLowerCase() : "";
        }
        var extensionIdx = {}, contentTypeByExtension = {};
        return Object.keys(types).forEach(function(group) {
            Object.keys(types[group]).forEach(function(type) {
                types[group][type].extensions.forEach(function(extension) {
                    contentTypeByExtension[extension] = group + "/" + type, extensionIdx[extension] = {
                        group: group,
                        type: types[group][type]
                    };
                });
            });
        }), {
            types: types,
            contentTypeByExtension: contentTypeByExtension,
            getClass: function(fileName, mimeType) {
                var fileExtension = fileNameExtension(fileName || ""), classList = [ "icon" ];
                return (mimeType || "application/octet-stream").toLowerCase().split(";").forEach(function(type) {
                    var path = type.replace(/^\s+|\s+$/g, "").split("/"), group = types[path[0]];
                    group && (group[path[1]] ? (type = group[path[1]], classList.push(type.path || path[0]), 
                    type.className && classList.push(type.className)) : extensionIdx[fileExtension] ? (type = extensionIdx[fileExtension], 
                    classList.push(type.type.path || type.group), type.type.className && classList.push(type.type.className)) : classList.push(path[0]));
                }), 1 === classList.length && classList.push("application"), classList.map(function(item) {
                    return "mime-" + item;
                }).join(" ");
            },
            getContentTypeByFileName: function(fileName) {
                var fileExtension = fileNameExtension(fileName || "");
                return this.contentTypeByExtension[fileExtension] || "application/octet-stream";
            },
            getDom: function(fileName, mimeType) {
                var icon = document.createElement("div");
                return icon.className = this.getClass(fileName, mimeType), fileName && icon.appendChild(document.createElement("span")).appendChild(document.createTextNode(fileName.match(/\.([^\.]+)$/)[1])), 
                icon;
            }
        };
    });
}(), function() {
    var define = System.amdDefine;
    !function(name, definition) {
        "function" == typeof define ? define("3rdparty/mario.js", [], definition) : "undefined" != typeof module && module.exports ? module.exports = definition() : this.mario = definition();
    }(0, function() {
        function mario(ua) {
            function getFirstMatch(regexp) {
                var match = ua.match(regexp);
                return match && match[1];
            }
            var windows = /windows/i.test(ua) || /win32/i.test(ua), macos = /mac os/i.test(ua), linux = /linux/i.test(ua), chrome = /chrome/i.test(ua), firefox = /firefox/i.test(ua), seamonkey = /seamonkey\//i.test(ua), opera = /opera/i.test(ua), operaBlink = /OPR/.test(ua), safari = /safari/i.test(ua), ie = /msie/i.test(ua), spartan = /edge/i.test(ua), trident = /trident/i.test(ua), phantom = /phantom/i.test(ua), touch = /touch/i.test(ua), iphone = /\(iphone;/i.test(ua), ipad = /\(ipad;/i.test(ua), ipod = /\(ipod( touch)?;/i.test(ua), crios = /crios\//i.test(ua), android = /android/i.test(ua), windowsPhone = /Windows Phone/i.test(ua), gecko = /gecko\//i.test(ua), likeGecko = /like gecko/i.test(ua), webkit = /webkit/i.test(ua), blackBerry = /\(BB\d+;/i.test(ua), detected = {};
            if (ie ? (detected.msie = t, detected.name = "Internet Explorer", detected.version = getFirstMatch(/msie (\d+(\.\d+)?);/i)) : spartan ? (detected.name = "Edge", 
            detected.msedge = t, detected.edge = t, detected.version = getFirstMatch(/Edge\/(\d+)/i)) : operaBlink ? (detected.name = "Opera", 
            detected.opera = t, detected.version = getFirstMatch(/OPR\/(\d+(\.\d+)?)/i)) : chrome ? (detected.name = "Chrome", 
            detected.chrome = t, detected.version = getFirstMatch(/chrome\/(\d+(\.\d+)?)/i)) : firefox ? (detected.name = "Firefox", 
            detected.firefox = t, detected.version = getFirstMatch(/firefox\/(\d+(\.\d+)?)/i)) : phantom ? (detected.phantom = t, 
            detected.version = getFirstMatch(/phantomjs\/(\d+(\.\d+)+)/i)) : seamonkey ? (detected.seamonkey = t, 
            detected.version = getFirstMatch(/seamonkey\/(\d+(\.\d+)?)/i)) : opera ? (detected.name = "Opera", 
            detected.opera = t, detected.version = getFirstMatch(/version\/(\d+(\.\d+)?)/i)) : !safari || android || blackBerry ? ipad || iphone || ipod ? (detected.safari = t, 
            detected.webkit = t) : trident ? detected.msie = t : (android || blackBerry) && (detected.webkit = t, 
            detected.version = getFirstMatch(/version\/(\d+(\.\d+)?)/i)) : (detected.name = "Safari", 
            detected.safari = t, detected.version = getFirstMatch(/version\/(\d+(\.\d+)?)/i)), 
            detected.version || delete detected.version, windows && (detected.windows = t), 
            macos && !trident && (detected.macos = t), linux && (detected.linux = t), touch && (detected.touch = t), 
            windowsPhone && (detected.touch = t), ipad || iphone || ipod) {
                detected.touch = t, detected.ios = t, !detected.version && crios ? (delete detected.safari, 
                detected.name = "Chrome", detected.chrome = t, detected.version = getFirstMatch(/crios\/(\d+(\.\d+)?)/i)) : detected.name = "Safari";
                var osVersion = getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i);
                osVersion && (detected.osversion = osVersion.replace(/[_\s]/g, "."));
            }
            if (blackBerry && (detected.name = "Blackberry", detected.blackberry = t, detected.osversion = getFirstMatch(/\(BB(\d+);/i)), 
            ipad && (detected.ipad = t), iphone && (detected.iphone = t), ipod && (detected.ipod = t), 
            gecko && (detected.mozilla = t, detected.gecko = t), likeGecko && trident && (detected.name = "Internet Explorer", 
            detected.msie = t, detected.version = getFirstMatch(/rv:(\d+(?:\.\d+))/i)), android && !trident) {
                detected.name || (detected.name = "Android"), detected.touch = t, detected.android = t;
                var androidVersion = getFirstMatch(/android[ \/](\d+(\.\d+)*)/i);
                androidVersion && (detected.osversion = androidVersion);
            }
            return (operaBlink || chrome && detected.version >= 28 || android && detected.osversion >= 4.4) && (detected.blink = t), 
            detected.blink || trident || !webkit || (detected.webkit = t), detected.msie && (detected.explorer = t, 
            windowsPhone && (detected.explorermobile = t)), detected;
        }
        var t = !0;
        if ("undefined" != typeof navigator && navigator && "string" == typeof navigator.userAgent) {
            var detected = mario(navigator.userAgent);
            for (var propertyName in detected) detected.hasOwnProperty(propertyName) && (mario[propertyName] = detected[propertyName]);
        }
        return mario;
    });
}(), function() {
    (0, System.amdDefine)("common/fileExtensionByContentType.js", [], function() {
        return {
            "application/andrew-inset": "ez",
            "application/applixware": "aw",
            "application/atom+xml": "atom",
            "application/atomcat+xml": "atomcat",
            "application/atomsvc+xml": "atomsvc",
            "application/ccxml+xml": "ccxml",
            "application/cdmi-capability": "cdmia",
            "application/cdmi-container": "cdmic",
            "application/cdmi-domain": "cdmid",
            "application/cdmi-object": "cdmio",
            "application/cdmi-queue": "cdmiq",
            "application/cu-seeme": "cu",
            "application/davmount+xml": "davmount",
            "application/dssc+der": "dssc",
            "application/dssc+xml": "xdssc",
            "application/ecmascript": "ecma",
            "application/emma+xml": "emma",
            "application/epub+zip": "epub",
            "application/exi": "exi",
            "application/font-tdpfr": "pfr",
            "application/hyperstudio": "stk",
            "application/inkml+xml": "ink",
            "application/ipfix": "ipfix",
            "application/java-archive": "jar",
            "application/java-serialized-object": "ser",
            "application/java-vm": "class",
            "application/javascript": "js",
            "application/json": "json",
            "application/lost+xml": "lostxml",
            "application/mac-binhex40": "hqx",
            "application/mac-compactpro": "cpt",
            "application/mads+xml": "mads",
            "application/marc": "mrc",
            "application/marcxml+xml": "mrcx",
            "application/mathematica": "ma",
            "application/mathml+xml": "mathml",
            "application/mbox": "mbox",
            "application/mediaservercontrol+xml": "mscml",
            "application/metalink4+xml": "meta4",
            "application/mets+xml": "mets",
            "application/mods+xml": "mods",
            "application/mp21": "m21",
            "application/mp4": "mp4s",
            "application/msword": "doc",
            "application/mxf": "mxf",
            "application/octet-stream": "bin",
            "application/oda": "oda",
            "application/oebps-package+xml": "opf",
            "application/ogg": "ogx",
            "application/onenote": "onetoc",
            "application/oxps": "oxps",
            "application/patch-ops-error+xml": "xer",
            "application/pdf": "pdf",
            "application/pgp-encrypted": "pgp",
            "application/pgp-signature": "asc",
            "application/pics-rules": "prf",
            "application/pkcs10": "p10",
            "application/pkcs7-mime": "p7m",
            "application/pkcs7-signature": "p7s",
            "application/pkcs8": "p8",
            "application/pkix-attr-cert": "ac",
            "application/pkix-cert": "cer",
            "application/pkix-crl": "crl",
            "application/pkix-pkipath": "pkipath",
            "application/pkixcmp": "pki",
            "application/pls+xml": "pls",
            "application/postscript": "ai",
            "application/prs.cww": "cww",
            "application/pskc+xml": "pskcxml",
            "application/rdf+xml": "rdf",
            "application/reginfo+xml": "rif",
            "application/relax-ng-compact-syntax": "rnc",
            "application/resource-lists+xml": "rl",
            "application/resource-lists-diff+xml": "rld",
            "application/rls-services+xml": "rs",
            "application/rpki-ghostbusters": "gbr",
            "application/rpki-manifest": "mft",
            "application/rpki-roa": "roa",
            "application/rsd+xml": "rsd",
            "application/rss+xml": "rss",
            "application/rtf": "rtf",
            "application/sbml+xml": "sbml",
            "application/scvp-cv-request": "scq",
            "application/scvp-cv-response": "scs",
            "application/scvp-vp-request": "spq",
            "application/scvp-vp-response": "spp",
            "application/sdp": "sdp",
            "application/set-payment-initiation": "setpay",
            "application/set-registration-initiation": "setreg",
            "application/shf+xml": "shf",
            "application/smil+xml": "smi",
            "application/sparql-query": "rq",
            "application/sparql-results+xml": "srx",
            "application/srgs": "gram",
            "application/srgs+xml": "grxml",
            "application/sru+xml": "sru",
            "application/ssml+xml": "ssml",
            "application/tei+xml": "tei",
            "application/thraud+xml": "tfi",
            "application/timestamped-data": "tsd",
            "application/vnd.3gpp.pic-bw-large": "plb",
            "application/vnd.3gpp.pic-bw-small": "psb",
            "application/vnd.3gpp.pic-bw-var": "pvb",
            "application/vnd.3gpp2.tcap": "tcap",
            "application/vnd.3m.post-it-notes": "pwn",
            "application/vnd.accpac.simply.aso": "aso",
            "application/vnd.accpac.simply.imp": "imp",
            "application/vnd.acucobol": "acu",
            "application/vnd.acucorp": "atc",
            "application/vnd.adobe.air-application-installer-package+zip": "air",
            "application/vnd.adobe.fxp": "fxp",
            "application/vnd.adobe.xdp+xml": "xdp",
            "application/vnd.adobe.xfdf": "xfdf",
            "application/vnd.ahead.space": "ahead",
            "application/vnd.airzip.filesecure.azf": "azf",
            "application/vnd.airzip.filesecure.azs": "azs",
            "application/vnd.amazon.ebook": "azw",
            "application/vnd.americandynamics.acc": "acc",
            "application/vnd.amiga.ami": "ami",
            "application/vnd.android.package-archive": "apk",
            "application/vnd.anser-web-certificate-issue-initiation": "cii",
            "application/vnd.anser-web-funds-transfer-initiation": "fti",
            "application/vnd.antix.game-component": "atx",
            "application/vnd.apple.installer+xml": "mpkg",
            "application/vnd.apple.mpegurl": "m3u8",
            "application/vnd.aristanetworks.swi": "swi",
            "application/vnd.astraea-software.iota": "iota",
            "application/vnd.audiograph": "aep",
            "application/vnd.blueice.multipass": "mpm",
            "application/vnd.bmi": "bmi",
            "application/vnd.businessobjects": "rep",
            "application/vnd.chemdraw+xml": "cdxml",
            "application/vnd.chipnuts.karaoke-mmd": "mmd",
            "application/vnd.cinderella": "cdy",
            "application/vnd.claymore": "cla",
            "application/vnd.cloanto.rp9": "rp9",
            "application/vnd.clonk.c4group": "c4g",
            "application/vnd.cluetrust.cartomobile-config": "c11amc",
            "application/vnd.cluetrust.cartomobile-config-pkg": "c11amz",
            "application/vnd.commonspace": "csp",
            "application/vnd.contact.cmsg": "cdbcmsg",
            "application/vnd.cosmocaller": "cmc",
            "application/vnd.crick.clicker": "clkx",
            "application/vnd.crick.clicker.keyboard": "clkk",
            "application/vnd.crick.clicker.palette": "clkp",
            "application/vnd.crick.clicker.template": "clkt",
            "application/vnd.crick.clicker.wordbank": "clkw",
            "application/vnd.criticaltools.wbs+xml": "wbs",
            "application/vnd.ctc-posml": "pml",
            "application/vnd.cups-ppd": "ppd",
            "application/vnd.curl.car": "car",
            "application/vnd.curl.pcurl": "pcurl",
            "application/vnd.data-vision.rdz": "rdz",
            "application/vnd.dece.data": "uvf",
            "application/vnd.dece.ttml+xml": "uvt",
            "application/vnd.dece.unspecified": "uvx",
            "application/vnd.dece.zip": "uvz",
            "application/vnd.denovo.fcselayout-link": "fe_launch",
            "application/vnd.dna": "dna",
            "application/vnd.dolby.mlp": "mlp",
            "application/vnd.dpgraph": "dpg",
            "application/vnd.dreamfactory": "dfac",
            "application/vnd.dvb.ait": "ait",
            "application/vnd.dvb.service": "svc",
            "application/vnd.dynageo": "geo",
            "application/vnd.ecowin.chart": "mag",
            "application/vnd.enliven": "nml",
            "application/vnd.epson.esf": "esf",
            "application/vnd.epson.msf": "msf",
            "application/vnd.epson.quickanime": "qam",
            "application/vnd.epson.salt": "slt",
            "application/vnd.epson.ssf": "ssf",
            "application/vnd.eszigno3+xml": "es3",
            "application/vnd.ezpix-album": "ez2",
            "application/vnd.ezpix-package": "ez3",
            "application/vnd.fdf": "fdf",
            "application/vnd.fdsn.mseed": "mseed",
            "application/vnd.fdsn.seed": "seed",
            "application/vnd.flographit": "gph",
            "application/vnd.fluxtime.clip": "ftc",
            "application/vnd.framemaker": "fm",
            "application/vnd.frogans.fnc": "fnc",
            "application/vnd.frogans.ltf": "ltf",
            "application/vnd.fsc.weblaunch": "fsc",
            "application/vnd.fujitsu.oasys": "oas",
            "application/vnd.fujitsu.oasys2": "oa2",
            "application/vnd.fujitsu.oasys3": "oa3",
            "application/vnd.fujitsu.oasysgp": "fg5",
            "application/vnd.fujitsu.oasysprs": "bh2",
            "application/vnd.fujixerox.ddd": "ddd",
            "application/vnd.fujixerox.docuworks": "xdw",
            "application/vnd.fujixerox.docuworks.binder": "xbd",
            "application/vnd.fuzzysheet": "fzs",
            "application/vnd.genomatix.tuxedo": "txd",
            "application/vnd.geogebra.file": "ggb",
            "application/vnd.geogebra.tool": "ggt",
            "application/vnd.geometry-explorer": "gex",
            "application/vnd.geonext": "gxt",
            "application/vnd.geoplan": "g2w",
            "application/vnd.geospace": "g3w",
            "application/vnd.gmx": "gmx",
            "application/vnd.google-earth.kml+xml": "kml",
            "application/vnd.google-earth.kmz": "kmz",
            "application/vnd.grafeq": "gqf",
            "application/vnd.groove-account": "gac",
            "application/vnd.groove-help": "ghf",
            "application/vnd.groove-identity-message": "gim",
            "application/vnd.groove-injector": "grv",
            "application/vnd.groove-tool-message": "gtm",
            "application/vnd.groove-tool-template": "tpl",
            "application/vnd.groove-vcard": "vcg",
            "application/vnd.hal+xml": "hal",
            "application/vnd.handheld-entertainment+xml": "zmm",
            "application/vnd.hbci": "hbci",
            "application/vnd.hhe.lesson-player": "les",
            "application/vnd.hp-hpgl": "hpgl",
            "application/vnd.hp-hpid": "hpid",
            "application/vnd.hp-hps": "hps",
            "application/vnd.hp-jlyt": "jlt",
            "application/vnd.hp-pcl": "pcl",
            "application/vnd.hp-pclxl": "pclxl",
            "application/vnd.hydrostatix.sof-data": "sfd-hdstx",
            "application/vnd.hzn-3d-crossword": "x3d",
            "application/vnd.ibm.minipay": "mpy",
            "application/vnd.ibm.modcap": "afp",
            "application/vnd.ibm.rights-management": "irm",
            "application/vnd.ibm.secure-container": "sc",
            "application/vnd.iccprofile": "icc",
            "application/vnd.igloader": "igl",
            "application/vnd.immervision-ivp": "ivp",
            "application/vnd.immervision-ivu": "ivu",
            "application/vnd.insors.igm": "igm",
            "application/vnd.intercon.formnet": "xpw",
            "application/vnd.intergeo": "i2g",
            "application/vnd.intu.qbo": "qbo",
            "application/vnd.intu.qfx": "qfx",
            "application/vnd.ipunplugged.rcprofile": "rcprofile",
            "application/vnd.irepository.package+xml": "irp",
            "application/vnd.is-xpr": "xpr",
            "application/vnd.isac.fcs": "fcs",
            "application/vnd.jam": "jam",
            "application/vnd.jcp.javame.midlet-rms": "rms",
            "application/vnd.jisp": "jisp",
            "application/vnd.joost.joda-archive": "joda",
            "application/vnd.kahootz": "ktz",
            "application/vnd.kde.karbon": "karbon",
            "application/vnd.kde.kchart": "chrt",
            "application/vnd.kde.kformula": "kfo",
            "application/vnd.kde.kivio": "flw",
            "application/vnd.kde.kontour": "kon",
            "application/vnd.kde.kpresenter": "kpr",
            "application/vnd.kde.kspread": "ksp",
            "application/vnd.kde.kword": "kwd",
            "application/vnd.kenameaapp": "htke",
            "application/vnd.kidspiration": "kia",
            "application/vnd.kinar": "kne",
            "application/vnd.koan": "skp",
            "application/vnd.kodak-descriptor": "sse",
            "application/vnd.las.las+xml": "lasxml",
            "application/vnd.llamagraphics.life-balance.desktop": "lbd",
            "application/vnd.llamagraphics.life-balance.exchange+xml": "lbe",
            "application/vnd.lotus-1-2-3": "123",
            "application/vnd.lotus-approach": "apr",
            "application/vnd.lotus-freelance": "pre",
            "application/vnd.lotus-notes": "nsf",
            "application/vnd.lotus-organizer": "org",
            "application/vnd.lotus-screencam": "scm",
            "application/vnd.lotus-wordpro": "lwp",
            "application/vnd.macports.portpkg": "portpkg",
            "application/vnd.mcd": "mcd",
            "application/vnd.medcalcdata": "mc1",
            "application/vnd.mediastation.cdkey": "cdkey",
            "application/vnd.mfer": "mwf",
            "application/vnd.mfmp": "mfm",
            "application/vnd.micrografx.flo": "flo",
            "application/vnd.micrografx.igx": "igx",
            "application/vnd.mif": "mif",
            "application/vnd.mobius.daf": "daf",
            "application/vnd.mobius.dis": "dis",
            "application/vnd.mobius.mbk": "mbk",
            "application/vnd.mobius.mqy": "mqy",
            "application/vnd.mobius.msl": "msl",
            "application/vnd.mobius.plc": "plc",
            "application/vnd.mobius.txf": "txf",
            "application/vnd.mophun.application": "mpn",
            "application/vnd.mophun.certificate": "mpc",
            "application/vnd.mozilla.xul+xml": "xul",
            "application/vnd.ms-artgalry": "cil",
            "application/vnd.ms-cab-compressed": "cab",
            "application/vnd.ms-excel": "xls",
            "application/vnd.ms-excel.addin.macroenabled.12": "xlam",
            "application/vnd.ms-excel.sheet.binary.macroenabled.12": "xlsb",
            "application/vnd.ms-excel.sheet.macroenabled.12": "xlsm",
            "application/vnd.ms-excel.template.macroenabled.12": "xltm",
            "application/vnd.ms-fontobject": "eot",
            "application/vnd.ms-htmlhelp": "chm",
            "application/vnd.ms-ims": "ims",
            "application/vnd.ms-lrm": "lrm",
            "application/vnd.ms-officetheme": "thmx",
            "application/vnd.ms-pki.seccat": "cat",
            "application/vnd.ms-pki.stl": "stl",
            "application/vnd.ms-powerpoint": "ppt",
            "application/vnd.ms-powerpoint.addin.macroenabled.12": "ppam",
            "application/vnd.ms-powerpoint.presentation.macroenabled.12": "pptm",
            "application/vnd.ms-powerpoint.slide.macroenabled.12": "sldm",
            "application/vnd.ms-powerpoint.slideshow.macroenabled.12": "ppsm",
            "application/vnd.ms-powerpoint.template.macroenabled.12": "potm",
            "application/vnd.ms-project": "mpp",
            "application/vnd.ms-word.document.macroenabled.12": "docm",
            "application/vnd.ms-word.template.macroenabled.12": "dotm",
            "application/vnd.ms-works": "wps",
            "application/vnd.ms-wpl": "wpl",
            "application/vnd.ms-xpsdocument": "xps",
            "application/vnd.mseq": "mseq",
            "application/vnd.musician": "mus",
            "application/vnd.muvee.style": "msty",
            "application/vnd.mynfc": "taglet",
            "application/vnd.neurolanguage.nlu": "nlu",
            "application/vnd.noblenet-directory": "nnd",
            "application/vnd.noblenet-sealer": "nns",
            "application/vnd.noblenet-web": "nnw",
            "application/vnd.nokia.n-gage.data": "ngdat",
            "application/vnd.nokia.n-gage.symbian.install": "n-gage",
            "application/vnd.nokia.radio-preset": "rpst",
            "application/vnd.nokia.radio-presets": "rpss",
            "application/vnd.novadigm.edm": "edm",
            "application/vnd.novadigm.edx": "edx",
            "application/vnd.novadigm.ext": "ext",
            "application/vnd.oasis.opendocument.chart": "odc",
            "application/vnd.oasis.opendocument.chart-template": "otc",
            "application/vnd.oasis.opendocument.database": "odb",
            "application/vnd.oasis.opendocument.formula": "odf",
            "application/vnd.oasis.opendocument.formula-template": "odft",
            "application/vnd.oasis.opendocument.graphics": "odg",
            "application/vnd.oasis.opendocument.graphics-template": "otg",
            "application/vnd.oasis.opendocument.image": "odi",
            "application/vnd.oasis.opendocument.image-template": "oti",
            "application/vnd.oasis.opendocument.presentation": "odp",
            "application/vnd.oasis.opendocument.presentation-template": "otp",
            "application/vnd.oasis.opendocument.spreadsheet": "ods",
            "application/vnd.oasis.opendocument.spreadsheet-template": "ots",
            "application/vnd.oasis.opendocument.text": "odt",
            "application/vnd.oasis.opendocument.text-master": "odm",
            "application/vnd.oasis.opendocument.text-template": "ott",
            "application/vnd.oasis.opendocument.text-web": "oth",
            "application/vnd.olpc-sugar": "xo",
            "application/vnd.oma.dd2+xml": "dd2",
            "application/vnd.openofficeorg.extension": "oxt",
            "application/vnd.openxmlformats-officedocument.presentationml.presentation": "pptx",
            "application/vnd.openxmlformats-officedocument.presentationml.slide": "sldx",
            "application/vnd.openxmlformats-officedocument.presentationml.slideshow": "ppsx",
            "application/vnd.openxmlformats-officedocument.presentationml.template": "potx",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": "xlsx",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.template": "xltx",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.document": "docx",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.template": "dotx",
            "application/vnd.osgeo.mapguide.package": "mgp",
            "application/vnd.osgi.dp": "dp",
            "application/vnd.palm": "pdb",
            "application/vnd.pawaafile": "paw",
            "application/vnd.pg.format": "str",
            "application/vnd.pg.osasli": "ei6",
            "application/vnd.picsel": "efif",
            "application/vnd.pmi.widget": "wg",
            "application/vnd.pocketlearn": "plf",
            "application/vnd.powerbuilder6": "pbd",
            "application/vnd.previewsystems.box": "box",
            "application/vnd.proteus.magazine": "mgz",
            "application/vnd.publishare-delta-tree": "qps",
            "application/vnd.pvi.ptid1": "ptid",
            "application/vnd.quark.quarkxpress": "qxd",
            "application/vnd.realvnc.bed": "bed",
            "application/vnd.recordare.musicxml": "mxl",
            "application/vnd.recordare.musicxml+xml": "musicxml",
            "application/vnd.rig.cryptonote": "cryptonote",
            "application/vnd.rim.cod": "cod",
            "application/vnd.rn-realmedia": "rm",
            "application/vnd.route66.link66+xml": "link66",
            "application/vnd.sailingtracker.track": "st",
            "application/vnd.seemail": "see",
            "application/vnd.sema": "sema",
            "application/vnd.semd": "semd",
            "application/vnd.semf": "semf",
            "application/vnd.shana.informed.formdata": "ifm",
            "application/vnd.shana.informed.formtemplate": "itp",
            "application/vnd.shana.informed.interchange": "iif",
            "application/vnd.shana.informed.package": "ipk",
            "application/vnd.simtech-mindmapper": "twd",
            "application/vnd.smaf": "mmf",
            "application/vnd.smart.teacher": "teacher",
            "application/vnd.solent.sdkm+xml": "sdkm",
            "application/vnd.spotfire.dxp": "dxp",
            "application/vnd.spotfire.sfs": "sfs",
            "application/vnd.stardivision.calc": "sdc",
            "application/vnd.stardivision.draw": "sda",
            "application/vnd.stardivision.impress": "sdd",
            "application/vnd.stardivision.math": "smf",
            "application/vnd.stardivision.writer": "sdw",
            "application/vnd.stardivision.writer-global": "sgl",
            "application/vnd.stepmania.package": "smzip",
            "application/vnd.stepmania.stepchart": "sm",
            "application/vnd.sun.xml.calc": "sxc",
            "application/vnd.sun.xml.calc.template": "stc",
            "application/vnd.sun.xml.draw": "sxd",
            "application/vnd.sun.xml.draw.template": "std",
            "application/vnd.sun.xml.impress": "sxi",
            "application/vnd.sun.xml.impress.template": "sti",
            "application/vnd.sun.xml.math": "sxm",
            "application/vnd.sun.xml.writer": "sxw",
            "application/vnd.sun.xml.writer.global": "sxg",
            "application/vnd.sun.xml.writer.template": "stw",
            "application/vnd.sus-calendar": "sus",
            "application/vnd.svd": "svd",
            "application/vnd.symbian.install": "sis",
            "application/vnd.syncml+xml": "xsm",
            "application/vnd.syncml.dm+wbxml": "bdm",
            "application/vnd.syncml.dm+xml": "xdm",
            "application/vnd.tao.intent-module-archive": "tao",
            "application/vnd.tcpdump.pcap": "pcap",
            "application/vnd.tmobile-livetv": "tmo",
            "application/vnd.trid.tpt": "tpt",
            "application/vnd.triscape.mxs": "mxs",
            "application/vnd.trueapp": "tra",
            "application/vnd.ufdl": "ufd",
            "application/vnd.uiq.theme": "utz",
            "application/vnd.umajin": "umj",
            "application/vnd.unity": "unityweb",
            "application/vnd.uoml+xml": "uoml",
            "application/vnd.vcx": "vcx",
            "application/vnd.visio": "vsd",
            "application/vnd.visionary": "vis",
            "application/vnd.vsf": "vsf",
            "application/vnd.wap.wbxml": "wbxml",
            "application/vnd.wap.wmlc": "wmlc",
            "application/vnd.wap.wmlscriptc": "wmlsc",
            "application/vnd.webturbo": "wtb",
            "application/vnd.wolfram.player": "nbp",
            "application/vnd.wordperfect": "wpd",
            "application/vnd.wqd": "wqd",
            "application/vnd.wt.stf": "stf",
            "application/vnd.xara": "xar",
            "application/vnd.xfdl": "xfdl",
            "application/vnd.yamaha.hv-dic": "hvd",
            "application/vnd.yamaha.hv-script": "hvs",
            "application/vnd.yamaha.hv-voice": "hvp",
            "application/vnd.yamaha.openscoreformat": "osf",
            "application/vnd.yamaha.openscoreformat.osfpvg+xml": "osfpvg",
            "application/vnd.yamaha.smaf-audio": "saf",
            "application/vnd.yamaha.smaf-phrase": "spf",
            "application/vnd.yellowriver-custom-menu": "cmp",
            "application/vnd.zul": "zir",
            "application/vnd.zzazz.deck+xml": "zaz",
            "application/voicexml+xml": "vxml",
            "application/widget": "wgt",
            "application/winhlp": "hlp",
            "application/wsdl+xml": "wsdl",
            "application/wspolicy+xml": "wspolicy",
            "application/x-7z-compressed": "7z",
            "application/x-abiword": "abw",
            "application/x-ace-compressed": "ace",
            "application/x-authorware-bin": "aab",
            "application/x-authorware-map": "aam",
            "application/x-authorware-seg": "aas",
            "application/x-bcpio": "bcpio",
            "application/x-bittorrent": "torrent",
            "application/x-bzip": "bz",
            "application/x-bzip2": "bz2",
            "application/x-cdlink": "vcd",
            "application/x-chat": "chat",
            "application/x-chess-pgn": "pgn",
            "application/x-cpio": "cpio",
            "application/x-csh": "csh",
            "application/x-debian-package": "deb",
            "application/x-director": "dir",
            "application/x-doom": "wad",
            "application/x-dtbncx+xml": "ncx",
            "application/x-dtbook+xml": "dtb",
            "application/x-dtbresource+xml": "res",
            "application/x-dvi": "dvi",
            "application/x-font-bdf": "bdf",
            "application/x-font-ghostscript": "gsf",
            "application/x-font-linux-psf": "psf",
            "application/x-font-otf": "otf",
            "application/x-font-pcf": "pcf",
            "application/x-font-snf": "snf",
            "application/x-font-ttf": "ttf",
            "application/x-font-type1": "pfa",
            "application/x-font-woff": "woff",
            "application/x-futuresplash": "spl",
            "application/x-gnumeric": "gnumeric",
            "application/x-gtar": "gtar",
            "application/x-hdf": "hdf",
            "application/x-java-jnlp-file": "jnlp",
            "application/x-latex": "latex",
            "application/x-mobipocket-ebook": "prc",
            "application/x-ms-application": "application",
            "application/x-ms-wmd": "wmd",
            "application/x-ms-wmz": "wmz",
            "application/x-ms-xbap": "xbap",
            "application/x-msaccess": "mdb",
            "application/x-msbinder": "obd",
            "application/x-mscardfile": "crd",
            "application/x-msclip": "clp",
            "application/x-msdownload": "exe",
            "application/x-msmediaview": "mvb",
            "application/x-msmetafile": "wmf",
            "application/x-msmoney": "mny",
            "application/x-mspublisher": "pub",
            "application/x-msschedule": "scd",
            "application/x-msterminal": "trm",
            "application/x-mswrite": "wri",
            "application/x-netcdf": "nc",
            "application/x-pkcs12": "p12",
            "application/x-pkcs7-certificates": "p7b",
            "application/x-pkcs7-certreqresp": "p7r",
            "application/x-rar-compressed": "rar",
            "application/x-sh": "sh",
            "application/x-shar": "shar",
            "application/x-shockwave-flash": "swf",
            "application/x-silverlight-app": "xap",
            "application/x-stuffit": "sit",
            "application/x-stuffitx": "sitx",
            "application/x-sv4cpio": "sv4cpio",
            "application/x-sv4crc": "sv4crc",
            "application/x-tar": "tar",
            "application/x-tcl": "tcl",
            "application/x-tex": "tex",
            "application/x-tex-tfm": "tfm",
            "application/x-texinfo": "texinfo",
            "application/x-ustar": "ustar",
            "application/x-wais-source": "src",
            "application/x-x509-ca-cert": "der",
            "application/x-xfig": "fig",
            "application/x-xpinstall": "xpi",
            "application/xcap-diff+xml": "xdf",
            "application/xenc+xml": "xenc",
            "application/xhtml+xml": "xhtml",
            "application/xml": "xml",
            "application/xml-dtd": "dtd",
            "application/xop+xml": "xop",
            "application/xslt+xml": "xslt",
            "application/xspf+xml": "xspf",
            "application/xv+xml": "mxml",
            "application/yang": "yang",
            "application/yin+xml": "yin",
            "application/zip": "zip",
            "audio/adpcm": "adp",
            "audio/basic": "au",
            "audio/midi": "mid",
            "audio/mp4": "mp4a",
            "audio/mpeg": "mpga",
            "audio/ogg": "oga",
            "audio/vnd.dece.audio": "uva",
            "audio/vnd.digital-winds": "eol",
            "audio/vnd.dra": "dra",
            "audio/vnd.dts": "dts",
            "audio/vnd.dts.hd": "dtshd",
            "audio/vnd.lucent.voice": "lvp",
            "audio/vnd.ms-playready.media.pya": "pya",
            "audio/vnd.nuera.ecelp4800": "ecelp4800",
            "audio/vnd.nuera.ecelp7470": "ecelp7470",
            "audio/vnd.nuera.ecelp9600": "ecelp9600",
            "audio/vnd.rip": "rip",
            "audio/webm": "weba",
            "audio/x-aac": "aac",
            "audio/x-aiff": "aif",
            "audio/x-mpegurl": "m3u",
            "audio/x-ms-wax": "wax",
            "audio/x-ms-wma": "wma",
            "audio/x-pn-realaudio": "ram",
            "audio/x-pn-realaudio-plugin": "rmp",
            "audio/x-wav": "wav",
            "chemical/x-cdx": "cdx",
            "chemical/x-cif": "cif",
            "chemical/x-cmdf": "cmdf",
            "chemical/x-cml": "cml",
            "chemical/x-csml": "csml",
            "chemical/x-xyz": "xyz",
            "image/bmp": "bmp",
            "image/cgm": "cgm",
            "image/g3fax": "g3",
            "image/gif": "gif",
            "image/ief": "ief",
            "image/jpeg": "jpeg",
            "image/ktx": "ktx",
            "image/png": "png",
            "image/prs.btif": "btif",
            "image/svg+xml": "svg",
            "image/tiff": "tiff",
            "image/vnd.adobe.photoshop": "psd",
            "image/vnd.dece.graphic": "uvi",
            "image/vnd.dvb.subtitle": "sub",
            "image/vnd.djvu": "djvu",
            "image/vnd.dwg": "dwg",
            "image/vnd.dxf": "dxf",
            "image/vnd.fastbidsheet": "fbs",
            "image/vnd.fpx": "fpx",
            "image/vnd.fst": "fst",
            "image/vnd.fujixerox.edmics-mmr": "mmr",
            "image/vnd.fujixerox.edmics-rlc": "rlc",
            "image/vnd.ms-modi": "mdi",
            "image/vnd.net-fpx": "npx",
            "image/vnd.wap.wbmp": "wbmp",
            "image/vnd.xiff": "xif",
            "image/webp": "webp",
            "image/x-cmu-raster": "ras",
            "image/x-cmx": "cmx",
            "image/x-freehand": "fh",
            "image/x-icon": "ico",
            "image/x-pcx": "pcx",
            "image/x-pict": "pic",
            "image/x-portable-anymap": "pnm",
            "image/x-portable-bitmap": "pbm",
            "image/x-portable-graymap": "pgm",
            "image/x-portable-pixmap": "ppm",
            "image/x-rgb": "rgb",
            "image/x-xbitmap": "xbm",
            "image/x-xpixmap": "xpm",
            "image/x-xwindowdump": "xwd",
            "message/rfc822": "eml",
            "model/iges": "igs",
            "model/mesh": "msh",
            "model/vnd.collada+xml": "dae",
            "model/vnd.dwf": "dwf",
            "model/vnd.gdl": "gdl",
            "model/vnd.gtw": "gtw",
            "model/vnd.mts": "mts",
            "model/vnd.vtu": "vtu",
            "model/vrml": "wrl",
            "text/calendar": "ics",
            "text/css": "css",
            "text/csv": "csv",
            "text/html": "html",
            "text/n3": "n3",
            "text/plain": "txt",
            "text/prs.lines.tag": "dsc",
            "text/richtext": "rtx",
            "text/sgml": "sgml",
            "text/tab-separated-values": "tsv",
            "text/troff": "t",
            "text/turtle": "ttl",
            "text/uri-list": "uri",
            "text/vcard": "vcard",
            "text/vnd.curl": "curl",
            "text/vnd.curl.dcurl": "dcurl",
            "text/vnd.curl.scurl": "scurl",
            "text/vnd.curl.mcurl": "mcurl",
            "text/vnd.dvb.subtitle": "sub",
            "text/vnd.fly": "fly",
            "text/vnd.fmi.flexstor": "flx",
            "text/vnd.graphviz": "gv",
            "text/vnd.in3d.3dml": "3dml",
            "text/vnd.in3d.spot": "spot",
            "text/vnd.sun.j2me.app-descriptor": "jad",
            "text/vnd.wap.wml": "wml",
            "text/vnd.wap.wmlscript": "wmls",
            "text/x-asm": "s",
            "text/x-c": "c",
            "text/x-fortran": "f",
            "text/x-pascal": "p",
            "text/x-java-source": "java",
            "text/x-setext": "etx",
            "text/x-uuencode": "uu",
            "text/x-vcalendar": "vcs",
            "text/x-vcard": "vcf",
            "video/3gpp": "3gp",
            "video/3gpp2": "3g2",
            "video/h261": "h261",
            "video/h263": "h263",
            "video/h264": "h264",
            "video/jpeg": "jpgv",
            "video/jpm": "jpm",
            "video/mj2": "mj2",
            "video/mp4": "mp4",
            "video/mpeg": "mpeg",
            "video/ogg": "ogv",
            "video/quicktime": "qt",
            "video/vnd.dece.hd": "uvh",
            "video/vnd.dece.mobile": "uvm",
            "video/vnd.dece.pd": "uvp",
            "video/vnd.dece.sd": "uvs",
            "video/vnd.dece.video": "uvv",
            "video/vnd.dvb.file": "dvb",
            "video/vnd.fvt": "fvt",
            "video/vnd.mpegurl": "mxu",
            "video/vnd.ms-playready.media.pyv": "pyv",
            "video/vnd.uvvu.mp4": "uvu",
            "video/vnd.vivo": "viv",
            "video/webm": "webm",
            "video/x-f4v": "f4v",
            "video/x-fli": "fli",
            "video/x-flv": "flv",
            "video/x-m4v": "m4v",
            "video/x-ms-asf": "asf",
            "video/x-ms-wm": "wm",
            "video/x-ms-wmv": "wmv",
            "video/x-ms-wmx": "wmx",
            "video/x-ms-wvx": "wvx",
            "video/x-msvideo": "avi",
            "video/x-sgi-movie": "movie",
            "x-conference/x-cooltalk": "ice",
            "application/x-chrome-extension": "crx",
            "font/opentype": "otf",
            "text/x-component": "htc",
            "text/cache-manifest": "appcache",
            "application/x-mpegURL": "m3u8",
            "video/MP2T": "ts",
            "audio/flac": "flac"
        };
    });
}(), function() {
    (0, System.amdDefine)("webmail/model/MailPart.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js" ], function(ko) {
        function MailPart(part, mail) {
            this.contentType = part.contentType, this.partId = part.id, this.size = ko.observable(part.size), 
            this.disposition = part.disposition || null, this.contentId = part.contentId || null, 
            this.mail = mail;
        }
        return MailPart;
    });
}(), function() {
    (0, System.amdDefine)("3rdparty/jquery.cookie.js", [ "node_modules/jquery/dist/jquery.js" ], function($) {
        $.cookie = function(key, value, options) {
            if (arguments.length > 1 && (!/Object/.test(Object.prototype.toString.call(value)) || null === value || void 0 === value)) {
                if (options = $.extend({}, options), null !== value && void 0 !== value || (options.expires = -1), 
                "number" == typeof options.expires) {
                    var days = options.expires, t = options.expires = new Date();
                    t.setDate(t.getDate() + days);
                }
                return value = String(value), document.cookie = [ encodeURIComponent(key), "=", options.raw ? value : encodeURIComponent(value), options.expires ? "; expires=" + options.expires.toUTCString() : "", options.path ? "; path=" + options.path : "", options.domain ? "; domain=" + options.domain : "", options.secure ? "; secure" : "" ].join("");
            }
            for (var pair, decode = (options = value || {}).raw ? function(s) {
                return s;
            } : decodeURIComponent, pairs = document.cookie.split("; "), i = 0; pair = pairs[i] && pairs[i].split("="); i++) if (decode(pair[0]) === key) return decode(pair[1] || "");
            return null;
        };
    });
}(), function() {
    (0, System.amdDefine)("webmail/model/mailparts/Attachment.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "3rdparty/mime/wtf.js", "3rdparty/mario.js", "common/util.js", "common/fileExtensionByContentType.js", "webmail/model/MailPart.js", "3rdparty/jquery.cookie.js" ], function($, ko, wtf, mario, util, fileExtensionByContentType, MailPart) {
        function getFileExtensionByContentType(contentType) {
            var extension = fileExtensionByContentType[contentType];
            return extension ? "." + extension : "";
        }
        function composeDisplayName(dataObject) {
            var displayName = dataObject.displayName;
            return !displayName && dataObject.fileName && (displayName = dataObject.fileName.replace(/^.*?[\\\/]?([^\\\/]+)$/, "$1")), 
            displayName || (displayName = "Part-" + dataObject.id + "-" + dataObject.contentType.split("/").pop(), 
            displayName += getFileExtensionByContentType(dataObject.contentType)), displayName;
        }
        function Attachment(dataObject, mail) {
            var that = this;
            MailPart.call(that, dataObject, mail), that.mail = mail, that.id = dataObject.uid || util.uuid(), 
            that.part = dataObject.id, dataObject.decodedSize || (dataObject.decodedSize = dataObject.size, 
            dataObject.size = 4 * Math.ceil(dataObject.decodedSize / 3)), that.size = ko.observable(dataObject.decodedSize), 
            that.rawSize = ko.observable(dataObject.size), that.displayName = composeDisplayName(dataObject), 
            that.justAdded = dataObject.justAdded, that.input = dataObject.input, that.name = dataObject.name, 
            that.value = dataObject.value, that.files = dataObject.files;
            var matchFileNameAndExtension = that.displayName.match(/^(.*)(\.[^.]+$)/);
            matchFileNameAndExtension ? (that.displayNameWithoutExtension = matchFileNameAndExtension[1], 
            that.fileExtension = matchFileNameAndExtension[2]) : (that.displayNameWithoutExtension = that.displayName, 
            that.fileExtension = ""), that.contentType = dataObject.contentType, that.tempUrl = dataObject.tempUrl, 
            that.iconClass = "mime-icon mime-httpd mime-attachment", that.displaySize = ko.computed(function() {
                var size = that.size();
                return size ? size < 1024 ? "1 KB" : size < 1048576 ? inter.renderFileSize(size) : inter.renderFileSize(size, 1) : "";
            }), that.checkForThumbnail(), that.isPreviewable = ko.computed(function() {
                return that.hasThumbnail || !that.tempUrl && Attachment.allowPdfPreview && /^.pdf$/i.test(that.fileExtension);
            }), that.cutTheString = function(maxLength, fileName, extension) {
                if (fileName.length + extension.length > maxLength) {
                    var maxFileNameLength = maxLength - "…".length - extension.length;
                    fileName = fileName.substr(0, maxFileNameLength) + "…";
                }
                return fileName + extension;
            }, that.displayBottomName = ko.computed(function() {
                return that.cutTheString(25, that.displayNameWithoutExtension, that.fileExtension);
            }), that.displayTopName = ko.computed(function() {
                var maxLength = 70;
                return mario.msie && (maxLength = 20), that.cutTheString(maxLength, that.displayNameWithoutExtension, that.fileExtension);
            });
        }
        return Attachment.prototype = Object.create(MailPart.prototype), Attachment.prototype.constructor = Attachment, 
        Attachment.allowPdfPreview = mario.chrome && mario.version >= 19 || mario.opera && mario.version >= 25 || mario.safari && mario.version >= 5, 
        Attachment.prototype.checkForThumbnail = function() {
            this.hasThumbnail = /^image\/(?:gif|png|x-png|tiff|jpeg|pjpeg|jpg)$/.test(this.contentType);
        }, Attachment.createFromFile = function(file, isInlineImage) {
            return file = Attachment.extendFileByNecessaryProperties(file, isInlineImage), Attachment.createAttachment(file);
        }, Attachment.createAttachment = function(file) {
            return new Attachment({
                id: file.id,
                uid: file.id,
                size: file.size,
                contentType: file.type,
                tempUrl: file.url,
                fileName: file.fileName,
                justAdded: !0,
                input: file.input
            });
        }, Attachment.extendFileByNecessaryProperties = function(file, isInlineImage) {
            var name;
            return file.id = util.uuid(), name = isInlineImage ? JSON.stringify({
                type: "related",
                isExisting: !1,
                id: file.id,
                contentId: file.id
            }) : JSON.stringify({
                type: "attachment",
                id: file.id,
                isExisting: !1
            }), file.input = {
                name: encodeURIComponent(name),
                value: "C:\\fakepath\\" + file.name,
                files: [ file ]
            }, file.fileName = file.name, file.url = URL.createObjectURL(file), file;
        }, Attachment.createAttachmentArray = function(dataArray, mail) {
            return (dataArray || []).map(function(dataObject) {
                return new Attachment(dataObject, mail);
            });
        }, Attachment.prototype.getPartUrl = function() {
            return this.mail ? this.mail.getMailUrl() + "/" + this.part : "";
        }, Attachment.prototype.viewAttachedMail = function() {
            var currentUrl = window.location.href, index = currentUrl.indexOf("?");
            -1 !== index && (currentUrl = currentUrl.substring(0, index)), window.open(currentUrl + "?standalone=true&part=" + this.part, "_blank", "toolbar=0,menubar=0,location=0");
        }, Attachment.prototype.getDownloadUrl = function(parameters) {
            var part = this.getPartUrl();
            return parameters = parameters || {}, part ? (mario.ios && window.navigator.standalone && (parameters.MailAuth = $.cookie("MailAuth")), 
            this.getPartUrl() + "/" + encodeURIComponent(this.displayName.replace(/\.\w+$/, function($0) {
                return $0.toLowerCase();
            })) + util.createUrlQueryPart(parameters)) : this.tempUrl ? this.tempUrl : "";
        }, Attachment.prototype.canDownload = function() {
            return this.getPartUrl() || this.tempUrl && !mario.msie;
        }, Attachment.prototype.getImageUrl = function(thumbnail) {
            if (this.hasThumbnail) {
                var parameters = {};
                return "image/tiff" !== this.contentType && "application/pdf" !== this.contentType || (parameters.format = "png"), 
                thumbnail && (parameters.width = mario.ios ? 270 : 173, parameters.height = mario.ios ? 180 : 115, 
                parameters.crop = !0, parameters.gravity = "Center", parameters.repage = !0), this.getDownloadUrl(parameters);
            }
            return "";
        }, Attachment.prototype.getPreviewUrl = function() {
            var url = this.getImageUrl();
            if (url) return url;
            var options = {
                nodownload: 1
            };
            return ".pdf" === this.fileExtension && (options.contentType = "application/pdf"), 
            this.getDownloadUrl(options);
        }, Attachment.prototype.getThumbnailUrl = function() {
            return this.getImageUrl(!0);
        }, Attachment.prototype.getThumbnailUrlForCSS = function() {
            return 'url("' + this.getThumbnailUrl().replace(/'/, '\\"') + '")';
        }, Attachment.prototype.attachToNewMail = function(mail) {
            var dataObject = {
                uid: this.id,
                id: this.part,
                size: this.size(),
                displayName: this.displayName,
                justAdded: this.justAdded,
                input: this.input,
                contentType: this.contentType
            };
            return this.tempUrl && URL.revokeObjectURL(this.tempUrl), new Attachment(dataObject, mail);
        }, Attachment.prototype.isAttachedMail = function() {
            return "message/rfc822" === this.contentType;
        }, Attachment;
    });
}(), function() {
    (0, System.amdDefine)("webmail/model/MailPartFactory.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "webmail/model/mailparts/TextPart.js", "webmail/model/mailparts/InlineImagePart.js", "webmail/model/mailparts/Attachment.js" ], function(ko, util, TextPart, InlineImagePart, Attachment) {
        function MailPartFactory() {}
        return MailPartFactory.create = function(part, mail, actions) {
            var MailPartClass, textTypes = CONFIG.webmail.renderableContentTypes.textTypes, inlineImageTypes = CONFIG.webmail.renderableContentTypes.inlineImageTypes;
            switch (!0) {
              case part.disposition && "attachment" === part.disposition:
                MailPartClass = Attachment;
                break;

              case -1 !== textTypes.indexOf(part.contentType):
                MailPartClass = TextPart;
                break;

              case -1 !== inlineImageTypes.indexOf(part.contentType):
                MailPartClass = InlineImagePart;
                break;

              default:
                MailPartClass = Attachment;
            }
            return new MailPartClass(part, mail);
        }, MailPartFactory;
    });
}(), function() {
    (0, System.amdDefine)("webmail/model/Mail.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/model/Flag.js", "3rdparty/mime/wtf.js", "webmail/model/Recipient.js", "webmail/model/mailparts/Attachment.js", "webmail/model/MailPartFactory.js", "common/ReferenceCountBehavior.js" ], function(ko, Flag, wtf, Recipient, Attachment, MailPartFactory, ReferenceCountBehavior) {
        function createRecipients(recipientsData) {
            var result = [];
            return (recipientsData || []).forEach(function(recipientData) {
                (recipientData.emails || []).forEach(function(email) {
                    var recipient = new Recipient({
                        displayName: recipientData.displayName,
                        email: email.value || email
                    });
                    recipient && result.push(recipient);
                });
            }), result;
        }
        function Mail(username, folder, data) {
            function createFlagAccessor(flag) {
                return ko.computed({
                    read: function() {
                        return !!flags()[flag];
                    },
                    write: function(value) {
                        var fs = flags();
                        value ? fs[flag] = value : delete fs[flag], flags(fs);
                    }
                });
            }
            var that = this, flags = ko.observable({});
            ReferenceCountBehavior.installInto(this), that.username = username, that.folder = ko.observable(folder), 
            that.busy = ko.observable(!1), that.uid = null, that.messageId = null, that.size = 0, 
            that.headers = {}, that.inReplyTo = null, that.date = ko.observable(), that.arrivalDate = ko.observable(), 
            that.replyTo = ko.observableArray(), that.from = ko.observableArray(), that.to = ko.observableArray(), 
            that.cc = ko.observableArray(), that.bcc = ko.observableArray(), that.subject = ko.observable(), 
            that.showLink = ko.observable(!1), that.parts = ko.observableArray(), that.undisclosedRecipients = ko.observable(!1), 
            Object.keys(Flag).forEach(function(flag) {
                var name = Flag[flag].name;
                that[name] = createFlagAccessor(name);
            }), this.selected = ko.observable(!1), this.focused = ko.observable(!1), this.dragging = ko.observable(!1), 
            this.sending = ko.observable(!1), this.failedSaving = ko.observable(!1), this.failedSending = ko.observable(!1), 
            this.failed = ko.pureComputed(function() {
                return this.failedSending() || this.failedSaving();
            }, this), that.updateWith(data), that.displaySubject = ko.pureComputed(function() {
                return that.subject() || TR("mail.mailView.NoSubject", "(No subject)");
            }), that.hasRecipients = ko.pureComputed(function() {
                return that.to().length > 0;
            }), [ "cc", "from", "to", "bcc", "replyTo" ].forEach(function(field) {
                that[field].toString = ko.pureComputed(function() {
                    return that[field]().map(function(contact) {
                        return contact.toString();
                    }).join(", ");
                }), that[field].toDisplayString = ko.pureComputed(function() {
                    return that[field]().map(function(contact) {
                        return contact.toDisplayString();
                    }).join(", ");
                });
            }), that.inlineParts = ko.pureComputed(function() {
                return that.parts().filter(function(part) {
                    return !(part instanceof Attachment);
                });
            }), that.hasInlineParts = ko.pureComputed(function() {
                return that.inlineParts().length > 0;
            }), that.attachments = ko.pureComputed(function() {
                return that.parts().filter(function(part) {
                    return part instanceof Attachment;
                });
            }), that.hasAttachments = ko.pureComputed(function() {
                return that.attachments().length > 0;
            }), that.shouldDisplayDownloadAllAttachmentsLink = ko.pureComputed(function() {
                return that.attachments().length > 1;
            }), that.getDownloadAllAttachmentsUrl = ko.pureComputed(function() {
                var attachmentsFilename = TR("mail.DefaultAttachmentsFilename", "attachments");
                return that.getMailUrl() + "/zip/" + encodeURIComponent(attachmentsFilename);
            }), that.isLoaded = ko.pureComputed(function() {
                return that.inlineParts().filter(function(part) {
                    return part.isLoaded;
                }).every(function(part) {
                    return part.isLoaded();
                });
            }), that.hasExternalImages = ko.pureComputed(function() {
                return that.inlineParts().filter(function(part) {
                    return part.hasExternalImages;
                }).some(function(part) {
                    return part.hasExternalImages();
                });
            }), that.displaySize = ko.pureComputed(function() {
                var size = that.size;
                return size ? size < 1024 ? "<1 KB" : size < 1048576 ? inter.renderFileSize(size) : inter.renderFileSize(size, 1) : "";
            });
        }
        return Mail.prototype.loadExternalImages = function() {
            this.inlineParts().filter(function(part) {
                return part.hasExternalImages && part.hasExternalImages();
            }).forEach(function(part) {
                part.loadExternalImages();
            });
        }, Mail.prototype.setLoadImagesFlag = function() {
            this.oneComLoadImg(!0), this.showLink(!0);
        }, Mail.prototype.setDisregardSPFFlag = function() {
            this.oneComDisregardSPF(!0);
        }, Mail.prototype.equals = function(mail) {
            return this.uid === mail.uid;
        }, Mail.prototype.isDraft = function() {
            return this.folder().isDraftFolder();
        }, Mail.prototype.getMailUrl = function() {
            return "/api/" + encodeURIComponent(this.username) + "/mail/1/" + encodeURIComponent(this.folder().id()) + "/" + this.folder().uidvalidity() + "/" + this.uid;
        }, Mail.prototype.getImapFlags = function() {
            var that = this;
            return Object.keys(Flag).map(function(flagName) {
                return Flag[flagName];
            }).filter(function(flag) {
                return that[flag.name]();
            }).map(function(flag) {
                return flag.imap;
            });
        }, Mail.prototype.setFlag = function(flag, value) {
            this[flag.name]() !== value && (this[flag.name](value), flag === Flag.SEEN && this.folder().unseen(this.folder().unseen() + (value ? -1 : 1)));
        }, Mail.prototype.updateFlags = function(flagData) {
            Object.keys(Flag).forEach(function(flag) {
                var name = Flag[flag].name, imap = Flag[flag].imap;
                flagData && void 0 !== flagData[imap] && 1 === flagData[imap] ? this[name](!0) : this[name](!1);
            }, this);
        }, Mail.prototype.updateWith = function(data) {
            var that = this;
            that.uid = data.uid, that.messageId = data.messageId, that.size = data.size || 0, 
            that.headers = data.headers || {}, that.headers.References = that.headers.References || [], 
            that.inReplyTo = data.inReplyTo, that.date(data.date && new Date(data.date)), that.arrivalDate(new Date(data.arrivalDate)), 
            that.replyTo(createRecipients(data.replyTo)), that.from(createRecipients(data.from)), 
            that.to(createRecipients(data.to)), that.cc(createRecipients(data.cc)), that.bcc(createRecipients(data.bcc)), 
            that.subject(data.subject || ""), that.undisclosedRecipients(data.undisclosedRecipients || !1), 
            that.parts((data.parts || []).map(function(part) {
                return MailPartFactory.create(part, that);
            })), that.updateFlags(data.flags);
        }, Mail.prototype.evict = function() {
            this.folder().mailCache.evict(this);
        }, Mail;
    });
}(), function() {
    (0, System.amdDefine)("common/actions/NotifyRecentEmailsAction.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "common/ActionBehavior.js", "common/model/EmailNotification.js", "webmail/model/Mail.js", "3rdparty/LocalStorage.js" ], function(ko, util, ActionBehavior, EmailNotification, Mail, LocalStorage) {
        function NotifyRecentEmailsAction(options) {
            util.extend(this, util.pick(options, [ "application" ])), ActionBehavior.installInto(this);
        }
        return NotifyRecentEmailsAction.prototype.name = "NotifyRecentEmailsAction", NotifyRecentEmailsAction.prototype.execute = function(context, cb) {
            var that = this, state = context.state, backend = context.backend, inbox = state.folders ? state.folders.inbox : state.inbox, headers = [], localStorage = new LocalStorage(state.user()).subStorage("webmail"), lastKnownModSeq = localStorage.getItem("InboxModSeq");
            backend.resyncFolder(state.user(), inbox.name(), inbox.uidvalidity(), lastKnownModSeq, headers, function(err, data) {
                if (err) return cb(err);
                var newMails = [];
                Object.keys(data.mails).forEach(function(key) {
                    var mailData = data.mails[key], mail = new Mail(state.user(), inbox, mailData);
                    mailData.flags["\\Recent"] && newMails.push(mail), inbox.mailCache.store(mail);
                }), newMails.length > 0 && new EmailNotification({
                    applicationName: that.application,
                    user: state.user(),
                    mails: newMails
                }), localStorage.setItem("InboxModSeq", data.highestModSeq), cb();
            });
        }, NotifyRecentEmailsAction;
    });
}(), function() {
    (0, System.amdDefine)("common/actions/SavePreferencesAction.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "common/ActionBehavior.js" ], function(ko, util, ActionBehavior) {
        function SavePreferencesAction(options) {
            util.extend(this, util.pick(options, "page")), ActionBehavior.installInto(this);
        }
        return SavePreferencesAction.prototype.name = "SavePreferencesAction", SavePreferencesAction.prototype.models = function(context) {
            return context.state.preferences;
        }, SavePreferencesAction.prototype.execute = function(context, cb) {
            var that = this, state = context.state, backend = context.backend;
            that.setBusyFlags(), backend.savePreference(state.user(), that.page, ko.toJS(state.preferences[that.page]), function(err, data) {
                that.removeBusyFlags(), err || (state.preferences[that.page].peek()._rev = data._rev), 
                cb(err);
            });
        }, SavePreferencesAction;
    });
}(), function() {
    var define = System.amdDefine;
    !function(global) {
        function SignalBinding(signal, listener, isOnce, listenerContext, priority) {
            this._listener = listener, this._isOnce = isOnce, this.context = listenerContext, 
            this._signal = signal, this._priority = priority || 0;
        }
        function validateListener(listener, fnName) {
            if ("function" != typeof listener) throw new Error("listener is a required param of {fn}() and should be a Function.".replace("{fn}", fnName));
        }
        function Signal() {
            this._bindings = [], this._prevParams = null;
            var self = this;
            this.dispatch = function() {
                Signal.prototype.dispatch.apply(self, arguments);
            };
        }
        SignalBinding.prototype = {
            active: !0,
            params: null,
            execute: function(paramsArr) {
                var handlerReturn, params;
                return this.active && this._listener && (params = this.params ? this.params.concat(paramsArr) : paramsArr, 
                handlerReturn = this._listener.apply(this.context, params), this._isOnce && this.detach()), 
                handlerReturn;
            },
            detach: function() {
                return this.isBound() ? this._signal.remove(this._listener, this.context) : null;
            },
            isBound: function() {
                return !!this._signal && !!this._listener;
            },
            isOnce: function() {
                return this._isOnce;
            },
            getListener: function() {
                return this._listener;
            },
            getSignal: function() {
                return this._signal;
            },
            _destroy: function() {
                delete this._signal, delete this._listener, delete this.context;
            },
            toString: function() {
                return "[SignalBinding isOnce:" + this._isOnce + ", isBound:" + this.isBound() + ", active:" + this.active + "]";
            }
        }, Signal.prototype = {
            VERSION: "1.0.0",
            memorize: !1,
            _shouldPropagate: !0,
            active: !0,
            _registerListener: function(listener, isOnce, listenerContext, priority) {
                var binding, prevIndex = this._indexOfListener(listener, listenerContext);
                if (-1 !== prevIndex) {
                    if ((binding = this._bindings[prevIndex]).isOnce() !== isOnce) throw new Error("You cannot add" + (isOnce ? "" : "Once") + "() then add" + (isOnce ? "Once" : "") + "() the same listener without removing the relationship first.");
                } else binding = new SignalBinding(this, listener, isOnce, listenerContext, priority), 
                this._addBinding(binding);
                return this.memorize && this._prevParams && binding.execute(this._prevParams), binding;
            },
            _addBinding: function(binding) {
                var n = this._bindings.length;
                do {
                    --n;
                } while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);
                this._bindings.splice(n + 1, 0, binding);
            },
            _indexOfListener: function(listener, context) {
                for (var cur, n = this._bindings.length; n--; ) if ((cur = this._bindings[n])._listener === listener && cur.context === context) return n;
                return -1;
            },
            has: function(listener, context) {
                return -1 !== this._indexOfListener(listener, context);
            },
            add: function(listener, listenerContext, priority) {
                return validateListener(listener, "add"), this._registerListener(listener, !1, listenerContext, priority);
            },
            addOnce: function(listener, listenerContext, priority) {
                return validateListener(listener, "addOnce"), this._registerListener(listener, !0, listenerContext, priority);
            },
            remove: function(listener, context) {
                validateListener(listener, "remove");
                var i = this._indexOfListener(listener, context);
                return -1 !== i && (this._bindings[i]._destroy(), this._bindings.splice(i, 1)), 
                listener;
            },
            removeAll: function() {
                for (var n = this._bindings.length; n--; ) this._bindings[n]._destroy();
                this._bindings.length = 0;
            },
            getNumListeners: function() {
                return this._bindings.length;
            },
            halt: function() {
                this._shouldPropagate = !1;
            },
            dispatch: function(params) {
                if (this.active) {
                    var bindings, paramsArr = Array.prototype.slice.call(arguments), n = this._bindings.length;
                    if (this.memorize && (this._prevParams = paramsArr), n) {
                        bindings = this._bindings.slice(), this._shouldPropagate = !0;
                        do {
                            n--;
                        } while (bindings[n] && this._shouldPropagate && !1 !== bindings[n].execute(paramsArr));
                    }
                }
            },
            forget: function() {
                this._prevParams = null;
            },
            dispose: function() {
                this.removeAll(), delete this._bindings, delete this._prevParams;
            },
            toString: function() {
                return "[Signal active:" + this.active + " numListeners:" + this.getNumListeners() + "]";
            }
        };
        var signals = Signal;
        signals.Signal = Signal, "function" == typeof define && define.amd ? define("3rdparty/signals.js", [], function() {
            return signals;
        }) : "undefined" != typeof module && module.exports ? module.exports = signals : global.signals = signals;
    }(this);
}(), function() {
    (0, System.amdDefine)("common/ReferenceCountBehavior.js", [], function() {
        return {
            installInto: function(target) {
                var referenceCount = 0, lastReferenceTime = Date.now();
                target.incrementReferences = function() {
                    referenceCount += 1;
                }, target.decrementReferences = function() {
                    0 === (referenceCount -= 1) && (lastReferenceTime = Date.now(), target.onNotReferenced && target.onNotReferenced());
                }, target.hasReferences = function() {
                    return referenceCount > 0;
                }, target.lastReferenceTime = function() {
                    return lastReferenceTime;
                }, target.referenceCount = function() {
                    return referenceCount;
                };
            }
        };
    });
}(), function() {
    (0, System.amdDefine)("common/model/Page.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "3rdparty/signals.js", "common/ReferenceCountBehavior.js" ], function(ko, signals, ReferenceCountBehavior) {
        function Page(search, index) {
            var that = this;
            ReferenceCountBehavior.installInto(this), that.busy = ko.observable(!1), that.search = search, 
            that.index = index || 1;
            var mailCache = that.search.folder.mailCache;
            that.mailUids = ko.observableArray(), that.dirty = !0, that.failed = !1, that.mails = ko.pureComputed(function() {
                return that.mailUids().map(function(uid) {
                    return mailCache.get(uid);
                }).filter(function(mail) {
                    return mail;
                });
            }), that.length = ko.pureComputed(function() {
                return that.index > search.pageCount() ? 0 : 0 === search.length() ? 0 : that.index === search.pageCount() ? search.length() % search.pageLength || search.pageLength : search.pageLength;
            }), that.loaded = ko.pureComputed(function() {
                return that.search.isReady() && that.mails().length === that.length();
            });
            var prevMails, sub1 = that.mailUids.subscribe(function(mails) {
                prevMails = [].concat(that.mails());
            }, null, "beforeChange"), sub2 = that.mails.subscribe(function(mails) {
                mails.forEach(function(mail) {
                    mail.incrementReferences();
                }), prevMails.forEach(function(mail) {
                    mail.decrementReferences();
                }), prevMails = null;
            });
            that.hasNextPage = ko.pureComputed(function() {
                return this.index < this.search.pageCount();
            }, this), that.hasPreviousPage = ko.pureComputed(function() {
                return this.index > 1;
            }, this), that.dispose = function() {
                that.mails().forEach(function(mail) {
                    mail.decrementReferences();
                }), that.mails.dispose(), sub1.dispose(), sub2.dispose();
            }, that.lastReferenceRemoved = new signals.Signal();
        }
        return Page.prototype.onNotReferenced = function() {
            this.lastReferenceRemoved.dispatch();
        }, Page.prototype.firstMailIndex = function() {
            return (this.index - 1) * this.search.pageLength + 1;
        }, Page.prototype.lastMailIndex = function() {
            return 0 === this.search.length() ? this.firstMailIndex() : Math.min(this.firstMailIndex() - 1 + this.search.pageLength, this.search.length());
        }, Page.prototype.nextPage = function() {
            return this.search.getPage(this.index + 1);
        }, Page.prototype.previousPage = function() {
            return this.search.getPage(this.index - 1);
        }, Page.prototype.evict = function() {
            if (this.hasReferences()) throw new Error("You can't evict a page with references");
            this.search.pageCache.evict(this), this.search.pageCache.isEmpty() && this.search.evict();
        }, Page.prototype.mailUidUpdated = function(oldUid, newUid) {
            var index = this.mailUids.indexOf(oldUid);
            -1 !== index && (this.mailUids.splice(index, 1, newUid), this.dirty = !0);
        }, Page;
    });
}(), function() {
    (0, System.amdDefine)("common/Cache.js", [], function() {
        function Cache(createKey) {
            if ("function" != typeof createKey) throw new Error("A cache must be instantiated with a createKey function");
            this.data = {}, this.createKey = createKey;
        }
        function disposeValue(value) {
            value && value.dispose && value.dispose();
        }
        return Cache.prototype.store = function(values) {
            return Array.isArray(values) || (values = [ values ]), values.forEach(function(value) {
                var key = this.createKey(value);
                key in this.data || (this.data[key] = value);
            }, this), this;
        }, Cache.prototype.get = function(key) {
            return this.data[key] || null;
        }, Cache.prototype.getAll = function() {
            return Object.keys(this.data).map(function(key) {
                return this.data[key];
            }, this);
        }, Cache.prototype.remove = function(values) {
            return Array.isArray(values) || (values = [ values ]), values.forEach(function(value) {
                var key = this.createKey(value);
                delete this.data[key];
            }, this), this;
        }, Cache.prototype.evict = function(values) {
            return Array.isArray(values) || (values = [ values ]), values.forEach(function(value) {
                var key = this.createKey(value);
                delete this.data[key], disposeValue(value);
            }, this), this;
        }, Cache.prototype.contains = function(values) {
            return Array.isArray(values) || (values = [ values ]), values.every(function(value) {
                return this.createKey(value) in this.data;
            }, this);
        }, Cache.prototype.clear = function() {
            return this.getAll().forEach(function(value) {
                disposeValue(value);
            }), this.data = {}, this;
        }, Cache.prototype.dispose = function() {
            this.clear();
        }, Cache.prototype.isEmpty = function() {
            return 0 === Object.keys(this.data).length;
        }, Cache.prototype.keyUpdated = function(oldKey, value) {
            delete this.data[oldKey], this.store(value);
        }, Cache;
    });
}(), function() {
    (0, System.amdDefine)("common/model/Search.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/model/Page.js", "common/Cache.js", "common/util.js" ], function(ko, Page, Cache, util) {
        function Search(options) {
            var that = this;
            util.extend(this, util.pick(options, [ "folder", "sortKey", "sortDirection", "viewFilter", "query", "pageLength" ])), 
            that.length = ko.observable(0), that.pageCache = new Cache(function(page) {
                return page.index;
            }), that.pageCount = ko.pureComputed(function() {
                return Math.max(Math.ceil(that.length() / that.pageLength), 1);
            }), that.findLastPage = function(amountOfEmails, pageSize) {
                var result = amountOfEmails / pageSize;
                return Math.ceil(result);
            }, that.lastPage = ko.observable();
            var searchIsReady = ko.observable(!1);
            that.ready = function() {
                searchIsReady(!0);
            }, that.isReady = ko.pureComputed(function() {
                return searchIsReady();
            });
        }
        function getPagesChains(pageCache) {
            var pages = pageCache.getAll();
            pages.sort(function(a, b) {
                return a.index - b.index;
            });
            var pageChains = [], currentChain = [];
            return pages.forEach(function(page) {
                currentChain.push(page), pageCache.get(page.index + 1) || (pageChains.push(currentChain), 
                currentChain = []);
            }), currentChain.length > 0 && pageChains.push(currentChain), pageChains;
        }
        function getUidsFromPageChain(pageChain) {
            var uids = [];
            return pageChain.forEach(function(page) {
                Array.prototype.push.apply(uids, page.mailUids());
            }), uids;
        }
        function updateChainWithUids(pageChain, uids) {
            var offset = 0;
            pageChain.forEach(function(page, index) {
                page.mailUids(uids.slice(offset, offset + page.length())), offset += page.length();
            });
        }
        return Search.prototype.getPage = function(index) {
            if ("number" != typeof index) throw new Error("search.getPage must be called with a number");
            var page = this.pageCache.get(index);
            return page || (page = new Page(this, index), this.pageCache.store(page)), page;
        }, Search.prototype.firstPage = function() {
            return this.getPage(1);
        }, Search.prototype.sortExpression = function() {
            var sortExpression = [], expression = {};
            return expression[this.sortKey] = this.sortDirection, sortExpression.push(expression), 
            "ARRIVAL" !== this.sortKey && sortExpression.push({
                ARRIVAL: "DESC"
            }), sortExpression;
        }, Search.prototype.invalidateCache = function() {
            this.pageCache.getAll().forEach(function(page) {
                page.hasReferences() ? (page.failed = !1, page.dirty = !0) : page.evict();
            }, this);
        }, Search.prototype.removeMails = function(mails) {
            this.pageCache.getAll().sort(function(a, b) {
                return a.index - b.index;
            });
            var uidsToBeRemoved = util.uniqueIndexBy(mails, "uid"), pageChains = getPagesChains(this.pageCache), removed = 0;
            pageChains.forEach(function(pageChain) {
                var uids = getUidsFromPageChain(pageChain), indexedUids = util.indexBy(uids, function(uid) {
                    return uid in uidsToBeRemoved ? "remove" : "keep";
                });
                updateChainWithUids(pageChain, (indexedUids.keep || []).slice(removed)), removed += (indexedUids.remove || []).length;
            }), this.length(this.length() - removed), pageChains.forEach(function(pageChain) {
                pageChain.forEach(function(page) {
                    page.mailUids().length < page.length() && (page.dirty = !0), 0 !== page.mailUids().length || page.hasReferences() || page.evict();
                });
            });
        }, Search.prototype.evict = function() {
            this.pageCache.clear(), this.folder.searchCache.evict(this);
        }, Search.prototype.mailUidUpdated = function(oldUid, newUid) {
            this.pageCache.getAll().forEach(function(page) {
                page.mailUidUpdated(oldUid, newUid);
            });
        }, Search.prototype.dispose = function() {
            this.pageCache.dispose();
        }, Search;
    });
}(), function() {
    (0, System.amdDefine)("common/util.js", [ "node_modules/jquery/dist/jquery.js" ], function($) {
        function flattenTo(arr, result) {
            arr.forEach(function(item) {
                Array.isArray(item) ? flattenTo(item, result) : result.push(item);
            });
        }
        var util = {};
        util.escapeRegExp = function(str) {
            return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
        }, util.htmlEncode = function(text) {
            return text.replace(/[&<>"'`]/g, function(chr) {
                return "&#" + chr.charCodeAt(0) + ";";
            });
        }, util.leftPad = function(str, length, padChar) {
            for (str = String(str); str.length < length; ) str = (padChar || " ") + str;
            return str;
        }, util.trimArray = function(arr, trimEmptyStringsToo) {
            return arr.filter(function(item) {
                return void 0 !== item && (!trimEmptyStringsToo || "" !== item);
            });
        }, util.arrayRemove = function(arr, elementsToRemove) {
            return arr.filter(function(element) {
                return elementsToRemove.indexOf(element) < 0;
            });
        }, util.getUniqueName = function(list, name) {
            var clashes = list.map(function(item) {
                var m = 0;
                return item === name ? 0 : (m = /(.*)(?:-(\d+))/.exec(item), m && m[1] === name ? m[2] : -1);
            }), num = -1;
            return 0 !== clashes.length && -1 !== (num = Math.max.apply(null, clashes)) ? name + "-" + (num + 1) : name;
        }, util.contains = function(text, query, ignoreCase) {
            return !!text && (query && ignoreCase && (text = text.toLowerCase(), query = query.toLowerCase()), 
            -1 !== text.indexOf(query));
        }, util.entries = function(dictionary) {
            return Object.keys(dictionary).map(function(key) {
                return {
                    key: key,
                    value: dictionary[key]
                };
            });
        }, util.unique = function(list, selector) {
            var seen = {};
            return list.filter(function(value) {
                var key = selector ? selector(value) : value;
                return !seen[key] && (seen[key] = !0, !0);
            });
        }, util.decodePairs = function(text, allowDuplicates) {
            var result = {};
            return (text = text || "").split("&").forEach(function(entry) {
                var pair = entry.split("=");
                allowDuplicates ? (result[decodeURIComponent(pair[0])] = result[decodeURIComponent(pair[0])] || []).push(decodeURIComponent(pair[1])) : result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
            }), result;
        }, util.encodePairs = function(hash) {
            return util.entries(hash).map(function(entry) {
                return encodeURIComponent(entry.key) + "=" + encodeURIComponent(entry.value);
            }).join("&");
        }, util.createUrlQueryPart = function(hash) {
            return Object.keys(hash).length ? "?" + util.encodePairs(hash) : "";
        }, util.getQueryParameters = function() {
            var query = window.location.search.substring(1);
            return util.decodePairs(query);
        }, util.bySortKeyComparator = function(a, b) {
            var aSortKey = a.sortKey(), bSortKey = b.sortKey();
            return aSortKey ? bSortKey ? aSortKey < bSortKey ? -1 : aSortKey > bSortKey ? 1 : 0 : -1 : bSortKey ? 1 : 0;
        };
        var CHARS = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");
        util.uuid = function(len, radix) {
            var i, r, chars = CHARS, uuid = [];
            if (radix = radix || chars.length, len) for (i = 0; i < len; i += 1) uuid[i] = chars[0 | Math.random() * radix]; else for (uuid[8] = uuid[13] = uuid[18] = uuid[23] = "-", 
            uuid[14] = "4", i = 0; i < 36; i += 1) uuid[i] || (r = 0 | 16 * Math.random(), uuid[i] = chars[19 === i ? 3 & r | 8 : r]);
            return uuid.join("");
        }, util.byFileComparator = function(obj1, obj2) {
            return obj1.justAdded !== obj2.justAdded ? obj1.justAdded ? 1 : -1 : obj1.displayName > obj2.displayName ? 1 : obj1.displayName < obj2.displayName ? -1 : obj1.size > obj2.size ? -1 : obj1.size < obj2.size ? 1 : 0;
        };
        var folderTranslations = TR("common.FolderName", {
            INBOX: "Inbox",
            "INBOX.Drafts": "Drafts",
            "INBOX.Trash": "Trash",
            "INBOX.Sent": "Sent",
            "INBOX.Spam": "Spam"
        });
        return util.translatedFolderName = function(folderId) {
            return folderId ? folderTranslations[folderId] || folderId.split(/\./).pop() : "";
        }, util.unAbsolutizeApiLinks = function(html) {
            var $html = $("<div>" + html + "</div>"), origin = location.origin || location.protocol + "//" + location.host;
            return $('img[src^="' + origin + '"]', $html).each(function() {
                var $img = $(this);
                $img.attr("src", $img.attr("src").replace(origin + "/api/", "/api/"));
            }), $html.html();
        }, util.pick = function(obj, keys) {
            var copy = {};
            if (obj) {
                if (!Array.isArray(keys)) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    keys = [].concat(args);
                }
                keys.forEach(function(key) {
                    copy[key] = obj[key];
                });
            }
            return copy;
        }, util.omit = function(obj, keys) {
            var copy = {};
            if (obj) {
                if (!Array.isArray(keys)) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    keys = [].concat(args);
                }
                var keyIndex = util.uniqueIndexBy(keys);
                Object.keys(obj).filter(function(key) {
                    return !(key in keyIndex);
                }).forEach(function(key) {
                    copy[key] = obj[key];
                });
            }
            return copy;
        }, util.extend = function(obj) {
            return Array.prototype.slice.call(arguments, 1).forEach(function(source) {
                if (source) for (var prop in source) obj[prop] = source[prop];
            }), obj;
        }, util.defaults = function(obj) {
            return Array.prototype.slice.call(arguments, 1).forEach(function(source) {
                if (source) for (var prop in source) void 0 === obj[prop] && (obj[prop] = source[prop]);
            }), obj;
        }, util.indexBy = function(list, selector) {
            return list.reduce(function(result, item) {
                var property = item;
                return selector && (property = "string" == typeof selector ? item[selector] : selector(item)), 
                property in result || (result[property] = []), result[property].push(item), result;
            }, {});
        }, util.uniqueIndexBy = function(list, selector) {
            var index = util.indexBy(list, selector);
            return Object.keys(index).forEach(function(key) {
                index[key] = index[key][0];
            }), index;
        }, util.textToHtml = function(text) {
            return text.replace(/\r?\n/g, "<br>\n");
        }, util.hasModifierKey = function(e) {
            return e.ctrlKey || e.shiftKey || e.metaKey;
        }, util.compareStrings = function(x, y, ignoreCase) {
            return x = x || "", y = y || "", ignoreCase && (x = x.toLowerCase(), y = y.toLowerCase()), 
            x < y ? -1 : x > y ? 1 : x === y ? 0 : void 0;
        }, util.range = function(length, startIndex, stepSize) {
            return startIndex = startIndex || 0, stepSize = stepSize || 1, Array.apply(null, new Array(length)).map(function(_, i) {
                return i * stepSize + startIndex;
            });
        }, util.takeWhile = function(list, predicate) {
            var result = [];
            return list.every(function(item) {
                return !!predicate(item) && (result.push(item), !0);
            }), result;
        }, util.composerOptionsFromMailto = function(mailto) {
            var options = {
                to: (mailto = mailto.replace(/^mailto:/, "")).replace(/\?.*$/, "")
            }, paramArray = mailto.match(/^.*\?((?:(?:[^=& ]+=[^&]+)&)*(?:[^=& ]+=[^&]+))$/);
            return paramArray && paramArray[1].split(/&/).forEach(function(param) {
                var parts = param.split(/\=/);
                "to" === parts[0] ? options.to += "," + decodeURIComponent(parts[1]) : options[parts[0]] = decodeURIComponent(parts[1]);
            }), options;
        }, util.isFileAnImage = function(file) {
            return /^image\/(?:gif|png|x-png|tiff|jpeg|pjpeg|jpg)$/.test(file.type);
        }, util.arrayEquals = function(a, b, itemComparer) {
            if (a === b) return !0;
            if (!a && !b) return !0;
            if (!a || !b) return !1;
            if (a.length !== b.length) return !1;
            itemComparer = itemComparer || function(aItem, bItem) {
                return aItem === bItem;
            };
            for (var i = 0; i < a.length; i += 1) if (!itemComparer(a[i], b[i])) return !1;
            return !0;
        }, util.firstUp = function(text) {
            return text ? text[0].toUpperCase() + text.slice(1) : text;
        }, util.flatten = function(arr) {
            var result = [];
            return flattenTo(arr, result), result;
        }, util.distinguishFileFromDirectory = function(inFiles, cb) {
            var reader, fileReadDone, checkFile, files = [], directories = [];
            fileReadDone = function() {
                files.length + directories.length === inFiles.length && cb(files, directories);
            }, checkFile = function(file) {
                (reader = new FileReader()).onload = function() {
                    files.push(file), fileReadDone();
                }, reader.onerror = function() {
                    directories.push(file), fileReadDone();
                }, reader.readAsArrayBuffer(file);
            };
            for (var i = 0; i < inFiles.length; i += 1) checkFile(inFiles[i]);
        }, util;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/onevalidation/validation.js", [], factory) : (root.one = root.one || {}, 
        root.one.validation = factory());
    }(this, function() {
        "use strict";
        function concatRegExps() {
            for (var source = "", i = 0; i < arguments.length; i += 1) "[object RegExp]" === Object.prototype.toString.call(arguments[i]) ? source += arguments[i].source : source += arguments[i];
            return source;
        }
        function createHttpishUrlRegExp(options) {
            return options = options || {}, new RegExp(concatRegExps(options.scheme || "https?", "://", "(?:", fragments.user, "(?::", fragments.password, ")?@", ")?", "(?:", options.localhost ? "localhost|" : "", options.idn ? fragments.domainIdn : fragments.domain, "|", fragments.ipv4, ")", "(?::", fragments.port, ")?", fragments.pathnameSearchHash), "i");
        }
        var name, ipv4DigitRegExpSource = /(?:[0-9]|1?[0-9][0-9]|2[0-4][0-9]|25[0-5])/.source, validation = {
            functions: {}
        }, fragments = {
            visibleNonAsciiChar: /[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԥԱ-Ֆՙա-ևא-תװ-ײء-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨऄ-हऽॐक़-ॡॱॲॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡഅ-ഌഎ-ഐഒ-നപ-ഹഽൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜໝༀཀ-ཇཉ-ཬྈ-ྋက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-Ⴥა-ჺჼᄀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₔℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⴀ-ⴥⴰ-ⵥⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆷㇰ-ㇿ㐀-䶵一-鿋ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙟꙢ-ꙮꙿ-ꚗꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋꞌꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-鶴侮-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ̀-ͯ҃-҉֑-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٞۖ-ۜ۞-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࠭ऀ-ः़ा-ॎ॑-ॕॢॣঁ-ঃ়া-ৄেৈো-্ৗৢৣਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑੰੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣஂா-ூெ-ைொ-்ௗఁ-ఃా-ౄె-ైొ-్ౕౖౢౣಂಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣംഃാ-ൄെ-ൈൊ-്ൗൢൣංඃ්ා-ුූෘ-ෟෲෳัิ-ฺ็-๎ັິ-ູົຼ່-ໍ༹༘༙༵༷༾༿ཱ-྄྆྇ྐ-ྗྙ-ྼ࿆ါ-ှၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏႚ-ႝ፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳា-៓៝᠋-᠍ᢩᤠ-ᤫᤰ-᤻ᦰ-ᧀᧈᧉᨗ-ᨛᩕ-ᩞ᩠-᩿᩼ᬀ-ᬄ᬴-᭄᭫-᭳ᮀ-ᮂᮡ-᮪ᰤ-᰷᳐-᳔᳒-᳨᳭ᳲ᷀-᷽ᷦ-᷿⃐-⃰⳯-⳱ⷠ-〪ⷿ-゙゚〯꙯-꙲꙼꙽꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-꣄꣠-꣱ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀ꨩ-ꨶꩃꩌꩍꩻꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꯣ-ꯪ꯬꯭ﬞ︀-️︠-︦²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９¡«·»¿;·՚-՟։֊־׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾।॥॰෴๏๚๛༄-༒༺-༽྅࿐-࿔၊-၏჻፡-፨᐀᙭᙮᚛᚜᛫-᛭᜵᜶។-៖៘-៚᠀-᠊᥄᥅᧞᧟᨞᨟᪠-᪦᪨-᪭᭚-᭠᰻-᰿᱾᱿᳓‐-‧‰-⁃⁅-⁑⁓-⁞⁽⁾₍₎〈〉❨-❵⟅⟆⟦-⟯⦃-⦘⧘-⧛⧼⧽⳹-⳼⳾⳿⸀-⸮⸰⸱、-〃〈-】〔-〟〰〽゠・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꯫﴾﴿︐-︙︰-﹒﹔-﹡﹣﹨﹪﹫！-＃％-＊，-／：；？＠［-］＿｛｝｟-･¢-©¬®-±´¶¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂؆-؈؋؎؏۩۽۾߶৲৳৺৻૱୰௳-௺౿ೱೲ൹฿༁-༃༓-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟፠᎐-᎙៛᥀᧠-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₸℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏨␀-␦⑀-⑊⒜-ⓩ─-⛍⛏-⛡⛣⛨-⛿✁-✄✆-✉✌-✧✩-❋❍❏-❒❖-❞❡-❧➔➘-➯➱-➾⟀-⟄⟇-⟊⟌⟐-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-\uffee\ufffc\ufffd]/,
            domainPart: /[a-z0-9](?:[\-a-z0-9]*[a-z0-9])?/i,
            tld: /[a-z][\-a-z]*[a-z]/i,
            port: /\d{1,5}/,
            localpart: /[a-z0-9!#$%&'*+\/=?\^_`{|}~\-:][\.a-z0-9!#$%&'*+\/=?\^_`{|}~\-]*/i,
            user: /[^:@\/]+/i,
            uuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/i,
            lowerCaseUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,
            upperCaseUuid: /[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}/,
            password: /[^@\/]+?/i,
            pathname: /[\w\-\.~%!$&'\(\)*+,;=:@\/]*/,
            search: /[\w\-\.~%!$&'\(\)*+,;=:@\/?]*/,
            hash: /[\w\-\.~%!$&'\(\)*+,;=:@\/?#]*/,
            ipv4: new RegExp("(?:" + ipv4DigitRegExpSource + "\\.){3}" + ipv4DigitRegExpSource)
        }, alphanumericalPlusVisibleNonAsciiChars = new RegExp(fragments.visibleNonAsciiChar.source.replace(/^\[/, "[a-z0-9")), alphabeticalPlusVisibleNonAsciiChars = new RegExp(fragments.visibleNonAsciiChar.source.replace(/^\[/, "[a-z"));
        fragments.domainPartIdn = new RegExp(concatRegExps(alphanumericalPlusVisibleNonAsciiChars, "(?:", new RegExp(alphanumericalPlusVisibleNonAsciiChars.source.replace(/^\[/, "[\\-") + "*"), alphanumericalPlusVisibleNonAsciiChars, ")?")), 
        fragments.tldIdn = new RegExp(concatRegExps(alphabeticalPlusVisibleNonAsciiChars, new RegExp(alphabeticalPlusVisibleNonAsciiChars.source.replace(/^\[/, "[\\-") + "*"), alphabeticalPlusVisibleNonAsciiChars)), 
        fragments.domain = fragments.domainName = new RegExp("(?:" + fragments.domainPart.source + "\\.)+" + fragments.tld.source, "i"), 
        fragments.domainIdn = fragments.domainNameIdn = new RegExp("(?:" + fragments.domainPartIdn.source + "\\.)+" + fragments.tldIdn.source, "i"), 
        fragments.email = fragments.emailAddress = new RegExp(fragments.localpart.source + "@" + fragments.domain.source, "i"), 
        fragments.emailIdn = fragments.emailAddressIdn = new RegExp(fragments.localpart.source + "@" + fragments.domainIdn.source, "i"), 
        fragments.mailtoUrl = new RegExp("mailto:" + fragments.email.source, "i"), fragments.mailtoUrlIdn = new RegExp("mailto:" + fragments.emailIdn.source, "i"), 
        fragments.pathnameSearchHash = new RegExp(concatRegExps("(?:/", fragments.pathname, "(?:\\?", fragments.search, ")?", "(?:#", fragments.hash, ")?", ")?")), 
        fragments.httpUrl = createHttpishUrlRegExp({
            scheme: /https?/
        }), fragments.httpUrlIdn = createHttpishUrlRegExp({
            scheme: /https?/,
            idn: !0
        }), fragments.ftpUrl = createHttpishUrlRegExp({
            scheme: /ftp/
        }), fragments.ftpUrlIdn = createHttpishUrlRegExp({
            scheme: /ftp/,
            idn: !0
        });
        for (name in fragments) fragments.hasOwnProperty(name) && (validation[name] = new RegExp("^" + fragments[name].source + "$", function(regExp) {
            var flagsString = "";
            return regExp.ignoreCase && (flagsString += "i"), regExp.global && (flagsString += "g"), 
            regExp.multiline && (flagsString += "m"), flagsString;
        }(fragments[name])), validation.functions[name] = function(name) {
            return function(value) {
                return validation[name].test(value);
            };
        }(name));
        return validation.fragments = fragments, validation.createHttpishUrlRegExp = createHttpishUrlRegExp, 
        validation;
    });
}(), function() {
    (0, System.amdDefine)("3rdparty/knockout.validation.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "3rdparty/onevalidation/validation.js" ], function(ko, validation) {
        function capitalize(value) {
            return value.charAt(0).toUpperCase() + value.substr(1);
        }
        var validations = {
            present: function(value) {
                return !!value && /\S+/.test(value);
            },
            email: function(value) {
                return validation.email.test(value);
            },
            emailIdn: function(value) {
                return validation.emailIdn.test(value);
            },
            domain: function(value) {
                return validation.domain.test(value);
            },
            domainIdn: function(value) {
                return validation.domainIdn.test(value);
            },
            password: function(value) {
                return /^[!-~]{6,64}$/.test(value);
            },
            folderName: function(value) {
                return /^[^\\\/\.]*$/.test(value);
            },
            notNull: function(value) {
                return null !== value;
            }
        };
        for (var v in validations) ko.extenders[v] = function(name) {
            return function(target) {
                function validate(value) {
                    return validations[name](value);
                }
                return target["is" + capitalize(name)] = ko.observable(validate(target())), target["isNot" + capitalize(name)] = ko.computed(function() {
                    return !target["is" + capitalize(name)]();
                }), target.subscribe(function(newValue) {
                    target["is" + capitalize(name)](validate(newValue));
                }), target.hasOwnProperty("isValid") || target.hasOwnProperty("isNotValid") || (target.isValid = ko.computed(function() {
                    var valid = !0;
                    for (var k in validations) target.hasOwnProperty("is" + capitalize(k)) && (valid = target["is" + capitalize(k)]());
                    return valid;
                }), target.isNotValid = ko.computed(function() {
                    return !target.isValid();
                })), target;
            };
        }(v);
    });
}(), function() {
    (0, System.amdDefine)("common/model/Folder.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/Cache.js", "common/model/Search.js", "common/util.js", "3rdparty/knockout.validation.js" ], function(ko, Cache, Search, util) {
        function createSearchKey(options) {
            var uidValidity = options.folder.uidvalidity() || "";
            return options.folder.id() + (options.folder.isSystemFolder() ? "" : uidValidity) + options.pageLength + (options.sortKey || "") + (options.sortDirection || "") + (options.viewFilter || "") + (options.query || "");
        }
        function Folder(data, parent) {
            var that = this;
            that.subscriptions = [], data.children = data.children || [], that.busy = ko.observable(!1), 
            that.dirty = !1, that.parent = ko.observable(parent);
            var parentId = parent && parent.id() || null, id = data.id || parentId + ".";
            that.id = ko.observable(id), that.isNew = ko.observable(data.isNew || !1), that.name = ko.computed({
                read: function() {
                    return that.id().split(/\./).pop();
                },
                write: function(value) {
                    var id = that.id().split(/\./);
                    id[id.length - 1] = value, that.changeIdRecursively(id.join("."));
                }
            }), that.translatedName = ko.computed(function() {
                return util.translatedFolderName(that.id());
            }), that.closestSystemFolder = ko.computed(function() {
                return that.isSystemFolder() ? that : that.parent() ? that.parent().closestSystemFolder() : null;
            }), that.supportRename = ko.computed(function() {
                return that.isCustomFolder();
            }), that.supportDelete = ko.computed(function() {
                return that.isTrashFolder();
            }), that.supportMoveToTrash = ko.computed(function() {
                return that.isCustomFolder() && !that.isTrashFolder();
            }), that.messages = ko.observable(data.messages || 0), that.unseen = ko.observable(data.unseen || 0), 
            that.highestmodseq = ko.observable(data.highestmodseq), that.uidvalidity = ko.observable(data.uidValidity), 
            that.collapsed = ko.observable(!!data.collapsed), that.children = ko.observableArray(data.children.map(function(child) {
                return new Folder(child, that);
            })), that.indicator = ko.computed(function() {
                return that.isTrashFolder() || that.isSentFolder() ? 0 : that.isDraftFolder() ? that.collapsed() ? that.messages() + that.allChildren().reduce(function(sum, folder) {
                    return sum + folder.messages();
                }, 0) : that.messages() : that.collapsed() ? that.unseen() + that.allChildren().reduce(function(sum, folder) {
                    return sum + folder.unseen();
                }, 0) : that.unseen();
            }), that.label = ko.pureComputed(function() {
                return that.indicator() ? that.translatedName() + " (" + that.indicator() + ")" : that.translatedName();
            }), that.dragging = ko.observable(!1), that.selected = ko.observable(!1), that.collapsable = ko.pureComputed(function() {
                return !that.collapsed() && that.children().length > 0;
            }), that.hidden = ko.pureComputed(function() {
                var parent = that.parent();
                return parent && (parent.collapsed() || parent.hidden());
            }, null, {
                deferEvaluation: !0
            }), that.animated = ko.observable(!1), that.subscriptions.push(that.animated.subscribe(function(active) {
                active && setTimeout(function() {
                    that.animated(!1);
                }, 1e3);
            })), that.depth = ko.pureComputed(function() {
                return that.parent() ? that.isInbox() || that.parent().isInbox() ? 0 : that.parent().depth() + 1 : 0;
            }, null, {
                deferEvaluation: !0
            }), that.mailCache = new Cache(function(mail) {
                return mail.uid;
            }), that.searchCache = new Cache(function(search) {
                return createSearchKey(search);
            });
        }
        return Folder.prototype.iconClass = "icon-folder", Folder.prototype.allChildren = function() {
            return this.children().reduce(function(result, folder) {
                return result.push(folder), result.push.apply(result, folder.allChildren()), result;
            }, []);
        }, Folder.prototype.pathString = function() {
            return this.parent() && !this.parent().isInbox() ? this.parent().pathString() + " » " + this.translatedName() : this.translatedName();
        }, Folder.prototype.isInbox = function() {
            return !1;
        }, Folder.prototype.isDraftFolder = function() {
            return this.parent() && this.parent().isDraftFolder();
        }, Folder.prototype.isSentFolder = function() {
            return this.parent() && this.parent().isSentFolder();
        }, Folder.prototype.isTrashFolder = function() {
            return this.parent() && this.parent().isTrashFolder();
        }, Folder.prototype.isSpamFolder = function() {
            return this.parent() && this.parent().isSpamFolder();
        }, Folder.prototype.isOutgoingFolder = function() {
            return this.parent() && this.parent().isOutgoingFolder();
        }, Folder.prototype.isSystemFolder = function() {
            return !1;
        }, Folder.prototype.isCustomFolder = function() {
            return !0;
        }, Folder.prototype.supportCreateSubfolder = function() {
            return !0;
        }, Folder.prototype.supportResending = function() {
            return !1;
        }, Folder.prototype.supportEmptyFolder = function() {
            return !1;
        }, Folder.prototype.supportSpamToTrash = function() {
            return !1;
        }, Folder.prototype.animateSelfAndChildren = function(notRoot) {
            notRoot && this.animated(!0), notRoot && this.collapsed() || this.children().forEach(function(child) {
                child.animateSelfAndChildren(!0);
            });
        }, Folder.prototype.toggleCollapsed = function() {
            (this.collapsed() || this.collapsable()) && (this.animateSelfAndChildren(), this.collapsed(!this.collapsed()));
        }, Folder.prototype.equals = function(folder) {
            return folder instanceof Folder && this.id() === folder.id();
        }, Folder.prototype.isSuccessorOf = function(predecessor) {
            var predecessorId = predecessor.id() + ".";
            return 0 === this.id().substr(0, this.id().lastIndexOf(".") + 1).indexOf(predecessorId);
        }, Folder.prototype.changeIdRecursively = function(newId) {
            var that = this;
            that.id(newId), that.children().forEach(function(childFolder) {
                childFolder.changeIdRecursively(that.id() + "." + childFolder.name());
            });
        }, Folder.prototype.hasChild = function(name) {
            return this.children().some(function(child) {
                return child.name() === name;
            });
        }, Folder.prototype.remove = function() {
            var that = this, parent = that.parent();
            return parent && parent.children.remove(that), that;
        }, Folder.prototype.toJS = function() {
            return {
                id: this.id(),
                highestmodseq: this.highestmodseq(),
                messages: this.messages(),
                uidValidity: this.uidvalidity(),
                unseen: this.unseen()
            };
        }, Folder.prototype.addMails = function(mails) {
            if (0 < (mails = mails.filter(function(mail) {
                return !this.mailCache.get(mail.uid);
            }, this)).length) {
                var unseenCount = mails.filter(function(mail) {
                    return !mail.seen();
                }).length;
                this.dirty = !0, this.invalidateSearches(), this.unseen(this.unseen() + unseenCount), 
                this.messages(this.messages() + mails.length);
            }
        }, Folder.prototype.removeMails = function(mails) {
            if (0 < (mails = mails.filter(function(mail) {
                return this.mailCache.get(mail.uid);
            }, this)).length) {
                var unseenCount = mails.filter(function(mail) {
                    return !mail.seen();
                }).length;
                this.unseen(this.unseen() - unseenCount), this.messages(this.messages() - mails.length), 
                this.searchCache.getAll().forEach(function(search) {
                    search.removeMails(mails);
                }), this.mailCache.remove(mails);
            }
        }, Folder.prototype.invalidateSearches = function() {
            this.searchCache.getAll().forEach(function(search) {
                search.invalidateCache();
            });
        }, Folder.prototype.search = function(options) {
            (options = util.extend({
                pageLength: 50,
                sortKey: "ARRIVAL",
                sortDirection: "DESC",
                viewFilter: "ALL",
                query: ""
            }, options)).folder = this;
            var key = createSearchKey(options), search = this.searchCache.get(key);
            return search || (search = new Search(options), this.searchCache.store(search)), 
            search;
        }, Folder.prototype.mailUidUpdated = function(oldUid, mail) {
            this.mailCache.keyUpdated(oldUid, mail), this.searchCache.getAll().forEach(function(search) {
                search.mailUidUpdated(oldUid, mail.uid);
            });
        }, Folder.prototype.setFlags = function(mails, flag, value) {
            if (Array.isArray(value)) {
                if (mails.length !== value.length) throw new Error("Mismatched arguments");
                mails.forEach(function(mail, index) {
                    mail.setFlag(flag, value[index]);
                });
            } else mails.forEach(function(mail) {
                mail.setFlag(flag, value);
            });
            this.searchCache.getAll().filter(function(search) {
                return "seen" === flag.name ? "UNSEEN" === search.viewFilter : "flagged" === flag.name ? "FLAGGED" === search.viewFilter : void 0;
            }).forEach(function(search) {
                search.pageCache.getAll().forEach(function(page) {
                    page.hasReferences() ? page.lastReferenceRemoved.addOnce(function() {
                        page.dirty = !0;
                    }) : page.evict();
                });
            });
        }, Folder.prototype.dispose = function() {
            this.name.dispose(), this.subscriptions.forEach(function(subscription) {
                subscription.dispose();
            }), this.searchCache.dispose(), this.mailCache.dispose();
        }, Folder;
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/action-executor/ActionNotReadyError.js", [], factory) : (root.com = root.com || {}, 
        root.com.one = root.com.one || {}, root.com.one.ActionNotReadyError = factory());
    }(this, function() {
        function ActionNotReadyError() {}
        return ActionNotReadyError.prototype = new Error(), ActionNotReadyError;
    });
}(), function() {
    (0, System.amdDefine)("common/ActionBehavior.js", [ "3rdparty/action-executor/ActionNotReadyError.js" ], function(ActionNotReadyError) {
        return {
            installInto: function(target) {
                function updateBusyFlags(value) {
                    [].concat(models).forEach(function(model) {
                        return model.busy(value);
                    });
                }
                function modelsReady() {
                    return ![].concat(models).some(function(model) {
                        return model.busy();
                    });
                }
                target.models || (target.models = function() {
                    return [];
                }), target.validate || (target.validate = function() {});
                var models;
                target.setBusyFlags = function() {
                    updateBusyFlags(!0);
                }, target.removeBusyFlags = function() {
                    updateBusyFlags(!1);
                };
                var execute = target.execute;
                target.execute = function(context, cb) {
                    this.context = context, this.validate(context), models = this.models(context), modelsReady() ? execute.call(this, context, function() {
                        cb.apply(null, arguments);
                    }) : cb(new ActionNotReadyError());
                };
            }
        };
    });
}(), function() {
    var define = System.amdDefine;
    !function(root, factory) {
        "object" == typeof exports ? module.exports = factory() : "function" == typeof define && define.amd ? define("3rdparty/LocalStorage.js", [], factory) : root.LocalStorage = factory();
    }(this, function() {
        function LocalStorage(namespace) {
            this.namespace = namespace;
        }
        return LocalStorage.prototype.isWorking = function() {
            return !!this._isWorking || (this.setItem("local-storage-test", "local-storage-test"), 
            "local-storage-test" === this.getItem("local-storage-test") && (this._isWorking = !0, 
            this.removeItem("local-storage-test")), this._isWorking);
        }, LocalStorage.prototype.createKey = function(key) {
            return this.namespace ? this.namespace + " " + key : key;
        }, LocalStorage.prototype.setItem = function(key, value) {
            try {
                localStorage.setItem(this.createKey(key), value);
            } catch (e) {}
        }, LocalStorage.prototype.getItem = function(key) {
            try {
                return localStorage.getItem(this.createKey(key));
            } catch (e) {
                return null;
            }
        }, LocalStorage.prototype.removeItem = function(key) {
            try {
                localStorage.removeItem(this.createKey(key));
            } catch (e) {}
        }, LocalStorage.prototype.hasItem = function(key) {
            try {
                return localStorage.hasOwnProperty(this.createKey(key));
            } catch (e) {
                return !1;
            }
        }, LocalStorage.prototype.setJSON = function(key, value) {
            this.setItem(key, JSON.stringify(value));
        }, LocalStorage.prototype.getJSON = function(key) {
            try {
                return JSON.parse(this.getItem(key));
            } catch (e) {
                return null;
            }
        }, LocalStorage.prototype.subStorage = function(subNamespace) {
            return new LocalStorage(this.namespace + " " + subNamespace);
        }, LocalStorage.prototype.keys = function() {
            var namespace = this.namespace;
            try {
                var allKeys = Object.keys(localStorage);
                return namespace ? allKeys.filter(function(key) {
                    return namespace === key.substring(0, namespace.length);
                }) : allKeys;
            } catch (e) {
                return [];
            }
        }, LocalStorage.prototype.clear = function() {
            this.keys().forEach(function(key) {
                try {
                    localStorage.removeItem(key);
                } catch (e) {}
            });
        }, LocalStorage.prototype.toString = function() {
            return this.keys().toString();
        }, LocalStorage;
    });
}(), function() {
    (0, System.amdDefine)("webmail/actions/RefreshFoldersAction.js", [ "node_modules/knockout/build/output/knockout-latest.debug.js", "common/util.js", "common/model/Folder.js", "common/ActionBehavior.js", "3rdparty/LocalStorage.js" ], function(ko, util, Folder, ActionBehavior, LocalStorage) {
        function forEachJsonFolder(folders, callback) {
            folders && folders.forEach(function(folder) {
                callback(folder), folder.children && forEachJsonFolder(folder.children, callback);
            });
        }
        function RefreshFoldersAction(options) {
            util.extend(this, {
                retries: 2
            }, util.pick(options, "retries", "silent")), ActionBehavior.installInto(this);
        }
        return RefreshFoldersAction.prototype.name = "RefreshFoldersAction", RefreshFoldersAction.prototype.models = function(context) {
            return context.state.folders.list();
        }, RefreshFoldersAction.prototype.execute = function(context, cb) {
            var that = this, state = context.state, backend = context.backend;
            that.setBusyFlags(), backend.listFolders(state.user(), function(err, data) {
                function getKey(folder, system) {
                    return ko.utils.unwrapObservable(folder.id) + (system ? "" : ko.utils.unwrapObservable(folder.uidvalidity || folder.uidValidity));
                }
                that.removeBusyFlags(), data = data || [];
                var localCache = {}, remoteCache = {};
                if (!err) {
                    var localStorage = new LocalStorage(state.user()).subStorage("webmail"), collapsedFoldersIds = localStorage.getJSON("collapsed-folders") || [];
                    forEachJsonFolder(data, function(folder) {
                        folder.collapsed = -1 !== collapsedFoldersIds.indexOf(folder.id);
                    }), forEachJsonFolder(data, function(folder) {
                        var isSystemFolder = -1 !== state.folders.defaults.indexOf(folder.id);
                        remoteCache[getKey(folder, isSystemFolder)] = folder;
                    }), (state.folders.list() || []).forEach(function(folder) {
                        localCache[getKey(folder, folder.isSystemFolder())] = folder;
                    }), Object.keys(remoteCache).forEach(function(key) {
                        var localFolder = localCache[key], remoteFolder = remoteCache[key];
                        if (localFolder && localFolder.isSystemFolder() && localFolder.uidvalidity(remoteFolder.uidvalidity || remoteFolder.uidValidity), 
                        localFolder && !localFolder.isNew()) {
                            var folderUpdated = (localFolder.highestmodseq() || 0) < remoteFolder.highestmodseq;
                            localFolder.unseen(remoteFolder.unseen), (localFolder.dirty || folderUpdated) && (localFolder.messages(remoteFolder.messages), 
                            localFolder.highestmodseq(remoteFolder.highestmodseq), localFolder.invalidateSearches()), 
                            localFolder.dirty = !1;
                        }
                    }), localStorage.setItem("InboxModSeq", state.folders.inbox.highestmodseq());
                    var removeSubFoldersFromLocalCache = function(folders) {
                        (folders = Array.isArray(folders) ? folders : [ folders ]).forEach(function(folder) {
                            var key = getKey(folder);
                            localCache[key] && (localCache[key].dispose(), delete localCache[key], removeSubFoldersFromLocalCache(folder.children()));
                        });
                    };
                    Object.keys(localCache).filter(function(key) {
                        return !(-1 !== state.folders.defaults.indexOf(key) || remoteCache[key] || localCache[key] && localCache[key].isNew());
                    }).forEach(function(key) {
                        var folderToRemove = localCache[key];
                        folderToRemove && (folderToRemove.remove(), removeSubFoldersFromLocalCache(folderToRemove), 
                        folderToRemove.dispose());
                    }), state.folders.defaults.forEach(function(key) {
                        if (!remoteCache[key]) {
                            var folder = localCache[key];
                            folder && folder.uidvalidity(null);
                        }
                    });
                    var addAllSubFolders = function(folders) {
                        (folders = Array.isArray(folders) ? folders : [ folders ]).forEach(function(folder) {
                            var key = getKey(folder);
                            localCache[key] || (localCache[key] = folder), folder.children().length && addAllSubFolders(folder.children());
                        });
                    };
                    Object.keys(remoteCache).filter(function(key) {
                        return !localCache[key];
                    }).forEach(function(key) {
                        if (!localCache[key]) {
                            var remoteFolder = remoteCache[key], parentId = remoteFolder.id.substr(0, remoteFolder.id.lastIndexOf(".")), parentFolder = state.folders.inbox;
                            "INBOX" !== parentId && (parentFolder = Object.keys(localCache).map(function(localKey) {
                                return localCache[localKey];
                            }).filter(function(folder) {
                                return folder.id() === parentId;
                            })[0] || state.folders.inbox);
                            var newFolder = new Folder(remoteCache[key], parentFolder);
                            parentFolder.children.push(newFolder), addAllSubFolders(newFolder);
                        }
                    });
                }
                state.folders.dirty = !1, cb(err);
            });
        }, RefreshFoldersAction;
    });
}(), function() {
    (0, System.amdDefine)("calendar/ical/Component.js", [ "3rdparty/ical.js" ], function(ical) {
        return ical.Component;
    });
}(), function() {
    (0, System.amdDefine)("calendar/ical/TimeZoneService.js", [ "3rdparty/ical.js" ], function(ical) {
        return ical.TimezoneService;
    });
}(), System.registerDynamic("3rdparty/ical.js", [], !1, function($__require, $__exports, $__module) {
    var _retrieveGlobal = System.get("@@global-helpers").prepareGlobal($__module.id, null, null);
    return function($__global) {
        "object" == typeof module ? ICAL = module.exports : "object" != typeof ICAL && (this.ICAL = {}), 
        ICAL.foldLength = 75, ICAL.newLineChar = "\r\n", ICAL.helpers = {
            isStrictlyNaN: function(number) {
                return "number" == typeof number && isNaN(number);
            },
            strictParseInt: function(string) {
                var result = parseInt(string, 10);
                if (ICAL.helpers.isStrictlyNaN(result)) throw new Error('Could not extract integer from "' + string + '"');
                return result;
            },
            formatClassType: function(data, type) {
                if (void 0 !== data) return data instanceof type ? data : new type(data);
            },
            unescapedIndexOf: function(buffer, search, pos) {
                for (;-1 !== (pos = buffer.indexOf(search, pos)); ) {
                    if (!(pos > 0 && "\\" === buffer[pos - 1])) return pos;
                    pos += 1;
                }
                return -1;
            },
            binsearchInsert: function(list, seekVal, cmpfunc) {
                if (!list.length) return 0;
                for (var mid, cmpval, low = 0, high = list.length - 1; low <= high; ) if (mid = low + Math.floor((high - low) / 2), 
                (cmpval = cmpfunc(seekVal, list[mid])) < 0) high = mid - 1; else {
                    if (!(cmpval > 0)) break;
                    low = mid + 1;
                }
                return cmpval < 0 ? mid : cmpval > 0 ? mid + 1 : mid;
            },
            dumpn: function() {
                ICAL.debug && ("undefined" != typeof console && "log" in console ? ICAL.helpers.dumpn = function(input) {} : ICAL.helpers.dumpn = function(input) {
                    dump(input + "\n");
                }, ICAL.helpers.dumpn(arguments[0]));
            },
            clone: function(aSrc, aDeep) {
                if (aSrc && "object" == typeof aSrc) {
                    if (aSrc instanceof Date) return new Date(aSrc.getTime());
                    if ("clone" in aSrc) return aSrc.clone();
                    if (Array.isArray(aSrc)) {
                        for (var arr = [], i = 0; i < aSrc.length; i++) arr.push(aDeep ? ICAL.helpers.clone(aSrc[i], !0) : aSrc[i]);
                        return arr;
                    }
                    var obj = {};
                    for (var name in aSrc) Object.prototype.hasOwnProperty.call(aSrc, name) && (obj[name] = aDeep ? ICAL.helpers.clone(aSrc[name], !0) : aSrc[name]);
                    return obj;
                }
                return aSrc;
            },
            foldline: function(aLine) {
                for (var result = "", line = aLine || ""; line.length; ) result += ICAL.newLineChar + " " + line.substr(0, ICAL.foldLength), 
                line = line.substr(ICAL.foldLength);
                return result.substr(ICAL.newLineChar.length + 1);
            },
            pad2: function(data) {
                switch ("string" != typeof data && ("number" == typeof data && (data = parseInt(data)), 
                data = String(data)), data.length) {
                  case 0:
                    return "00";

                  case 1:
                    return "0" + data;

                  default:
                    return data;
                }
            },
            trunc: function(number) {
                return number < 0 ? Math.ceil(number) : Math.floor(number);
            },
            inherits: function(base, child, extra) {
                function F() {}
                F.prototype = base.prototype, child.prototype = new F(), extra && ICAL.helpers.extend(extra, child.prototype);
            },
            extend: function(source, target) {
                for (var key in source) {
                    var descr = Object.getOwnPropertyDescriptor(source, key);
                    descr && !Object.getOwnPropertyDescriptor(target, key) && Object.defineProperty(target, key, descr);
                }
                return target;
            }
        }, ICAL.design = function() {
            "use strict";
            function createTextType(fromNewline, toNewline) {
                return {
                    matches: /.*/,
                    fromICAL: function(aValue, structuredEscape) {
                        return replaceNewline(aValue, fromNewline, structuredEscape);
                    },
                    toICAL: function(aValue, structuredEscape) {
                        var regEx = toNewline;
                        return structuredEscape && (regEx = new RegExp(regEx.source + "|" + structuredEscape)), 
                        aValue.replace(regEx, function(str) {
                            switch (str) {
                              case "\\":
                                return "\\\\";

                              case ";":
                                return "\\;";

                              case ",":
                                return "\\,";

                              case "\n":
                                return "\\n";

                              default:
                                return str;
                            }
                        });
                    }
                };
            }
            function replaceNewlineReplace(string) {
                switch (string) {
                  case "\\\\":
                    return "\\";

                  case "\\;":
                    return ";";

                  case "\\,":
                    return ",";

                  case "\\n":
                  case "\\N":
                    return "\n";

                  default:
                    return string;
                }
            }
            function replaceNewline(value, newline, structuredEscape) {
                return -1 === value.indexOf("\\") ? value : (structuredEscape && (newline = new RegExp(newline.source + "|\\\\" + structuredEscape)), 
                value.replace(newline, replaceNewlineReplace));
            }
            var DEFAULT_TYPE_TEXT = {
                defaultType: "text"
            }, DEFAULT_TYPE_TEXT_MULTI = {
                defaultType: "text",
                multiValue: ","
            }, DEFAULT_TYPE_TEXT_STRUCTURED = {
                defaultType: "text",
                structuredValue: ";"
            }, DEFAULT_TYPE_INTEGER = {
                defaultType: "integer"
            }, DEFAULT_TYPE_DATETIME_DATE = {
                defaultType: "date-time",
                allowedTypes: [ "date-time", "date" ]
            }, DEFAULT_TYPE_DATETIME = {
                defaultType: "date-time"
            }, DEFAULT_TYPE_URI = {
                defaultType: "uri"
            }, DEFAULT_TYPE_UTCOFFSET = {
                defaultType: "utc-offset"
            }, DEFAULT_TYPE_RECUR = {
                defaultType: "recur"
            }, DEFAULT_TYPE_DATE_ANDOR_TIME = {
                defaultType: "date-and-or-time",
                allowedTypes: [ "date-time", "date", "text" ]
            }, commonProperties = {
                categories: DEFAULT_TYPE_TEXT_MULTI,
                url: DEFAULT_TYPE_URI,
                version: DEFAULT_TYPE_TEXT,
                uid: DEFAULT_TYPE_TEXT
            }, commonValues = {
                boolean: {
                    values: [ "TRUE", "FALSE" ],
                    fromICAL: function(aValue) {
                        switch (aValue) {
                          case "TRUE":
                            return !0;

                          case "FALSE":
                          default:
                            return !1;
                        }
                    },
                    toICAL: function(aValue) {
                        return aValue ? "TRUE" : "FALSE";
                    }
                },
                float: {
                    matches: /^[+-]?\d+\.\d+$/,
                    fromICAL: function(aValue) {
                        var parsed = parseFloat(aValue);
                        return ICAL.helpers.isStrictlyNaN(parsed) ? 0 : parsed;
                    },
                    toICAL: function(aValue) {
                        return String(aValue);
                    }
                },
                integer: {
                    fromICAL: function(aValue) {
                        var parsed = parseInt(aValue);
                        return ICAL.helpers.isStrictlyNaN(parsed) ? 0 : parsed;
                    },
                    toICAL: function(aValue) {
                        return String(aValue);
                    }
                },
                "utc-offset": {
                    toICAL: function(aValue) {
                        return aValue.length < 7 ? aValue.substr(0, 3) + aValue.substr(4, 2) : aValue.substr(0, 3) + aValue.substr(4, 2) + aValue.substr(7, 2);
                    },
                    fromICAL: function(aValue) {
                        return aValue.length < 6 ? aValue.substr(0, 3) + ":" + aValue.substr(3, 2) : aValue.substr(0, 3) + ":" + aValue.substr(3, 2) + ":" + aValue.substr(5, 2);
                    },
                    decorate: function(aValue) {
                        return ICAL.UtcOffset.fromString(aValue);
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    }
                }
            }, icalParams = {
                cutype: {
                    values: [ "INDIVIDUAL", "GROUP", "RESOURCE", "ROOM", "UNKNOWN" ],
                    allowXName: !0,
                    allowIanaToken: !0
                },
                "delegated-from": {
                    valueType: "cal-address",
                    multiValue: ",",
                    multiValueSeparateDQuote: !0
                },
                "delegated-to": {
                    valueType: "cal-address",
                    multiValue: ",",
                    multiValueSeparateDQuote: !0
                },
                encoding: {
                    values: [ "8BIT", "BASE64" ]
                },
                fbtype: {
                    values: [ "FREE", "BUSY", "BUSY-UNAVAILABLE", "BUSY-TENTATIVE" ],
                    allowXName: !0,
                    allowIanaToken: !0
                },
                member: {
                    valueType: "cal-address",
                    multiValue: ",",
                    multiValueSeparateDQuote: !0
                },
                partstat: {
                    values: [ "NEEDS-ACTION", "ACCEPTED", "DECLINED", "TENTATIVE", "DELEGATED", "COMPLETED", "IN-PROCESS" ],
                    allowXName: !0,
                    allowIanaToken: !0
                },
                range: {
                    values: [ "THISLANDFUTURE" ]
                },
                related: {
                    values: [ "START", "END" ]
                },
                reltype: {
                    values: [ "PARENT", "CHILD", "SIBLING" ],
                    allowXName: !0,
                    allowIanaToken: !0
                },
                role: {
                    values: [ "REQ-PARTICIPANT", "CHAIR", "OPT-PARTICIPANT", "NON-PARTICIPANT" ],
                    allowXName: !0,
                    allowIanaToken: !0
                },
                rsvp: {
                    values: [ "TRUE", "FALSE" ]
                },
                "sent-by": {
                    valueType: "cal-address"
                },
                tzid: {
                    matches: /^\//
                },
                value: {
                    values: [ "binary", "boolean", "cal-address", "date", "date-time", "duration", "float", "integer", "period", "recur", "text", "time", "uri", "utc-offset" ],
                    allowXName: !0,
                    allowIanaToken: !0
                }
            }, icalValues = ICAL.helpers.extend(commonValues, {
                text: createTextType(/\\\\|\\;|\\,|\\[Nn]/g, /\\|;|,|\n/g),
                uri: {},
                binary: {
                    decorate: function(aString) {
                        return ICAL.Binary.fromString(aString);
                    },
                    undecorate: function(aBinary) {
                        return aBinary.toString();
                    }
                },
                "cal-address": {},
                date: {
                    decorate: function(aValue, aProp) {
                        return ICAL.Time.fromDateString(aValue, aProp);
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    },
                    fromICAL: function(aValue) {
                        return aValue.substr(0, 4) + "-" + aValue.substr(4, 2) + "-" + aValue.substr(6, 2);
                    },
                    toICAL: function(aValue) {
                        return aValue.length > 11 ? aValue : aValue.substr(0, 4) + aValue.substr(5, 2) + aValue.substr(8, 2);
                    }
                },
                "date-time": {
                    fromICAL: function(aValue) {
                        var result = aValue.substr(0, 4) + "-" + aValue.substr(4, 2) + "-" + aValue.substr(6, 2) + "T" + aValue.substr(9, 2) + ":" + aValue.substr(11, 2) + ":" + aValue.substr(13, 2);
                        return aValue[15] && "Z" === aValue[15] && (result += "Z"), result;
                    },
                    toICAL: function(aValue) {
                        if (aValue.length < 19) return aValue;
                        var result = aValue.substr(0, 4) + aValue.substr(5, 2) + aValue.substr(8, 5) + aValue.substr(14, 2) + aValue.substr(17, 2);
                        return aValue[19] && "Z" === aValue[19] && (result += "Z"), result;
                    },
                    decorate: function(aValue, aProp) {
                        return ICAL.Time.fromDateTimeString(aValue, aProp);
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    }
                },
                duration: {
                    decorate: function(aValue) {
                        return ICAL.Duration.fromString(aValue);
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    }
                },
                period: {
                    fromICAL: function(string) {
                        var parts = string.split("/");
                        return parts[0] = icalValues["date-time"].fromICAL(parts[0]), ICAL.Duration.isValueString(parts[1]) || (parts[1] = icalValues["date-time"].fromICAL(parts[1])), 
                        parts;
                    },
                    toICAL: function(parts) {
                        return parts[0] = icalValues["date-time"].toICAL(parts[0]), ICAL.Duration.isValueString(parts[1]) || (parts[1] = icalValues["date-time"].toICAL(parts[1])), 
                        parts.join("/");
                    },
                    decorate: function(aValue, aProp) {
                        return ICAL.Period.fromJSON(aValue, aProp);
                    },
                    undecorate: function(aValue) {
                        return aValue.toJSON();
                    }
                },
                recur: {
                    fromICAL: function(string) {
                        return ICAL.Recur._stringToData(string, !0);
                    },
                    toICAL: function(data) {
                        var str = "";
                        for (var k in data) if (Object.prototype.hasOwnProperty.call(data, k)) {
                            var val = data[k];
                            "until" == k ? val = val.length > 10 ? icalValues["date-time"].toICAL(val) : icalValues.date.toICAL(val) : "wkst" == k ? "number" == typeof val && (val = ICAL.Recur.numericDayToIcalDay(val)) : Array.isArray(val) && (val = val.join(",")), 
                            str += k.toUpperCase() + "=" + val + ";";
                        }
                        return str.substr(0, str.length - 1);
                    },
                    decorate: function(aValue) {
                        return ICAL.Recur.fromData(aValue);
                    },
                    undecorate: function(aRecur) {
                        return aRecur.toJSON();
                    }
                },
                time: {
                    fromICAL: function(aValue) {
                        if (aValue.length < 6) return aValue;
                        var result = aValue.substr(0, 2) + ":" + aValue.substr(2, 2) + ":" + aValue.substr(4, 2);
                        return "Z" === aValue[6] && (result += "Z"), result;
                    },
                    toICAL: function(aValue) {
                        if (aValue.length < 8) return aValue;
                        var result = aValue.substr(0, 2) + aValue.substr(3, 2) + aValue.substr(6, 2);
                        return "Z" === aValue[8] && (result += "Z"), result;
                    }
                }
            }), icalProperties = ICAL.helpers.extend(commonProperties, {
                action: DEFAULT_TYPE_TEXT,
                attach: {
                    defaultType: "uri"
                },
                attendee: {
                    defaultType: "cal-address"
                },
                calscale: DEFAULT_TYPE_TEXT,
                class: DEFAULT_TYPE_TEXT,
                comment: DEFAULT_TYPE_TEXT,
                completed: DEFAULT_TYPE_DATETIME,
                contact: DEFAULT_TYPE_TEXT,
                created: DEFAULT_TYPE_DATETIME,
                description: DEFAULT_TYPE_TEXT,
                dtend: DEFAULT_TYPE_DATETIME_DATE,
                dtstamp: DEFAULT_TYPE_DATETIME,
                dtstart: DEFAULT_TYPE_DATETIME_DATE,
                due: DEFAULT_TYPE_DATETIME_DATE,
                duration: {
                    defaultType: "duration"
                },
                exdate: {
                    defaultType: "date-time",
                    allowedTypes: [ "date-time", "date" ],
                    multiValue: ","
                },
                exrule: DEFAULT_TYPE_RECUR,
                freebusy: {
                    defaultType: "period",
                    multiValue: ","
                },
                geo: {
                    defaultType: "float",
                    structuredValue: ";"
                },
                "last-modified": DEFAULT_TYPE_DATETIME,
                location: DEFAULT_TYPE_TEXT,
                method: DEFAULT_TYPE_TEXT,
                organizer: {
                    defaultType: "cal-address"
                },
                "percent-complete": DEFAULT_TYPE_INTEGER,
                priority: DEFAULT_TYPE_INTEGER,
                prodid: DEFAULT_TYPE_TEXT,
                "related-to": DEFAULT_TYPE_TEXT,
                repeat: DEFAULT_TYPE_INTEGER,
                rdate: {
                    defaultType: "date-time",
                    allowedTypes: [ "date-time", "date", "period" ],
                    multiValue: ",",
                    detectType: function(string) {
                        return -1 !== string.indexOf("/") ? "period" : -1 === string.indexOf("T") ? "date" : "date-time";
                    }
                },
                "recurrence-id": DEFAULT_TYPE_DATETIME_DATE,
                resources: DEFAULT_TYPE_TEXT_MULTI,
                "request-status": DEFAULT_TYPE_TEXT_STRUCTURED,
                rrule: DEFAULT_TYPE_RECUR,
                sequence: DEFAULT_TYPE_INTEGER,
                status: DEFAULT_TYPE_TEXT,
                summary: DEFAULT_TYPE_TEXT,
                transp: DEFAULT_TYPE_TEXT,
                trigger: {
                    defaultType: "duration",
                    allowedTypes: [ "duration", "date-time" ]
                },
                tzoffsetfrom: DEFAULT_TYPE_UTCOFFSET,
                tzoffsetto: DEFAULT_TYPE_UTCOFFSET,
                tzurl: DEFAULT_TYPE_URI,
                tzid: DEFAULT_TYPE_TEXT,
                tzname: DEFAULT_TYPE_TEXT
            }), vcardValues = ICAL.helpers.extend(commonValues, {
                text: createTextType(/\\\\|\\,|\\[Nn]/g, /\\|,|\n/g),
                uri: createTextType(/\\\\|\\,|\\[Nn]/g, /\\|,|\n/g),
                date: {
                    decorate: function(aValue) {
                        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, "date");
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    },
                    fromICAL: function(aValue) {
                        return 8 == aValue.length ? icalValues.date.fromICAL(aValue) : "-" == aValue[0] && 6 == aValue.length ? aValue.substr(0, 4) + "-" + aValue.substr(4) : aValue;
                    },
                    toICAL: function(aValue) {
                        return 10 == aValue.length ? icalValues.date.toICAL(aValue) : "-" == aValue[0] && 7 == aValue.length ? aValue.substr(0, 4) + aValue.substr(5) : aValue;
                    }
                },
                time: {
                    decorate: function(aValue) {
                        return ICAL.VCardTime.fromDateAndOrTimeString("T" + aValue, "time");
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    },
                    fromICAL: function(aValue) {
                        var splitzone = vcardValues.time._splitZone(aValue, !0), zone = splitzone[0], value = splitzone[1];
                        return 6 == value.length ? value = value.substr(0, 2) + ":" + value.substr(2, 2) + ":" + value.substr(4, 2) : 4 == value.length && "-" != value[0] ? value = value.substr(0, 2) + ":" + value.substr(2, 2) : 5 == value.length && (value = value.substr(0, 3) + ":" + value.substr(3, 2)), 
                        5 != zone.length || "-" != zone[0] && "+" != zone[0] || (zone = zone.substr(0, 3) + ":" + zone.substr(3)), 
                        value + zone;
                    },
                    toICAL: function(aValue) {
                        var splitzone = vcardValues.time._splitZone(aValue), zone = splitzone[0], value = splitzone[1];
                        return 8 == value.length ? value = value.substr(0, 2) + value.substr(3, 2) + value.substr(6, 2) : 5 == value.length && "-" != value[0] ? value = value.substr(0, 2) + value.substr(3, 2) : 6 == value.length && (value = value.substr(0, 3) + value.substr(4, 2)), 
                        6 != zone.length || "-" != zone[0] && "+" != zone[0] || (zone = zone.substr(0, 3) + zone.substr(4)), 
                        value + zone;
                    },
                    _splitZone: function(aValue, isFromIcal) {
                        var zone, value, lastChar = aValue.length - 1, signChar = aValue.length - (isFromIcal ? 5 : 6), sign = aValue[signChar];
                        return "Z" == aValue[lastChar] ? (zone = aValue[lastChar], value = aValue.substr(0, lastChar)) : aValue.length > 6 && ("-" == sign || "+" == sign) ? (zone = aValue.substr(signChar), 
                        value = aValue.substr(0, signChar)) : (zone = "", value = aValue), [ zone, value ];
                    }
                },
                "date-time": {
                    decorate: function(aValue) {
                        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, "date-time");
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    },
                    fromICAL: function(aValue) {
                        return vcardValues["date-and-or-time"].fromICAL(aValue);
                    },
                    toICAL: function(aValue) {
                        return vcardValues["date-and-or-time"].toICAL(aValue);
                    }
                },
                "date-and-or-time": {
                    decorate: function(aValue) {
                        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, "date-and-or-time");
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    },
                    fromICAL: function(aValue) {
                        var parts = aValue.split("T");
                        return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : "") + (parts[1] ? "T" + vcardValues.time.fromICAL(parts[1]) : "");
                    },
                    toICAL: function(aValue) {
                        var parts = aValue.split("T");
                        return vcardValues.date.toICAL(parts[0]) + (parts[1] ? "T" + vcardValues.time.toICAL(parts[1]) : "");
                    }
                },
                timestamp: icalValues["date-time"],
                "language-tag": {
                    matches: /^[a-zA-Z0-9\-]+$/
                }
            }), vcardParams = {
                type: {
                    valueType: "text",
                    multiValue: ","
                },
                value: {
                    values: [ "text", "uri", "date", "time", "date-time", "date-and-or-time", "timestamp", "boolean", "integer", "float", "utc-offset", "language-tag" ],
                    allowXName: !0,
                    allowIanaToken: !0
                }
            }, vcardProperties = ICAL.helpers.extend(commonProperties, {
                adr: {
                    defaultType: "text",
                    structuredValue: ";",
                    multiValue: ","
                },
                anniversary: DEFAULT_TYPE_DATE_ANDOR_TIME,
                bday: DEFAULT_TYPE_DATE_ANDOR_TIME,
                caladruri: DEFAULT_TYPE_URI,
                caluri: DEFAULT_TYPE_URI,
                clientpidmap: DEFAULT_TYPE_TEXT_STRUCTURED,
                email: DEFAULT_TYPE_TEXT,
                fburl: DEFAULT_TYPE_URI,
                fn: DEFAULT_TYPE_TEXT,
                gender: DEFAULT_TYPE_TEXT_STRUCTURED,
                geo: DEFAULT_TYPE_URI,
                impp: DEFAULT_TYPE_URI,
                key: DEFAULT_TYPE_URI,
                kind: DEFAULT_TYPE_TEXT,
                lang: {
                    defaultType: "language-tag"
                },
                logo: DEFAULT_TYPE_URI,
                member: DEFAULT_TYPE_URI,
                n: {
                    defaultType: "text",
                    structuredValue: ";",
                    multiValue: ","
                },
                nickname: DEFAULT_TYPE_TEXT_MULTI,
                note: DEFAULT_TYPE_TEXT,
                org: {
                    defaultType: "text",
                    structuredValue: ";"
                },
                photo: DEFAULT_TYPE_URI,
                related: DEFAULT_TYPE_URI,
                rev: {
                    defaultType: "timestamp"
                },
                role: DEFAULT_TYPE_TEXT,
                sound: DEFAULT_TYPE_URI,
                source: DEFAULT_TYPE_URI,
                tel: {
                    defaultType: "uri",
                    allowedTypes: [ "uri", "text" ]
                },
                title: DEFAULT_TYPE_TEXT,
                tz: {
                    defaultType: "text",
                    allowedTypes: [ "text", "utc-offset", "uri" ]
                },
                xml: DEFAULT_TYPE_TEXT
            }), vcard3Values = ICAL.helpers.extend(commonValues, {
                binary: icalValues.binary,
                date: vcardValues.date,
                "date-time": vcardValues["date-time"],
                "phone-number": {},
                uri: icalValues.uri,
                text: icalValues.text,
                time: icalValues.time,
                vcard: icalValues.text,
                "utc-offset": {
                    toICAL: function(aValue) {
                        return aValue.substr(0, 7);
                    },
                    fromICAL: function(aValue) {
                        return aValue.substr(0, 7);
                    },
                    decorate: function(aValue) {
                        return ICAL.UtcOffset.fromString(aValue);
                    },
                    undecorate: function(aValue) {
                        return aValue.toString();
                    }
                }
            }), vcard3Params = {
                type: {
                    valueType: "text",
                    multiValue: ","
                },
                value: {
                    values: [ "text", "uri", "date", "date-time", "phone-number", "time", "boolean", "integer", "float", "utc-offset", "vcard", "binary" ],
                    allowXName: !0,
                    allowIanaToken: !0
                }
            }, vcard3Properties = ICAL.helpers.extend(commonProperties, {
                fn: DEFAULT_TYPE_TEXT,
                n: {
                    defaultType: "text",
                    structuredValue: ";",
                    multiValue: ","
                },
                nickname: DEFAULT_TYPE_TEXT_MULTI,
                photo: {
                    defaultType: "binary",
                    allowedTypes: [ "binary", "uri" ]
                },
                bday: {
                    defaultType: "date-time",
                    allowedTypes: [ "date-time", "date" ],
                    detectType: function(string) {
                        return -1 === string.indexOf("T") ? "date" : "date-time";
                    }
                },
                adr: {
                    defaultType: "text",
                    structuredValue: ";",
                    multiValue: ","
                },
                label: DEFAULT_TYPE_TEXT,
                tel: {
                    defaultType: "phone-number"
                },
                email: DEFAULT_TYPE_TEXT,
                mailer: DEFAULT_TYPE_TEXT,
                tz: {
                    defaultType: "utc-offset",
                    allowedTypes: [ "utc-offset", "text" ]
                },
                geo: {
                    defaultType: "float",
                    structuredValue: ";"
                },
                title: DEFAULT_TYPE_TEXT,
                role: DEFAULT_TYPE_TEXT,
                logo: {
                    defaultType: "binary",
                    allowedTypes: [ "binary", "uri" ]
                },
                agent: {
                    defaultType: "vcard",
                    allowedTypes: [ "vcard", "text", "uri" ]
                },
                org: DEFAULT_TYPE_TEXT_STRUCTURED,
                note: DEFAULT_TYPE_TEXT_MULTI,
                prodid: DEFAULT_TYPE_TEXT,
                rev: {
                    defaultType: "date-time",
                    allowedTypes: [ "date-time", "date" ],
                    detectType: function(string) {
                        return -1 === string.indexOf("T") ? "date" : "date-time";
                    }
                },
                "sort-string": DEFAULT_TYPE_TEXT,
                sound: {
                    defaultType: "binary",
                    allowedTypes: [ "binary", "uri" ]
                },
                class: DEFAULT_TYPE_TEXT,
                key: {
                    defaultType: "binary",
                    allowedTypes: [ "binary", "text" ]
                }
            }), icalSet = {
                value: icalValues,
                param: icalParams,
                property: icalProperties
            }, vcardSet = {
                value: vcardValues,
                param: vcardParams,
                property: vcardProperties
            }, vcard3Set = {
                value: vcard3Values,
                param: vcard3Params,
                property: vcard3Properties
            }, design = {
                defaultSet: icalSet,
                defaultType: "unknown",
                components: {
                    vcard: vcardSet,
                    vcard3: vcard3Set,
                    vevent: icalSet,
                    vtodo: icalSet,
                    vjournal: icalSet,
                    valarm: icalSet,
                    vtimezone: icalSet,
                    daylight: icalSet,
                    standard: icalSet
                },
                icalendar: icalSet,
                vcard: vcardSet,
                vcard3: vcard3Set,
                getDesignSet: function(componentName) {
                    return componentName && componentName in design.components ? design.components[componentName] : design.defaultSet;
                }
            };
            return design;
        }(), ICAL.stringify = function() {
            "use strict";
            function stringify(jCal) {
                "string" == typeof jCal[0] && (jCal = [ jCal ]);
                for (var i = 0, len = jCal.length, result = ""; i < len; i++) result += stringify.component(jCal[i]) + LINE_ENDING;
                return result;
            }
            var LINE_ENDING = "\r\n", design = ICAL.design, helpers = ICAL.helpers;
            stringify.component = function(component, designSet) {
                var name = component[0].toUpperCase(), result = "BEGIN:" + name + LINE_ENDING, props = component[1], propIdx = 0, propLen = props.length, designSetName = component[0];
                for ("vcard" === designSetName && component[1].length > 0 && ("version" !== component[1][0][0] || "4.0" !== component[1][0][3]) && (designSetName = "vcard3"), 
                designSet = designSet || design.getDesignSet(designSetName); propIdx < propLen; propIdx++) result += stringify.property(props[propIdx], designSet) + LINE_ENDING;
                for (var comps = component[2], compIdx = 0, compLen = comps.length; compIdx < compLen; compIdx++) result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;
                return result += "END:" + name;
            }, stringify.property = function(property, designSet, noFold) {
                var paramName, name = property[0].toUpperCase(), jsName = property[0], params = property[1], line = name;
                for (paramName in params) {
                    var value = params[paramName];
                    params.hasOwnProperty(paramName) && ((multiValue = paramName in designSet.param && designSet.param[paramName].multiValue) && Array.isArray(value) ? (designSet.param[paramName].multiValueSeparateDQuote && (multiValue = '"' + multiValue + '"'), 
                    value = value.map(stringify._rfc6868Unescape), value = stringify.multiValue(value, multiValue, "unknown", null, designSet)) : value = stringify._rfc6868Unescape(value), 
                    line += ";" + paramName.toUpperCase(), line += "=" + stringify.propertyValue(value));
                }
                if (3 === property.length) return line + ":";
                var valueType = property[2];
                designSet || (designSet = design.defaultSet);
                var propDetails, multiValue = !1, structuredValue = !1, isDefault = !1;
                return jsName in designSet.property ? ("multiValue" in (propDetails = designSet.property[jsName]) && (multiValue = propDetails.multiValue), 
                "structuredValue" in propDetails && Array.isArray(property[3]) && (structuredValue = propDetails.structuredValue), 
                "defaultType" in propDetails ? valueType === propDetails.defaultType && (isDefault = !0) : "unknown" === valueType && (isDefault = !0)) : "unknown" === valueType && (isDefault = !0), 
                isDefault || (line += ";VALUE=" + valueType.toUpperCase()), line += ":", line += multiValue && structuredValue ? stringify.multiValue(property[3], structuredValue, valueType, multiValue, designSet, structuredValue) : multiValue ? stringify.multiValue(property.slice(3), multiValue, valueType, null, designSet, !1) : structuredValue ? stringify.multiValue(property[3], structuredValue, valueType, null, designSet, structuredValue) : stringify.value(property[3], valueType, designSet, !1), 
                noFold ? line : ICAL.helpers.foldline(line);
            }, stringify.propertyValue = function(value) {
                return -1 === helpers.unescapedIndexOf(value, ",") && -1 === helpers.unescapedIndexOf(value, ":") && -1 === helpers.unescapedIndexOf(value, ";") ? value : '"' + value + '"';
            }, stringify.multiValue = function(values, delim, type, innerMulti, designSet, structuredValue) {
                for (var result = "", len = values.length, i = 0; i < len; i++) innerMulti && Array.isArray(values[i]) ? result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue) : result += stringify.value(values[i], type, designSet, structuredValue), 
                i !== len - 1 && (result += delim);
                return result;
            }, stringify.value = function(value, type, designSet, structuredValue) {
                return type in designSet.value && "toICAL" in designSet.value[type] ? designSet.value[type].toICAL(value, structuredValue) : value;
            }, stringify._rfc6868Unescape = function(val) {
                return val.replace(/[\n^"]/g, function(x) {
                    return RFC6868_REPLACE_MAP[x];
                });
            };
            var RFC6868_REPLACE_MAP = {
                '"': "^'",
                "\n": "^n",
                "^": "^^"
            };
            return stringify;
        }(), ICAL.parse = function() {
            "use strict";
            function ParserError(message) {
                this.message = message, this.name = "ParserError";
                try {
                    throw new Error();
                } catch (e) {
                    if (e.stack) {
                        var split = e.stack.split("\n");
                        split.shift(), this.stack = split.join("\n");
                    }
                }
            }
            function parser(input) {
                var state = {}, root = state.component = [];
                if (state.stack = [ root ], parser._eachLine(input, function(err, line) {
                    parser._handleContentLine(line, state);
                }), state.stack.length > 1) throw new ParserError("invalid ical body. component began but did not end");
                return state = null, 1 == root.length ? root[0] : root;
            }
            var design = ICAL.design, helpers = ICAL.helpers;
            ParserError.prototype = Error.prototype, parser.property = function(str, designSet) {
                var state = {
                    component: [ [], [] ],
                    designSet: designSet || design.defaultSet
                };
                return parser._handleContentLine(str, state), state.component[1][0];
            }, parser.component = function(str) {
                return parser(str);
            }, parser.ParserError = ParserError, parser._handleContentLine = function(line, state) {
                var lastParamIndex, lastValuePos, name, value, valuePos = line.indexOf(":"), paramPos = line.indexOf(";"), params = {};
                -1 !== paramPos && -1 !== valuePos && paramPos > valuePos && (paramPos = -1);
                var parsedParams;
                if (-1 !== paramPos) {
                    if (name = line.substring(0, paramPos).toLowerCase(), -1 == (parsedParams = parser._parseParameters(line.substring(paramPos), 0, state.designSet))[2]) throw new ParserError("Invalid parameters in '" + line + "'");
                    if (params = parsedParams[0], lastParamIndex = parsedParams[1].length + parsedParams[2] + paramPos, 
                    -1 === (lastValuePos = line.substring(lastParamIndex).indexOf(":"))) throw new ParserError("Missing parameter value in '" + line + "'");
                    value = line.substring(lastParamIndex + lastValuePos + 1);
                } else {
                    if (-1 === valuePos) throw new ParserError('invalid line (no token ";" or ":") "' + line + '"');
                    if (name = line.substring(0, valuePos).toLowerCase(), value = line.substring(valuePos + 1), 
                    "begin" === name) {
                        var newComponent = [ value.toLowerCase(), [], [] ];
                        return 1 === state.stack.length ? state.component.push(newComponent) : state.component[2].push(newComponent), 
                        state.stack.push(state.component), state.component = newComponent, void (state.designSet || (state.designSet = design.getDesignSet(state.component[0])));
                    }
                    if ("end" === name) return void (state.component = state.stack.pop());
                }
                var valueType, propertyDetails, multiValue = !1, structuredValue = !1;
                name in state.designSet.property && ("multiValue" in (propertyDetails = state.designSet.property[name]) && (multiValue = propertyDetails.multiValue), 
                "structuredValue" in propertyDetails && (structuredValue = propertyDetails.structuredValue), 
                value && "detectType" in propertyDetails && (valueType = propertyDetails.detectType(value))), 
                valueType || (valueType = "value" in params ? params.value.toLowerCase() : propertyDetails ? propertyDetails.defaultType : "unknown"), 
                delete params.value;
                var result;
                multiValue && structuredValue ? result = [ name, params, valueType, value = parser._parseMultiValue(value, structuredValue, valueType, [], multiValue, state.designSet, structuredValue) ] : multiValue ? (result = [ name, params, valueType ], 
                parser._parseMultiValue(value, multiValue, valueType, result, null, state.designSet, !1)) : result = structuredValue ? [ name, params, valueType, value = parser._parseMultiValue(value, structuredValue, valueType, [], null, state.designSet, structuredValue) ] : [ name, params, valueType, value = parser._parseValue(value, valueType, state.designSet, !1) ], 
                "vcard" !== state.component[0] || 0 !== state.component[1].length || "version" === name && "4.0" === value || (state.designSet = design.getDesignSet("vcard3")), 
                state.component[1].push(result);
            }, parser._parseValue = function(value, type, designSet, structuredValue) {
                return type in designSet.value && "fromICAL" in designSet.value[type] ? designSet.value[type].fromICAL(value, structuredValue) : value;
            }, parser._parseParameters = function(line, start, designSet) {
                for (var name, lcname, value, type, multiValue, mvdelim, lastParam = start, pos = 0, result = {}, valuePos = -1; !1 !== pos && -1 !== (pos = helpers.unescapedIndexOf(line, "=", pos + 1)); ) {
                    if (0 == (name = line.substr(lastParam + 1, pos - lastParam - 1)).length) throw new ParserError("Empty parameter name in '" + line + "'");
                    if (type = (lcname = name.toLowerCase()) in designSet.param && designSet.param[lcname].valueType ? designSet.param[lcname].valueType : "text", 
                    lcname in designSet.param && (multiValue = designSet.param[lcname].multiValue, designSet.param[lcname].multiValueSeparateDQuote && (mvdelim = parser._rfc6868Escape('"' + multiValue + '"'))), 
                    '"' === line[pos + 1]) {
                        if (valuePos = pos + 2, pos = helpers.unescapedIndexOf(line, '"', valuePos), multiValue && -1 != pos) for (var extendedValue = !0; extendedValue; ) line[pos + 1] == multiValue && '"' == line[pos + 2] ? pos = helpers.unescapedIndexOf(line, '"', pos + 3) : extendedValue = !1;
                        if (-1 === pos) throw new ParserError('invalid line (no matching double quote) "' + line + '"');
                        value = line.substr(valuePos, pos - valuePos), -1 === (lastParam = helpers.unescapedIndexOf(line, ";", pos)) && (pos = !1);
                    } else {
                        valuePos = pos + 1;
                        var nextPos = helpers.unescapedIndexOf(line, ";", valuePos), propValuePos = helpers.unescapedIndexOf(line, ":", valuePos);
                        -1 !== propValuePos && nextPos > propValuePos ? (nextPos = propValuePos, pos = !1) : -1 === nextPos ? (nextPos = -1 === propValuePos ? line.length : propValuePos, 
                        pos = !1) : (lastParam = nextPos, pos = nextPos), value = line.substr(valuePos, nextPos - valuePos);
                    }
                    if (value = parser._rfc6868Escape(value), multiValue) {
                        var delimiter = mvdelim || multiValue;
                        result[lcname] = parser._parseMultiValue(value, delimiter, type, [], null, designSet);
                    } else result[lcname] = parser._parseValue(value, type, designSet);
                }
                return [ result, value, valuePos ];
            }, parser._rfc6868Escape = function(val) {
                return val.replace(/\^['n^]/g, function(x) {
                    return RFC6868_REPLACE_MAP[x];
                });
            };
            var RFC6868_REPLACE_MAP = {
                "^'": '"',
                "^n": "\n",
                "^^": "^"
            };
            return parser._parseMultiValue = function(buffer, delim, type, result, innerMulti, designSet, structuredValue) {
                var value, pos = 0, lastPos = 0;
                if (0 === delim.length) return buffer;
                for (;-1 !== (pos = helpers.unescapedIndexOf(buffer, delim, lastPos)); ) value = buffer.substr(lastPos, pos - lastPos), 
                value = innerMulti ? parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue) : parser._parseValue(value, type, designSet, structuredValue), 
                result.push(value), lastPos = pos + delim.length;
                return value = buffer.substr(lastPos), value = innerMulti ? parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue) : parser._parseValue(value, type, designSet, structuredValue), 
                result.push(value), 1 == result.length ? result[0] : result;
            }, parser._eachLine = function(buffer, callback) {
                var line, firstChar, newlineOffset, len = buffer.length, lastPos = buffer.search(/[^ \t]/), pos = lastPos;
                do {
                    newlineOffset = (pos = buffer.indexOf("\n", lastPos) + 1) > 1 && "\r" === buffer[pos - 2] ? 2 : 1, 
                    0 === pos && (pos = len, newlineOffset = 0), " " === (firstChar = buffer[lastPos]) || "\t" === firstChar ? line += buffer.substr(lastPos + 1, pos - lastPos - (newlineOffset + 1)) : (line && callback(null, line), 
                    line = buffer.substr(lastPos, pos - lastPos - newlineOffset)), lastPos = pos;
                } while (pos !== len);
                (line = line.trim()).length && callback(null, line);
            }, parser;
        }(), ICAL.Component = function() {
            "use strict";
            function Component(jCal, parent) {
                "string" == typeof jCal && (jCal = [ jCal, [], [] ]), this.jCal = jCal, this.parent = parent || null;
            }
            return Component.prototype = {
                _hydratedPropertyCount: 0,
                _hydratedComponentCount: 0,
                get name() {
                    return this.jCal[0];
                },
                get _designSet() {
                    return this.parent && this.parent._designSet || ICAL.design.getDesignSet(this.name);
                },
                _hydrateComponent: function(index) {
                    if (this._components || (this._components = [], this._hydratedComponentCount = 0), 
                    this._components[index]) return this._components[index];
                    var comp = new Component(this.jCal[2][index], this);
                    return this._hydratedComponentCount++, this._components[index] = comp;
                },
                _hydrateProperty: function(index) {
                    if (this._properties || (this._properties = [], this._hydratedPropertyCount = 0), 
                    this._properties[index]) return this._properties[index];
                    var prop = new ICAL.Property(this.jCal[1][index], this);
                    return this._hydratedPropertyCount++, this._properties[index] = prop;
                },
                getFirstSubcomponent: function(name) {
                    if (name) {
                        for (var i = 0, comps = this.jCal[2], len = comps.length; i < len; i++) if (comps[i][0] === name) return this._hydrateComponent(i);
                    } else if (this.jCal[2].length) return this._hydrateComponent(0);
                    return null;
                },
                getAllSubcomponents: function(name) {
                    var jCalLen = this.jCal[2].length, i = 0;
                    if (name) {
                        for (var comps = this.jCal[2], result = []; i < jCalLen; i++) name === comps[i][0] && result.push(this._hydrateComponent(i));
                        return result;
                    }
                    if (!this._components || this._hydratedComponentCount !== jCalLen) for (;i < jCalLen; i++) this._hydrateComponent(i);
                    return this._components || [];
                },
                hasProperty: function(name) {
                    for (var props = this.jCal[1], len = props.length, i = 0; i < len; i++) if (props[i][0] === name) return !0;
                    return !1;
                },
                getFirstProperty: function(name) {
                    if (name) {
                        for (var i = 0, props = this.jCal[1], len = props.length; i < len; i++) if (props[i][0] === name) return this._hydrateProperty(i);
                    } else if (this.jCal[1].length) return this._hydrateProperty(0);
                    return null;
                },
                getFirstPropertyValue: function(name) {
                    var prop = this.getFirstProperty(name);
                    return prop ? prop.getFirstValue() : null;
                },
                getAllProperties: function(name) {
                    var jCalLen = this.jCal[1].length, i = 0;
                    if (name) {
                        for (var props = this.jCal[1], result = []; i < jCalLen; i++) name === props[i][0] && result.push(this._hydrateProperty(i));
                        return result;
                    }
                    if (!this._properties || this._hydratedPropertyCount !== jCalLen) for (;i < jCalLen; i++) this._hydrateProperty(i);
                    return this._properties || [];
                },
                _removeObjectByIndex: function(jCalIndex, cache, index) {
                    if ((cache = cache || [])[index]) {
                        var obj = cache[index];
                        "parent" in obj && (obj.parent = null);
                    }
                    cache.splice(index, 1), this.jCal[jCalIndex].splice(index, 1);
                },
                _removeObject: function(jCalIndex, cache, nameOrObject) {
                    var i = 0, objects = this.jCal[jCalIndex], len = objects.length, cached = this[cache];
                    if ("string" == typeof nameOrObject) {
                        for (;i < len; i++) if (objects[i][0] === nameOrObject) return this._removeObjectByIndex(jCalIndex, cached, i), 
                        !0;
                    } else if (cached) for (;i < len; i++) if (cached[i] && cached[i] === nameOrObject) return this._removeObjectByIndex(jCalIndex, cached, i), 
                    !0;
                    return !1;
                },
                _removeAllObjects: function(jCalIndex, cache, name) {
                    for (var cached = this[cache], objects = this.jCal[jCalIndex], i = objects.length - 1; i >= 0; i--) name && objects[i][0] !== name || this._removeObjectByIndex(jCalIndex, cached, i);
                },
                addSubcomponent: function(component) {
                    this._components || (this._components = [], this._hydratedComponentCount = 0), component.parent && component.parent.removeSubcomponent(component);
                    var idx = this.jCal[2].push(component.jCal);
                    return this._components[idx - 1] = component, this._hydratedComponentCount++, component.parent = this, 
                    component;
                },
                removeSubcomponent: function(nameOrComp) {
                    var removed = this._removeObject(2, "_components", nameOrComp);
                    return removed && this._hydratedComponentCount--, removed;
                },
                removeAllSubcomponents: function(name) {
                    var removed = this._removeAllObjects(2, "_components", name);
                    return this._hydratedComponentCount = 0, removed;
                },
                addProperty: function(property) {
                    if (!(property instanceof ICAL.Property)) throw new TypeError("must instance of ICAL.Property");
                    this._properties || (this._properties = [], this._hydratedPropertyCount = 0), property.parent && property.parent.removeProperty(property);
                    var idx = this.jCal[1].push(property.jCal);
                    return this._properties[idx - 1] = property, this._hydratedPropertyCount++, property.parent = this, 
                    property;
                },
                addPropertyWithValue: function(name, value) {
                    var prop = new ICAL.Property(name);
                    return prop.setValue(value), this.addProperty(prop), prop;
                },
                updatePropertyWithValue: function(name, value) {
                    var prop = this.getFirstProperty(name);
                    return prop ? prop.setValue(value) : prop = this.addPropertyWithValue(name, value), 
                    prop;
                },
                removeProperty: function(nameOrProp) {
                    var removed = this._removeObject(1, "_properties", nameOrProp);
                    return removed && this._hydratedPropertyCount--, removed;
                },
                removeAllProperties: function(name) {
                    var removed = this._removeAllObjects(1, "_properties", name);
                    return this._hydratedPropertyCount = 0, removed;
                },
                toJSON: function() {
                    return this.jCal;
                },
                toString: function() {
                    return ICAL.stringify.component(this.jCal, this._designSet);
                }
            }, Component.fromString = function(str) {
                return new Component(ICAL.parse.component(str));
            }, Component;
        }(), ICAL.Property = function() {
            "use strict";
            function Property(jCal, parent) {
                this._parent = parent || null, "string" == typeof jCal ? (this.jCal = [ jCal, {}, design.defaultType ], 
                this.jCal[TYPE_INDEX] = this.getDefaultType()) : this.jCal = jCal, this._updateType();
            }
            var TYPE_INDEX = 2, design = ICAL.design;
            return Property.prototype = {
                get type() {
                    return this.jCal[TYPE_INDEX];
                },
                get name() {
                    return this.jCal[0];
                },
                get parent() {
                    return this._parent;
                },
                set parent(p) {
                    var designSetChanged = !this._parent || p && p._designSet != this._parent._designSet;
                    return this._parent = p, this.type == design.defaultType && designSetChanged && (this.jCal[TYPE_INDEX] = this.getDefaultType(), 
                    this._updateType()), p;
                },
                get _designSet() {
                    return this.parent ? this.parent._designSet : design.defaultSet;
                },
                _updateType: function() {
                    var designSet = this._designSet;
                    if (this.type in designSet.value) {
                        designSet.value[this.type];
                        "decorate" in designSet.value[this.type] ? this.isDecorated = !0 : this.isDecorated = !1, 
                        this.name in designSet.property && (this.isMultiValue = "multiValue" in designSet.property[this.name], 
                        this.isStructuredValue = "structuredValue" in designSet.property[this.name]);
                    }
                },
                _hydrateValue: function(index) {
                    return this._values && this._values[index] ? this._values[index] : this.jCal.length <= 3 + index ? null : this.isDecorated ? (this._values || (this._values = []), 
                    this._values[index] = this._decorate(this.jCal[3 + index])) : this.jCal[3 + index];
                },
                _decorate: function(value) {
                    return this._designSet.value[this.type].decorate(value, this);
                },
                _undecorate: function(value) {
                    return this._designSet.value[this.type].undecorate(value, this);
                },
                _setDecoratedValue: function(value, index) {
                    this._values || (this._values = []), "object" == typeof value && "icaltype" in value ? (this.jCal[3 + index] = this._undecorate(value), 
                    this._values[index] = value) : (this.jCal[3 + index] = value, this._values[index] = this._decorate(value));
                },
                getParameter: function(name) {
                    return name in this.jCal[1] ? this.jCal[1][name] : void 0;
                },
                setParameter: function(name, value) {
                    var lcname = name.toLowerCase();
                    "string" == typeof value && lcname in this._designSet.param && "multiValue" in this._designSet.param[lcname] && (value = [ value ]), 
                    this.jCal[1][name] = value;
                },
                removeParameter: function(name) {
                    delete this.jCal[1][name];
                },
                getDefaultType: function() {
                    var name = this.jCal[0], designSet = this._designSet;
                    if (name in designSet.property) {
                        var details = designSet.property[name];
                        if ("defaultType" in details) return details.defaultType;
                    }
                    return design.defaultType;
                },
                resetType: function(type) {
                    this.removeAllValues(), this.jCal[TYPE_INDEX] = type, this._updateType();
                },
                getFirstValue: function() {
                    return this._hydrateValue(0);
                },
                getValues: function() {
                    var len = this.jCal.length - 3;
                    if (len < 1) return [];
                    for (var i = 0, result = []; i < len; i++) result[i] = this._hydrateValue(i);
                    return result;
                },
                removeAllValues: function() {
                    this._values && (this._values.length = 0), this.jCal.length = 3;
                },
                setValues: function(values) {
                    if (!this.isMultiValue) throw new Error(this.name + ": does not not support mulitValue.\noverride isMultiValue");
                    var len = values.length, i = 0;
                    if (this.removeAllValues(), len > 0 && "object" == typeof values[0] && "icaltype" in values[0] && this.resetType(values[0].icaltype), 
                    this.isDecorated) for (;i < len; i++) this._setDecoratedValue(values[i], i); else for (;i < len; i++) this.jCal[3 + i] = values[i];
                },
                setValue: function(value) {
                    this.removeAllValues(), "object" == typeof value && "icaltype" in value && this.resetType(value.icaltype), 
                    this.isDecorated ? this._setDecoratedValue(value, 0) : this.jCal[3] = value;
                },
                toJSON: function() {
                    return this.jCal;
                },
                toICALString: function() {
                    return ICAL.stringify.property(this.jCal, this._designSet, !0);
                }
            }, Property.fromString = function(str, designSet) {
                return new Property(ICAL.parse.property(str, designSet));
            }, Property;
        }(), ICAL.UtcOffset = function() {
            function UtcOffset(aData) {
                this.fromData(aData);
            }
            return UtcOffset.prototype = {
                hours: 0,
                minutes: 0,
                factor: 1,
                icaltype: "utc-offset",
                clone: function() {
                    return ICAL.UtcOffset.fromSeconds(this.toSeconds());
                },
                fromData: function(aData) {
                    if (aData) for (var key in aData) aData.hasOwnProperty(key) && (this[key] = aData[key]);
                    this._normalize();
                },
                fromSeconds: function(aSeconds) {
                    var secs = Math.abs(aSeconds);
                    return this.factor = aSeconds < 0 ? -1 : 1, this.hours = ICAL.helpers.trunc(secs / 3600), 
                    secs -= 3600 * this.hours, this.minutes = ICAL.helpers.trunc(secs / 60), this;
                },
                toSeconds: function() {
                    return this.factor * (60 * this.minutes + 3600 * this.hours);
                },
                compare: function(other) {
                    var a = this.toSeconds(), b = other.toSeconds();
                    return (a > b) - (b > a);
                },
                _normalize: function() {
                    for (var secs = this.toSeconds(), factor = this.factor; secs < -43200; ) secs += 97200;
                    for (;secs > 50400; ) secs -= 97200;
                    this.fromSeconds(secs), 0 == secs && (this.factor = factor);
                },
                toICALString: function() {
                    return ICAL.design.icalendar.value["utc-offset"].toICAL(this.toString());
                },
                toString: function() {
                    return (1 == this.factor ? "+" : "-") + ICAL.helpers.pad2(this.hours) + ":" + ICAL.helpers.pad2(this.minutes);
                }
            }, UtcOffset.fromString = function(aString) {
                var options = {};
                return options.factor = "+" === aString[0] ? 1 : -1, options.hours = ICAL.helpers.strictParseInt(aString.substr(1, 2)), 
                options.minutes = ICAL.helpers.strictParseInt(aString.substr(4, 2)), new ICAL.UtcOffset(options);
            }, UtcOffset.fromSeconds = function(aSeconds) {
                var instance = new UtcOffset();
                return instance.fromSeconds(aSeconds), instance;
            }, UtcOffset;
        }(), ICAL.Binary = function() {
            function Binary(aValue) {
                this.value = aValue;
            }
            return Binary.prototype = {
                icaltype: "binary",
                decodeValue: function() {
                    return this._b64_decode(this.value);
                },
                setEncodedValue: function(aValue) {
                    this.value = this._b64_encode(aValue);
                },
                _b64_encode: function(data) {
                    var h1, h2, h3, h4, bits, b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", i = 0, ac = 0, enc = "", tmp_arr = [];
                    if (!data) return data;
                    do {
                        h1 = (bits = data.charCodeAt(i++) << 16 | data.charCodeAt(i++) << 8 | data.charCodeAt(i++)) >> 18 & 63, 
                        h2 = bits >> 12 & 63, h3 = bits >> 6 & 63, h4 = 63 & bits, tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
                    } while (i < data.length);
                    enc = tmp_arr.join("");
                    var r = data.length % 3;
                    return (r ? enc.slice(0, r - 3) : enc) + "===".slice(r || 3);
                },
                _b64_decode: function(data) {
                    var o1, o2, o3, h3, h4, bits, b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", i = 0, ac = 0, tmp_arr = [];
                    if (!data) return data;
                    data += "";
                    do {
                        o1 = (bits = b64.indexOf(data.charAt(i++)) << 18 | b64.indexOf(data.charAt(i++)) << 12 | (h3 = b64.indexOf(data.charAt(i++))) << 6 | (h4 = b64.indexOf(data.charAt(i++)))) >> 16 & 255, 
                        o2 = bits >> 8 & 255, o3 = 255 & bits, tmp_arr[ac++] = 64 == h3 ? String.fromCharCode(o1) : 64 == h4 ? String.fromCharCode(o1, o2) : String.fromCharCode(o1, o2, o3);
                    } while (i < data.length);
                    return tmp_arr.join("");
                },
                toString: function() {
                    return this.value;
                }
            }, Binary.fromString = function(aString) {
                return new Binary(aString);
            }, Binary;
        }(), function() {
            ICAL.Period = function(aData) {
                if (this.wrappedJSObject = this, aData && "start" in aData) {
                    if (aData.start && !(aData.start instanceof ICAL.Time)) throw new TypeError(".start must be an instance of ICAL.Time");
                    this.start = aData.start;
                }
                if (aData && aData.end && aData.duration) throw new Error("cannot accept both end and duration");
                if (aData && "end" in aData) {
                    if (aData.end && !(aData.end instanceof ICAL.Time)) throw new TypeError(".end must be an instance of ICAL.Time");
                    this.end = aData.end;
                }
                if (aData && "duration" in aData) {
                    if (aData.duration && !(aData.duration instanceof ICAL.Duration)) throw new TypeError(".duration must be an instance of ICAL.Duration");
                    this.duration = aData.duration;
                }
            }, ICAL.Period.prototype = {
                start: null,
                end: null,
                duration: null,
                icalclass: "icalperiod",
                icaltype: "period",
                clone: function() {
                    return ICAL.Period.fromData({
                        start: this.start ? this.start.clone() : null,
                        end: this.end ? this.end.clone() : null,
                        duration: this.duration ? this.duration.clone() : null
                    });
                },
                getDuration: function() {
                    return this.duration ? this.duration : this.end.subtractDate(this.start);
                },
                getEnd: function() {
                    if (this.end) return this.end;
                    var end = this.start.clone();
                    return end.addDuration(this.duration), end;
                },
                toString: function() {
                    return this.start + "/" + (this.end || this.duration);
                },
                toJSON: function() {
                    return [ this.start.toString(), (this.end || this.duration).toString() ];
                },
                toICALString: function() {
                    return this.start.toICALString() + "/" + (this.end || this.duration).toICALString();
                }
            }, ICAL.Period.fromString = function(str, prop) {
                var parts = str.split("/");
                if (2 !== parts.length) throw new Error('Invalid string value: "' + str + '" must contain a "/" char.');
                var options = {
                    start: ICAL.Time.fromDateTimeString(parts[0], prop)
                }, end = parts[1];
                return ICAL.Duration.isValueString(end) ? options.duration = ICAL.Duration.fromString(end) : options.end = ICAL.Time.fromDateTimeString(end, prop), 
                new ICAL.Period(options);
            }, ICAL.Period.fromData = function(aData) {
                return new ICAL.Period(aData);
            }, ICAL.Period.fromJSON = function(aData, aProp) {
                return ICAL.Duration.isValueString(aData[1]) ? ICAL.Period.fromData({
                    start: ICAL.Time.fromDateTimeString(aData[0], aProp),
                    duration: ICAL.Duration.fromString(aData[1])
                }) : ICAL.Period.fromData({
                    start: ICAL.Time.fromDateTimeString(aData[0], aProp),
                    end: ICAL.Time.fromDateTimeString(aData[1], aProp)
                });
            };
        }(), function() {
            function parseDurationChunk(letter, number, object) {
                var type;
                switch (letter) {
                  case "P":
                    object.isNegative = !(!number || "-" !== number);
                    break;

                  case "D":
                    type = "days";
                    break;

                  case "W":
                    type = "weeks";
                    break;

                  case "H":
                    type = "hours";
                    break;

                  case "M":
                    type = "minutes";
                    break;

                  case "S":
                    type = "seconds";
                    break;

                  default:
                    return 0;
                }
                if (type) {
                    if (!number && 0 !== number) throw new Error('invalid duration value: Missing number before "' + letter + '"');
                    var num = parseInt(number, 10);
                    if (ICAL.helpers.isStrictlyNaN(num)) throw new Error('invalid duration value: Invalid number "' + number + '" before "' + letter + '"');
                    object[type] = num;
                }
                return 1;
            }
            ICAL.Duration = function(data) {
                this.wrappedJSObject = this, this.fromData(data);
            }, ICAL.Duration.prototype = {
                weeks: 0,
                days: 0,
                hours: 0,
                minutes: 0,
                seconds: 0,
                isNegative: !1,
                icalclass: "icalduration",
                icaltype: "duration",
                clone: function() {
                    return ICAL.Duration.fromData(this);
                },
                toSeconds: function() {
                    var seconds = this.seconds + 60 * this.minutes + 3600 * this.hours + 86400 * this.days + 604800 * this.weeks;
                    return this.isNegative ? -seconds : seconds;
                },
                fromSeconds: function(aSeconds) {
                    var secs = Math.abs(aSeconds);
                    return this.isNegative = aSeconds < 0, this.days = ICAL.helpers.trunc(secs / 86400), 
                    this.days % 7 == 0 ? (this.weeks = this.days / 7, this.days = 0) : this.weeks = 0, 
                    secs -= 86400 * (this.days + 7 * this.weeks), this.hours = ICAL.helpers.trunc(secs / 3600), 
                    secs -= 3600 * this.hours, this.minutes = ICAL.helpers.trunc(secs / 60), secs -= 60 * this.minutes, 
                    this.seconds = secs, this;
                },
                fromData: function(aData) {
                    var propsToCopy = [ "weeks", "days", "hours", "minutes", "seconds", "isNegative" ];
                    for (var key in propsToCopy) if (propsToCopy.hasOwnProperty(key)) {
                        var prop = propsToCopy[key];
                        this[prop] = aData && prop in aData ? aData[prop] : 0;
                    }
                },
                reset: function() {
                    this.isNegative = !1, this.weeks = 0, this.days = 0, this.hours = 0, this.minutes = 0, 
                    this.seconds = 0;
                },
                compare: function(aOther) {
                    var thisSeconds = this.toSeconds(), otherSeconds = aOther.toSeconds();
                    return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);
                },
                normalize: function() {
                    this.fromSeconds(this.toSeconds());
                },
                toString: function() {
                    if (0 == this.toSeconds()) return "PT0S";
                    var str = "";
                    return this.isNegative && (str += "-"), str += "P", this.weeks && (str += this.weeks + "W"), 
                    this.days && (str += this.days + "D"), (this.hours || this.minutes || this.seconds) && (str += "T", 
                    this.hours && (str += this.hours + "H"), this.minutes && (str += this.minutes + "M"), 
                    this.seconds && (str += this.seconds + "S")), str;
                },
                toICALString: function() {
                    return this.toString();
                }
            }, ICAL.Duration.fromSeconds = function(aSeconds) {
                return new ICAL.Duration().fromSeconds(aSeconds);
            }, ICAL.Duration.isValueString = function(string) {
                return "P" === string[0] || "P" === string[1];
            }, ICAL.Duration.fromString = function(aStr) {
                for (var pos = 0, dict = Object.create(null), chunks = 0; -1 !== (pos = aStr.search(/([PDWHMTS]{1,1})/)); ) {
                    var type = aStr[pos], numeric = aStr.substr(0, pos);
                    aStr = aStr.substr(pos + 1), chunks += parseDurationChunk(type, numeric, dict);
                }
                if (chunks < 2) throw new Error('invalid duration value: Not enough duration components in "' + aStr + '"');
                return new ICAL.Duration(dict);
            }, ICAL.Duration.fromData = function(aData) {
                return new ICAL.Duration(aData);
            };
        }(), function() {
            var OPTIONS = [ "tzid", "location", "tznames", "latitude", "longitude" ];
            ICAL.Timezone = function(data) {
                this.wrappedJSObject = this, this.fromData(data);
            }, ICAL.Timezone.prototype = {
                tzid: "",
                location: "",
                tznames: "",
                latitude: 0,
                longitude: 0,
                component: null,
                expandedUntilYear: 0,
                icalclass: "icaltimezone",
                fromData: function(aData) {
                    if (this.expandedUntilYear = 0, this.changes = [], aData instanceof ICAL.Component) this.component = aData; else {
                        if (aData && "component" in aData) if ("string" == typeof aData.component) {
                            var jCal = ICAL.parse(aData.component);
                            this.component = new ICAL.Component(jCal);
                        } else aData.component instanceof ICAL.Component ? this.component = aData.component : this.component = null;
                        for (var key in OPTIONS) if (OPTIONS.hasOwnProperty(key)) {
                            var prop = OPTIONS[key];
                            aData && prop in aData && (this[prop] = aData[prop]);
                        }
                    }
                    return this.component instanceof ICAL.Component && !this.tzid && (this.tzid = this.component.getFirstPropertyValue("tzid")), 
                    this;
                },
                utcOffset: function(tt) {
                    if (this == ICAL.Timezone.utcTimezone || this == ICAL.Timezone.localTimezone) return 0;
                    if (this._ensureCoverage(tt.year), !this.changes.length) return 0;
                    for (var tt_change = {
                        year: tt.year,
                        month: tt.month,
                        day: tt.day,
                        hour: tt.hour,
                        minute: tt.minute,
                        second: tt.second
                    }, change_num = this._findNearbyChange(tt_change), change_num_to_use = -1, step = 1; ;) {
                        var change = ICAL.helpers.clone(this.changes[change_num], !0);
                        if (change.utcOffset < change.prevUtcOffset ? ICAL.Timezone.adjust_change(change, 0, 0, 0, change.utcOffset) : ICAL.Timezone.adjust_change(change, 0, 0, 0, change.prevUtcOffset), 
                        ICAL.Timezone._compare_change_fn(tt_change, change) >= 0 ? change_num_to_use = change_num : step = -1, 
                        -1 == step && -1 != change_num_to_use) break;
                        if ((change_num += step) < 0) return 0;
                        if (change_num >= this.changes.length) break;
                    }
                    var zone_change = this.changes[change_num_to_use];
                    if (zone_change.utcOffset - zone_change.prevUtcOffset < 0 && change_num_to_use > 0) {
                        var tmp_change = ICAL.helpers.clone(zone_change, !0);
                        if (ICAL.Timezone.adjust_change(tmp_change, 0, 0, 0, tmp_change.prevUtcOffset), 
                        ICAL.Timezone._compare_change_fn(tt_change, tmp_change) < 0) {
                            var prev_zone_change = this.changes[change_num_to_use - 1];
                            0 != zone_change.is_daylight && 0 == prev_zone_change.is_daylight && (zone_change = prev_zone_change);
                        }
                    }
                    return zone_change.utcOffset;
                },
                _findNearbyChange: function(change) {
                    var idx = ICAL.helpers.binsearchInsert(this.changes, change, ICAL.Timezone._compare_change_fn);
                    return idx >= this.changes.length ? this.changes.length - 1 : idx;
                },
                _ensureCoverage: function(aYear) {
                    if (-1 == ICAL.Timezone._minimumExpansionYear) {
                        var today = ICAL.Time.now();
                        ICAL.Timezone._minimumExpansionYear = today.year;
                    }
                    var changesEndYear = aYear;
                    if (changesEndYear < ICAL.Timezone._minimumExpansionYear && (changesEndYear = ICAL.Timezone._minimumExpansionYear), 
                    (changesEndYear += ICAL.Timezone.EXTRA_COVERAGE) > ICAL.Timezone.MAX_YEAR && (changesEndYear = ICAL.Timezone.MAX_YEAR), 
                    !this.changes.length || this.expandedUntilYear < aYear) {
                        for (var subcomps = this.component.getAllSubcomponents(), compLen = subcomps.length, compIdx = 0; compIdx < compLen; compIdx++) this._expandComponent(subcomps[compIdx], changesEndYear, this.changes);
                        this.changes.sort(ICAL.Timezone._compare_change_fn), this.expandedUntilYear = changesEndYear;
                    }
                },
                _expandComponent: function(aComponent, aYear, changes) {
                    function convert_tzoffset(offset) {
                        return offset.factor * (3600 * offset.hours + 60 * offset.minutes);
                    }
                    function init_changes() {
                        var changebase = {};
                        return changebase.is_daylight = "daylight" == aComponent.name, changebase.utcOffset = convert_tzoffset(aComponent.getFirstProperty("tzoffsetto").getFirstValue()), 
                        changebase.prevUtcOffset = convert_tzoffset(aComponent.getFirstProperty("tzoffsetfrom").getFirstValue()), 
                        changebase;
                    }
                    if (!aComponent.hasProperty("dtstart") || !aComponent.hasProperty("tzoffsetto") || !aComponent.hasProperty("tzoffsetfrom")) return null;
                    var change, dtstart = aComponent.getFirstProperty("dtstart").getFirstValue();
                    if (aComponent.hasProperty("rrule") || aComponent.hasProperty("rdate")) {
                        var props = aComponent.getAllProperties("rdate");
                        for (var rdatekey in props) if (props.hasOwnProperty(rdatekey)) {
                            var time = props[rdatekey].getFirstValue();
                            (change = init_changes()).year = time.year, change.month = time.month, change.day = time.day, 
                            time.isDate ? (change.hour = dtstart.hour, change.minute = dtstart.minute, change.second = dtstart.second, 
                            dtstart.zone != ICAL.Timezone.utcTimezone && ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset)) : (change.hour = time.hour, 
                            change.minute = time.minute, change.second = time.second, time.zone != ICAL.Timezone.utcTimezone && ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset)), 
                            changes.push(change);
                        }
                        var rrule = aComponent.getFirstProperty("rrule");
                        if (rrule) {
                            rrule = rrule.getFirstValue(), change = init_changes(), rrule.until && rrule.until.zone == ICAL.Timezone.utcTimezone && (rrule.until.adjust(0, 0, 0, change.prevUtcOffset), 
                            rrule.until.zone = ICAL.Timezone.localTimezone);
                            for (var occ, iterator = rrule.iterator(dtstart); (occ = iterator.next()) && (change = init_changes(), 
                            !(occ.year > aYear) && occ); ) change.year = occ.year, change.month = occ.month, 
                            change.day = occ.day, change.hour = occ.hour, change.minute = occ.minute, change.second = occ.second, 
                            change.isDate = occ.isDate, ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset), 
                            changes.push(change);
                        }
                    } else (change = init_changes()).year = dtstart.year, change.month = dtstart.month, 
                    change.day = dtstart.day, change.hour = dtstart.hour, change.minute = dtstart.minute, 
                    change.second = dtstart.second, ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset), 
                    changes.push(change);
                    return changes;
                },
                toString: function() {
                    return this.tznames ? this.tznames : this.tzid;
                }
            }, ICAL.Timezone._compare_change_fn = function(a, b) {
                return a.year < b.year ? -1 : a.year > b.year ? 1 : a.month < b.month ? -1 : a.month > b.month ? 1 : a.day < b.day ? -1 : a.day > b.day ? 1 : a.hour < b.hour ? -1 : a.hour > b.hour ? 1 : a.minute < b.minute ? -1 : a.minute > b.minute ? 1 : a.second < b.second ? -1 : a.second > b.second ? 1 : 0;
            }, ICAL.Timezone.convert_time = function(tt, from_zone, to_zone) {
                if (tt.isDate || from_zone.tzid == to_zone.tzid || from_zone == ICAL.Timezone.localTimezone || to_zone == ICAL.Timezone.localTimezone) return tt.zone = to_zone, 
                tt;
                var utcOffset = from_zone.utcOffset(tt);
                return tt.adjust(0, 0, 0, -utcOffset), utcOffset = to_zone.utcOffset(tt), tt.adjust(0, 0, 0, utcOffset), 
                null;
            }, ICAL.Timezone.fromData = function(aData) {
                return new ICAL.Timezone().fromData(aData);
            }, ICAL.Timezone.utcTimezone = ICAL.Timezone.fromData({
                tzid: "UTC"
            }), ICAL.Timezone.localTimezone = ICAL.Timezone.fromData({
                tzid: "floating"
            }), ICAL.Timezone.adjust_change = function(change, days, hours, minutes, seconds) {
                return ICAL.Time.prototype.adjust.call(change, days, hours, minutes, seconds, change);
            }, ICAL.Timezone._minimumExpansionYear = -1, ICAL.Timezone.MAX_YEAR = 2035, ICAL.Timezone.EXTRA_COVERAGE = 5;
        }(), ICAL.TimezoneService = function() {
            var zones, TimezoneService = {
                reset: function() {
                    zones = Object.create(null);
                    var utc = ICAL.Timezone.utcTimezone;
                    zones.Z = utc, zones.UTC = utc, zones.GMT = utc;
                },
                has: function(tzid) {
                    return !!zones[tzid];
                },
                get: function(tzid) {
                    return zones[tzid];
                },
                register: function(name, timezone) {
                    if (name instanceof ICAL.Component && "vtimezone" === name.name && (name = (timezone = new ICAL.Timezone(name)).tzid), 
                    !(timezone instanceof ICAL.Timezone)) throw new TypeError("timezone must be ICAL.Timezone or ICAL.Component");
                    zones[name] = timezone;
                },
                remove: function(tzid) {
                    return delete zones[tzid];
                }
            };
            return TimezoneService.reset(), TimezoneService;
        }(), function() {
            ICAL.Time = function(data, zone) {
                this.wrappedJSObject = this;
                var time = this._time = Object.create(null);
                time.year = 0, time.month = 1, time.day = 1, time.hour = 0, time.minute = 0, time.second = 0, 
                time.isDate = !1, this.fromData(data, zone);
            }, ICAL.Time._dowCache = {}, ICAL.Time._wnCache = {}, ICAL.Time.prototype = {
                icalclass: "icaltime",
                _cachedUnixTime: null,
                get icaltype() {
                    return this.isDate ? "date" : "date-time";
                },
                zone: null,
                _pendingNormalization: !1,
                clone: function() {
                    return new ICAL.Time(this._time, this.zone);
                },
                reset: function() {
                    this.fromData(ICAL.Time.epochTime), this.zone = ICAL.Timezone.utcTimezone;
                },
                resetTo: function(year, month, day, hour, minute, second, timezone) {
                    this.fromData({
                        year: year,
                        month: month,
                        day: day,
                        hour: hour,
                        minute: minute,
                        second: second,
                        zone: timezone
                    });
                },
                fromJSDate: function(aDate, useUTC) {
                    return aDate ? useUTC ? (this.zone = ICAL.Timezone.utcTimezone, this.year = aDate.getUTCFullYear(), 
                    this.month = aDate.getUTCMonth() + 1, this.day = aDate.getUTCDate(), this.hour = aDate.getUTCHours(), 
                    this.minute = aDate.getUTCMinutes(), this.second = aDate.getUTCSeconds()) : (this.zone = ICAL.Timezone.localTimezone, 
                    this.year = aDate.getFullYear(), this.month = aDate.getMonth() + 1, this.day = aDate.getDate(), 
                    this.hour = aDate.getHours(), this.minute = aDate.getMinutes(), this.second = aDate.getSeconds()) : this.reset(), 
                    this._cachedUnixTime = null, this;
                },
                fromData: function(aData, aZone) {
                    if (aData) for (var key in aData) if (Object.prototype.hasOwnProperty.call(aData, key)) {
                        if ("icaltype" === key) continue;
                        this[key] = aData[key];
                    }
                    if (aZone && (this.zone = aZone), !aData || "isDate" in aData ? aData && "isDate" in aData && (this.isDate = aData.isDate) : this.isDate = !("hour" in aData), 
                    aData && "timezone" in aData) {
                        var zone = ICAL.TimezoneService.get(aData.timezone);
                        this.zone = zone || ICAL.Timezone.localTimezone;
                    }
                    return aData && "zone" in aData && (this.zone = aData.zone), this.zone || (this.zone = ICAL.Timezone.localTimezone), 
                    this._cachedUnixTime = null, this;
                },
                dayOfWeek: function() {
                    var dowCacheKey = (this.year << 9) + (this.month << 5) + this.day;
                    if (dowCacheKey in ICAL.Time._dowCache) return ICAL.Time._dowCache[dowCacheKey];
                    var q = this.day, m = this.month + (this.month < 3 ? 12 : 0), Y = this.year - (this.month < 3 ? 1 : 0), h = q + Y + ICAL.helpers.trunc(26 * (m + 1) / 10) + ICAL.helpers.trunc(Y / 4);
                    return h += 6 * ICAL.helpers.trunc(Y / 100) + ICAL.helpers.trunc(Y / 400), h = (h + 6) % 7 + 1, 
                    ICAL.Time._dowCache[dowCacheKey] = h, h;
                },
                dayOfYear: function() {
                    var is_leap = ICAL.Time.isLeapYear(this.year) ? 1 : 0;
                    return ICAL.Time.daysInYearPassedMonth[is_leap][this.month - 1] + this.day;
                },
                startOfWeek: function(aWeekStart) {
                    var firstDow = aWeekStart || ICAL.Time.SUNDAY, result = this.clone();
                    return result.day -= (this.dayOfWeek() + 7 - firstDow) % 7, result.isDate = !0, 
                    result.hour = 0, result.minute = 0, result.second = 0, result;
                },
                endOfWeek: function(aWeekStart) {
                    var firstDow = aWeekStart || ICAL.Time.SUNDAY, result = this.clone();
                    return result.day += (7 - this.dayOfWeek() + firstDow - ICAL.Time.SUNDAY) % 7, result.isDate = !0, 
                    result.hour = 0, result.minute = 0, result.second = 0, result;
                },
                startOfMonth: function() {
                    var result = this.clone();
                    return result.day = 1, result.isDate = !0, result.hour = 0, result.minute = 0, result.second = 0, 
                    result;
                },
                endOfMonth: function() {
                    var result = this.clone();
                    return result.day = ICAL.Time.daysInMonth(result.month, result.year), result.isDate = !0, 
                    result.hour = 0, result.minute = 0, result.second = 0, result;
                },
                startOfYear: function() {
                    var result = this.clone();
                    return result.day = 1, result.month = 1, result.isDate = !0, result.hour = 0, result.minute = 0, 
                    result.second = 0, result;
                },
                endOfYear: function() {
                    var result = this.clone();
                    return result.day = 31, result.month = 12, result.isDate = !0, result.hour = 0, 
                    result.minute = 0, result.second = 0, result;
                },
                startDoyWeek: function(aFirstDayOfWeek) {
                    var firstDow = aFirstDayOfWeek || ICAL.Time.SUNDAY, delta = this.dayOfWeek() - firstDow;
                    return delta < 0 && (delta += 7), this.dayOfYear() - delta;
                },
                getDominicalLetter: function() {
                    return ICAL.Time.getDominicalLetter(this.year);
                },
                nthWeekDay: function(aDayOfWeek, aPos) {
                    var weekday, daysInMonth = ICAL.Time.daysInMonth(this.month, this.year), pos = aPos, start = 0, otherDay = this.clone();
                    if (pos >= 0) {
                        otherDay.day = 1, 0 != pos && pos--, start = otherDay.day;
                        var offset = aDayOfWeek - otherDay.dayOfWeek();
                        offset < 0 && (offset += 7), start += offset, start -= aDayOfWeek, weekday = aDayOfWeek;
                    } else otherDay.day = daysInMonth, pos++, (weekday = otherDay.dayOfWeek() - aDayOfWeek) < 0 && (weekday += 7), 
                    weekday = daysInMonth - weekday;
                    return weekday += 7 * pos, start + weekday;
                },
                isNthWeekDay: function(aDayOfWeek, aPos) {
                    var dow = this.dayOfWeek();
                    return 0 === aPos && dow === aDayOfWeek || this.nthWeekDay(aDayOfWeek, aPos) === this.day;
                },
                weekNumber: function(aWeekStart) {
                    var wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;
                    if (wnCacheKey in ICAL.Time._wnCache) return ICAL.Time._wnCache[wnCacheKey];
                    var week1, dt = this.clone();
                    dt.isDate = !0;
                    var isoyear = this.year;
                    12 == dt.month && dt.day > 25 ? (week1 = ICAL.Time.weekOneStarts(isoyear + 1, aWeekStart), 
                    dt.compare(week1) < 0 ? week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart) : isoyear++) : (week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart), 
                    dt.compare(week1) < 0 && (week1 = ICAL.Time.weekOneStarts(--isoyear, aWeekStart)));
                    var daysBetween = dt.subtractDate(week1).toSeconds() / 86400, answer = ICAL.helpers.trunc(daysBetween / 7) + 1;
                    return ICAL.Time._wnCache[wnCacheKey] = answer, answer;
                },
                addDuration: function(aDuration) {
                    var mult = aDuration.isNegative ? -1 : 1, second = this.second, minute = this.minute, hour = this.hour, day = this.day;
                    second += mult * aDuration.seconds, minute += mult * aDuration.minutes, hour += mult * aDuration.hours, 
                    day += mult * aDuration.days, day += 7 * mult * aDuration.weeks, this.second = second, 
                    this.minute = minute, this.hour = hour, this.day = day, this._cachedUnixTime = null;
                },
                subtractDate: function(aDate) {
                    var unixTime = this.toUnixTime() + this.utcOffset(), other = aDate.toUnixTime() + aDate.utcOffset();
                    return ICAL.Duration.fromSeconds(unixTime - other);
                },
                subtractDateTz: function(aDate) {
                    var unixTime = this.toUnixTime(), other = aDate.toUnixTime();
                    return ICAL.Duration.fromSeconds(unixTime - other);
                },
                compare: function(other) {
                    var a = this.toUnixTime(), b = other.toUnixTime();
                    return a > b ? 1 : b > a ? -1 : 0;
                },
                compareDateOnlyTz: function(other, tz) {
                    function cmp(attr) {
                        return ICAL.Time._cmp_attr(a, b, attr);
                    }
                    var a = this.convertToZone(tz), b = other.convertToZone(tz), rc = 0;
                    return 0 != (rc = cmp("year")) ? rc : 0 != (rc = cmp("month")) ? rc : rc = cmp("day");
                },
                convertToZone: function(zone) {
                    var copy = this.clone(), zone_equals = this.zone.tzid == zone.tzid;
                    return this.isDate || zone_equals || ICAL.Timezone.convert_time(copy, this.zone, zone), 
                    copy.zone = zone, copy;
                },
                utcOffset: function() {
                    return this.zone == ICAL.Timezone.localTimezone || this.zone == ICAL.Timezone.utcTimezone ? 0 : this.zone.utcOffset(this);
                },
                toICALString: function() {
                    var string = this.toString();
                    return string.length > 10 ? ICAL.design.icalendar.value["date-time"].toICAL(string) : ICAL.design.icalendar.value.date.toICAL(string);
                },
                toString: function() {
                    var result = this.year + "-" + ICAL.helpers.pad2(this.month) + "-" + ICAL.helpers.pad2(this.day);
                    return this.isDate || (result += "T" + ICAL.helpers.pad2(this.hour) + ":" + ICAL.helpers.pad2(this.minute) + ":" + ICAL.helpers.pad2(this.second), 
                    this.zone === ICAL.Timezone.utcTimezone && (result += "Z")), result;
                },
                toJSDate: function() {
                    return this.zone == ICAL.Timezone.localTimezone ? this.isDate ? new Date(this.year, this.month - 1, this.day) : new Date(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, 0) : new Date(1e3 * this.toUnixTime());
                },
                _normalize: function() {
                    this._time.isDate;
                    return this._time.isDate && (this._time.hour = 0, this._time.minute = 0, this._time.second = 0), 
                    this.adjust(0, 0, 0, 0), this;
                },
                adjust: function(aExtraDays, aExtraHours, aExtraMinutes, aExtraSeconds, aTime) {
                    var minutesOverflow, hoursOverflow, second, minute, hour, day, daysInMonth, daysOverflow = 0, yearsOverflow = 0, time = aTime || this._time;
                    if (time.isDate || (second = time.second + aExtraSeconds, time.second = second % 60, 
                    minutesOverflow = ICAL.helpers.trunc(second / 60), time.second < 0 && (time.second += 60, 
                    minutesOverflow--), minute = time.minute + aExtraMinutes + minutesOverflow, time.minute = minute % 60, 
                    hoursOverflow = ICAL.helpers.trunc(minute / 60), time.minute < 0 && (time.minute += 60, 
                    hoursOverflow--), hour = time.hour + aExtraHours + hoursOverflow, time.hour = hour % 24, 
                    daysOverflow = ICAL.helpers.trunc(hour / 24), time.hour < 0 && (time.hour += 24, 
                    daysOverflow--)), time.month > 12 ? yearsOverflow = ICAL.helpers.trunc((time.month - 1) / 12) : time.month < 1 && (yearsOverflow = ICAL.helpers.trunc(time.month / 12) - 1), 
                    time.year += yearsOverflow, time.month -= 12 * yearsOverflow, (day = time.day + aExtraDays + daysOverflow) > 0) for (;daysInMonth = ICAL.Time.daysInMonth(time.month, time.year), 
                    !(day <= daysInMonth); ) ++time.month > 12 && (time.year++, time.month = 1), day -= daysInMonth; else for (;day <= 0; ) 1 == time.month ? (time.year--, 
                    time.month = 12) : time.month--, day += ICAL.Time.daysInMonth(time.month, time.year);
                    return time.day = day, this._cachedUnixTime = null, this;
                },
                fromUnixTime: function(seconds) {
                    this.zone = ICAL.Timezone.utcTimezone;
                    var epoch = ICAL.Time.epochTime.clone();
                    epoch.adjust(0, 0, 0, seconds), this.year = epoch.year, this.month = epoch.month, 
                    this.day = epoch.day, this.hour = epoch.hour, this.minute = epoch.minute, this.second = Math.floor(epoch.second), 
                    this._cachedUnixTime = null;
                },
                toUnixTime: function() {
                    if (null !== this._cachedUnixTime) return this._cachedUnixTime;
                    var offset = this.utcOffset(), ms = Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second - offset);
                    return this._cachedUnixTime = ms / 1e3, this._cachedUnixTime;
                },
                toJSON: function() {
                    for (var prop, copy = [ "year", "month", "day", "hour", "minute", "second", "isDate" ], result = Object.create(null), i = 0, len = copy.length; i < len; i++) result[prop = copy[i]] = this[prop];
                    return this.zone && (result.timezone = this.zone.tzid), result;
                }
            }, function() {
                function defineAttr(attr) {
                    Object.defineProperty(ICAL.Time.prototype, attr, {
                        get: function() {
                            return this._pendingNormalization && (this._normalize(), this._pendingNormalization = !1), 
                            this._time[attr];
                        },
                        set: function(val) {
                            return this._cachedUnixTime = null, this._pendingNormalization = !0, this._time[attr] = val, 
                            val;
                        }
                    });
                }
                "defineProperty" in Object && (defineAttr("year"), defineAttr("month"), defineAttr("day"), 
                defineAttr("hour"), defineAttr("minute"), defineAttr("second"), defineAttr("isDate"));
            }(), ICAL.Time.daysInMonth = function(month, year) {
                var _daysInMonth = [ 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ], days = 30;
                return month < 1 || month > 12 ? days : (days = _daysInMonth[month], 2 == month && (days += ICAL.Time.isLeapYear(year)), 
                days);
            }, ICAL.Time.isLeapYear = function(year) {
                return year <= 1752 ? year % 4 == 0 : year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
            }, ICAL.Time.fromDayOfYear = function(aDayOfYear, aYear) {
                var year = aYear, doy = aDayOfYear, tt = new ICAL.Time();
                tt.auto_normalize = !1;
                var is_leap = ICAL.Time.isLeapYear(year) ? 1 : 0;
                if (doy < 1) return year--, is_leap = ICAL.Time.isLeapYear(year) ? 1 : 0, doy += ICAL.Time.daysInYearPassedMonth[is_leap][12], 
                ICAL.Time.fromDayOfYear(doy, year);
                if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][12]) return is_leap = ICAL.Time.isLeapYear(year) ? 1 : 0, 
                doy -= ICAL.Time.daysInYearPassedMonth[is_leap][12], year++, ICAL.Time.fromDayOfYear(doy, year);
                tt.year = year, tt.isDate = !0;
                for (var month = 11; month >= 0; month--) if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][month]) {
                    tt.month = month + 1, tt.day = doy - ICAL.Time.daysInYearPassedMonth[is_leap][month];
                    break;
                }
                return tt.auto_normalize = !0, tt;
            }, ICAL.Time.fromStringv2 = function(str) {
                return new ICAL.Time({
                    year: parseInt(str.substr(0, 4), 10),
                    month: parseInt(str.substr(5, 2), 10),
                    day: parseInt(str.substr(8, 2), 10),
                    isDate: !0
                });
            }, ICAL.Time.fromDateString = function(aValue) {
                return new ICAL.Time({
                    year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),
                    month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),
                    day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),
                    isDate: !0
                });
            }, ICAL.Time.fromDateTimeString = function(aValue, prop) {
                if (aValue.length < 19) throw new Error('invalid date-time value: "' + aValue + '"');
                var zone;
                return aValue[19] && "Z" === aValue[19] ? zone = "Z" : prop && (zone = prop.getParameter("tzid")), 
                new ICAL.Time({
                    year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),
                    month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),
                    day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),
                    hour: ICAL.helpers.strictParseInt(aValue.substr(11, 2)),
                    minute: ICAL.helpers.strictParseInt(aValue.substr(14, 2)),
                    second: ICAL.helpers.strictParseInt(aValue.substr(17, 2)),
                    timezone: zone
                });
            }, ICAL.Time.fromString = function(aValue) {
                return aValue.length > 10 ? ICAL.Time.fromDateTimeString(aValue) : ICAL.Time.fromDateString(aValue);
            }, ICAL.Time.fromJSDate = function(aDate, useUTC) {
                return new ICAL.Time().fromJSDate(aDate, useUTC);
            }, ICAL.Time.fromData = function(aData, aZone) {
                return new ICAL.Time().fromData(aData, aZone);
            }, ICAL.Time.now = function() {
                return ICAL.Time.fromJSDate(new Date(), !1);
            }, ICAL.Time.weekOneStarts = function(aYear, aWeekStart) {
                var t = ICAL.Time.fromData({
                    year: aYear,
                    month: 1,
                    day: 1,
                    isDate: !0
                }), dow = t.dayOfWeek(), wkst = aWeekStart || ICAL.Time.DEFAULT_WEEK_START;
                return dow > ICAL.Time.THURSDAY && (t.day += 7), wkst > ICAL.Time.THURSDAY && (t.day -= 7), 
                t.day -= dow - wkst, t;
            }, ICAL.Time.getDominicalLetter = function(yr) {
                var dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;
                return ICAL.Time.isLeapYear(yr) ? "GFEDCBA"[(dom + 6) % 7] + "GFEDCBA"[dom] : "GFEDCBA"[dom];
            }, ICAL.Time.epochTime = ICAL.Time.fromData({
                year: 1970,
                month: 1,
                day: 1,
                hour: 0,
                minute: 0,
                second: 0,
                isDate: !1,
                timezone: "Z"
            }), ICAL.Time._cmp_attr = function(a, b, attr) {
                return a[attr] > b[attr] ? 1 : a[attr] < b[attr] ? -1 : 0;
            }, ICAL.Time.daysInYearPassedMonth = [ [ 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365 ], [ 0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366 ] ], 
            ICAL.Time.SUNDAY = 1, ICAL.Time.MONDAY = 2, ICAL.Time.TUESDAY = 3, ICAL.Time.WEDNESDAY = 4, 
            ICAL.Time.THURSDAY = 5, ICAL.Time.FRIDAY = 6, ICAL.Time.SATURDAY = 7, ICAL.Time.DEFAULT_WEEK_START = ICAL.Time.MONDAY;
        }(), function() {
            ICAL.VCardTime = function(data, zone, icaltype) {
                this.wrappedJSObject = this;
                var time = this._time = Object.create(null);
                time.year = null, time.month = null, time.day = null, time.hour = null, time.minute = null, 
                time.second = null, this.icaltype = icaltype || "date-and-or-time", this.fromData(data, zone);
            }, ICAL.helpers.inherits(ICAL.Time, ICAL.VCardTime, {
                icalclass: "vcardtime",
                icaltype: "date-and-or-time",
                zone: null,
                clone: function() {
                    return new ICAL.VCardTime(this._time, this.zone, this.icaltype);
                },
                _normalize: function() {
                    return this;
                },
                utcOffset: function() {
                    return this.zone instanceof ICAL.UtcOffset ? this.zone.toSeconds() : ICAL.Time.prototype.utcOffset.apply(this, arguments);
                },
                toICALString: function() {
                    return ICAL.design.vcard.value[this.icaltype].toICAL(this.toString());
                },
                toString: function() {
                    var zone, p2 = ICAL.helpers.pad2, y = this.year, m = this.month, d = this.day, h = this.hour, mm = this.minute, s = this.second, hasMonth = null !== m, hasDay = null !== d, hasHour = null !== h, hasMinute = null !== mm, hasSecond = null !== s, datepart = (null !== y ? p2(y) + (hasMonth || hasDay ? "-" : "") : hasMonth || hasDay ? "--" : "") + (hasMonth ? p2(m) : "") + (hasDay ? "-" + p2(d) : ""), timepart = (hasHour ? p2(h) : "-") + (hasHour && hasMinute ? ":" : "") + (hasMinute ? p2(mm) : "") + (hasHour || hasMinute ? "" : "-") + (hasMinute && hasSecond ? ":" : "") + (hasSecond ? p2(s) : "");
                    switch (zone = this.zone === ICAL.Timezone.utcTimezone ? "Z" : this.zone instanceof ICAL.UtcOffset ? this.zone.toString() : this.zone === ICAL.Timezone.localTimezone ? "" : this.zone instanceof ICAL.Timezone ? ICAL.UtcOffset.fromSeconds(this.zone.utcOffset(this)).toString() : "", 
                    this.icaltype) {
                      case "time":
                        return timepart + zone;

                      case "date-and-or-time":
                      case "date-time":
                        return datepart + ("--" == timepart ? "" : "T" + timepart + zone);

                      case "date":
                        return datepart;
                    }
                    return null;
                }
            }), ICAL.VCardTime.fromDateAndOrTimeString = function(aValue, aIcalType) {
                function part(v, s, e) {
                    return v ? ICAL.helpers.strictParseInt(v.substr(s, e)) : null;
                }
                var parts = aValue.split("T"), dt = parts[0], tmz = parts[1], splitzone = tmz ? ICAL.design.vcard.value.time._splitZone(tmz) : [], zone = splitzone[0], tm = splitzone[1], dtlen = (ICAL.helpers.strictParseInt, 
                dt ? dt.length : 0), tmlen = tm ? tm.length : 0, hasDashDate = dt && "-" == dt[0] && "-" == dt[1], hasDashTime = tm && "-" == tm[0], o = {
                    year: hasDashDate ? null : part(dt, 0, 4),
                    month: !hasDashDate || 4 != dtlen && 7 != dtlen ? 7 == dtlen ? part(dt, 5, 2) : 10 == dtlen ? part(dt, 5, 2) : null : part(dt, 2, 2),
                    day: 5 == dtlen ? part(dt, 3, 2) : 7 == dtlen && hasDashDate ? part(dt, 5, 2) : 10 == dtlen ? part(dt, 8, 2) : null,
                    hour: hasDashTime ? null : part(tm, 0, 2),
                    minute: hasDashTime && 3 == tmlen ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,
                    second: 4 == tmlen ? part(tm, 2, 2) : 6 == tmlen ? part(tm, 4, 2) : 8 == tmlen ? part(tm, 6, 2) : null
                };
                return zone = "Z" == zone ? ICAL.Timezone.utcTimezone : zone && ":" == zone[3] ? ICAL.UtcOffset.fromString(zone) : null, 
                new ICAL.VCardTime(o, zone, aIcalType);
            };
        }(), function() {
            function parseNumericValue(type, min, max, value) {
                var result = value;
                if ("+" === value[0] && (result = value.substr(1)), result = ICAL.helpers.strictParseInt(result), 
                void 0 !== min && value < min) throw new Error(type + ': invalid value "' + value + '" must be > ' + min);
                if (void 0 !== max && value > max) throw new Error(type + ': invalid value "' + value + '" must be < ' + min);
                return result;
            }
            var DOW_MAP = {
                SU: ICAL.Time.SUNDAY,
                MO: ICAL.Time.MONDAY,
                TU: ICAL.Time.TUESDAY,
                WE: ICAL.Time.WEDNESDAY,
                TH: ICAL.Time.THURSDAY,
                FR: ICAL.Time.FRIDAY,
                SA: ICAL.Time.SATURDAY
            }, REVERSE_DOW_MAP = {};
            for (var key in DOW_MAP) DOW_MAP.hasOwnProperty(key) && (REVERSE_DOW_MAP[DOW_MAP[key]] = key);
            ICAL.Recur = function(data) {
                this.wrappedJSObject = this, this.parts = {}, data && "object" == typeof data && this.fromData(data);
            }, ICAL.Recur.prototype = {
                parts: null,
                interval: 1,
                wkst: ICAL.Time.MONDAY,
                until: null,
                count: null,
                freq: null,
                icalclass: "icalrecur",
                icaltype: "recur",
                iterator: function(aStart) {
                    return new ICAL.RecurIterator({
                        rule: this,
                        dtstart: aStart
                    });
                },
                clone: function() {
                    return new ICAL.Recur(this.toJSON());
                },
                isFinite: function() {
                    return !(!this.count && !this.until);
                },
                isByCount: function() {
                    return !(!this.count || this.until);
                },
                addComponent: function(aType, aValue) {
                    var ucname = aType.toUpperCase();
                    ucname in this.parts ? this.parts[ucname].push(aValue) : this.parts[ucname] = [ aValue ];
                },
                setComponent: function(aType, aValues) {
                    this.parts[aType.toUpperCase()] = aValues.slice();
                },
                getComponent: function(aType) {
                    var ucname = aType.toUpperCase();
                    return ucname in this.parts ? this.parts[ucname].slice() : [];
                },
                getNextOccurrence: function(aStartTime, aRecurrenceId) {
                    var next, iter = this.iterator(aStartTime);
                    do {
                        next = iter.next();
                    } while (next && next.compare(aRecurrenceId) <= 0);
                    return next && aRecurrenceId.zone && (next.zone = aRecurrenceId.zone), next;
                },
                fromData: function(data) {
                    for (var key in data) {
                        var uckey = key.toUpperCase();
                        uckey in partDesign ? Array.isArray(data[key]) ? this.parts[uckey] = data[key] : this.parts[uckey] = [ data[key] ] : this[key] = data[key];
                    }
                    this.wkst && "number" != typeof this.wkst && (this.wkst = ICAL.Recur.icalDayToNumericDay(this.wkst)), 
                    !this.until || this.until instanceof ICAL.Time || (this.until = ICAL.Time.fromString(this.until));
                },
                toJSON: function() {
                    var res = Object.create(null);
                    res.freq = this.freq, this.count && (res.count = this.count), this.interval > 1 && (res.interval = this.interval);
                    for (var k in this.parts) if (this.parts.hasOwnProperty(k)) {
                        var kparts = this.parts[k];
                        Array.isArray(kparts) && 1 == kparts.length ? res[k.toLowerCase()] = kparts[0] : res[k.toLowerCase()] = ICAL.helpers.clone(this.parts[k]);
                    }
                    return this.until && (res.until = this.until.toString()), "wkst" in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START && (res.wkst = ICAL.Recur.numericDayToIcalDay(this.wkst)), 
                    res;
                },
                toString: function() {
                    var str = "FREQ=" + this.freq;
                    this.count && (str += ";COUNT=" + this.count), this.interval > 1 && (str += ";INTERVAL=" + this.interval);
                    for (var k in this.parts) this.parts.hasOwnProperty(k) && (str += ";" + k + "=" + this.parts[k]);
                    return this.until && (str += ";UNTIL=" + this.until.toString()), "wkst" in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START && (str += ";WKST=" + ICAL.Recur.numericDayToIcalDay(this.wkst)), 
                    str;
                }
            }, ICAL.Recur.icalDayToNumericDay = function(string) {
                return DOW_MAP[string];
            }, ICAL.Recur.numericDayToIcalDay = function(num) {
                return REVERSE_DOW_MAP[num];
            };
            var VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/, VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/, ALLOWED_FREQ = [ "SECONDLY", "MINUTELY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "YEARLY" ], optionDesign = {
                FREQ: function(value, dict, fmtIcal) {
                    if (-1 === ALLOWED_FREQ.indexOf(value)) throw new Error('invalid frequency "' + value + '" expected: "' + ALLOWED_FREQ.join(", ") + '"');
                    dict.freq = value;
                },
                COUNT: function(value, dict, fmtIcal) {
                    dict.count = ICAL.helpers.strictParseInt(value);
                },
                INTERVAL: function(value, dict, fmtIcal) {
                    dict.interval = ICAL.helpers.strictParseInt(value), dict.interval < 1 && (dict.interval = 1);
                },
                UNTIL: function(value, dict, fmtIcal) {
                    fmtIcal ? value.length > 10 ? dict.until = ICAL.design.icalendar.value["date-time"].fromICAL(value) : dict.until = ICAL.design.icalendar.value.date.fromICAL(value) : dict.until = ICAL.Time.fromString(value);
                },
                WKST: function(value, dict, fmtIcal) {
                    if (!VALID_DAY_NAMES.test(value)) throw new Error('invalid WKST value "' + value + '"');
                    dict.wkst = ICAL.Recur.icalDayToNumericDay(value);
                }
            }, partDesign = {
                BYSECOND: parseNumericValue.bind(this, "BYSECOND", 0, 60),
                BYMINUTE: parseNumericValue.bind(this, "BYMINUTE", 0, 59),
                BYHOUR: parseNumericValue.bind(this, "BYHOUR", 0, 23),
                BYDAY: function(value) {
                    if (VALID_BYDAY_PART.test(value)) return value;
                    throw new Error('invalid BYDAY value "' + value + '"');
                },
                BYMONTHDAY: parseNumericValue.bind(this, "BYMONTHDAY", -31, 31),
                BYYEARDAY: parseNumericValue.bind(this, "BYYEARDAY", -366, 366),
                BYWEEKNO: parseNumericValue.bind(this, "BYWEEKNO", -53, 53),
                BYMONTH: parseNumericValue.bind(this, "BYMONTH", 0, 12),
                BYSETPOS: parseNumericValue.bind(this, "BYSETPOS", -366, 366)
            };
            ICAL.Recur.fromString = function(string) {
                var data = ICAL.Recur._stringToData(string, !1);
                return new ICAL.Recur(data);
            }, ICAL.Recur.fromData = function(aData) {
                return new ICAL.Recur(aData);
            }, ICAL.Recur._stringToData = function(string, fmtIcal) {
                for (var dict = Object.create(null), values = string.split(";"), len = values.length, i = 0; i < len; i++) {
                    var parts = values[i].split("="), ucname = parts[0].toUpperCase(), lcname = parts[0].toLowerCase(), name = fmtIcal ? lcname : ucname, value = parts[1];
                    if (ucname in partDesign) {
                        for (var partArr = value.split(","), partArrIdx = 0, partArrLen = partArr.length; partArrIdx < partArrLen; partArrIdx++) partArr[partArrIdx] = partDesign[ucname](partArr[partArrIdx]);
                        dict[name] = 1 == partArr.length ? partArr[0] : partArr;
                    } else ucname in optionDesign ? optionDesign[ucname](value, dict, fmtIcal) : dict[lcname] = value;
                }
                return dict;
            };
        }(), ICAL.RecurIterator = function() {
            function icalrecur_iterator(options) {
                this.fromData(options);
            }
            return icalrecur_iterator.prototype = {
                completed: !1,
                rule: null,
                dtstart: null,
                last: null,
                occurrence_number: 0,
                by_indices: null,
                initialized: !1,
                by_data: null,
                days: null,
                days_index: 0,
                fromData: function(options) {
                    if (this.rule = ICAL.helpers.formatClassType(options.rule, ICAL.Recur), !this.rule) throw new Error("iterator requires a (ICAL.Recur) rule");
                    if (this.dtstart = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time), !this.dtstart) throw new Error("iterator requires a (ICAL.Time) dtstart");
                    options.by_data ? this.by_data = options.by_data : this.by_data = ICAL.helpers.clone(this.rule.parts, !0), 
                    options.occurrence_number && (this.occurrence_number = options.occurrence_number), 
                    this.days = options.days || [], options.last && (this.last = ICAL.helpers.formatClassType(options.last, ICAL.Time)), 
                    this.by_indices = options.by_indices, this.by_indices || (this.by_indices = {
                        BYSECOND: 0,
                        BYMINUTE: 0,
                        BYHOUR: 0,
                        BYDAY: 0,
                        BYMONTH: 0,
                        BYWEEKNO: 0,
                        BYMONTHDAY: 0
                    }), this.initialized = options.initialized || !1, this.initialized || this.init();
                },
                init: function() {
                    this.initialized = !0, this.last = this.dtstart.clone();
                    var parts = this.by_data;
                    if ("BYDAY" in parts && this.sort_byday_rules(parts.BYDAY, this.rule.wkst), "BYYEARDAY" in parts && ("BYMONTH" in parts || "BYWEEKNO" in parts || "BYMONTHDAY" in parts || "BYDAY" in parts)) throw new Error("Invalid BYYEARDAY rule");
                    if ("BYWEEKNO" in parts && "BYMONTHDAY" in parts) throw new Error("BYWEEKNO does not fit to BYMONTHDAY");
                    if ("MONTHLY" == this.rule.freq && ("BYYEARDAY" in parts || "BYWEEKNO" in parts)) throw new Error("For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear");
                    if ("WEEKLY" == this.rule.freq && ("BYYEARDAY" in parts || "BYMONTHDAY" in parts)) throw new Error("For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear");
                    if ("YEARLY" != this.rule.freq && "BYYEARDAY" in parts) throw new Error("BYYEARDAY may only appear in YEARLY rules");
                    if (this.last.second = this.setup_defaults("BYSECOND", "SECONDLY", this.dtstart.second), 
                    this.last.minute = this.setup_defaults("BYMINUTE", "MINUTELY", this.dtstart.minute), 
                    this.last.hour = this.setup_defaults("BYHOUR", "HOURLY", this.dtstart.hour), this.last.day = this.setup_defaults("BYMONTHDAY", "DAILY", this.dtstart.day), 
                    this.last.month = this.setup_defaults("BYMONTH", "MONTHLY", this.dtstart.month), 
                    "WEEKLY" == this.rule.freq) if ("BYDAY" in parts) {
                        var pos = (bydayParts = this.ruleDayOfWeek(parts.BYDAY[0]))[0], wkdy = (dow = bydayParts[1]) - this.last.dayOfWeek();
                        (this.last.dayOfWeek() < dow && wkdy >= 0 || wkdy < 0) && (this.last.day += wkdy);
                    } else {
                        var dayName = ICAL.Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());
                        parts.BYDAY = [ dayName ];
                    }
                    if ("YEARLY" == this.rule.freq) {
                        for (;this.expand_year_days(this.last.year), !(this.days.length > 0); ) this.increment_year(this.rule.interval);
                        this._nextByYearDay();
                    }
                    if ("MONTHLY" == this.rule.freq && this.has_by_data("BYDAY")) {
                        var tempLast = null, initLast = this.last.clone(), daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);
                        for (var i in this.by_data.BYDAY) if (this.by_data.BYDAY.hasOwnProperty(i)) {
                            this.last = initLast.clone();
                            var bydayParts = this.ruleDayOfWeek(this.by_data.BYDAY[i]), pos = bydayParts[0], dow = bydayParts[1], dayOfMonth = this.last.nthWeekDay(dow, pos);
                            if (pos >= 6 || pos <= -6) throw new Error("Malformed values in BYDAY part");
                            if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {
                                if (tempLast && tempLast.month == initLast.month) continue;
                                for (;dayOfMonth > daysInMonth || dayOfMonth <= 0; ) this.increment_month(), daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year), 
                                dayOfMonth = this.last.nthWeekDay(dow, pos);
                            }
                            this.last.day = dayOfMonth, (!tempLast || this.last.compare(tempLast) < 0) && (tempLast = this.last.clone());
                        }
                        if (this.last = tempLast.clone(), this.has_by_data("BYMONTHDAY") && this._byDayAndMonthDay(!0), 
                        this.last.day > daysInMonth || 0 == this.last.day) throw new Error("Malformed values in BYDAY part");
                    } else if (this.has_by_data("BYMONTHDAY") && this.last.day < 0) {
                        daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);
                        this.last.day = daysInMonth + this.last.day + 1;
                    }
                },
                next: function() {
                    var before = this.last ? this.last.clone() : null;
                    if (this.rule.count && this.occurrence_number >= this.rule.count || this.rule.until && this.last.compare(this.rule.until) > 0) return this.completed = !0, 
                    null;
                    if (0 == this.occurrence_number && this.last.compare(this.dtstart) >= 0) return this.occurrence_number++, 
                    this.last;
                    var valid;
                    do {
                        switch (valid = 1, this.rule.freq) {
                          case "SECONDLY":
                            this.next_second();
                            break;

                          case "MINUTELY":
                            this.next_minute();
                            break;

                          case "HOURLY":
                            this.next_hour();
                            break;

                          case "DAILY":
                            this.next_day();
                            break;

                          case "WEEKLY":
                            this.next_week();
                            break;

                          case "MONTHLY":
                            valid = this.next_month();
                            break;

                          case "YEARLY":
                            this.next_year();
                            break;

                          default:
                            return null;
                        }
                    } while (!this.check_contracting_rules() || this.last.compare(this.dtstart) < 0 || !valid);
                    if (0 == this.last.compare(before)) throw new Error("Same occurrence found twice, protecting you from death by recursion");
                    return this.rule.until && this.last.compare(this.rule.until) > 0 ? (this.completed = !0, 
                    null) : (this.occurrence_number++, this.last);
                },
                next_second: function() {
                    return this.next_generic("BYSECOND", "SECONDLY", "second", "minute");
                },
                increment_second: function(inc) {
                    return this.increment_generic(inc, "second", 60, "minute");
                },
                next_minute: function() {
                    return this.next_generic("BYMINUTE", "MINUTELY", "minute", "hour", "next_second");
                },
                increment_minute: function(inc) {
                    return this.increment_generic(inc, "minute", 60, "hour");
                },
                next_hour: function() {
                    return this.next_generic("BYHOUR", "HOURLY", "hour", "monthday", "next_minute");
                },
                increment_hour: function(inc) {
                    this.increment_generic(inc, "hour", 24, "monthday");
                },
                next_day: function() {
                    this.by_data;
                    var this_freq = "DAILY" == this.rule.freq;
                    return 0 == this.next_hour() ? 0 : (this_freq ? this.increment_monthday(this.rule.interval) : this.increment_monthday(1), 
                    0);
                },
                next_week: function() {
                    var end_of_data = 0;
                    if (0 == this.next_weekday_by_week()) return end_of_data;
                    if (this.has_by_data("BYWEEKNO")) {
                        ++this.by_indices.BYWEEKNO;
                        this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length && (this.by_indices.BYWEEKNO = 0, 
                        end_of_data = 1), this.last.month = 1, this.last.day = 1;
                        var week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];
                        this.last.day += 7 * week_no, end_of_data && this.increment_year(1);
                    } else this.increment_monthday(7 * this.rule.interval);
                    return end_of_data;
                },
                normalizeByMonthDayRules: function(year, month, rules) {
                    for (var rule, daysInMonth = ICAL.Time.daysInMonth(month, year), newRules = [], ruleIdx = 0, len = rules.length; ruleIdx < len; ruleIdx++) if (rule = rules[ruleIdx], 
                    !(Math.abs(rule) > daysInMonth)) {
                        if (rule < 0) rule = daysInMonth + (rule + 1); else if (0 === rule) continue;
                        -1 === newRules.indexOf(rule) && newRules.push(rule);
                    }
                    return newRules.sort(function(a, b) {
                        return a - b;
                    });
                },
                _byDayAndMonthDay: function(isInit) {
                    function initMonth() {
                        for (daysInMonth = ICAL.Time.daysInMonth(self.last.month, self.last.year), byMonthDay = self.normalizeByMonthDayRules(self.last.year, self.last.month, self.by_data.BYMONTHDAY), 
                        dateLen = byMonthDay.length; byMonthDay[dateIdx] <= lastDay && (!isInit || byMonthDay[dateIdx] != lastDay) && dateIdx < dateLen - 1; ) dateIdx++;
                    }
                    function nextMonth() {
                        lastDay = 0, self.increment_month(), dateIdx = 0, initMonth();
                    }
                    var byMonthDay, date, dateLen, daysInMonth, byDay = this.by_data.BYDAY, dateIdx = 0, dayLen = byDay.length, dataIsValid = 0, self = this, lastDay = this.last.day;
                    initMonth(), isInit && (lastDay -= 1);
                    for (var monthsCounter = 48; !dataIsValid && monthsCounter; ) if (monthsCounter--, 
                    (date = lastDay + 1) > daysInMonth) nextMonth(); else {
                        var next = byMonthDay[dateIdx++];
                        if (next >= date) {
                            lastDay = next;
                            for (var dayIdx = 0; dayIdx < dayLen; dayIdx++) {
                                var parts = this.ruleDayOfWeek(byDay[dayIdx]), pos = parts[0], dow = parts[1];
                                if (this.last.day = lastDay, this.last.isNthWeekDay(dow, pos)) {
                                    dataIsValid = 1;
                                    break;
                                }
                            }
                            dataIsValid || dateIdx !== dateLen || nextMonth();
                        } else nextMonth();
                    }
                    if (monthsCounter <= 0) throw new Error("Malformed values in BYDAY combined with BYMONTHDAY parts");
                    return dataIsValid;
                },
                next_month: function() {
                    this.rule.freq;
                    var data_valid = 1;
                    if (0 == this.next_hour()) return data_valid;
                    if (this.has_by_data("BYDAY") && this.has_by_data("BYMONTHDAY")) data_valid = this._byDayAndMonthDay(); else if (this.has_by_data("BYDAY")) {
                        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year), setpos = 0, setpos_total = 0;
                        if (this.has_by_data("BYSETPOS")) {
                            for (var last_day = this.last.day, day = 1; day <= daysInMonth; day++) this.last.day = day, 
                            this.is_day_in_byday(this.last) && (setpos_total++, day <= last_day && setpos++);
                            this.last.day = last_day;
                        }
                        data_valid = 0;
                        for (day = this.last.day + 1; day <= daysInMonth; day++) if (this.last.day = day, 
                        this.is_day_in_byday(this.last) && (!this.has_by_data("BYSETPOS") || this.check_set_position(++setpos) || this.check_set_position(setpos - setpos_total - 1))) {
                            data_valid = 1;
                            break;
                        }
                        day > daysInMonth && (this.last.day = 1, this.increment_month(), this.is_day_in_byday(this.last) ? this.has_by_data("BYSETPOS") && !this.check_set_position(1) || (data_valid = 1) : data_valid = 0);
                    } else if (this.has_by_data("BYMONTHDAY")) {
                        ++this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length && (this.by_indices.BYMONTHDAY = 0, 
                        this.increment_month());
                        daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);
                        (day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY]) < 0 && (day = daysInMonth + day + 1), 
                        day > daysInMonth ? (this.last.day = 1, data_valid = this.is_day_in_byday(this.last)) : this.last.day = day;
                    } else {
                        this.increment_month();
                        daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);
                        this.by_data.BYMONTHDAY[0] > daysInMonth ? data_valid = 0 : this.last.day = this.by_data.BYMONTHDAY[0];
                    }
                    return data_valid;
                },
                next_weekday_by_week: function() {
                    var end_of_data = 0;
                    if (0 == this.next_hour()) return end_of_data;
                    if (!this.has_by_data("BYDAY")) return 1;
                    for (;;) {
                        var tt = new ICAL.Time();
                        ++this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length && (this.by_indices.BYDAY = 0, 
                        end_of_data = 1);
                        var coded_day = this.by_data.BYDAY[this.by_indices.BYDAY], dow = this.ruleDayOfWeek(coded_day)[1];
                        (dow -= this.rule.wkst) < 0 && (dow += 7), tt.year = this.last.year, tt.month = this.last.month, 
                        tt.day = this.last.day;
                        var startOfWeek = tt.startDoyWeek(this.rule.wkst);
                        if (!(dow + startOfWeek < 1) || end_of_data) {
                            var next = ICAL.Time.fromDayOfYear(startOfWeek + dow, this.last.year);
                            return this.last.year = next.year, this.last.month = next.month, this.last.day = next.day, 
                            end_of_data;
                        }
                    }
                },
                next_year: function() {
                    if (0 == this.next_hour()) return 0;
                    if (++this.days_index == this.days.length) {
                        this.days_index = 0;
                        do {
                            this.increment_year(this.rule.interval), this.expand_year_days(this.last.year);
                        } while (0 == this.days.length);
                    }
                    return this._nextByYearDay(), 1;
                },
                _nextByYearDay: function() {
                    var doy = this.days[this.days_index], year = this.last.year;
                    doy < 1 && (doy += 1, year += 1);
                    var next = ICAL.Time.fromDayOfYear(doy, year);
                    this.last.day = next.day, this.last.month = next.month;
                },
                ruleDayOfWeek: function(dow) {
                    var matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);
                    if (matches) {
                        var pos = parseInt(matches[1] || 0, 10);
                        return dow = ICAL.Recur.icalDayToNumericDay(matches[2]), [ pos, dow ];
                    }
                    return [ 0, 0 ];
                },
                next_generic: function(aRuleType, aInterval, aDateAttr, aFollowingAttr, aPreviousIncr) {
                    var has_by_rule = aRuleType in this.by_data, this_freq = this.rule.freq == aInterval, end_of_data = 0;
                    if (aPreviousIncr && 0 == this[aPreviousIncr]()) return end_of_data;
                    if (has_by_rule) {
                        ++this.by_indices[aRuleType];
                        var dta = this.by_data[aRuleType];
                        this.by_indices[aRuleType] == dta.length && (this.by_indices[aRuleType] = 0, end_of_data = 1), 
                        this.last[aDateAttr] = dta[this.by_indices[aRuleType]];
                    } else this_freq && this["increment_" + aDateAttr](this.rule.interval);
                    return has_by_rule && end_of_data && this_freq && this["increment_" + aFollowingAttr](1), 
                    end_of_data;
                },
                increment_monthday: function(inc) {
                    for (var i = 0; i < inc; i++) {
                        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);
                        ++this.last.day > daysInMonth && (this.last.day -= daysInMonth, this.increment_month());
                    }
                },
                increment_month: function() {
                    if (this.last.day = 1, this.has_by_data("BYMONTH")) ++this.by_indices.BYMONTH == this.by_data.BYMONTH.length && (this.by_indices.BYMONTH = 0, 
                    this.increment_year(1)), this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH]; else {
                        "MONTHLY" == this.rule.freq ? this.last.month += this.rule.interval : this.last.month++, 
                        this.last.month--;
                        var years = ICAL.helpers.trunc(this.last.month / 12);
                        this.last.month %= 12, this.last.month++, 0 != years && this.increment_year(years);
                    }
                },
                increment_year: function(inc) {
                    this.last.year += inc;
                },
                increment_generic: function(inc, aDateAttr, aFactor, aNextIncrement) {
                    this.last[aDateAttr] += inc;
                    var nextunit = ICAL.helpers.trunc(this.last[aDateAttr] / aFactor);
                    this.last[aDateAttr] %= aFactor, 0 != nextunit && this["increment_" + aNextIncrement](nextunit);
                },
                has_by_data: function(aRuleType) {
                    return aRuleType in this.rule.parts;
                },
                expand_year_days: function(aYear) {
                    var t = new ICAL.Time();
                    this.days = [];
                    var parts = {}, rules = [ "BYDAY", "BYWEEKNO", "BYMONTHDAY", "BYMONTH", "BYYEARDAY" ];
                    for (var p in rules) if (rules.hasOwnProperty(p)) {
                        var part = rules[p];
                        part in this.rule.parts && (parts[part] = this.rule.parts[part]);
                    }
                    if ("BYMONTH" in parts && "BYWEEKNO" in parts) {
                        var valid = 1, validWeeks = {};
                        t.year = aYear, t.isDate = !0;
                        for (var monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {
                            month = this.by_data.BYMONTH[monthIdx];
                            t.month = month, t.day = 1;
                            var first_week = t.weekNumber(this.rule.wkst);
                            t.day = ICAL.Time.daysInMonth(month, aYear);
                            var last_week = t.weekNumber(this.rule.wkst);
                            for (monthIdx = first_week; monthIdx < last_week; monthIdx++) validWeeks[monthIdx] = 1;
                        }
                        for (var weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) (weekno = this.by_data.BYWEEKNO[weekIdx]) < 52 ? valid &= validWeeks[weekIdx] : valid = 0;
                        valid ? delete parts.BYMONTH : delete parts.BYWEEKNO;
                    }
                    var partCount = Object.keys(parts).length;
                    if (0 == partCount) {
                        var t1 = this.dtstart.clone();
                        t1.year = this.last.year, this.days.push(t1.dayOfYear());
                    } else if (1 == partCount && "BYMONTH" in parts) {
                        for (var monthkey in this.by_data.BYMONTH) if (this.by_data.BYMONTH.hasOwnProperty(monthkey)) {
                            var t2 = this.dtstart.clone();
                            t2.year = aYear, t2.month = this.by_data.BYMONTH[monthkey], t2.isDate = !0, this.days.push(t2.dayOfYear());
                        }
                    } else if (1 == partCount && "BYMONTHDAY" in parts) {
                        for (var monthdaykey in this.by_data.BYMONTHDAY) if (this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {
                            var t3 = this.dtstart.clone();
                            (day_ = this.by_data.BYMONTHDAY[monthdaykey]) < 0 && (day_ = day_ + (daysInMonth = ICAL.Time.daysInMonth(t3.month, aYear)) + 1), 
                            t3.day = day_, t3.year = aYear, t3.isDate = !0, this.days.push(t3.dayOfYear());
                        }
                    } else if (2 == partCount && "BYMONTHDAY" in parts && "BYMONTH" in parts) {
                        for (var monthkey in this.by_data.BYMONTH) if (this.by_data.BYMONTH.hasOwnProperty(monthkey)) {
                            var month_ = this.by_data.BYMONTH[monthkey], daysInMonth = ICAL.Time.daysInMonth(month_, aYear);
                            for (var monthdaykey in this.by_data.BYMONTHDAY) if (this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {
                                var day_ = this.by_data.BYMONTHDAY[monthdaykey];
                                day_ < 0 && (day_ = day_ + daysInMonth + 1), t.day = day_, t.month = month_, t.year = aYear, 
                                t.isDate = !0, this.days.push(t.dayOfYear());
                            }
                        }
                    } else if (1 == partCount && "BYWEEKNO" in parts) ; else if (2 == partCount && "BYWEEKNO" in parts && "BYMONTHDAY" in parts) ; else if (1 == partCount && "BYDAY" in parts) this.days = this.days.concat(this.expand_by_day(aYear)); else if (2 == partCount && "BYDAY" in parts && "BYMONTH" in parts) {
                        for (var monthkey in this.by_data.BYMONTH) if (this.by_data.BYMONTH.hasOwnProperty(monthkey)) {
                            var month = this.by_data.BYMONTH[monthkey], daysInMonth = ICAL.Time.daysInMonth(month, aYear);
                            t.year = aYear, t.month = this.by_data.BYMONTH[monthkey], t.day = 1, t.isDate = !0;
                            var first_dow = t.dayOfWeek(), doy_offset = t.dayOfYear() - 1;
                            t.day = daysInMonth;
                            var last_dow = t.dayOfWeek();
                            if (this.has_by_data("BYSETPOS")) {
                                for (var by_month_day = [], day = 1; day <= daysInMonth; day++) t.day = day, this.is_day_in_byday(t) && by_month_day.push(day);
                                for (var spIndex = 0; spIndex < by_month_day.length; spIndex++) (this.check_set_position(spIndex + 1) || this.check_set_position(spIndex - by_month_day.length)) && this.days.push(doy_offset + by_month_day[spIndex]);
                            } else for (var daycodedkey in this.by_data.BYDAY) if (this.by_data.BYDAY.hasOwnProperty(daycodedkey)) {
                                var month_day, coded_day = this.by_data.BYDAY[daycodedkey], bydayParts = this.ruleDayOfWeek(coded_day), pos = bydayParts[0], dow = bydayParts[1], first_matching_day = (dow + 7 - first_dow) % 7 + 1, last_matching_day = daysInMonth - (last_dow + 7 - dow) % 7;
                                if (0 == pos) for (day = first_matching_day; day <= daysInMonth; day += 7) this.days.push(doy_offset + day); else pos > 0 ? (month_day = first_matching_day + 7 * (pos - 1)) <= daysInMonth && this.days.push(doy_offset + month_day) : (month_day = last_matching_day + 7 * (pos + 1)) > 0 && this.days.push(doy_offset + month_day);
                            }
                        }
                        this.days.sort(function(a, b) {
                            return a - b;
                        });
                    } else if (2 == partCount && "BYDAY" in parts && "BYMONTHDAY" in parts) {
                        expandedDays = this.expand_by_day(aYear);
                        for (var daykey in expandedDays) if (expandedDays.hasOwnProperty(daykey)) {
                            var day = expandedDays[daykey], tt = ICAL.Time.fromDayOfYear(day, aYear);
                            this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0 && this.days.push(day);
                        }
                    } else if (3 == partCount && "BYDAY" in parts && "BYMONTHDAY" in parts && "BYMONTH" in parts) {
                        expandedDays = this.expand_by_day(aYear);
                        for (var daykey in expandedDays) if (expandedDays.hasOwnProperty(daykey)) {
                            var day = expandedDays[daykey], tt = ICAL.Time.fromDayOfYear(day, aYear);
                            this.by_data.BYMONTH.indexOf(tt.month) >= 0 && this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0 && this.days.push(day);
                        }
                    } else if (2 == partCount && "BYDAY" in parts && "BYWEEKNO" in parts) {
                        var expandedDays = this.expand_by_day(aYear);
                        for (var daykey in expandedDays) if (expandedDays.hasOwnProperty(daykey)) {
                            var day = expandedDays[daykey], weekno = (tt = ICAL.Time.fromDayOfYear(day, aYear)).weekNumber(this.rule.wkst);
                            this.by_data.BYWEEKNO.indexOf(weekno) && this.days.push(day);
                        }
                    } else 3 == partCount && "BYDAY" in parts && "BYWEEKNO" in parts && "BYMONTHDAY" in parts || (this.days = 1 == partCount && "BYYEARDAY" in parts ? this.days.concat(this.by_data.BYYEARDAY) : []);
                    return 0;
                },
                expand_by_day: function(aYear) {
                    var days_list = [], tmp = this.last.clone();
                    tmp.year = aYear, tmp.month = 1, tmp.day = 1, tmp.isDate = !0;
                    var start_dow = tmp.dayOfWeek();
                    tmp.month = 12, tmp.day = 31, tmp.isDate = !0;
                    var end_dow = tmp.dayOfWeek(), end_year_day = tmp.dayOfYear();
                    for (var daykey in this.by_data.BYDAY) if (this.by_data.BYDAY.hasOwnProperty(daykey)) {
                        var day = this.by_data.BYDAY[daykey], parts = this.ruleDayOfWeek(day), pos = parts[0], dow = parts[1];
                        if (0 == pos) for (var doy = (dow + 7 - start_dow) % 7 + 1; doy <= end_year_day; doy += 7) days_list.push(doy); else if (pos > 0) {
                            var first;
                            first = dow >= start_dow ? dow - start_dow + 1 : dow - start_dow + 8, days_list.push(first + 7 * (pos - 1));
                        } else {
                            var last;
                            pos = -pos, last = dow <= end_dow ? end_year_day - end_dow + dow : end_year_day - end_dow + dow - 7, 
                            days_list.push(last - 7 * (pos - 1));
                        }
                    }
                    return days_list;
                },
                is_day_in_byday: function(tt) {
                    for (var daykey in this.by_data.BYDAY) if (this.by_data.BYDAY.hasOwnProperty(daykey)) {
                        var day = this.by_data.BYDAY[daykey], parts = this.ruleDayOfWeek(day), pos = parts[0], dow = parts[1], this_dow = tt.dayOfWeek();
                        if (0 == pos && dow == this_dow || tt.nthWeekDay(dow, pos) == tt.day) return 1;
                    }
                    return 0;
                },
                check_set_position: function(aPos) {
                    return !!this.has_by_data("BYSETPOS") && -1 !== this.by_data.BYSETPOS.indexOf(aPos);
                },
                sort_byday_rules: function(aRules, aWeekStart) {
                    for (var i = 0; i < aRules.length; i++) for (var j = 0; j < i; j++) {
                        var one = this.ruleDayOfWeek(aRules[j])[1], two = this.ruleDayOfWeek(aRules[i])[1];
                        if (one -= aWeekStart, two -= aWeekStart, one < 0 && (one += 7), two < 0 && (two += 7), 
                        one > two) {
                            var tmp = aRules[i];
                            aRules[i] = aRules[j], aRules[j] = tmp;
                        }
                    }
                },
                check_contract_restriction: function(aRuleType, v) {
                    var indexMapValue = icalrecur_iterator._indexMap[aRuleType], ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue], pass = !1;
                    if (aRuleType in this.by_data && ruleMapValue == icalrecur_iterator.CONTRACT) {
                        var ruleType = this.by_data[aRuleType];
                        for (var bydatakey in ruleType) if (ruleType.hasOwnProperty(bydatakey) && ruleType[bydatakey] == v) {
                            pass = !0;
                            break;
                        }
                    } else pass = !0;
                    return pass;
                },
                check_contracting_rules: function() {
                    var dow = this.last.dayOfWeek(), weekNo = this.last.weekNumber(this.rule.wkst), doy = this.last.dayOfYear();
                    return this.check_contract_restriction("BYSECOND", this.last.second) && this.check_contract_restriction("BYMINUTE", this.last.minute) && this.check_contract_restriction("BYHOUR", this.last.hour) && this.check_contract_restriction("BYDAY", ICAL.Recur.numericDayToIcalDay(dow)) && this.check_contract_restriction("BYWEEKNO", weekNo) && this.check_contract_restriction("BYMONTHDAY", this.last.day) && this.check_contract_restriction("BYMONTH", this.last.month) && this.check_contract_restriction("BYYEARDAY", doy);
                },
                setup_defaults: function(aRuleType, req, deftime) {
                    var indexMapValue = icalrecur_iterator._indexMap[aRuleType];
                    return icalrecur_iterator._expandMap[this.rule.freq][indexMapValue] != icalrecur_iterator.CONTRACT && (aRuleType in this.by_data || (this.by_data[aRuleType] = [ deftime ]), 
                    this.rule.freq != req) ? this.by_data[aRuleType][0] : deftime;
                },
                toJSON: function() {
                    var result = Object.create(null);
                    return result.initialized = this.initialized, result.rule = this.rule.toJSON(), 
                    result.dtstart = this.dtstart.toJSON(), result.by_data = this.by_data, result.days = this.days, 
                    result.last = this.last.toJSON(), result.by_indices = this.by_indices, result.occurrence_number = this.occurrence_number, 
                    result;
                }
            }, icalrecur_iterator._indexMap = {
                BYSECOND: 0,
                BYMINUTE: 1,
                BYHOUR: 2,
                BYDAY: 3,
                BYMONTHDAY: 4,
                BYYEARDAY: 5,
                BYWEEKNO: 6,
                BYMONTH: 7,
                BYSETPOS: 8
            }, icalrecur_iterator._expandMap = {
                SECONDLY: [ 1, 1, 1, 1, 1, 1, 1, 1 ],
                MINUTELY: [ 2, 1, 1, 1, 1, 1, 1, 1 ],
                HOURLY: [ 2, 2, 1, 1, 1, 1, 1, 1 ],
                DAILY: [ 2, 2, 2, 1, 1, 1, 1, 1 ],
                WEEKLY: [ 2, 2, 2, 2, 3, 3, 1, 1 ],
                MONTHLY: [ 2, 2, 2, 2, 2, 3, 3, 1 ],
                YEARLY: [ 2, 2, 2, 2, 2, 2, 2, 2 ]
            }, icalrecur_iterator.UNKNOWN = 0, icalrecur_iterator.CONTRACT = 1, icalrecur_iterator.EXPAND = 2, 
            icalrecur_iterator.ILLEGAL = 3, icalrecur_iterator;
        }(), ICAL.RecurExpansion = function() {
            function formatTime(item) {
                return ICAL.helpers.formatClassType(item, ICAL.Time);
            }
            function compareTime(a, b) {
                return a.compare(b);
            }
            function isRecurringComponent(comp) {
                return comp.hasProperty("rdate") || comp.hasProperty("rrule") || comp.hasProperty("recurrence-id");
            }
            function RecurExpansion(options) {
                this.ruleDates = [], this.exDates = [], this.fromData(options);
            }
            return RecurExpansion.prototype = {
                complete: !1,
                ruleIterators: null,
                ruleDates: null,
                exDates: null,
                ruleDateInc: 0,
                exDateInc: 0,
                exDate: null,
                ruleDate: null,
                dtstart: null,
                last: null,
                fromData: function(options) {
                    var start = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);
                    if (!start) throw new Error(".dtstart (ICAL.Time) must be given");
                    if (this.dtstart = start, options.component) this._init(options.component); else {
                        if (this.last = formatTime(options.last) || start.clone(), !options.ruleIterators) throw new Error(".ruleIterators or .component must be given");
                        this.ruleIterators = options.ruleIterators.map(function(item) {
                            return ICAL.helpers.formatClassType(item, ICAL.RecurIterator);
                        }), this.ruleDateInc = options.ruleDateInc, this.exDateInc = options.exDateInc, 
                        options.ruleDates && (this.ruleDates = options.ruleDates.map(formatTime), this.ruleDate = this.ruleDates[this.ruleDateInc]), 
                        options.exDates && (this.exDates = options.exDates.map(formatTime), this.exDate = this.exDates[this.exDateInc]), 
                        void 0 !== options.complete && (this.complete = options.complete);
                    }
                },
                next: function() {
                    for (var iter, next, compare, currentTry = 0; ;) {
                        if (currentTry++ > 500) throw new Error("max tries have occured, rule may be impossible to forfill.");
                        if (next = this.ruleDate, iter = this._nextRecurrenceIter(this.last), !next && !iter) {
                            this.complete = !0;
                            break;
                        }
                        if ((!next || iter && next.compare(iter.last) > 0) && (next = iter.last.clone(), 
                        iter.next()), this.ruleDate === next && this._nextRuleDay(), this.last = next, !this.exDate || ((compare = this.exDate.compare(this.last)) < 0 && this._nextExDay(), 
                        0 !== compare)) return this.last;
                        this._nextExDay();
                    }
                },
                toJSON: function() {
                    function toJSON(item) {
                        return item.toJSON();
                    }
                    var result = Object.create(null);
                    return result.ruleIterators = this.ruleIterators.map(toJSON), this.ruleDates && (result.ruleDates = this.ruleDates.map(toJSON)), 
                    this.exDates && (result.exDates = this.exDates.map(toJSON)), result.ruleDateInc = this.ruleDateInc, 
                    result.exDateInc = this.exDateInc, result.last = this.last.toJSON(), result.dtstart = this.dtstart.toJSON(), 
                    result.complete = this.complete, result;
                },
                _extractDates: function(component, propertyName) {
                    function handleProp(prop) {
                        idx = ICAL.helpers.binsearchInsert(result, prop, compareTime), result.splice(idx, 0, prop);
                    }
                    for (var idx, result = [], props = component.getAllProperties(propertyName), len = props.length, i = 0; i < len; i++) props[i].getValues().forEach(handleProp);
                    return result;
                },
                _init: function(component) {
                    if (this.ruleIterators = [], this.last = this.dtstart.clone(), !isRecurringComponent(component)) return this.ruleDate = this.last.clone(), 
                    void (this.complete = !0);
                    if (component.hasProperty("rdate") && (this.ruleDates = this._extractDates(component, "rdate"), 
                    this.ruleDates[0] && this.ruleDates[0].compare(this.dtstart) < 0 ? (this.ruleDateInc = 0, 
                    this.last = this.ruleDates[0].clone()) : this.ruleDateInc = ICAL.helpers.binsearchInsert(this.ruleDates, this.last, compareTime), 
                    this.ruleDate = this.ruleDates[this.ruleDateInc]), component.hasProperty("rrule")) for (var iter, rules = component.getAllProperties("rrule"), i = 0, len = rules.length; i < len; i++) iter = rules[i].getFirstValue().iterator(this.dtstart), 
                    this.ruleIterators.push(iter), iter.next();
                    component.hasProperty("exdate") && (this.exDates = this._extractDates(component, "exdate"), 
                    this.exDateInc = ICAL.helpers.binsearchInsert(this.exDates, this.last, compareTime), 
                    this.exDate = this.exDates[this.exDateInc]);
                },
                _nextExDay: function() {
                    this.exDate = this.exDates[++this.exDateInc];
                },
                _nextRuleDay: function() {
                    this.ruleDate = this.ruleDates[++this.ruleDateInc];
                },
                _nextRecurrenceIter: function() {
                    var iters = this.ruleIterators;
                    if (0 === iters.length) return null;
                    for (var iter, iterTime, chosenIter, len = iters.length, iterIdx = 0; iterIdx < len; iterIdx++) iterTime = (iter = iters[iterIdx]).last, 
                    iter.completed ? (len--, 0 !== iterIdx && iterIdx--, iters.splice(iterIdx, 1)) : (!chosenIter || chosenIter.last.compare(iterTime) > 0) && (chosenIter = iter);
                    return chosenIter;
                }
            }, RecurExpansion;
        }(), ICAL.Event = function() {
            function Event(component, options) {
                component instanceof ICAL.Component || (options = component, component = null), 
                this.component = component || new ICAL.Component("vevent"), this._rangeExceptionCache = Object.create(null), 
                this.exceptions = Object.create(null), this.rangeExceptions = [], options && options.strictExceptions && (this.strictExceptions = options.strictExceptions), 
                options && options.exceptions && options.exceptions.forEach(this.relateException, this);
            }
            function compareRangeException(a, b) {
                return a[0] > b[0] ? 1 : b[0] > a[0] ? -1 : 0;
            }
            return Event.prototype = {
                THISANDFUTURE: "THISANDFUTURE",
                exceptions: null,
                strictExceptions: !1,
                relateException: function(obj) {
                    if (this.isRecurrenceException()) throw new Error("cannot relate exception to exceptions");
                    if (obj instanceof ICAL.Component && (obj = new ICAL.Event(obj)), this.strictExceptions && obj.uid !== this.uid) throw new Error("attempted to relate unrelated exception");
                    var id = obj.recurrenceId.toString();
                    if (this.exceptions[id] = obj, obj.modifiesFuture()) {
                        var item = [ obj.recurrenceId.toUnixTime(), id ], idx = ICAL.helpers.binsearchInsert(this.rangeExceptions, item, compareRangeException);
                        this.rangeExceptions.splice(idx, 0, item);
                    }
                },
                modifiesFuture: function() {
                    return this.component.getFirstPropertyValue("range") === this.THISANDFUTURE;
                },
                findRangeException: function(time) {
                    if (!this.rangeExceptions.length) return null;
                    var utc = time.toUnixTime(), idx = ICAL.helpers.binsearchInsert(this.rangeExceptions, [ utc ], compareRangeException);
                    if ((idx -= 1) < 0) return null;
                    var rangeItem = this.rangeExceptions[idx];
                    return utc < rangeItem[0] ? null : rangeItem[1];
                },
                getOccurrenceDetails: function(occurrence) {
                    var item, id = occurrence.toString(), utcId = occurrence.convertToZone(ICAL.Timezone.utcTimezone).toString(), result = {
                        recurrenceId: occurrence
                    };
                    if (id in this.exceptions) item = result.item = this.exceptions[id], result.startDate = item.startDate, 
                    result.endDate = item.endDate, result.item = item; else if (utcId in this.exceptions) item = this.exceptions[utcId], 
                    result.startDate = item.startDate, result.endDate = item.endDate, result.item = item; else {
                        var end, rangeExceptionId = this.findRangeException(occurrence);
                        if (rangeExceptionId) {
                            var exception = this.exceptions[rangeExceptionId];
                            result.item = exception;
                            var startDiff = this._rangeExceptionCache[rangeExceptionId];
                            if (!startDiff) {
                                var original = exception.recurrenceId.clone(), newStart = exception.startDate.clone();
                                original.zone = newStart.zone, startDiff = newStart.subtractDate(original), this._rangeExceptionCache[rangeExceptionId] = startDiff;
                            }
                            var start = occurrence.clone();
                            start.zone = exception.startDate.zone, start.addDuration(startDiff), (end = start.clone()).addDuration(exception.duration), 
                            result.startDate = start, result.endDate = end;
                        } else (end = occurrence.clone()).addDuration(this.duration), result.endDate = end, 
                        result.startDate = occurrence, result.item = this;
                    }
                    return result;
                },
                iterator: function(startTime) {
                    return new ICAL.RecurExpansion({
                        component: this.component,
                        dtstart: startTime || this.startDate
                    });
                },
                isRecurring: function() {
                    var comp = this.component;
                    return comp.hasProperty("rrule") || comp.hasProperty("rdate");
                },
                isRecurrenceException: function() {
                    return this.component.hasProperty("recurrence-id");
                },
                getRecurrenceTypes: function() {
                    for (var rules = this.component.getAllProperties("rrule"), i = 0, len = rules.length, result = Object.create(null); i < len; i++) result[rules[i].getFirstValue().freq] = !0;
                    return result;
                },
                get uid() {
                    return this._firstProp("uid");
                },
                set uid(value) {
                    this._setProp("uid", value);
                },
                get startDate() {
                    return this._firstProp("dtstart");
                },
                set startDate(value) {
                    this._setTime("dtstart", value);
                },
                get endDate() {
                    var endDate = this._firstProp("dtend");
                    if (!endDate) {
                        var duration = this._firstProp("duration");
                        endDate = this.startDate.clone(), duration ? endDate.addDuration(duration) : endDate.isDate && (endDate.day += 1);
                    }
                    return endDate;
                },
                set endDate(value) {
                    this._setTime("dtend", value);
                },
                get duration() {
                    var duration = this._firstProp("duration");
                    return duration || this.endDate.subtractDate(this.startDate);
                },
                get location() {
                    return this._firstProp("location");
                },
                set location(value) {
                    return this._setProp("location", value);
                },
                get attendees() {
                    return this.component.getAllProperties("attendee");
                },
                get summary() {
                    return this._firstProp("summary");
                },
                set summary(value) {
                    this._setProp("summary", value);
                },
                get description() {
                    return this._firstProp("description");
                },
                set description(value) {
                    this._setProp("description", value);
                },
                get organizer() {
                    return this._firstProp("organizer");
                },
                set organizer(value) {
                    this._setProp("organizer", value);
                },
                get sequence() {
                    return this._firstProp("sequence");
                },
                set sequence(value) {
                    this._setProp("sequence", value);
                },
                get recurrenceId() {
                    return this._firstProp("recurrence-id");
                },
                set recurrenceId(value) {
                    this._setProp("recurrence-id", value);
                },
                _setTime: function(propName, time) {
                    var prop = this.component.getFirstProperty(propName);
                    prop || (prop = new ICAL.Property(propName), this.component.addProperty(prop)), 
                    time.zone === ICAL.Timezone.localTimezone || time.zone === ICAL.Timezone.utcTimezone ? prop.removeParameter("tzid") : prop.setParameter("tzid", time.zone.tzid), 
                    prop.setValue(time);
                },
                _setProp: function(name, value) {
                    this.component.updatePropertyWithValue(name, value);
                },
                _firstProp: function(name) {
                    return this.component.getFirstPropertyValue(name);
                },
                toString: function() {
                    return this.component.toString();
                }
            }, Event;
        }(), ICAL.ComponentParser = function() {
            function ComponentParser(options) {
                void 0 === options && (options = {});
                var key;
                for (key in options) options.hasOwnProperty(key) && (this[key] = options[key]);
            }
            return ComponentParser.prototype = {
                parseEvent: !0,
                parseTimezone: !0,
                oncomplete: function() {},
                onerror: function(err) {},
                ontimezone: function(component) {},
                onevent: function(component) {},
                process: function(ical) {
                    "string" == typeof ical && (ical = ICAL.parse(ical)), ical instanceof ICAL.Component || (ical = new ICAL.Component(ical));
                    for (var component, components = ical.getAllSubcomponents(), i = 0, len = components.length; i < len; i++) switch ((component = components[i]).name) {
                      case "vtimezone":
                        if (this.parseTimezone) {
                            var tzid = component.getFirstPropertyValue("tzid");
                            tzid && this.ontimezone(new ICAL.Timezone({
                                tzid: tzid,
                                component: component
                            }));
                        }
                        break;

                      case "vevent":
                        this.parseEvent && this.onevent(new ICAL.Event(component));
                        break;

                      default:
                        continue;
                    }
                    this.oncomplete();
                }
            }, ComponentParser;
        }();
    }(), _retrieveGlobal();
}), function() {
    (0, System.amdDefine)("calendar/ical/parser.js", [ "3rdparty/ical.js" ], function(ical) {
        return ical.parse;
    });
}(), function() {
    (0, System.amdDefine)("calendar/fallbackTimezone.js", [ "calendar/ical/Component.js", "calendar/ical/TimeZoneService.js", "calendar/ical/parser.js" ], function(Component, TimeZoneService, icalParser) {
        var vtimezone = new Component(icalParser("BEGIN:VCALENDAR\r\nVERSION:2.0\r\nCALSCALE:GREGORIAN\r\nPRODID:-//one.com//EN\r\nBEGIN:VTIMEZONE\r\nTZID:Etc/UTC\r\nX-LIC-LOCATION:Etc/UTC\r\nBEGIN:STANDARD\r\nDTSTART:18000101T000000\r\nRDATE:18000101T000000\r\nTZNAME:UTC\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nEND:STANDARD\r\nEND:VTIMEZONE\r\nEND:VCALENDAR\r\n")).getFirstSubcomponent("vtimezone");
        return TimeZoneService.register(vtimezone), TimeZoneService.get("Etc/UTC");
    });
}(), function() {
    var define = System.amdDefine;
    !function() {
        !function(undefined) {
            var window = this || (0, eval)("this"), document = window.document, navigator = window.navigator, jQueryInstance = window.jQuery, JSON = window.JSON;
            !function(factory) {
                "function" == typeof define && define.amd ? define("node_modules/knockout/build/output/knockout-latest.debug.js", [ "exports", "require" ], factory) : factory("object" == typeof exports && "object" == typeof module ? module.exports || exports : window.ko = {});
            }(function(koExports, amdRequire) {
                function valuesArePrimitiveAndEqual(a, b) {
                    return !!(null === a || typeof a in primitiveTypes) && a === b;
                }
                function throttle(callback, timeout) {
                    var timeoutInstance;
                    return function() {
                        timeoutInstance || (timeoutInstance = ko.utils.setTimeout(function() {
                            timeoutInstance = undefined, callback();
                        }, timeout));
                    };
                }
                function debounce(callback, timeout) {
                    var timeoutInstance;
                    return function() {
                        clearTimeout(timeoutInstance), timeoutInstance = ko.utils.setTimeout(callback, timeout);
                    };
                }
                function applyExtenders(requestedExtenders) {
                    var target = this;
                    return requestedExtenders && ko.utils.objectForEach(requestedExtenders, function(key, value) {
                        var extenderHandler = ko.extenders[key];
                        "function" == typeof extenderHandler && (target = extenderHandler(target, value) || target);
                    }), target;
                }
                function limitNotifySubscribers(value, event) {
                    event && event !== defaultEvent ? "beforeChange" === event ? this._limitBeforeChange(value) : this._origNotifySubscribers(value, event) : this._limitChange(value);
                }
                function computedDisposeDependencyCallback(id, entryToDispose) {
                    null !== entryToDispose && entryToDispose.dispose && entryToDispose.dispose();
                }
                function computedBeginDependencyDetectionCallback(subscribable, id) {
                    var computedObservable = this.computedObservable, state = computedObservable[computedState];
                    state.isDisposed || (this.disposalCount && this.disposalCandidates[id] ? (computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]), 
                    this.disposalCandidates[id] = null, --this.disposalCount) : state.dependencyTracking[id] || computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? {
                        _target: subscribable
                    } : computedObservable.subscribeToDependency(subscribable)));
                }
                function makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {
                    ko.bindingHandlers[bindingKey] = {
                        init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
                            var didDisplayOnLastUpdate, savedNodes;
                            return ko.computed(function() {
                                var rawValue = valueAccessor(), dataValue = ko.utils.unwrapObservable(rawValue), shouldDisplay = !isNot != !dataValue, isFirstRender = !savedNodes;
                                (isFirstRender || isWith || shouldDisplay !== didDisplayOnLastUpdate) && (isFirstRender && ko.computedContext.getDependenciesCount() && (savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), !0)), 
                                shouldDisplay ? (isFirstRender || ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes)), 
                                ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, rawValue) : bindingContext, element)) : ko.virtualElements.emptyNode(element), 
                                didDisplayOnLastUpdate = shouldDisplay);
                            }, null, {
                                disposeWhenNodeIsRemoved: element
                            }), {
                                controlsDescendantBindings: !0
                            };
                        }
                    }, ko.expressionRewriting.bindingRewriteValidators[bindingKey] = !1, ko.virtualElements.allowedBindings[bindingKey] = !0;
                }
                var ko = void 0 !== koExports ? koExports : {};
                ko.exportSymbol = function(koPath, object) {
                    for (var tokens = koPath.split("."), target = ko, i = 0; i < tokens.length - 1; i++) target = target[tokens[i]];
                    target[tokens[tokens.length - 1]] = object;
                }, ko.exportProperty = function(owner, publicName, object) {
                    owner[publicName] = object;
                }, ko.version = "3.4.1", ko.exportSymbol("version", ko.version), ko.options = {
                    deferUpdates: !1,
                    useOnlyNativeEvents: !1
                }, ko.utils = function() {
                    function objectForEach(obj, action) {
                        for (var prop in obj) obj.hasOwnProperty(prop) && action(prop, obj[prop]);
                    }
                    function extend(target, source) {
                        if (source) for (var prop in source) source.hasOwnProperty(prop) && (target[prop] = source[prop]);
                        return target;
                    }
                    function setPrototypeOf(obj, proto) {
                        return obj.__proto__ = proto, obj;
                    }
                    function isClickOnCheckableElement(element, eventType) {
                        if ("input" !== ko.utils.tagNameLower(element) || !element.type) return !1;
                        if ("click" != eventType.toLowerCase()) return !1;
                        var inputType = element.type;
                        return "checkbox" == inputType || "radio" == inputType;
                    }
                    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {
                        var addOrRemoveFn;
                        classNames && ("object" == typeof node.classList ? (addOrRemoveFn = node.classList[shouldHaveClass ? "add" : "remove"], 
                        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {
                            addOrRemoveFn.call(node.classList, className);
                        })) : "string" == typeof node.className.baseVal ? toggleObjectClassPropertyString(node.className, "baseVal", classNames, shouldHaveClass) : toggleObjectClassPropertyString(node, "className", classNames, shouldHaveClass));
                    }
                    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {
                        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];
                        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {
                            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);
                        }), obj[prop] = currentClassNames.join(" ");
                    }
                    var canSetPrototype = {
                        __proto__: []
                    } instanceof Array, knownEvents = {}, knownEventTypesByEventName = {};
                    knownEvents[navigator && /Firefox\/2/i.test(navigator.userAgent) ? "KeyboardEvent" : "UIEvents"] = [ "keyup", "keydown", "keypress" ], 
                    knownEvents.MouseEvents = [ "click", "dblclick", "mousedown", "mouseup", "mousemove", "mouseover", "mouseout", "mouseenter", "mouseleave" ], 
                    objectForEach(knownEvents, function(eventType, knownEventsForType) {
                        if (knownEventsForType.length) for (var i = 0, j = knownEventsForType.length; i < j; i++) knownEventTypesByEventName[knownEventsForType[i]] = eventType;
                    });
                    var eventsThatMustBeRegisteredUsingAttachEvent = {
                        propertychange: !0
                    }, ieVersion = document && function() {
                        for (var version = 3, div = document.createElement("div"), iElems = div.getElementsByTagName("i"); div.innerHTML = "\x3c!--[if gt IE " + ++version + "]><i></i><![endif]--\x3e", 
                        iElems[0]; ) ;
                        return version > 4 ? version : undefined;
                    }(), isIe6 = 6 === ieVersion, isIe7 = 7 === ieVersion, cssClassNameRegex = /\S+/g;
                    return {
                        fieldsIncludedWithJsonPost: [ "authenticity_token", /^__RequestVerificationToken(_.*)?$/ ],
                        arrayForEach: function(array, action) {
                            for (var i = 0, j = array.length; i < j; i++) action(array[i], i);
                        },
                        arrayIndexOf: function(array, item) {
                            if ("function" == typeof Array.prototype.indexOf) return Array.prototype.indexOf.call(array, item);
                            for (var i = 0, j = array.length; i < j; i++) if (array[i] === item) return i;
                            return -1;
                        },
                        arrayFirst: function(array, predicate, predicateOwner) {
                            for (var i = 0, j = array.length; i < j; i++) if (predicate.call(predicateOwner, array[i], i)) return array[i];
                            return null;
                        },
                        arrayRemoveItem: function(array, itemToRemove) {
                            var index = ko.utils.arrayIndexOf(array, itemToRemove);
                            index > 0 ? array.splice(index, 1) : 0 === index && array.shift();
                        },
                        arrayGetDistinctValues: function(array) {
                            for (var result = [], i = 0, j = (array = array || []).length; i < j; i++) ko.utils.arrayIndexOf(result, array[i]) < 0 && result.push(array[i]);
                            return result;
                        },
                        arrayMap: function(array, mapping) {
                            for (var result = [], i = 0, j = (array = array || []).length; i < j; i++) result.push(mapping(array[i], i));
                            return result;
                        },
                        arrayFilter: function(array, predicate) {
                            for (var result = [], i = 0, j = (array = array || []).length; i < j; i++) predicate(array[i], i) && result.push(array[i]);
                            return result;
                        },
                        arrayPushAll: function(array, valuesToPush) {
                            if (valuesToPush instanceof Array) array.push.apply(array, valuesToPush); else for (var i = 0, j = valuesToPush.length; i < j; i++) array.push(valuesToPush[i]);
                            return array;
                        },
                        addOrRemoveItem: function(array, value, included) {
                            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);
                            existingEntryIndex < 0 ? included && array.push(value) : included || array.splice(existingEntryIndex, 1);
                        },
                        canSetPrototype: canSetPrototype,
                        extend: extend,
                        setPrototypeOf: setPrototypeOf,
                        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,
                        objectForEach: objectForEach,
                        objectMap: function(source, mapping) {
                            if (!source) return source;
                            var target = {};
                            for (var prop in source) source.hasOwnProperty(prop) && (target[prop] = mapping(source[prop], prop, source));
                            return target;
                        },
                        emptyDomNode: function(domNode) {
                            for (;domNode.firstChild; ) ko.removeNode(domNode.firstChild);
                        },
                        moveCleanedNodesToContainerElement: function(nodes) {
                            for (var nodesArray = ko.utils.makeArray(nodes), container = (nodesArray[0] && nodesArray[0].ownerDocument || document).createElement("div"), i = 0, j = nodesArray.length; i < j; i++) container.appendChild(ko.cleanNode(nodesArray[i]));
                            return container;
                        },
                        cloneNodes: function(nodesArray, shouldCleanNodes) {
                            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {
                                var clonedNode = nodesArray[i].cloneNode(!0);
                                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);
                            }
                            return newNodesArray;
                        },
                        setDomNodeChildren: function(domNode, childNodes) {
                            if (ko.utils.emptyDomNode(domNode), childNodes) for (var i = 0, j = childNodes.length; i < j; i++) domNode.appendChild(childNodes[i]);
                        },
                        replaceDomNodes: function(nodeToReplaceOrNodeArray, newNodesArray) {
                            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [ nodeToReplaceOrNodeArray ] : nodeToReplaceOrNodeArray;
                            if (nodesToReplaceArray.length > 0) {
                                for (var insertionPoint = nodesToReplaceArray[0], parent = insertionPoint.parentNode, i = 0, j = newNodesArray.length; i < j; i++) parent.insertBefore(newNodesArray[i], insertionPoint);
                                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) ko.removeNode(nodesToReplaceArray[i]);
                            }
                        },
                        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {
                            if (continuousNodeArray.length) {
                                for (parentNode = 8 === parentNode.nodeType && parentNode.parentNode || parentNode; continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode; ) continuousNodeArray.splice(0, 1);
                                for (;continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode; ) continuousNodeArray.length--;
                                if (continuousNodeArray.length > 1) {
                                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];
                                    for (continuousNodeArray.length = 0; current !== last; ) continuousNodeArray.push(current), 
                                    current = current.nextSibling;
                                    continuousNodeArray.push(last);
                                }
                            }
                            return continuousNodeArray;
                        },
                        setOptionNodeSelectionState: function(optionNode, isSelected) {
                            ieVersion < 7 ? optionNode.setAttribute("selected", isSelected) : optionNode.selected = isSelected;
                        },
                        stringTrim: function(string) {
                            return null === string || string === undefined ? "" : string.trim ? string.trim() : string.toString().replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
                        },
                        stringStartsWith: function(string, startsWith) {
                            return string = string || "", !(startsWith.length > string.length) && string.substring(0, startsWith.length) === startsWith;
                        },
                        domNodeIsContainedBy: function(node, containedByNode) {
                            if (node === containedByNode) return !0;
                            if (11 === node.nodeType) return !1;
                            if (containedByNode.contains) return containedByNode.contains(3 === node.nodeType ? node.parentNode : node);
                            if (containedByNode.compareDocumentPosition) return 16 == (16 & containedByNode.compareDocumentPosition(node));
                            for (;node && node != containedByNode; ) node = node.parentNode;
                            return !!node;
                        },
                        domNodeIsAttachedToDocument: function(node) {
                            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);
                        },
                        anyDomNodeIsAttachedToDocument: function(nodes) {
                            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);
                        },
                        tagNameLower: function(element) {
                            return element && element.tagName && element.tagName.toLowerCase();
                        },
                        catchFunctionErrors: function(delegate) {
                            return ko.onError ? function() {
                                try {
                                    return delegate.apply(this, arguments);
                                } catch (e) {
                                    throw ko.onError && ko.onError(e), e;
                                }
                            } : delegate;
                        },
                        setTimeout: function(handler, timeout) {
                            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);
                        },
                        deferError: function(error) {
                            setTimeout(function() {
                                throw ko.onError && ko.onError(error), error;
                            }, 0);
                        },
                        registerEventHandler: function(element, eventType, handler) {
                            var wrappedHandler = ko.utils.catchFunctionErrors(handler), mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];
                            if (ko.options.useOnlyNativeEvents || mustUseAttachEvent || !jQueryInstance) if (mustUseAttachEvent || "function" != typeof element.addEventListener) {
                                if (void 0 === element.attachEvent) throw new Error("Browser doesn't support addEventListener or attachEvent");
                                var attachEventHandler = function(event) {
                                    wrappedHandler.call(element, event);
                                }, attachEventName = "on" + eventType;
                                element.attachEvent(attachEventName, attachEventHandler), ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                                    element.detachEvent(attachEventName, attachEventHandler);
                                });
                            } else element.addEventListener(eventType, wrappedHandler, !1); else jQueryInstance(element).bind(eventType, wrappedHandler);
                        },
                        triggerEvent: function(element, eventType) {
                            if (!element || !element.nodeType) throw new Error("element must be a DOM node when calling triggerEvent");
                            var useClickWorkaround = isClickOnCheckableElement(element, eventType);
                            if (ko.options.useOnlyNativeEvents || !jQueryInstance || useClickWorkaround) if ("function" == typeof document.createEvent) {
                                if ("function" != typeof element.dispatchEvent) throw new Error("The supplied element doesn't support dispatchEvent");
                                var eventCategory = knownEventTypesByEventName[eventType] || "HTMLEvents", event = document.createEvent(eventCategory);
                                event.initEvent(eventType, !0, !0, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, element), 
                                element.dispatchEvent(event);
                            } else if (useClickWorkaround && element.click) element.click(); else {
                                if (void 0 === element.fireEvent) throw new Error("Browser doesn't support triggering events");
                                element.fireEvent("on" + eventType);
                            } else jQueryInstance(element).trigger(eventType);
                        },
                        unwrapObservable: function(value) {
                            return ko.isObservable(value) ? value() : value;
                        },
                        peekObservable: function(value) {
                            return ko.isObservable(value) ? value.peek() : value;
                        },
                        toggleDomNodeCssClass: toggleDomNodeCssClass,
                        setTextContent: function(element, textContent) {
                            var value = ko.utils.unwrapObservable(textContent);
                            null !== value && value !== undefined || (value = "");
                            var innerTextNode = ko.virtualElements.firstChild(element);
                            !innerTextNode || 3 != innerTextNode.nodeType || ko.virtualElements.nextSibling(innerTextNode) ? ko.virtualElements.setDomNodeChildren(element, [ element.ownerDocument.createTextNode(value) ]) : innerTextNode.data = value, 
                            ko.utils.forceRefresh(element);
                        },
                        setElementName: function(element, name) {
                            if (element.name = name, ieVersion <= 7) try {
                                element.mergeAttributes(document.createElement("<input name='" + element.name + "'/>"), !1);
                            } catch (e) {}
                        },
                        forceRefresh: function(node) {
                            if (ieVersion >= 9) {
                                var elem = 1 == node.nodeType ? node : node.parentNode;
                                elem.style && (elem.style.zoom = elem.style.zoom);
                            }
                        },
                        ensureSelectElementIsRenderedCorrectly: function(selectElement) {
                            if (ieVersion) {
                                var originalWidth = selectElement.style.width;
                                selectElement.style.width = 0, selectElement.style.width = originalWidth;
                            }
                        },
                        range: function(min, max) {
                            min = ko.utils.unwrapObservable(min), max = ko.utils.unwrapObservable(max);
                            for (var result = [], i = min; i <= max; i++) result.push(i);
                            return result;
                        },
                        makeArray: function(arrayLikeObject) {
                            for (var result = [], i = 0, j = arrayLikeObject.length; i < j; i++) result.push(arrayLikeObject[i]);
                            return result;
                        },
                        createSymbolOrString: function(identifier) {
                            return identifier;
                        },
                        isIe6: isIe6,
                        isIe7: isIe7,
                        ieVersion: ieVersion,
                        getFormFields: function(form, fieldName) {
                            for (var fields = ko.utils.makeArray(form.getElementsByTagName("input")).concat(ko.utils.makeArray(form.getElementsByTagName("textarea"))), isMatchingField = "string" == typeof fieldName ? function(field) {
                                return field.name === fieldName;
                            } : function(field) {
                                return fieldName.test(field.name);
                            }, matches = [], i = fields.length - 1; i >= 0; i--) isMatchingField(fields[i]) && matches.push(fields[i]);
                            return matches;
                        },
                        parseJson: function(jsonString) {
                            return "string" == typeof jsonString && (jsonString = ko.utils.stringTrim(jsonString)) ? JSON && JSON.parse ? JSON.parse(jsonString) : new Function("return " + jsonString)() : null;
                        },
                        stringifyJson: function(data, replacer, space) {
                            if (!JSON || !JSON.stringify) throw new Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js");
                            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);
                        },
                        postJson: function(urlOrForm, data, options) {
                            var params = (options = options || {}).params || {}, includeFields = options.includeFields || this.fieldsIncludedWithJsonPost, url = urlOrForm;
                            if ("object" == typeof urlOrForm && "form" === ko.utils.tagNameLower(urlOrForm)) {
                                var originalForm = urlOrForm;
                                url = originalForm.action;
                                for (var i = includeFields.length - 1; i >= 0; i--) for (var fields = ko.utils.getFormFields(originalForm, includeFields[i]), j = fields.length - 1; j >= 0; j--) params[fields[j].name] = fields[j].value;
                            }
                            data = ko.utils.unwrapObservable(data);
                            var form = document.createElement("form");
                            form.style.display = "none", form.action = url, form.method = "post";
                            for (var key in data) {
                                var input = document.createElement("input");
                                input.type = "hidden", input.name = key, input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key])), 
                                form.appendChild(input);
                            }
                            objectForEach(params, function(key, value) {
                                var input = document.createElement("input");
                                input.type = "hidden", input.name = key, input.value = value, form.appendChild(input);
                            }), document.body.appendChild(form), options.submitter ? options.submitter(form) : form.submit(), 
                            setTimeout(function() {
                                form.parentNode.removeChild(form);
                            }, 0);
                        }
                    };
                }(), ko.exportSymbol("utils", ko.utils), ko.exportSymbol("utils.arrayForEach", ko.utils.arrayForEach), 
                ko.exportSymbol("utils.arrayFirst", ko.utils.arrayFirst), ko.exportSymbol("utils.arrayFilter", ko.utils.arrayFilter), 
                ko.exportSymbol("utils.arrayGetDistinctValues", ko.utils.arrayGetDistinctValues), 
                ko.exportSymbol("utils.arrayIndexOf", ko.utils.arrayIndexOf), ko.exportSymbol("utils.arrayMap", ko.utils.arrayMap), 
                ko.exportSymbol("utils.arrayPushAll", ko.utils.arrayPushAll), ko.exportSymbol("utils.arrayRemoveItem", ko.utils.arrayRemoveItem), 
                ko.exportSymbol("utils.extend", ko.utils.extend), ko.exportSymbol("utils.fieldsIncludedWithJsonPost", ko.utils.fieldsIncludedWithJsonPost), 
                ko.exportSymbol("utils.getFormFields", ko.utils.getFormFields), ko.exportSymbol("utils.peekObservable", ko.utils.peekObservable), 
                ko.exportSymbol("utils.postJson", ko.utils.postJson), ko.exportSymbol("utils.parseJson", ko.utils.parseJson), 
                ko.exportSymbol("utils.registerEventHandler", ko.utils.registerEventHandler), ko.exportSymbol("utils.stringifyJson", ko.utils.stringifyJson), 
                ko.exportSymbol("utils.range", ko.utils.range), ko.exportSymbol("utils.toggleDomNodeCssClass", ko.utils.toggleDomNodeCssClass), 
                ko.exportSymbol("utils.triggerEvent", ko.utils.triggerEvent), ko.exportSymbol("utils.unwrapObservable", ko.utils.unwrapObservable), 
                ko.exportSymbol("utils.objectForEach", ko.utils.objectForEach), ko.exportSymbol("utils.addOrRemoveItem", ko.utils.addOrRemoveItem), 
                ko.exportSymbol("utils.setTextContent", ko.utils.setTextContent), ko.exportSymbol("unwrap", ko.utils.unwrapObservable), 
                Function.prototype.bind || (Function.prototype.bind = function(object) {
                    var originalFunction = this;
                    if (1 === arguments.length) return function() {
                        return originalFunction.apply(object, arguments);
                    };
                    var partialArgs = Array.prototype.slice.call(arguments, 1);
                    return function() {
                        var args = partialArgs.slice(0);
                        return args.push.apply(args, arguments), originalFunction.apply(object, args);
                    };
                }), ko.utils.domData = new function() {
                    function getAll(node, createIfNotFound) {
                        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];
                        if (!(dataStoreKey && "null" !== dataStoreKey && dataStore[dataStoreKey])) {
                            if (!createIfNotFound) return undefined;
                            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = "ko" + uniqueId++, dataStore[dataStoreKey] = {};
                        }
                        return dataStore[dataStoreKey];
                    }
                    var uniqueId = 0, dataStoreKeyExpandoPropertyName = "__ko__" + new Date().getTime(), dataStore = {};
                    return {
                        get: function(node, key) {
                            var allDataForNode = getAll(node, !1);
                            return allDataForNode === undefined ? undefined : allDataForNode[key];
                        },
                        set: function(node, key, value) {
                            value === undefined && getAll(node, !1) === undefined || (getAll(node, !0)[key] = value);
                        },
                        clear: function(node) {
                            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];
                            return !!dataStoreKey && (delete dataStore[dataStoreKey], node[dataStoreKeyExpandoPropertyName] = null, 
                            !0);
                        },
                        nextKey: function() {
                            return uniqueId++ + dataStoreKeyExpandoPropertyName;
                        }
                    };
                }(), ko.exportSymbol("utils.domData", ko.utils.domData), ko.exportSymbol("utils.domData.clear", ko.utils.domData.clear), 
                ko.utils.domNodeDisposal = new function() {
                    function getDisposeCallbacksCollection(node, createIfNotFound) {
                        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);
                        return allDisposeCallbacks === undefined && createIfNotFound && (allDisposeCallbacks = [], 
                        ko.utils.domData.set(node, domDataKey, allDisposeCallbacks)), allDisposeCallbacks;
                    }
                    function destroyCallbacksCollection(node) {
                        ko.utils.domData.set(node, domDataKey, undefined);
                    }
                    function cleanSingleNode(node) {
                        var callbacks = getDisposeCallbacksCollection(node, !1);
                        if (callbacks) {
                            callbacks = callbacks.slice(0);
                            for (var i = 0; i < callbacks.length; i++) callbacks[i](node);
                        }
                        ko.utils.domData.clear(node), ko.utils.domNodeDisposal.cleanExternalData(node), 
                        cleanableNodeTypesWithDescendants[node.nodeType] && cleanImmediateCommentTypeChildren(node);
                    }
                    function cleanImmediateCommentTypeChildren(nodeWithChildren) {
                        for (var child, nextChild = nodeWithChildren.firstChild; child = nextChild; ) nextChild = child.nextSibling, 
                        8 === child.nodeType && cleanSingleNode(child);
                    }
                    var domDataKey = ko.utils.domData.nextKey(), cleanableNodeTypes = {
                        1: !0,
                        8: !0,
                        9: !0
                    }, cleanableNodeTypesWithDescendants = {
                        1: !0,
                        9: !0
                    };
                    return {
                        addDisposeCallback: function(node, callback) {
                            if ("function" != typeof callback) throw new Error("Callback must be a function");
                            getDisposeCallbacksCollection(node, !0).push(callback);
                        },
                        removeDisposeCallback: function(node, callback) {
                            var callbacksCollection = getDisposeCallbacksCollection(node, !1);
                            callbacksCollection && (ko.utils.arrayRemoveItem(callbacksCollection, callback), 
                            0 == callbacksCollection.length && destroyCallbacksCollection(node));
                        },
                        cleanNode: function(node) {
                            if (cleanableNodeTypes[node.nodeType] && (cleanSingleNode(node), cleanableNodeTypesWithDescendants[node.nodeType])) {
                                var descendants = [];
                                ko.utils.arrayPushAll(descendants, node.getElementsByTagName("*"));
                                for (var i = 0, j = descendants.length; i < j; i++) cleanSingleNode(descendants[i]);
                            }
                            return node;
                        },
                        removeNode: function(node) {
                            ko.cleanNode(node), node.parentNode && node.parentNode.removeChild(node);
                        },
                        cleanExternalData: function(node) {
                            jQueryInstance && "function" == typeof jQueryInstance.cleanData && jQueryInstance.cleanData([ node ]);
                        }
                    };
                }(), ko.cleanNode = ko.utils.domNodeDisposal.cleanNode, ko.removeNode = ko.utils.domNodeDisposal.removeNode, 
                ko.exportSymbol("cleanNode", ko.cleanNode), ko.exportSymbol("removeNode", ko.removeNode), 
                ko.exportSymbol("utils.domNodeDisposal", ko.utils.domNodeDisposal), ko.exportSymbol("utils.domNodeDisposal.addDisposeCallback", ko.utils.domNodeDisposal.addDisposeCallback), 
                ko.exportSymbol("utils.domNodeDisposal.removeDisposeCallback", ko.utils.domNodeDisposal.removeDisposeCallback), 
                function() {
                    function getWrap(tags) {
                        var m = tags.match(/^<([a-z]+)[ >]/);
                        return m && lookup[m[1]] || none;
                    }
                    function simpleHtmlParse(html, documentContext) {
                        documentContext || (documentContext = document);
                        var windowContext = documentContext.parentWindow || documentContext.defaultView || window, tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement("div"), wrap = getWrap(tags), depth = wrap[0], markup = "ignored<div>" + wrap[1] + html + wrap[2] + "</div>";
                        for ("function" == typeof windowContext.innerShiv ? div.appendChild(windowContext.innerShiv(markup)) : (mayRequireCreateElementHack && documentContext.appendChild(div), 
                        div.innerHTML = markup, mayRequireCreateElementHack && div.parentNode.removeChild(div)); depth--; ) div = div.lastChild;
                        return ko.utils.makeArray(div.lastChild.childNodes);
                    }
                    function jQueryHtmlParse(html, documentContext) {
                        if (jQueryInstance.parseHTML) return jQueryInstance.parseHTML(html, documentContext) || [];
                        var elems = jQueryInstance.clean([ html ], documentContext);
                        if (elems && elems[0]) {
                            for (var elem = elems[0]; elem.parentNode && 11 !== elem.parentNode.nodeType; ) elem = elem.parentNode;
                            elem.parentNode && elem.parentNode.removeChild(elem);
                        }
                        return elems;
                    }
                    var none = [ 0, "", "" ], table = [ 1, "<table>", "</table>" ], tr = [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ], select = [ 1, "<select multiple='multiple'>", "</select>" ], lookup = {
                        thead: table,
                        tbody: table,
                        tfoot: table,
                        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
                        td: tr,
                        th: tr,
                        option: select,
                        optgroup: select
                    }, mayRequireCreateElementHack = ko.utils.ieVersion <= 8;
                    ko.utils.parseHtmlFragment = function(html, documentContext) {
                        return jQueryInstance ? jQueryHtmlParse(html, documentContext) : simpleHtmlParse(html, documentContext);
                    }, ko.utils.setHtml = function(node, html) {
                        if (ko.utils.emptyDomNode(node), null !== (html = ko.utils.unwrapObservable(html)) && html !== undefined) if ("string" != typeof html && (html = html.toString()), 
                        jQueryInstance) jQueryInstance(node).html(html); else for (var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument), i = 0; i < parsedNodes.length; i++) node.appendChild(parsedNodes[i]);
                    };
                }(), ko.exportSymbol("utils.parseHtmlFragment", ko.utils.parseHtmlFragment), ko.exportSymbol("utils.setHtml", ko.utils.setHtml), 
                ko.memoization = function() {
                    function randomMax8HexChars() {
                        return (4294967296 * (1 + Math.random()) | 0).toString(16).substring(1);
                    }
                    function generateRandomId() {
                        return randomMax8HexChars() + randomMax8HexChars();
                    }
                    function findMemoNodes(rootNode, appendToArray) {
                        if (rootNode) if (8 == rootNode.nodeType) {
                            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);
                            null != memoId && appendToArray.push({
                                domNode: rootNode,
                                memoId: memoId
                            });
                        } else if (1 == rootNode.nodeType) for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++) findMemoNodes(childNodes[i], appendToArray);
                    }
                    var memos = {};
                    return {
                        memoize: function(callback) {
                            if ("function" != typeof callback) throw new Error("You can only pass a function to ko.memoization.memoize()");
                            var memoId = generateRandomId();
                            return memos[memoId] = callback, "\x3c!--[ko_memo:" + memoId + "]--\x3e";
                        },
                        unmemoize: function(memoId, callbackParams) {
                            var callback = memos[memoId];
                            if (callback === undefined) throw new Error("Couldn't find any memo with ID " + memoId + ". Perhaps it's already been unmemoized.");
                            try {
                                return callback.apply(null, callbackParams || []), !0;
                            } finally {
                                delete memos[memoId];
                            }
                        },
                        unmemoizeDomNodeAndDescendants: function(domNode, extraCallbackParamsArray) {
                            var memos = [];
                            findMemoNodes(domNode, memos);
                            for (var i = 0, j = memos.length; i < j; i++) {
                                var node = memos[i].domNode, combinedParams = [ node ];
                                extraCallbackParamsArray && ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray), 
                                ko.memoization.unmemoize(memos[i].memoId, combinedParams), node.nodeValue = "", 
                                node.parentNode && node.parentNode.removeChild(node);
                            }
                        },
                        parseMemoText: function(memoText) {
                            var match = memoText.match(/^\[ko_memo\:(.*?)\]$/);
                            return match ? match[1] : null;
                        }
                    };
                }(), ko.exportSymbol("memoization", ko.memoization), ko.exportSymbol("memoization.memoize", ko.memoization.memoize), 
                ko.exportSymbol("memoization.unmemoize", ko.memoization.unmemoize), ko.exportSymbol("memoization.parseMemoText", ko.memoization.parseMemoText), 
                ko.exportSymbol("memoization.unmemoizeDomNodeAndDescendants", ko.memoization.unmemoizeDomNodeAndDescendants), 
                ko.tasks = function() {
                    function processTasks() {
                        if (taskQueueLength) for (var task, mark = taskQueueLength, countMarks = 0; nextIndexToProcess < taskQueueLength; ) if (task = taskQueue[nextIndexToProcess++]) {
                            if (nextIndexToProcess > mark) {
                                if (++countMarks >= 5e3) {
                                    nextIndexToProcess = taskQueueLength, ko.utils.deferError(Error("'Too much recursion' after processing " + countMarks + " task groups."));
                                    break;
                                }
                                mark = taskQueueLength;
                            }
                            try {
                                task();
                            } catch (ex) {
                                ko.utils.deferError(ex);
                            }
                        }
                    }
                    function scheduledProcess() {
                        processTasks(), nextIndexToProcess = taskQueueLength = taskQueue.length = 0;
                    }
                    function scheduleTaskProcessing() {
                        ko.tasks.scheduler(scheduledProcess);
                    }
                    var taskQueue = [], taskQueueLength = 0, nextHandle = 1, nextIndexToProcess = 0;
                    return {
                        scheduler: window.MutationObserver ? function(callback) {
                            var div = document.createElement("div");
                            return new MutationObserver(callback).observe(div, {
                                attributes: !0
                            }), function() {
                                div.classList.toggle("foo");
                            };
                        }(scheduledProcess) : document && "onreadystatechange" in document.createElement("script") ? function(callback) {
                            var script = document.createElement("script");
                            script.onreadystatechange = function() {
                                script.onreadystatechange = null, document.documentElement.removeChild(script), 
                                script = null, callback();
                            }, document.documentElement.appendChild(script);
                        } : function(callback) {
                            setTimeout(callback, 0);
                        },
                        schedule: function(func) {
                            return taskQueueLength || scheduleTaskProcessing(), taskQueue[taskQueueLength++] = func, 
                            nextHandle++;
                        },
                        cancel: function(handle) {
                            var index = handle - (nextHandle - taskQueueLength);
                            index >= nextIndexToProcess && index < taskQueueLength && (taskQueue[index] = null);
                        },
                        resetForTesting: function() {
                            var length = taskQueueLength - nextIndexToProcess;
                            return nextIndexToProcess = taskQueueLength = taskQueue.length = 0, length;
                        },
                        runEarly: processTasks
                    };
                }(), ko.exportSymbol("tasks", ko.tasks), ko.exportSymbol("tasks.schedule", ko.tasks.schedule), 
                ko.exportSymbol("tasks.runEarly", ko.tasks.runEarly), ko.extenders = {
                    throttle: function(target, timeout) {
                        target.throttleEvaluation = timeout;
                        var writeTimeoutInstance = null;
                        return ko.dependentObservable({
                            read: target,
                            write: function(value) {
                                clearTimeout(writeTimeoutInstance), writeTimeoutInstance = ko.utils.setTimeout(function() {
                                    target(value);
                                }, timeout);
                            }
                        });
                    },
                    rateLimit: function(target, options) {
                        var timeout, method, limitFunction;
                        "number" == typeof options ? timeout = options : (timeout = options.timeout, method = options.method), 
                        target._deferUpdates = !1, limitFunction = "notifyWhenChangesStop" == method ? debounce : throttle, 
                        target.limit(function(callback) {
                            return limitFunction(callback, timeout);
                        });
                    },
                    deferred: function(target, options) {
                        if (!0 !== options) throw new Error("The 'deferred' extender only accepts the value 'true', because it is not supported to turn deferral off once enabled.");
                        target._deferUpdates || (target._deferUpdates = !0, target.limit(function(callback) {
                            var handle;
                            return function() {
                                ko.tasks.cancel(handle), handle = ko.tasks.schedule(callback), target.notifySubscribers(undefined, "dirty");
                            };
                        }));
                    },
                    notify: function(target, notifyWhen) {
                        target.equalityComparer = "always" == notifyWhen ? null : valuesArePrimitiveAndEqual;
                    }
                };
                var primitiveTypes = {
                    undefined: 1,
                    boolean: 1,
                    number: 1,
                    string: 1
                };
                ko.exportSymbol("extenders", ko.extenders), ko.subscription = function(target, callback, disposeCallback) {
                    this._target = target, this.callback = callback, this.disposeCallback = disposeCallback, 
                    this.isDisposed = !1, ko.exportProperty(this, "dispose", this.dispose);
                }, ko.subscription.prototype.dispose = function() {
                    this.isDisposed = !0, this.disposeCallback();
                }, ko.subscribable = function() {
                    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn), ko_subscribable_fn.init(this);
                };
                var defaultEvent = "change", ko_subscribable_fn = {
                    init: function(instance) {
                        instance._subscriptions = {}, instance._versionNumber = 1;
                    },
                    subscribe: function(callback, callbackTarget, event) {
                        var self = this;
                        event = event || defaultEvent;
                        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback, subscription = new ko.subscription(self, boundCallback, function() {
                            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription), self.afterSubscriptionRemove && self.afterSubscriptionRemove(event);
                        });
                        return self.beforeSubscriptionAdd && self.beforeSubscriptionAdd(event), self._subscriptions[event] || (self._subscriptions[event] = []), 
                        self._subscriptions[event].push(subscription), subscription;
                    },
                    notifySubscribers: function(valueToNotify, event) {
                        if ((event = event || defaultEvent) === defaultEvent && this.updateVersion(), this.hasSubscriptionsForEvent(event)) try {
                            ko.dependencyDetection.begin();
                            for (var subscription, a = this._subscriptions[event].slice(0), i = 0; subscription = a[i]; ++i) subscription.isDisposed || subscription.callback(valueToNotify);
                        } finally {
                            ko.dependencyDetection.end();
                        }
                    },
                    getVersion: function() {
                        return this._versionNumber;
                    },
                    hasChanged: function(versionToCheck) {
                        return this.getVersion() !== versionToCheck;
                    },
                    updateVersion: function() {
                        ++this._versionNumber;
                    },
                    limit: function(limitFunction) {
                        var ignoreBeforeChange, previousValue, pendingValue, self = this, selfIsObservable = ko.isObservable(self);
                        self._origNotifySubscribers || (self._origNotifySubscribers = self.notifySubscribers, 
                        self.notifySubscribers = limitNotifySubscribers);
                        var finish = limitFunction(function() {
                            self._notificationIsPending = !1, selfIsObservable && pendingValue === self && (pendingValue = self()), 
                            ignoreBeforeChange = !1, self.isDifferent(previousValue, pendingValue) && self._origNotifySubscribers(previousValue = pendingValue);
                        });
                        self._limitChange = function(value) {
                            self._notificationIsPending = ignoreBeforeChange = !0, pendingValue = value, finish();
                        }, self._limitBeforeChange = function(value) {
                            ignoreBeforeChange || (previousValue = value, self._origNotifySubscribers(value, "beforeChange"));
                        };
                    },
                    hasSubscriptionsForEvent: function(event) {
                        return this._subscriptions[event] && this._subscriptions[event].length;
                    },
                    getSubscriptionsCount: function(event) {
                        if (event) return this._subscriptions[event] && this._subscriptions[event].length || 0;
                        var total = 0;
                        return ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {
                            "dirty" !== eventName && (total += subscriptions.length);
                        }), total;
                    },
                    isDifferent: function(oldValue, newValue) {
                        return !this.equalityComparer || !this.equalityComparer(oldValue, newValue);
                    },
                    extend: applyExtenders
                };
                ko.exportProperty(ko_subscribable_fn, "subscribe", ko_subscribable_fn.subscribe), 
                ko.exportProperty(ko_subscribable_fn, "extend", ko_subscribable_fn.extend), ko.exportProperty(ko_subscribable_fn, "getSubscriptionsCount", ko_subscribable_fn.getSubscriptionsCount), 
                ko.utils.canSetPrototype && ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype), 
                ko.subscribable.fn = ko_subscribable_fn, ko.isSubscribable = function(instance) {
                    return null != instance && "function" == typeof instance.subscribe && "function" == typeof instance.notifySubscribers;
                }, ko.exportSymbol("subscribable", ko.subscribable), ko.exportSymbol("isSubscribable", ko.isSubscribable), 
                ko.computedContext = ko.dependencyDetection = function() {
                    function getId() {
                        return ++lastId;
                    }
                    function begin(options) {
                        outerFrames.push(currentFrame), currentFrame = options;
                    }
                    function end() {
                        currentFrame = outerFrames.pop();
                    }
                    var currentFrame, outerFrames = [], lastId = 0;
                    return {
                        begin: begin,
                        end: end,
                        registerDependency: function(subscribable) {
                            if (currentFrame) {
                                if (!ko.isSubscribable(subscribable)) throw new Error("Only subscribable things can act as dependencies");
                                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));
                            }
                        },
                        ignore: function(callback, callbackTarget, callbackArgs) {
                            try {
                                return begin(), callback.apply(callbackTarget, callbackArgs || []);
                            } finally {
                                end();
                            }
                        },
                        getDependenciesCount: function() {
                            if (currentFrame) return currentFrame.computed.getDependenciesCount();
                        },
                        isInitial: function() {
                            if (currentFrame) return currentFrame.isInitial;
                        }
                    };
                }(), ko.exportSymbol("computedContext", ko.computedContext), ko.exportSymbol("computedContext.getDependenciesCount", ko.computedContext.getDependenciesCount), 
                ko.exportSymbol("computedContext.isInitial", ko.computedContext.isInitial), ko.exportSymbol("ignoreDependencies", ko.ignoreDependencies = ko.dependencyDetection.ignore);
                var observableLatestValue = ko.utils.createSymbolOrString("_latestValue");
                ko.observable = function(initialValue) {
                    function observable() {
                        return arguments.length > 0 ? (observable.isDifferent(observable[observableLatestValue], arguments[0]) && (observable.valueWillMutate(), 
                        observable[observableLatestValue] = arguments[0], observable.valueHasMutated()), 
                        this) : (ko.dependencyDetection.registerDependency(observable), observable[observableLatestValue]);
                    }
                    return observable[observableLatestValue] = initialValue, ko.utils.canSetPrototype || ko.utils.extend(observable, ko.subscribable.fn), 
                    ko.subscribable.fn.init(observable), ko.utils.setPrototypeOfOrExtend(observable, observableFn), 
                    ko.options.deferUpdates && ko.extenders.deferred(observable, !0), observable;
                };
                var observableFn = {
                    equalityComparer: valuesArePrimitiveAndEqual,
                    peek: function() {
                        return this[observableLatestValue];
                    },
                    valueHasMutated: function() {
                        this.notifySubscribers(this[observableLatestValue]);
                    },
                    valueWillMutate: function() {
                        this.notifySubscribers(this[observableLatestValue], "beforeChange");
                    }
                };
                ko.utils.canSetPrototype && ko.utils.setPrototypeOf(observableFn, ko.subscribable.fn);
                var protoProperty = ko.observable.protoProperty = "__ko_proto__";
                observableFn[protoProperty] = ko.observable, ko.hasPrototype = function(instance, prototype) {
                    return null !== instance && instance !== undefined && instance[protoProperty] !== undefined && (instance[protoProperty] === prototype || ko.hasPrototype(instance[protoProperty], prototype));
                }, ko.isObservable = function(instance) {
                    return ko.hasPrototype(instance, ko.observable);
                }, ko.isWriteableObservable = function(instance) {
                    return "function" == typeof instance && instance[protoProperty] === ko.observable || !("function" != typeof instance || instance[protoProperty] !== ko.dependentObservable || !instance.hasWriteFunction);
                }, ko.exportSymbol("observable", ko.observable), ko.exportSymbol("isObservable", ko.isObservable), 
                ko.exportSymbol("isWriteableObservable", ko.isWriteableObservable), ko.exportSymbol("isWritableObservable", ko.isWriteableObservable), 
                ko.exportSymbol("observable.fn", observableFn), ko.exportProperty(observableFn, "peek", observableFn.peek), 
                ko.exportProperty(observableFn, "valueHasMutated", observableFn.valueHasMutated), 
                ko.exportProperty(observableFn, "valueWillMutate", observableFn.valueWillMutate), 
                ko.observableArray = function(initialValues) {
                    if ("object" != typeof (initialValues = initialValues || []) || !("length" in initialValues)) throw new Error("The argument passed when initializing an observable array must be an array, or null, or undefined.");
                    var result = ko.observable(initialValues);
                    return ko.utils.setPrototypeOfOrExtend(result, ko.observableArray.fn), result.extend({
                        trackArrayChanges: !0
                    });
                }, ko.observableArray.fn = {
                    remove: function(valueOrPredicate) {
                        for (var underlyingArray = this.peek(), removedValues = [], predicate = "function" != typeof valueOrPredicate || ko.isObservable(valueOrPredicate) ? function(value) {
                            return value === valueOrPredicate;
                        } : valueOrPredicate, i = 0; i < underlyingArray.length; i++) {
                            var value = underlyingArray[i];
                            predicate(value) && (0 === removedValues.length && this.valueWillMutate(), removedValues.push(value), 
                            underlyingArray.splice(i, 1), i--);
                        }
                        return removedValues.length && this.valueHasMutated(), removedValues;
                    },
                    removeAll: function(arrayOfValues) {
                        if (arrayOfValues === undefined) {
                            var underlyingArray = this.peek(), allValues = underlyingArray.slice(0);
                            return this.valueWillMutate(), underlyingArray.splice(0, underlyingArray.length), 
                            this.valueHasMutated(), allValues;
                        }
                        return arrayOfValues ? this.remove(function(value) {
                            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;
                        }) : [];
                    },
                    destroy: function(valueOrPredicate) {
                        var underlyingArray = this.peek(), predicate = "function" != typeof valueOrPredicate || ko.isObservable(valueOrPredicate) ? function(value) {
                            return value === valueOrPredicate;
                        } : valueOrPredicate;
                        this.valueWillMutate();
                        for (var i = underlyingArray.length - 1; i >= 0; i--) predicate(underlyingArray[i]) && (underlyingArray[i]._destroy = !0);
                        this.valueHasMutated();
                    },
                    destroyAll: function(arrayOfValues) {
                        return arrayOfValues === undefined ? this.destroy(function() {
                            return !0;
                        }) : arrayOfValues ? this.destroy(function(value) {
                            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;
                        }) : [];
                    },
                    indexOf: function(item) {
                        var underlyingArray = this();
                        return ko.utils.arrayIndexOf(underlyingArray, item);
                    },
                    replace: function(oldItem, newItem) {
                        var index = this.indexOf(oldItem);
                        index >= 0 && (this.valueWillMutate(), this.peek()[index] = newItem, this.valueHasMutated());
                    }
                }, ko.utils.canSetPrototype && ko.utils.setPrototypeOf(ko.observableArray.fn, ko.observable.fn), 
                ko.utils.arrayForEach([ "pop", "push", "reverse", "shift", "sort", "splice", "unshift" ], function(methodName) {
                    ko.observableArray.fn[methodName] = function() {
                        var underlyingArray = this.peek();
                        this.valueWillMutate(), this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);
                        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);
                        return this.valueHasMutated(), methodCallResult === underlyingArray ? this : methodCallResult;
                    };
                }), ko.utils.arrayForEach([ "slice" ], function(methodName) {
                    ko.observableArray.fn[methodName] = function() {
                        var underlyingArray = this();
                        return underlyingArray[methodName].apply(underlyingArray, arguments);
                    };
                }), ko.exportSymbol("observableArray", ko.observableArray);
                var arrayChangeEventName = "arrayChange";
                ko.extenders.trackArrayChanges = function(target, options) {
                    function trackChanges() {
                        if (!trackingChanges) {
                            trackingChanges = !0, underlyingNotifySubscribersFunction = target.notifySubscribers, 
                            target.notifySubscribers = function(valueToNotify, event) {
                                return event && event !== defaultEvent || ++pendingNotifications, underlyingNotifySubscribersFunction.apply(this, arguments);
                            };
                            var previousContents = [].concat(target.peek() || []);
                            cachedDiff = null, arrayChangeSubscription = target.subscribe(function(currentContents) {
                                if (currentContents = [].concat(currentContents || []), target.hasSubscriptionsForEvent(arrayChangeEventName)) var changes = getChanges(previousContents, currentContents);
                                previousContents = currentContents, cachedDiff = null, pendingNotifications = 0, 
                                changes && changes.length && target.notifySubscribers(changes, arrayChangeEventName);
                            });
                        }
                    }
                    function getChanges(previousContents, currentContents) {
                        return (!cachedDiff || pendingNotifications > 1) && (cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions)), 
                        cachedDiff;
                    }
                    if (target.compareArrayOptions = {}, options && "object" == typeof options && ko.utils.extend(target.compareArrayOptions, options), 
                    target.compareArrayOptions.sparse = !0, !target.cacheDiffForKnownOperation) {
                        var arrayChangeSubscription, underlyingNotifySubscribersFunction, trackingChanges = !1, cachedDiff = null, pendingNotifications = 0, underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd, underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;
                        target.beforeSubscriptionAdd = function(event) {
                            underlyingBeforeSubscriptionAddFunction && underlyingBeforeSubscriptionAddFunction.call(target, event), 
                            event === arrayChangeEventName && trackChanges();
                        }, target.afterSubscriptionRemove = function(event) {
                            underlyingAfterSubscriptionRemoveFunction && underlyingAfterSubscriptionRemoveFunction.call(target, event), 
                            event !== arrayChangeEventName || target.hasSubscriptionsForEvent(arrayChangeEventName) || (underlyingNotifySubscribersFunction && (target.notifySubscribers = underlyingNotifySubscribersFunction, 
                            underlyingNotifySubscribersFunction = undefined), arrayChangeSubscription.dispose(), 
                            trackingChanges = !1);
                        }, target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {
                            function pushDiff(status, value, index) {
                                return diff[diff.length] = {
                                    status: status,
                                    value: value,
                                    index: index
                                };
                            }
                            if (trackingChanges && !pendingNotifications) {
                                var diff = [], arrayLength = rawArray.length, argsLength = args.length, offset = 0;
                                switch (operationName) {
                                  case "push":
                                    offset = arrayLength;

                                  case "unshift":
                                    for (index = 0; index < argsLength; index++) pushDiff("added", args[index], offset + index);
                                    break;

                                  case "pop":
                                    offset = arrayLength - 1;

                                  case "shift":
                                    arrayLength && pushDiff("deleted", rawArray[offset], offset);
                                    break;

                                  case "splice":
                                    for (var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength), endDeleteIndex = 1 === argsLength ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength), endAddIndex = startIndex + argsLength - 2, endIndex = Math.max(endDeleteIndex, endAddIndex), additions = [], deletions = [], index = startIndex, argsIndex = 2; index < endIndex; ++index, 
                                    ++argsIndex) index < endDeleteIndex && deletions.push(pushDiff("deleted", rawArray[index], index)), 
                                    index < endAddIndex && additions.push(pushDiff("added", args[argsIndex], index));
                                    ko.utils.findMovesInArrayComparison(deletions, additions);
                                    break;

                                  default:
                                    return;
                                }
                                cachedDiff = diff;
                            }
                        };
                    }
                };
                var computedState = ko.utils.createSymbolOrString("_state");
                ko.computed = ko.dependentObservable = function(evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {
                    function computedObservable() {
                        if (arguments.length > 0) {
                            if ("function" != typeof writeFunction) throw new Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.");
                            return writeFunction.apply(state.evaluatorFunctionTarget, arguments), this;
                        }
                        return ko.dependencyDetection.registerDependency(computedObservable), (state.isStale || state.isSleeping && computedObservable.haveDependenciesChanged()) && computedObservable.evaluateImmediate(), 
                        state.latestValue;
                    }
                    if ("object" == typeof evaluatorFunctionOrOptions ? options = evaluatorFunctionOrOptions : (options = options || {}, 
                    evaluatorFunctionOrOptions && (options.read = evaluatorFunctionOrOptions)), "function" != typeof options.read) throw Error("Pass a function that returns the value of the ko.computed");
                    var writeFunction = options.write, state = {
                        latestValue: undefined,
                        isStale: !0,
                        isBeingEvaluated: !1,
                        suppressDisposalUntilDisposeWhenReturnsFalse: !1,
                        isDisposed: !1,
                        pure: !1,
                        isSleeping: !1,
                        readFunction: options.read,
                        evaluatorFunctionTarget: evaluatorFunctionTarget || options.owner,
                        disposeWhenNodeIsRemoved: options.disposeWhenNodeIsRemoved || options.disposeWhenNodeIsRemoved || null,
                        disposeWhen: options.disposeWhen || options.disposeWhen,
                        domNodeDisposalCallback: null,
                        dependencyTracking: {},
                        dependenciesCount: 0,
                        evaluationTimeoutInstance: null
                    };
                    return computedObservable[computedState] = state, computedObservable.hasWriteFunction = "function" == typeof writeFunction, 
                    ko.utils.canSetPrototype || ko.utils.extend(computedObservable, ko.subscribable.fn), 
                    ko.subscribable.fn.init(computedObservable), ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn), 
                    options.pure ? (state.pure = !0, state.isSleeping = !0, ko.utils.extend(computedObservable, pureComputedOverrides)) : options.deferEvaluation && ko.utils.extend(computedObservable, deferEvaluationOverrides), 
                    ko.options.deferUpdates && ko.extenders.deferred(computedObservable, !0), computedObservable._options = options, 
                    state.disposeWhenNodeIsRemoved && (state.suppressDisposalUntilDisposeWhenReturnsFalse = !0, 
                    state.disposeWhenNodeIsRemoved.nodeType || (state.disposeWhenNodeIsRemoved = null)), 
                    state.isSleeping || options.deferEvaluation || computedObservable.evaluateImmediate(), 
                    state.disposeWhenNodeIsRemoved && computedObservable.isActive() && ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function() {
                        computedObservable.dispose();
                    }), computedObservable;
                };
                var computedFn = {
                    equalityComparer: valuesArePrimitiveAndEqual,
                    getDependenciesCount: function() {
                        return this[computedState].dependenciesCount;
                    },
                    addDependencyTracking: function(id, target, trackingObj) {
                        if (this[computedState].pure && target === this) throw Error("A 'pure' computed must not be called recursively");
                        this[computedState].dependencyTracking[id] = trackingObj, trackingObj._order = this[computedState].dependenciesCount++, 
                        trackingObj._version = target.getVersion();
                    },
                    haveDependenciesChanged: function() {
                        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;
                        for (id in dependencyTracking) if (dependencyTracking.hasOwnProperty(id) && (dependency = dependencyTracking[id])._target.hasChanged(dependency._version)) return !0;
                    },
                    markDirty: function() {
                        this._evalDelayed && !this[computedState].isBeingEvaluated && this._evalDelayed();
                    },
                    isActive: function() {
                        return this[computedState].isStale || this[computedState].dependenciesCount > 0;
                    },
                    respondToChange: function() {
                        this._notificationIsPending || this.evaluatePossiblyAsync();
                    },
                    subscribeToDependency: function(target) {
                        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {
                            var dirtySub = target.subscribe(this.markDirty, this, "dirty"), changeSub = target.subscribe(this.respondToChange, this);
                            return {
                                _target: target,
                                dispose: function() {
                                    dirtySub.dispose(), changeSub.dispose();
                                }
                            };
                        }
                        return target.subscribe(this.evaluatePossiblyAsync, this);
                    },
                    evaluatePossiblyAsync: function() {
                        var computedObservable = this, throttleEvaluationTimeout = computedObservable.throttleEvaluation;
                        throttleEvaluationTimeout && throttleEvaluationTimeout >= 0 ? (clearTimeout(this[computedState].evaluationTimeoutInstance), 
                        this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function() {
                            computedObservable.evaluateImmediate(!0);
                        }, throttleEvaluationTimeout)) : computedObservable._evalDelayed ? computedObservable._evalDelayed() : computedObservable.evaluateImmediate(!0);
                    },
                    evaluateImmediate: function(notifyChange) {
                        var computedObservable = this, state = computedObservable[computedState], disposeWhen = state.disposeWhen, changed = !1;
                        if (!state.isBeingEvaluated && !state.isDisposed) {
                            if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {
                                if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) return void computedObservable.dispose();
                            } else state.suppressDisposalUntilDisposeWhenReturnsFalse = !1;
                            state.isBeingEvaluated = !0;
                            try {
                                changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);
                            } finally {
                                state.isBeingEvaluated = !1;
                            }
                            return state.dependenciesCount || computedObservable.dispose(), changed;
                        }
                    },
                    evaluateImmediate_CallReadWithDependencyDetection: function(notifyChange) {
                        var computedObservable = this, state = computedObservable[computedState], changed = !1, isInitial = state.pure ? undefined : !state.dependenciesCount, dependencyDetectionContext = {
                            computedObservable: computedObservable,
                            disposalCandidates: state.dependencyTracking,
                            disposalCount: state.dependenciesCount
                        };
                        ko.dependencyDetection.begin({
                            callbackTarget: dependencyDetectionContext,
                            callback: computedBeginDependencyDetectionCallback,
                            computed: computedObservable,
                            isInitial: isInitial
                        }), state.dependencyTracking = {}, state.dependenciesCount = 0;
                        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);
                        return computedObservable.isDifferent(state.latestValue, newValue) && (state.isSleeping || computedObservable.notifySubscribers(state.latestValue, "beforeChange"), 
                        state.latestValue = newValue, computedObservable._latestValue = newValue, state.isSleeping ? computedObservable.updateVersion() : notifyChange && computedObservable.notifySubscribers(state.latestValue), 
                        changed = !0), isInitial && computedObservable.notifySubscribers(state.latestValue, "awake"), 
                        changed;
                    },
                    evaluateImmediate_CallReadThenEndDependencyDetection: function(state, dependencyDetectionContext) {
                        try {
                            var readFunction = state.readFunction;
                            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();
                        } finally {
                            ko.dependencyDetection.end(), dependencyDetectionContext.disposalCount && !state.isSleeping && ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback), 
                            state.isStale = !1;
                        }
                    },
                    peek: function() {
                        var state = this[computedState];
                        return (state.isStale && !state.dependenciesCount || state.isSleeping && this.haveDependenciesChanged()) && this.evaluateImmediate(), 
                        state.latestValue;
                    },
                    limit: function(limitFunction) {
                        ko.subscribable.fn.limit.call(this, limitFunction), this._evalDelayed = function() {
                            this._limitBeforeChange(this[computedState].latestValue), this[computedState].isStale = !0, 
                            this._limitChange(this);
                        };
                    },
                    dispose: function() {
                        var state = this[computedState];
                        !state.isSleeping && state.dependencyTracking && ko.utils.objectForEach(state.dependencyTracking, function(id, dependency) {
                            dependency.dispose && dependency.dispose();
                        }), state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback && ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback), 
                        state.dependencyTracking = null, state.dependenciesCount = 0, state.isDisposed = !0, 
                        state.isStale = !1, state.isSleeping = !1, state.disposeWhenNodeIsRemoved = null;
                    }
                }, pureComputedOverrides = {
                    beforeSubscriptionAdd: function(event) {
                        var computedObservable = this, state = computedObservable[computedState];
                        if (!state.isDisposed && state.isSleeping && "change" == event) {
                            if (state.isSleeping = !1, state.isStale || computedObservable.haveDependenciesChanged()) state.dependencyTracking = null, 
                            state.dependenciesCount = 0, state.isStale = !0, computedObservable.evaluateImmediate() && computedObservable.updateVersion(); else {
                                var dependeciesOrder = [];
                                ko.utils.objectForEach(state.dependencyTracking, function(id, dependency) {
                                    dependeciesOrder[dependency._order] = id;
                                }), ko.utils.arrayForEach(dependeciesOrder, function(id, order) {
                                    var dependency = state.dependencyTracking[id], subscription = computedObservable.subscribeToDependency(dependency._target);
                                    subscription._order = order, subscription._version = dependency._version, state.dependencyTracking[id] = subscription;
                                });
                            }
                            state.isDisposed || computedObservable.notifySubscribers(state.latestValue, "awake");
                        }
                    },
                    afterSubscriptionRemove: function(event) {
                        var state = this[computedState];
                        state.isDisposed || "change" != event || this.hasSubscriptionsForEvent("change") || (ko.utils.objectForEach(state.dependencyTracking, function(id, dependency) {
                            dependency.dispose && (state.dependencyTracking[id] = {
                                _target: dependency._target,
                                _order: dependency._order,
                                _version: dependency._version
                            }, dependency.dispose());
                        }), state.isSleeping = !0, this.notifySubscribers(undefined, "asleep"));
                    },
                    getVersion: function() {
                        var state = this[computedState];
                        return state.isSleeping && (state.isStale || this.haveDependenciesChanged()) && this.evaluateImmediate(), 
                        ko.subscribable.fn.getVersion.call(this);
                    }
                }, deferEvaluationOverrides = {
                    beforeSubscriptionAdd: function(event) {
                        "change" != event && "beforeChange" != event || this.peek();
                    }
                };
                ko.utils.canSetPrototype && ko.utils.setPrototypeOf(computedFn, ko.subscribable.fn);
                var protoProp = ko.observable.protoProperty;
                ko.computed[protoProp] = ko.observable, computedFn[protoProp] = ko.computed, ko.isComputed = function(instance) {
                    return ko.hasPrototype(instance, ko.computed);
                }, ko.isPureComputed = function(instance) {
                    return ko.hasPrototype(instance, ko.computed) && instance[computedState] && instance[computedState].pure;
                }, ko.exportSymbol("computed", ko.computed), ko.exportSymbol("dependentObservable", ko.computed), 
                ko.exportSymbol("isComputed", ko.isComputed), ko.exportSymbol("isPureComputed", ko.isPureComputed), 
                ko.exportSymbol("computed.fn", computedFn), ko.exportProperty(computedFn, "peek", computedFn.peek), 
                ko.exportProperty(computedFn, "dispose", computedFn.dispose), ko.exportProperty(computedFn, "isActive", computedFn.isActive), 
                ko.exportProperty(computedFn, "getDependenciesCount", computedFn.getDependenciesCount), 
                ko.pureComputed = function(evaluatorFunctionOrOptions, evaluatorFunctionTarget) {
                    return "function" == typeof evaluatorFunctionOrOptions ? ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {
                        pure: !0
                    }) : (evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions), 
                    evaluatorFunctionOrOptions.pure = !0, ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget));
                }, ko.exportSymbol("pureComputed", ko.pureComputed), function() {
                    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {
                        if (visitedObjects = visitedObjects || new objectLookup(), !!("object" != typeof (rootObject = mapInputCallback(rootObject)) || null === rootObject || rootObject === undefined || rootObject instanceof RegExp || rootObject instanceof Date || rootObject instanceof String || rootObject instanceof Number || rootObject instanceof Boolean)) return rootObject;
                        var outputProperties = rootObject instanceof Array ? [] : {};
                        return visitedObjects.save(rootObject, outputProperties), visitPropertiesOrArrayEntries(rootObject, function(indexer) {
                            var propertyValue = mapInputCallback(rootObject[indexer]);
                            switch (typeof propertyValue) {
                              case "boolean":
                              case "number":
                              case "string":
                              case "function":
                                outputProperties[indexer] = propertyValue;
                                break;

                              case "object":
                              case "undefined":
                                var previouslyMappedValue = visitedObjects.get(propertyValue);
                                outputProperties[indexer] = previouslyMappedValue !== undefined ? previouslyMappedValue : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);
                            }
                        }), outputProperties;
                    }
                    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {
                        if (rootObject instanceof Array) {
                            for (var i = 0; i < rootObject.length; i++) visitorCallback(i);
                            "function" == typeof rootObject.toJSON && visitorCallback("toJSON");
                        } else for (var propertyName in rootObject) visitorCallback(propertyName);
                    }
                    function objectLookup() {
                        this.keys = [], this.values = [];
                    }
                    ko.toJS = function(rootObject) {
                        if (0 == arguments.length) throw new Error("When calling ko.toJS, pass the object you want to convert.");
                        return mapJsObjectGraph(rootObject, function(valueToMap) {
                            for (var i = 0; ko.isObservable(valueToMap) && i < 10; i++) valueToMap = valueToMap();
                            return valueToMap;
                        });
                    }, ko.toJSON = function(rootObject, replacer, space) {
                        var plainJavaScriptObject = ko.toJS(rootObject);
                        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);
                    }, objectLookup.prototype = {
                        constructor: objectLookup,
                        save: function(key, value) {
                            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);
                            existingIndex >= 0 ? this.values[existingIndex] = value : (this.keys.push(key), 
                            this.values.push(value));
                        },
                        get: function(key) {
                            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);
                            return existingIndex >= 0 ? this.values[existingIndex] : undefined;
                        }
                    };
                }(), ko.exportSymbol("toJS", ko.toJS), ko.exportSymbol("toJSON", ko.toJSON), function() {
                    ko.selectExtensions = {
                        readValue: function(element) {
                            switch (ko.utils.tagNameLower(element)) {
                              case "option":
                                return !0 === element.__ko__hasDomDataOptionValue__ ? ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey) : ko.utils.ieVersion <= 7 ? element.getAttributeNode("value") && element.getAttributeNode("value").specified ? element.value : element.text : element.value;

                              case "select":
                                return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;

                              default:
                                return element.value;
                            }
                        },
                        writeValue: function(element, value, allowUnset) {
                            switch (ko.utils.tagNameLower(element)) {
                              case "option":
                                switch (typeof value) {
                                  case "string":
                                    ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined), 
                                    "__ko__hasDomDataOptionValue__" in element && delete element.__ko__hasDomDataOptionValue__, 
                                    element.value = value;
                                    break;

                                  default:
                                    ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value), 
                                    element.__ko__hasDomDataOptionValue__ = !0, element.value = "number" == typeof value ? value : "";
                                }
                                break;

                              case "select":
                                "" !== value && null !== value || (value = undefined);
                                for (var optionValue, selection = -1, i = 0, n = element.options.length; i < n; ++i) if ((optionValue = ko.selectExtensions.readValue(element.options[i])) == value || "" == optionValue && value === undefined) {
                                    selection = i;
                                    break;
                                }
                                (allowUnset || selection >= 0 || value === undefined && element.size > 1) && (element.selectedIndex = selection);
                                break;

                              default:
                                null !== value && value !== undefined || (value = ""), element.value = value;
                            }
                        }
                    };
                }(), ko.exportSymbol("selectExtensions", ko.selectExtensions), ko.exportSymbol("selectExtensions.readValue", ko.selectExtensions.readValue), 
                ko.exportSymbol("selectExtensions.writeValue", ko.selectExtensions.writeValue), 
                ko.expressionRewriting = function() {
                    function getWriteableValue(expression) {
                        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0) return !1;
                        var match = expression.match(javaScriptAssignmentTarget);
                        return null !== match && (match[1] ? "Object(" + match[1] + ")" + match[2] : expression);
                    }
                    function parseObjectLiteral(objectLiteralString) {
                        var str = ko.utils.stringTrim(objectLiteralString);
                        123 === str.charCodeAt(0) && (str = str.slice(1, -1));
                        var key, result = [], toks = str.match(bindingToken), values = [], depth = 0;
                        if (toks) {
                            toks.push(",");
                            for (var tok, i = 0; tok = toks[i]; ++i) {
                                var c = tok.charCodeAt(0);
                                if (44 === c) {
                                    if (depth <= 0) {
                                        result.push(key && values.length ? {
                                            key: key,
                                            value: values.join("")
                                        } : {
                                            unknown: key || values.join("")
                                        }), key = depth = 0, values = [];
                                        continue;
                                    }
                                } else if (58 === c) {
                                    if (!depth && !key && 1 === values.length) {
                                        key = values.pop();
                                        continue;
                                    }
                                } else if (47 === c && i && tok.length > 1) {
                                    var match = toks[i - 1].match(divisionLookBehind);
                                    match && !keywordRegexLookBehind[match[0]] && ((toks = (str = str.substr(str.indexOf(tok) + 1)).match(bindingToken)).push(","), 
                                    i = -1, tok = "/");
                                } else 40 === c || 123 === c || 91 === c ? ++depth : 41 === c || 125 === c || 93 === c ? --depth : key || values.length || 34 !== c && 39 !== c || (tok = tok.slice(1, -1));
                                values.push(tok);
                            }
                        }
                        return result;
                    }
                    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {
                        function processKeyValue(key, val) {
                            var writableVal;
                            if (!bindingParams) {
                                if (!function(obj) {
                                    return !obj || !obj.preprocess || (val = obj.preprocess(val, key, processKeyValue));
                                }(ko.getBindingHandler(key))) return;
                                twoWayBindings[key] && (writableVal = getWriteableValue(val)) && propertyAccessorResultStrings.push("'" + key + "':function(_z){" + writableVal + "=_z}");
                            }
                            makeValueAccessors && (val = "function(){return " + val + " }"), resultStrings.push("'" + key + "':" + val);
                        }
                        var resultStrings = [], propertyAccessorResultStrings = [], makeValueAccessors = (bindingOptions = bindingOptions || {}).valueAccessors, bindingParams = bindingOptions.bindingParams, keyValueArray = "string" == typeof bindingsStringOrKeyValueArray ? parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;
                        return ko.utils.arrayForEach(keyValueArray, function(keyValue) {
                            processKeyValue(keyValue.key || keyValue.unknown, keyValue.value);
                        }), propertyAccessorResultStrings.length && processKeyValue("_ko_property_writers", "{" + propertyAccessorResultStrings.join(",") + " }"), 
                        resultStrings.join(",");
                    }
                    var javaScriptReservedWords = [ "true", "false", "null", "undefined" ], javaScriptAssignmentTarget = /^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i, bindingToken = RegExp("\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|/(?:[^/\\\\]|\\\\.)*/w*|[^\\s:,/][^,\"'{}()/:[\\]]*[^\\s,\"'{}()/:[\\]]|[^\\s]", "g"), divisionLookBehind = /[\])"'A-Za-z0-9_$]+$/, keywordRegexLookBehind = {
                        in: 1,
                        return: 1,
                        typeof: 1
                    }, twoWayBindings = {};
                    return {
                        bindingRewriteValidators: [],
                        twoWayBindings: twoWayBindings,
                        parseObjectLiteral: parseObjectLiteral,
                        preProcessBindings: preProcessBindings,
                        keyValueArrayContainsKey: function(keyValueArray, key) {
                            for (var i = 0; i < keyValueArray.length; i++) if (keyValueArray[i].key == key) return !0;
                            return !1;
                        },
                        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {
                            if (property && ko.isObservable(property)) !ko.isWriteableObservable(property) || checkIfDifferent && property.peek() === value || property(value); else {
                                var propWriters = allBindings.get("_ko_property_writers");
                                propWriters && propWriters[key] && propWriters[key](value);
                            }
                        }
                    };
                }(), ko.exportSymbol("expressionRewriting", ko.expressionRewriting), ko.exportSymbol("expressionRewriting.bindingRewriteValidators", ko.expressionRewriting.bindingRewriteValidators), 
                ko.exportSymbol("expressionRewriting.parseObjectLiteral", ko.expressionRewriting.parseObjectLiteral), 
                ko.exportSymbol("expressionRewriting.preProcessBindings", ko.expressionRewriting.preProcessBindings), 
                ko.exportSymbol("expressionRewriting._twoWayBindings", ko.expressionRewriting.twoWayBindings), 
                ko.exportSymbol("jsonExpressionRewriting", ko.expressionRewriting), ko.exportSymbol("jsonExpressionRewriting.insertPropertyAccessorsIntoJson", ko.expressionRewriting.preProcessBindings), 
                function() {
                    function isStartComment(node) {
                        return 8 == node.nodeType && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);
                    }
                    function isEndComment(node) {
                        return 8 == node.nodeType && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);
                    }
                    function getVirtualChildren(startComment, allowUnbalanced) {
                        for (var currentNode = startComment, depth = 1, children = []; currentNode = currentNode.nextSibling; ) {
                            if (isEndComment(currentNode) && 0 === --depth) return children;
                            children.push(currentNode), isStartComment(currentNode) && depth++;
                        }
                        if (!allowUnbalanced) throw new Error("Cannot find closing comment tag to match: " + startComment.nodeValue);
                        return null;
                    }
                    function getMatchingEndComment(startComment, allowUnbalanced) {
                        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);
                        return allVirtualChildren ? allVirtualChildren.length > 0 ? allVirtualChildren[allVirtualChildren.length - 1].nextSibling : startComment.nextSibling : null;
                    }
                    function getUnbalancedChildTags(node) {
                        var childNode = node.firstChild, captureRemaining = null;
                        if (childNode) do {
                            if (captureRemaining) captureRemaining.push(childNode); else if (isStartComment(childNode)) {
                                var matchingEndComment = getMatchingEndComment(childNode, !0);
                                matchingEndComment ? childNode = matchingEndComment : captureRemaining = [ childNode ];
                            } else isEndComment(childNode) && (captureRemaining = [ childNode ]);
                        } while (childNode = childNode.nextSibling);
                        return captureRemaining;
                    }
                    var commentNodesHaveTextProperty = document && "\x3c!--test--\x3e" === document.createComment("test").text, startCommentRegex = commentNodesHaveTextProperty ? /^<!--\s*ko(?:\s+([\s\S]+))?\s*-->$/ : /^\s*ko(?:\s+([\s\S]+))?\s*$/, endCommentRegex = commentNodesHaveTextProperty ? /^<!--\s*\/ko\s*-->$/ : /^\s*\/ko\s*$/, htmlTagsWithOptionallyClosingChildren = {
                        ul: !0,
                        ol: !0
                    };
                    ko.virtualElements = {
                        allowedBindings: {},
                        childNodes: function(node) {
                            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;
                        },
                        emptyNode: function(node) {
                            if (isStartComment(node)) for (var virtualChildren = ko.virtualElements.childNodes(node), i = 0, j = virtualChildren.length; i < j; i++) ko.removeNode(virtualChildren[i]); else ko.utils.emptyDomNode(node);
                        },
                        setDomNodeChildren: function(node, childNodes) {
                            if (isStartComment(node)) {
                                ko.virtualElements.emptyNode(node);
                                for (var endCommentNode = node.nextSibling, i = 0, j = childNodes.length; i < j; i++) endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);
                            } else ko.utils.setDomNodeChildren(node, childNodes);
                        },
                        prepend: function(containerNode, nodeToPrepend) {
                            isStartComment(containerNode) ? containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling) : containerNode.firstChild ? containerNode.insertBefore(nodeToPrepend, containerNode.firstChild) : containerNode.appendChild(nodeToPrepend);
                        },
                        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {
                            insertAfterNode ? isStartComment(containerNode) ? containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling) : insertAfterNode.nextSibling ? containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling) : containerNode.appendChild(nodeToInsert) : ko.virtualElements.prepend(containerNode, nodeToInsert);
                        },
                        firstChild: function(node) {
                            return isStartComment(node) ? !node.nextSibling || isEndComment(node.nextSibling) ? null : node.nextSibling : node.firstChild;
                        },
                        nextSibling: function(node) {
                            return isStartComment(node) && (node = getMatchingEndComment(node)), node.nextSibling && isEndComment(node.nextSibling) ? null : node.nextSibling;
                        },
                        hasBindingValue: isStartComment,
                        virtualNodeBindingValue: function(node) {
                            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);
                            return regexMatch ? regexMatch[1] : null;
                        },
                        normaliseVirtualElementDomStructure: function(elementVerified) {
                            if (htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)]) {
                                var childNode = elementVerified.firstChild;
                                if (childNode) do {
                                    if (1 === childNode.nodeType) {
                                        var unbalancedTags = getUnbalancedChildTags(childNode);
                                        if (unbalancedTags) for (var nodeToInsertBefore = childNode.nextSibling, i = 0; i < unbalancedTags.length; i++) nodeToInsertBefore ? elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore) : elementVerified.appendChild(unbalancedTags[i]);
                                    }
                                } while (childNode = childNode.nextSibling);
                            }
                        }
                    };
                }(), ko.exportSymbol("virtualElements", ko.virtualElements), ko.exportSymbol("virtualElements.allowedBindings", ko.virtualElements.allowedBindings), 
                ko.exportSymbol("virtualElements.emptyNode", ko.virtualElements.emptyNode), ko.exportSymbol("virtualElements.insertAfter", ko.virtualElements.insertAfter), 
                ko.exportSymbol("virtualElements.prepend", ko.virtualElements.prepend), ko.exportSymbol("virtualElements.setDomNodeChildren", ko.virtualElements.setDomNodeChildren), 
                function() {
                    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {
                        var cacheKey = bindingsString + (options && options.valueAccessors || "");
                        return cache[cacheKey] || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));
                    }
                    function createBindingsStringEvaluator(bindingsString, options) {
                        var functionBody = "with($context){with($data||{}){return{" + ko.expressionRewriting.preProcessBindings(bindingsString, options) + "}}}";
                        return new Function("$context", "$element", functionBody);
                    }
                    ko.bindingProvider = function() {
                        this.bindingCache = {};
                    }, ko.utils.extend(ko.bindingProvider.prototype, {
                        nodeHasBindings: function(node) {
                            switch (node.nodeType) {
                              case 1:
                                return null != node.getAttribute("data-bind") || ko.components.getComponentNameForNode(node);

                              case 8:
                                return ko.virtualElements.hasBindingValue(node);

                              default:
                                return !1;
                            }
                        },
                        getBindings: function(node, bindingContext) {
                            var bindingsString = this.getBindingsString(node, bindingContext), parsedBindings = bindingsString ? this.parseBindingsString(bindingsString, bindingContext, node) : null;
                            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, !1);
                        },
                        getBindingAccessors: function(node, bindingContext) {
                            var bindingsString = this.getBindingsString(node, bindingContext), parsedBindings = bindingsString ? this.parseBindingsString(bindingsString, bindingContext, node, {
                                valueAccessors: !0
                            }) : null;
                            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, !0);
                        },
                        getBindingsString: function(node, bindingContext) {
                            switch (node.nodeType) {
                              case 1:
                                return node.getAttribute("data-bind");

                              case 8:
                                return ko.virtualElements.virtualNodeBindingValue(node);

                              default:
                                return null;
                            }
                        },
                        parseBindingsString: function(bindingsString, bindingContext, node, options) {
                            try {
                                return createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options)(bindingContext, node);
                            } catch (ex) {
                                throw ex.message = "Unable to parse bindings.\nBindings value: " + bindingsString + "\nMessage: " + ex.message, 
                                ex;
                            }
                        }
                    }), ko.bindingProvider.instance = new ko.bindingProvider();
                }(), ko.exportSymbol("bindingProvider", ko.bindingProvider), function() {
                    function makeValueAccessor(value) {
                        return function() {
                            return value;
                        };
                    }
                    function evaluateValueAccessor(valueAccessor) {
                        return valueAccessor();
                    }
                    function makeAccessorsFromFunction(callback) {
                        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {
                            return function() {
                                return callback()[key];
                            };
                        });
                    }
                    function makeBindingAccessors(bindings, context, node) {
                        return "function" == typeof bindings ? makeAccessorsFromFunction(bindings.bind(null, context, node)) : ko.utils.objectMap(bindings, makeValueAccessor);
                    }
                    function getBindingsAndMakeAccessors(node, context) {
                        return makeAccessorsFromFunction(this.getBindings.bind(this, node, context));
                    }
                    function validateThatBindingIsAllowedForVirtualElements(bindingName) {
                        if (!ko.virtualElements.allowedBindings[bindingName]) throw new Error("The binding '" + bindingName + "' cannot be used with virtual elements");
                    }
                    function applyBindingsToDescendantsInternal(bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {
                        var currentChild, nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement), provider = ko.bindingProvider.instance, preprocessNode = provider.preprocessNode;
                        if (preprocessNode) {
                            for (;currentChild = nextInQueue; ) nextInQueue = ko.virtualElements.nextSibling(currentChild), 
                            preprocessNode.call(provider, currentChild);
                            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);
                        }
                        for (;currentChild = nextInQueue; ) nextInQueue = ko.virtualElements.nextSibling(currentChild), 
                        applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);
                    }
                    function applyBindingsToNodeAndDescendantsInternal(bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {
                        var shouldBindDescendants = !0, isElement = 1 === nodeVerified.nodeType;
                        isElement && ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified), 
                        (isElement && bindingContextMayDifferFromDomParentElement || ko.bindingProvider.instance.nodeHasBindings(nodeVerified)) && (shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement).shouldBindDescendants), 
                        shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)] && applyBindingsToDescendantsInternal(bindingContext, nodeVerified, !isElement);
                    }
                    function topologicalSortBindings(bindings) {
                        var result = [], bindingsConsidered = {}, cyclicDependencyStack = [];
                        return ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {
                            if (!bindingsConsidered[bindingKey]) {
                                var binding = ko.getBindingHandler(bindingKey);
                                binding && (binding.after && (cyclicDependencyStack.push(bindingKey), ko.utils.arrayForEach(binding.after, function(bindingDependencyKey) {
                                    if (bindings[bindingDependencyKey]) {
                                        if (-1 !== ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey)) throw Error("Cannot combine the following bindings, because they have a cyclic dependency: " + cyclicDependencyStack.join(", "));
                                        pushBinding(bindingDependencyKey);
                                    }
                                }), cyclicDependencyStack.length--), result.push({
                                    key: bindingKey,
                                    handler: binding
                                })), bindingsConsidered[bindingKey] = !0;
                            }
                        }), result;
                    }
                    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {
                        function allBindings() {
                            return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);
                        }
                        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);
                        if (!sourceBindings) {
                            if (alreadyBound) throw Error("You cannot apply bindings multiple times to the same element.");
                            ko.utils.domData.set(node, boundElementDomDataKey, !0);
                        }
                        !alreadyBound && bindingContextMayDifferFromDomParentElement && ko.storedBindingContextForNode(node, bindingContext);
                        var bindings;
                        if (sourceBindings && "function" != typeof sourceBindings) bindings = sourceBindings; else {
                            var provider = ko.bindingProvider.instance, getBindings = provider.getBindingAccessors || getBindingsAndMakeAccessors, bindingsUpdater = ko.dependentObservable(function() {
                                return (bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext)) && bindingContext._subscribable && bindingContext._subscribable(), 
                                bindings;
                            }, null, {
                                disposeWhenNodeIsRemoved: node
                            });
                            bindings && bindingsUpdater.isActive() || (bindingsUpdater = null);
                        }
                        var bindingHandlerThatControlsDescendantBindings;
                        if (bindings) {
                            var getValueAccessor = bindingsUpdater ? function(bindingKey) {
                                return function() {
                                    return evaluateValueAccessor(bindingsUpdater()[bindingKey]);
                                };
                            } : function(bindingKey) {
                                return bindings[bindingKey];
                            };
                            allBindings.get = function(key) {
                                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));
                            }, allBindings.has = function(key) {
                                return key in bindings;
                            };
                            var orderedBindings = topologicalSortBindings(bindings);
                            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {
                                var handlerInitFn = bindingKeyAndHandler.handler.init, handlerUpdateFn = bindingKeyAndHandler.handler.update, bindingKey = bindingKeyAndHandler.key;
                                8 === node.nodeType && validateThatBindingIsAllowedForVirtualElements(bindingKey);
                                try {
                                    "function" == typeof handlerInitFn && ko.dependencyDetection.ignore(function() {
                                        var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext.$data, bindingContext);
                                        if (initResult && initResult.controlsDescendantBindings) {
                                            if (bindingHandlerThatControlsDescendantBindings !== undefined) throw new Error("Multiple bindings (" + bindingHandlerThatControlsDescendantBindings + " and " + bindingKey + ") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.");
                                            bindingHandlerThatControlsDescendantBindings = bindingKey;
                                        }
                                    }), "function" == typeof handlerUpdateFn && ko.dependentObservable(function() {
                                        handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext.$data, bindingContext);
                                    }, null, {
                                        disposeWhenNodeIsRemoved: node
                                    });
                                } catch (ex) {
                                    throw ex.message = 'Unable to process binding "' + bindingKey + ": " + bindings[bindingKey] + '"\nMessage: ' + ex.message, 
                                    ex;
                                }
                            });
                        }
                        return {
                            shouldBindDescendants: bindingHandlerThatControlsDescendantBindings === undefined
                        };
                    }
                    function getBindingContext(viewModelOrBindingContext) {
                        return viewModelOrBindingContext && viewModelOrBindingContext instanceof ko.bindingContext ? viewModelOrBindingContext : new ko.bindingContext(viewModelOrBindingContext);
                    }
                    ko.bindingHandlers = {};
                    var bindingDoesNotRecurseIntoElementTypes = {
                        script: !0,
                        textarea: !0,
                        template: !0
                    };
                    ko.getBindingHandler = function(bindingKey) {
                        return ko.bindingHandlers[bindingKey];
                    }, ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {
                        function updateContext() {
                            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor, dataItem = ko.utils.unwrapObservable(dataItemOrObservable);
                            return parentContext ? (parentContext._subscribable && parentContext._subscribable(), 
                            ko.utils.extend(self, parentContext), self._subscribable = subscribable) : (self.$parents = [], 
                            self.$root = dataItem, self.ko = ko), self.$rawData = dataItemOrObservable, self.$data = dataItem, 
                            dataItemAlias && (self[dataItemAlias] = dataItem), extendCallback && extendCallback(self, parentContext, dataItem), 
                            self.$data;
                        }
                        function disposeWhen() {
                            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);
                        }
                        var nodes, subscribable, self = this, isFunc = "function" == typeof dataItemOrAccessor && !ko.isObservable(dataItemOrAccessor);
                        options && options.exportDependencies ? updateContext() : (subscribable = ko.dependentObservable(updateContext, null, {
                            disposeWhen: disposeWhen,
                            disposeWhenNodeIsRemoved: !0
                        })).isActive() && (self._subscribable = subscribable, subscribable.equalityComparer = null, 
                        nodes = [], subscribable._addNode = function(node) {
                            nodes.push(node), ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {
                                ko.utils.arrayRemoveItem(nodes, node), nodes.length || (subscribable.dispose(), 
                                self._subscribable = subscribable = undefined);
                            });
                        });
                    }, ko.bindingContext.prototype.createChildContext = function(dataItemOrAccessor, dataItemAlias, extendCallback, options) {
                        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {
                            self.$parentContext = parentContext, self.$parent = parentContext.$data, self.$parents = (parentContext.$parents || []).slice(0), 
                            self.$parents.unshift(self.$parent), extendCallback && extendCallback(self);
                        }, options);
                    }, ko.bindingContext.prototype.extend = function(properties) {
                        return new ko.bindingContext(this._subscribable || this.$data, this, null, function(self, parentContext) {
                            self.$rawData = parentContext.$rawData, ko.utils.extend(self, "function" == typeof properties ? properties() : properties);
                        });
                    }, ko.bindingContext.prototype.createStaticChildContext = function(dataItemOrAccessor, dataItemAlias) {
                        return this.createChildContext(dataItemOrAccessor, dataItemAlias, null, {
                            exportDependencies: !0
                        });
                    };
                    var boundElementDomDataKey = ko.utils.domData.nextKey(), storedBindingContextDomDataKey = ko.utils.domData.nextKey();
                    ko.storedBindingContextForNode = function(node, bindingContext) {
                        if (2 != arguments.length) return ko.utils.domData.get(node, storedBindingContextDomDataKey);
                        ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext), bindingContext._subscribable && bindingContext._subscribable._addNode(node);
                    }, ko.applyBindingAccessorsToNode = function(node, bindings, viewModelOrBindingContext) {
                        return 1 === node.nodeType && ko.virtualElements.normaliseVirtualElementDomStructure(node), 
                        applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), !0);
                    }, ko.applyBindingsToNode = function(node, bindings, viewModelOrBindingContext) {
                        var context = getBindingContext(viewModelOrBindingContext);
                        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);
                    }, ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {
                        1 !== rootNode.nodeType && 8 !== rootNode.nodeType || applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, !0);
                    }, ko.applyBindings = function(viewModelOrBindingContext, rootNode) {
                        if (!jQueryInstance && window.jQuery && (jQueryInstance = window.jQuery), rootNode && 1 !== rootNode.nodeType && 8 !== rootNode.nodeType) throw new Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node");
                        rootNode = rootNode || window.document.body, applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, !0);
                    }, ko.contextFor = function(node) {
                        switch (node.nodeType) {
                          case 1:
                          case 8:
                            var context = ko.storedBindingContextForNode(node);
                            if (context) return context;
                            if (node.parentNode) return ko.contextFor(node.parentNode);
                        }
                        return undefined;
                    }, ko.dataFor = function(node) {
                        var context = ko.contextFor(node);
                        return context ? context.$data : undefined;
                    }, ko.exportSymbol("bindingHandlers", ko.bindingHandlers), ko.exportSymbol("applyBindings", ko.applyBindings), 
                    ko.exportSymbol("applyBindingsToDescendants", ko.applyBindingsToDescendants), ko.exportSymbol("applyBindingAccessorsToNode", ko.applyBindingAccessorsToNode), 
                    ko.exportSymbol("applyBindingsToNode", ko.applyBindingsToNode), ko.exportSymbol("contextFor", ko.contextFor), 
                    ko.exportSymbol("dataFor", ko.dataFor);
                }(), function(undefined) {
                    function getObjectOwnProperty(obj, propName) {
                        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;
                    }
                    function loadComponentAndNotify(componentName, callback) {
                        var completedAsync, subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName);
                        subscribable ? subscribable.subscribe(callback) : ((subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable()).subscribe(callback), 
                        beginLoadingComponent(componentName, function(definition, config) {
                            var isSynchronousComponent = !(!config || !config.synchronous);
                            loadedDefinitionsCache[componentName] = {
                                definition: definition,
                                isSynchronousComponent: isSynchronousComponent
                            }, delete loadingSubscribablesCache[componentName], completedAsync || isSynchronousComponent ? subscribable.notifySubscribers(definition) : ko.tasks.schedule(function() {
                                subscribable.notifySubscribers(definition);
                            });
                        }), completedAsync = !0);
                    }
                    function beginLoadingComponent(componentName, callback) {
                        getFirstResultFromLoaders("getConfig", [ componentName ], function(config) {
                            config ? getFirstResultFromLoaders("loadComponent", [ componentName, config ], function(definition) {
                                callback(definition, config);
                            }) : callback(null, null);
                        });
                    }
                    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {
                        candidateLoaders || (candidateLoaders = ko.components.loaders.slice(0));
                        var currentCandidateLoader = candidateLoaders.shift();
                        if (currentCandidateLoader) {
                            var methodInstance = currentCandidateLoader[methodName];
                            if (methodInstance) {
                                var wasAborted = !1;
                                if (methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {
                                    wasAborted ? callback(null) : null !== result ? callback(result) : getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);
                                })) !== undefined && (wasAborted = !0, !currentCandidateLoader.suppressLoaderExceptions)) throw new Error("Component loaders must supply values by invoking the callback, not by returning values synchronously.");
                            } else getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);
                        } else callback(null);
                    }
                    var loadingSubscribablesCache = {}, loadedDefinitionsCache = {};
                    ko.components = {
                        get: function(componentName, callback) {
                            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);
                            cachedDefinition ? cachedDefinition.isSynchronousComponent ? ko.dependencyDetection.ignore(function() {
                                callback(cachedDefinition.definition);
                            }) : ko.tasks.schedule(function() {
                                callback(cachedDefinition.definition);
                            }) : loadComponentAndNotify(componentName, callback);
                        },
                        clearCachedDefinition: function(componentName) {
                            delete loadedDefinitionsCache[componentName];
                        },
                        _getFirstResultFromLoaders: getFirstResultFromLoaders
                    }, ko.components.loaders = [], ko.exportSymbol("components", ko.components), ko.exportSymbol("components.get", ko.components.get), 
                    ko.exportSymbol("components.clearCachedDefinition", ko.components.clearCachedDefinition);
                }(), function(undefined) {
                    function resolveConfig(componentName, errorCallback, config, callback) {
                        var result = {}, makeCallBackWhenZero = 2, tryIssueCallback = function() {
                            0 == --makeCallBackWhenZero && callback(result);
                        }, templateConfig = config.template, viewModelConfig = config.viewModel;
                        templateConfig ? possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {
                            ko.components._getFirstResultFromLoaders("loadTemplate", [ componentName, loadedConfig ], function(resolvedTemplate) {
                                result.template = resolvedTemplate, tryIssueCallback();
                            });
                        }) : tryIssueCallback(), viewModelConfig ? possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {
                            ko.components._getFirstResultFromLoaders("loadViewModel", [ componentName, loadedConfig ], function(resolvedViewModel) {
                                result[createViewModelKey] = resolvedViewModel, tryIssueCallback();
                            });
                        }) : tryIssueCallback();
                    }
                    function resolveTemplate(errorCallback, templateConfig, callback) {
                        if ("string" == typeof templateConfig) callback(ko.utils.parseHtmlFragment(templateConfig)); else if (templateConfig instanceof Array) callback(templateConfig); else if (isDocumentFragment(templateConfig)) callback(ko.utils.makeArray(templateConfig.childNodes)); else if (templateConfig.element) {
                            var element = templateConfig.element;
                            if (isDomElement(element)) callback(cloneNodesFromTemplateSourceElement(element)); else if ("string" == typeof element) {
                                var elemInstance = document.getElementById(element);
                                elemInstance ? callback(cloneNodesFromTemplateSourceElement(elemInstance)) : errorCallback("Cannot find element with ID " + element);
                            } else errorCallback("Unknown element type: " + element);
                        } else errorCallback("Unknown template value: " + templateConfig);
                    }
                    function resolveViewModel(errorCallback, viewModelConfig, callback) {
                        if ("function" == typeof viewModelConfig) callback(function(params) {
                            return new viewModelConfig(params);
                        }); else if ("function" == typeof viewModelConfig[createViewModelKey]) callback(viewModelConfig[createViewModelKey]); else if ("instance" in viewModelConfig) {
                            var fixedInstance = viewModelConfig.instance;
                            callback(function(params, componentInfo) {
                                return fixedInstance;
                            });
                        } else "viewModel" in viewModelConfig ? resolveViewModel(errorCallback, viewModelConfig.viewModel, callback) : errorCallback("Unknown viewModel value: " + viewModelConfig);
                    }
                    function cloneNodesFromTemplateSourceElement(elemInstance) {
                        switch (ko.utils.tagNameLower(elemInstance)) {
                          case "script":
                            return ko.utils.parseHtmlFragment(elemInstance.text);

                          case "textarea":
                            return ko.utils.parseHtmlFragment(elemInstance.value);

                          case "template":
                            if (isDocumentFragment(elemInstance.content)) return ko.utils.cloneNodes(elemInstance.content.childNodes);
                        }
                        return ko.utils.cloneNodes(elemInstance.childNodes);
                    }
                    function isDomElement(obj) {
                        return window.HTMLElement ? obj instanceof HTMLElement : obj && obj.tagName && 1 === obj.nodeType;
                    }
                    function isDocumentFragment(obj) {
                        return window.DocumentFragment ? obj instanceof DocumentFragment : obj && 11 === obj.nodeType;
                    }
                    function possiblyGetConfigFromAmd(errorCallback, config, callback) {
                        "string" == typeof config.require ? amdRequire || window.require ? (amdRequire || window.require)([ config.require ], callback) : errorCallback("Uses require, but no AMD loader is present") : callback(config);
                    }
                    function makeErrorCallback(componentName) {
                        return function(message) {
                            throw new Error("Component '" + componentName + "': " + message);
                        };
                    }
                    var defaultConfigRegistry = {};
                    ko.components.register = function(componentName, config) {
                        if (!config) throw new Error("Invalid configuration for " + componentName);
                        if (ko.components.isRegistered(componentName)) throw new Error("Component " + componentName + " is already registered");
                        defaultConfigRegistry[componentName] = config;
                    }, ko.components.isRegistered = function(componentName) {
                        return defaultConfigRegistry.hasOwnProperty(componentName);
                    }, ko.components.unregister = function(componentName) {
                        delete defaultConfigRegistry[componentName], ko.components.clearCachedDefinition(componentName);
                    }, ko.components.defaultLoader = {
                        getConfig: function(componentName, callback) {
                            callback(defaultConfigRegistry.hasOwnProperty(componentName) ? defaultConfigRegistry[componentName] : null);
                        },
                        loadComponent: function(componentName, config, callback) {
                            var errorCallback = makeErrorCallback(componentName);
                            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {
                                resolveConfig(componentName, errorCallback, loadedConfig, callback);
                            });
                        },
                        loadTemplate: function(componentName, templateConfig, callback) {
                            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);
                        },
                        loadViewModel: function(componentName, viewModelConfig, callback) {
                            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);
                        }
                    };
                    var createViewModelKey = "createViewModel";
                    ko.exportSymbol("components.register", ko.components.register), ko.exportSymbol("components.isRegistered", ko.components.isRegistered), 
                    ko.exportSymbol("components.unregister", ko.components.unregister), ko.exportSymbol("components.defaultLoader", ko.components.defaultLoader), 
                    ko.components.loaders.push(ko.components.defaultLoader), ko.components._allRegisteredComponents = defaultConfigRegistry;
                }(), function(undefined) {
                    function getComponentParamsFromCustomElement(elem, bindingContext) {
                        var paramsAttribute = elem.getAttribute("params");
                        if (paramsAttribute) {
                            var params = nativeBindingProviderInstance.parseBindingsString(paramsAttribute, bindingContext, elem, {
                                valueAccessors: !0,
                                bindingParams: !0
                            }), rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {
                                return ko.computed(paramValue, null, {
                                    disposeWhenNodeIsRemoved: elem
                                });
                            }), result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {
                                var paramValue = paramValueComputed.peek();
                                return paramValueComputed.isActive() ? ko.computed({
                                    read: function() {
                                        return ko.utils.unwrapObservable(paramValueComputed());
                                    },
                                    write: ko.isWriteableObservable(paramValue) && function(value) {
                                        paramValueComputed()(value);
                                    },
                                    disposeWhenNodeIsRemoved: elem
                                }) : paramValue;
                            });
                            return result.hasOwnProperty("$raw") || (result.$raw = rawParamComputedValues), 
                            result;
                        }
                        return {
                            $raw: {}
                        };
                    }
                    ko.components.getComponentNameForNode = function(node) {
                        var tagNameLower = ko.utils.tagNameLower(node);
                        if (ko.components.isRegistered(tagNameLower) && (-1 != tagNameLower.indexOf("-") || "" + node == "[object HTMLUnknownElement]" || ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) return tagNameLower;
                    }, ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {
                        if (1 === node.nodeType) {
                            var componentName = ko.components.getComponentNameForNode(node);
                            if (componentName) {
                                if ((allBindings = allBindings || {}).component) throw new Error('Cannot use the "component" binding on a custom element matching a component');
                                var componentBindingValue = {
                                    name: componentName,
                                    params: getComponentParamsFromCustomElement(node, bindingContext)
                                };
                                allBindings.component = valueAccessors ? function() {
                                    return componentBindingValue;
                                } : componentBindingValue;
                            }
                        }
                        return allBindings;
                    };
                    var nativeBindingProviderInstance = new ko.bindingProvider();
                    ko.utils.ieVersion < 9 && (ko.components.register = function(originalFunction) {
                        return function(componentName) {
                            return document.createElement(componentName), originalFunction.apply(this, arguments);
                        };
                    }(ko.components.register), document.createDocumentFragment = function(originalFunction) {
                        return function() {
                            var newDocFrag = originalFunction(), allComponents = ko.components._allRegisteredComponents;
                            for (var componentName in allComponents) allComponents.hasOwnProperty(componentName) && newDocFrag.createElement(componentName);
                            return newDocFrag;
                        };
                    }(document.createDocumentFragment));
                }(), function(undefined) {
                    function cloneTemplateIntoElement(componentName, componentDefinition, element) {
                        var template = componentDefinition.template;
                        if (!template) throw new Error("Component '" + componentName + "' has no template");
                        var clonedNodesArray = ko.utils.cloneNodes(template);
                        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);
                    }
                    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {
                        var componentViewModelFactory = componentDefinition.createViewModel;
                        return componentViewModelFactory ? componentViewModelFactory.call(componentDefinition, componentParams, {
                            element: element,
                            templateNodes: originalChildNodes
                        }) : componentParams;
                    }
                    var componentLoadingOperationUniqueId = 0;
                    ko.bindingHandlers.component = {
                        init: function(element, valueAccessor, ignored1, ignored2, bindingContext) {
                            var currentViewModel, currentLoadingOperationId, disposeAssociatedComponentViewModel = function() {
                                var currentViewModelDispose = currentViewModel && currentViewModel.dispose;
                                "function" == typeof currentViewModelDispose && currentViewModelDispose.call(currentViewModel), 
                                currentViewModel = null, currentLoadingOperationId = null;
                            }, originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));
                            return ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel), 
                            ko.computed(function() {
                                var componentName, componentParams, value = ko.utils.unwrapObservable(valueAccessor());
                                if ("string" == typeof value ? componentName = value : (componentName = ko.utils.unwrapObservable(value.name), 
                                componentParams = ko.utils.unwrapObservable(value.params)), !componentName) throw new Error("No component name specified");
                                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;
                                ko.components.get(componentName, function(componentDefinition) {
                                    if (currentLoadingOperationId === loadingOperationId) {
                                        if (disposeAssociatedComponentViewModel(), !componentDefinition) throw new Error("Unknown component '" + componentName + "'");
                                        cloneTemplateIntoElement(componentName, componentDefinition, element);
                                        var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams), childBindingContext = bindingContext.createChildContext(componentViewModel, void 0, function(ctx) {
                                            ctx.$component = componentViewModel, ctx.$componentTemplateNodes = originalChildNodes;
                                        });
                                        currentViewModel = componentViewModel, ko.applyBindingsToDescendants(childBindingContext, element);
                                    }
                                });
                            }, null, {
                                disposeWhenNodeIsRemoved: element
                            }), {
                                controlsDescendantBindings: !0
                            };
                        }
                    }, ko.virtualElements.allowedBindings.component = !0;
                }();
                var attrHtmlToJavascriptMap = {
                    class: "className",
                    for: "htmlFor"
                };
                ko.bindingHandlers.attr = {
                    update: function(element, valueAccessor, allBindings) {
                        var value = ko.utils.unwrapObservable(valueAccessor()) || {};
                        ko.utils.objectForEach(value, function(attrName, attrValue) {
                            var toRemove = !1 === (attrValue = ko.utils.unwrapObservable(attrValue)) || null === attrValue || attrValue === undefined;
                            toRemove && element.removeAttribute(attrName), ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap ? (attrName = attrHtmlToJavascriptMap[attrName], 
                            toRemove ? element.removeAttribute(attrName) : element[attrName] = attrValue) : toRemove || element.setAttribute(attrName, attrValue.toString()), 
                            "name" === attrName && ko.utils.setElementName(element, toRemove ? "" : attrValue.toString());
                        });
                    }
                }, function() {
                    ko.bindingHandlers.checked = {
                        after: [ "value", "attr" ],
                        init: function(element, valueAccessor, allBindings) {
                            function updateModel() {
                                var isChecked = element.checked, elemValue = useCheckedValue ? checkedValue() : isChecked;
                                if (!ko.computedContext.isInitial() && (!isRadio || isChecked)) {
                                    var modelValue = ko.dependencyDetection.ignore(valueAccessor);
                                    if (valueIsArray) {
                                        var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;
                                        oldElemValue !== elemValue ? (isChecked && (ko.utils.addOrRemoveItem(writableValue, elemValue, !0), 
                                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, !1)), oldElemValue = elemValue) : ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked), 
                                        rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue) && modelValue(writableValue);
                                    } else ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, "checked", elemValue, !0);
                                }
                            }
                            function updateView() {
                                var modelValue = ko.utils.unwrapObservable(valueAccessor());
                                element.checked = valueIsArray ? ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0 : isCheckbox ? modelValue : checkedValue() === modelValue;
                            }
                            var checkedValue = ko.pureComputed(function() {
                                return allBindings.has("checkedValue") ? ko.utils.unwrapObservable(allBindings.get("checkedValue")) : allBindings.has("value") ? ko.utils.unwrapObservable(allBindings.get("value")) : element.value;
                            }), isCheckbox = "checkbox" == element.type, isRadio = "radio" == element.type;
                            if (isCheckbox || isRadio) {
                                var rawValue = valueAccessor(), valueIsArray = isCheckbox && ko.utils.unwrapObservable(rawValue) instanceof Array, rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice), oldElemValue = valueIsArray ? checkedValue() : undefined, useCheckedValue = isRadio || valueIsArray;
                                isRadio && !element.name && ko.bindingHandlers.uniqueName.init(element, function() {
                                    return !0;
                                }), ko.computed(updateModel, null, {
                                    disposeWhenNodeIsRemoved: element
                                }), ko.utils.registerEventHandler(element, "click", updateModel), ko.computed(updateView, null, {
                                    disposeWhenNodeIsRemoved: element
                                }), rawValue = undefined;
                            }
                        }
                    }, ko.expressionRewriting.twoWayBindings.checked = !0, ko.bindingHandlers.checkedValue = {
                        update: function(element, valueAccessor) {
                            element.value = ko.utils.unwrapObservable(valueAccessor());
                        }
                    };
                }();
                ko.bindingHandlers.css = {
                    update: function(element, valueAccessor) {
                        var value = ko.utils.unwrapObservable(valueAccessor());
                        null !== value && "object" == typeof value ? ko.utils.objectForEach(value, function(className, shouldHaveClass) {
                            shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass), ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);
                        }) : (value = ko.utils.stringTrim(String(value || "")), ko.utils.toggleDomNodeCssClass(element, element.__ko__cssValue, !1), 
                        element.__ko__cssValue = value, ko.utils.toggleDomNodeCssClass(element, value, !0));
                    }
                }, ko.bindingHandlers.enable = {
                    update: function(element, valueAccessor) {
                        var value = ko.utils.unwrapObservable(valueAccessor());
                        value && element.disabled ? element.removeAttribute("disabled") : value || element.disabled || (element.disabled = !0);
                    }
                }, ko.bindingHandlers.disable = {
                    update: function(element, valueAccessor) {
                        ko.bindingHandlers.enable.update(element, function() {
                            return !ko.utils.unwrapObservable(valueAccessor());
                        });
                    }
                }, ko.bindingHandlers.event = {
                    init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
                        var eventsToHandle = valueAccessor() || {};
                        ko.utils.objectForEach(eventsToHandle, function(eventName) {
                            "string" == typeof eventName && ko.utils.registerEventHandler(element, eventName, function(event) {
                                var handlerReturnValue, handlerFunction = valueAccessor()[eventName];
                                if (handlerFunction) {
                                    try {
                                        var argsForHandler = ko.utils.makeArray(arguments);
                                        viewModel = bindingContext.$data, argsForHandler.unshift(viewModel), handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);
                                    } finally {
                                        !0 !== handlerReturnValue && (event.preventDefault ? event.preventDefault() : event.returnValue = !1);
                                    }
                                    !1 !== allBindings.get(eventName + "Bubble") || (event.cancelBubble = !0, event.stopPropagation && event.stopPropagation());
                                }
                            });
                        });
                    }
                }, ko.bindingHandlers.foreach = {
                    makeTemplateValueAccessor: function(valueAccessor) {
                        return function() {
                            var modelValue = valueAccessor(), unwrappedValue = ko.utils.peekObservable(modelValue);
                            return unwrappedValue && "number" != typeof unwrappedValue.length ? (ko.utils.unwrapObservable(modelValue), 
                            {
                                foreach: unwrappedValue.data,
                                as: unwrappedValue.as,
                                includeDestroyed: unwrappedValue.includeDestroyed,
                                afterAdd: unwrappedValue.afterAdd,
                                beforeRemove: unwrappedValue.beforeRemove,
                                afterRender: unwrappedValue.afterRender,
                                beforeMove: unwrappedValue.beforeMove,
                                afterMove: unwrappedValue.afterMove,
                                templateEngine: ko.nativeTemplateEngine.instance
                            }) : {
                                foreach: modelValue,
                                templateEngine: ko.nativeTemplateEngine.instance
                            };
                        };
                    },
                    init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
                        return ko.bindingHandlers.template.init(element, ko.bindingHandlers.foreach.makeTemplateValueAccessor(valueAccessor));
                    },
                    update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
                        return ko.bindingHandlers.template.update(element, ko.bindingHandlers.foreach.makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);
                    }
                }, ko.expressionRewriting.bindingRewriteValidators.foreach = !1, ko.virtualElements.allowedBindings.foreach = !0;
                ko.bindingHandlers.hasfocus = {
                    init: function(element, valueAccessor, allBindings) {
                        var handleElementFocusChange = function(isFocused) {
                            element.__ko_hasfocusUpdating = !0;
                            var ownerDoc = element.ownerDocument;
                            if ("activeElement" in ownerDoc) {
                                var active;
                                try {
                                    active = ownerDoc.activeElement;
                                } catch (e) {
                                    active = ownerDoc.body;
                                }
                                isFocused = active === element;
                            }
                            var modelValue = valueAccessor();
                            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, "hasfocus", isFocused, !0), 
                            element.__ko_hasfocusLastValue = isFocused, element.__ko_hasfocusUpdating = !1;
                        }, handleElementFocusIn = handleElementFocusChange.bind(null, !0), handleElementFocusOut = handleElementFocusChange.bind(null, !1);
                        ko.utils.registerEventHandler(element, "focus", handleElementFocusIn), ko.utils.registerEventHandler(element, "focusin", handleElementFocusIn), 
                        ko.utils.registerEventHandler(element, "blur", handleElementFocusOut), ko.utils.registerEventHandler(element, "focusout", handleElementFocusOut);
                    },
                    update: function(element, valueAccessor) {
                        var value = !!ko.utils.unwrapObservable(valueAccessor());
                        element.__ko_hasfocusUpdating || element.__ko_hasfocusLastValue === value || (value ? element.focus() : element.blur(), 
                        !value && element.__ko_hasfocusLastValue && element.ownerDocument.body.focus(), 
                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [ element, value ? "focusin" : "focusout" ]));
                    }
                }, ko.expressionRewriting.twoWayBindings.hasfocus = !0, ko.bindingHandlers.hasFocus = ko.bindingHandlers.hasfocus, 
                ko.expressionRewriting.twoWayBindings.hasFocus = !0, ko.bindingHandlers.html = {
                    init: function() {
                        return {
                            controlsDescendantBindings: !0
                        };
                    },
                    update: function(element, valueAccessor) {
                        ko.utils.setHtml(element, valueAccessor());
                    }
                }, makeWithIfBinding("if"), makeWithIfBinding("ifnot", !1, !0), makeWithIfBinding("with", !0, !1, function(bindingContext, dataValue) {
                    return bindingContext.createStaticChildContext(dataValue);
                });
                var captionPlaceholder = {};
                ko.bindingHandlers.options = {
                    init: function(element) {
                        if ("select" !== ko.utils.tagNameLower(element)) throw new Error("options binding applies only to SELECT elements");
                        for (;element.length > 0; ) element.remove(0);
                        return {
                            controlsDescendantBindings: !0
                        };
                    },
                    update: function(element, valueAccessor, allBindings) {
                        function selectedOptions() {
                            return ko.utils.arrayFilter(element.options, function(node) {
                                return node.selected;
                            });
                        }
                        function applyToObject(object, predicate, defaultValue) {
                            var predicateType = typeof predicate;
                            return "function" == predicateType ? predicate(object) : "string" == predicateType ? object[predicate] : defaultValue;
                        }
                        function optionForArrayItem(arrayEntry, index, oldOptions) {
                            oldOptions.length && (previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [], 
                            itemUpdate = !0);
                            var option = element.ownerDocument.createElement("option");
                            if (arrayEntry === captionPlaceholder) ko.utils.setTextContent(option, allBindings.get("optionsCaption")), 
                            ko.selectExtensions.writeValue(option, undefined); else {
                                var optionValue = applyToObject(arrayEntry, allBindings.get("optionsValue"), arrayEntry);
                                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));
                                var optionText = applyToObject(arrayEntry, allBindings.get("optionsText"), optionValue);
                                ko.utils.setTextContent(option, optionText);
                            }
                            return [ option ];
                        }
                        function setSelectionCallback(arrayEntry, newOptions) {
                            if (itemUpdate && valueAllowUnset) ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get("value")), !0); else if (previousSelectedValues.length) {
                                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;
                                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected), itemUpdate && !isSelected && ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [ element, "change" ]);
                            }
                        }
                        var captionValue, filteredArray, selectWasPreviouslyEmpty = 0 == element.length, multiple = element.multiple, previousScrollTop = !selectWasPreviouslyEmpty && multiple ? element.scrollTop : null, unwrappedArray = ko.utils.unwrapObservable(valueAccessor()), valueAllowUnset = allBindings.get("valueAllowUnset") && allBindings.has("value"), includeDestroyed = allBindings.get("optionsIncludeDestroyed"), arrayToDomNodeChildrenOptions = {}, previousSelectedValues = [];
                        valueAllowUnset || (multiple ? previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue) : element.selectedIndex >= 0 && previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]))), 
                        unwrappedArray && (void 0 === unwrappedArray.length && (unwrappedArray = [ unwrappedArray ]), 
                        filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {
                            return includeDestroyed || item === undefined || null === item || !ko.utils.unwrapObservable(item._destroy);
                        }), allBindings.has("optionsCaption") && null !== (captionValue = ko.utils.unwrapObservable(allBindings.get("optionsCaption"))) && captionValue !== undefined && filteredArray.unshift(captionPlaceholder));
                        var itemUpdate = !1;
                        arrayToDomNodeChildrenOptions.beforeRemove = function(option) {
                            element.removeChild(option);
                        };
                        var callback = setSelectionCallback;
                        allBindings.has("optionsAfterRender") && "function" == typeof allBindings.get("optionsAfterRender") && (callback = function(arrayEntry, newOptions) {
                            setSelectionCallback(arrayEntry, newOptions), ko.dependencyDetection.ignore(allBindings.get("optionsAfterRender"), null, [ newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined ]);
                        }), ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback), 
                        ko.dependencyDetection.ignore(function() {
                            if (valueAllowUnset) ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get("value")), !0); else {
                                (multiple ? previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length : previousSelectedValues.length && element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0] : previousSelectedValues.length || element.selectedIndex >= 0) && ko.utils.triggerEvent(element, "change");
                            }
                        }), ko.utils.ensureSelectElementIsRenderedCorrectly(element), previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20 && (element.scrollTop = previousScrollTop);
                    }
                }, ko.bindingHandlers.options.optionValueDomDataKey = ko.utils.domData.nextKey(), 
                ko.bindingHandlers.selectedOptions = {
                    after: [ "options", "foreach" ],
                    init: function(element, valueAccessor, allBindings) {
                        ko.utils.registerEventHandler(element, "change", function() {
                            var value = valueAccessor(), valueToWrite = [];
                            ko.utils.arrayForEach(element.getElementsByTagName("option"), function(node) {
                                node.selected && valueToWrite.push(ko.selectExtensions.readValue(node));
                            }), ko.expressionRewriting.writeValueToProperty(value, allBindings, "selectedOptions", valueToWrite);
                        });
                    },
                    update: function(element, valueAccessor) {
                        if ("select" != ko.utils.tagNameLower(element)) throw new Error("values binding applies only to SELECT elements");
                        var newValue = ko.utils.unwrapObservable(valueAccessor()), previousScrollTop = element.scrollTop;
                        newValue && "number" == typeof newValue.length && ko.utils.arrayForEach(element.getElementsByTagName("option"), function(node) {
                            var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;
                            node.selected != isSelected && ko.utils.setOptionNodeSelectionState(node, isSelected);
                        }), element.scrollTop = previousScrollTop;
                    }
                }, ko.expressionRewriting.twoWayBindings.selectedOptions = !0, ko.bindingHandlers.style = {
                    update: function(element, valueAccessor) {
                        var value = ko.utils.unwrapObservable(valueAccessor() || {});
                        ko.utils.objectForEach(value, function(styleName, styleValue) {
                            null !== (styleValue = ko.utils.unwrapObservable(styleValue)) && styleValue !== undefined && !1 !== styleValue || (styleValue = ""), 
                            element.style[styleName] = styleValue;
                        });
                    }
                }, ko.bindingHandlers.submit = {
                    init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
                        if ("function" != typeof valueAccessor()) throw new Error("The value for a submit binding must be a function");
                        ko.utils.registerEventHandler(element, "submit", function(event) {
                            var handlerReturnValue, value = valueAccessor();
                            try {
                                handlerReturnValue = value.call(bindingContext.$data, element);
                            } finally {
                                !0 !== handlerReturnValue && (event.preventDefault ? event.preventDefault() : event.returnValue = !1);
                            }
                        });
                    }
                }, ko.bindingHandlers.text = {
                    init: function() {
                        return {
                            controlsDescendantBindings: !0
                        };
                    },
                    update: function(element, valueAccessor) {
                        ko.utils.setTextContent(element, valueAccessor());
                    }
                }, ko.virtualElements.allowedBindings.text = !0, function() {
                    if (window && window.navigator) var parseVersion = function(matches) {
                        if (matches) return parseFloat(matches[1]);
                    }, operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()), userAgent = window.navigator.userAgent, safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\/([^ ]*) safari/i)), firefoxVersion = parseVersion(userAgent.match(/Firefox\/([^ ]*)/));
                    if (ko.utils.ieVersion < 10) var selectionChangeRegisteredName = ko.utils.domData.nextKey(), selectionChangeHandlerName = ko.utils.domData.nextKey(), selectionChangeHandler = function(event) {
                        var target = this.activeElement, handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);
                        handler && handler(event);
                    }, registerForSelectionChangeEvent = function(element, handler) {
                        var ownerDoc = element.ownerDocument;
                        ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName) || (ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, !0), 
                        ko.utils.registerEventHandler(ownerDoc, "selectionchange", selectionChangeHandler)), 
                        ko.utils.domData.set(element, selectionChangeHandlerName, handler);
                    };
                    ko.bindingHandlers.textInput = {
                        init: function(element, valueAccessor, allBindings) {
                            var timeoutHandle, elementValueBeforeEvent, previousElementValue = element.value, updateModel = function(event) {
                                clearTimeout(timeoutHandle), elementValueBeforeEvent = timeoutHandle = undefined;
                                var elementValue = element.value;
                                previousElementValue !== elementValue && (event && (element._ko_textInputProcessedEvent = event.type), 
                                previousElementValue = elementValue, ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, "textInput", elementValue));
                            }, deferUpdateModel = function(event) {
                                if (!timeoutHandle) {
                                    elementValueBeforeEvent = element.value;
                                    var handler = updateModel.bind(element, {
                                        type: event.type
                                    });
                                    timeoutHandle = ko.utils.setTimeout(handler, 4);
                                }
                            }, ieUpdateModel = 9 == ko.utils.ieVersion ? deferUpdateModel : updateModel, updateView = function() {
                                var modelValue = ko.utils.unwrapObservable(valueAccessor());
                                if (null !== modelValue && modelValue !== undefined || (modelValue = ""), elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) return void ko.utils.setTimeout(updateView, 4);
                                element.value !== modelValue && (previousElementValue = modelValue, element.value = modelValue);
                            }, onEvent = function(event, handler) {
                                ko.utils.registerEventHandler(element, event, handler);
                            };
                            ko.bindingHandlers.textInput._forceUpdateOn ? ko.utils.arrayForEach(ko.bindingHandlers.textInput._forceUpdateOn, function(eventName) {
                                "after" == eventName.slice(0, 5) ? onEvent(eventName.slice(5), deferUpdateModel) : onEvent(eventName, updateModel);
                            }) : ko.utils.ieVersion < 10 ? (onEvent("propertychange", function(event) {
                                "value" === event.propertyName && ieUpdateModel(event);
                            }), 8 == ko.utils.ieVersion && (onEvent("keyup", updateModel), onEvent("keydown", updateModel)), 
                            ko.utils.ieVersion >= 8 && (registerForSelectionChangeEvent(element, ieUpdateModel), 
                            onEvent("dragend", deferUpdateModel))) : (onEvent("input", updateModel), safariVersion < 5 && "textarea" === ko.utils.tagNameLower(element) ? (onEvent("keydown", deferUpdateModel), 
                            onEvent("paste", deferUpdateModel), onEvent("cut", deferUpdateModel)) : operaVersion < 11 ? onEvent("keydown", deferUpdateModel) : firefoxVersion < 4 && (onEvent("DOMAutoComplete", updateModel), 
                            onEvent("dragdrop", updateModel), onEvent("drop", updateModel))), onEvent("change", updateModel), 
                            ko.computed(updateView, null, {
                                disposeWhenNodeIsRemoved: element
                            });
                        }
                    }, ko.expressionRewriting.twoWayBindings.textInput = !0, ko.bindingHandlers.textinput = {
                        preprocess: function(value, name, addBinding) {
                            addBinding("textInput", value);
                        }
                    };
                }(), ko.bindingHandlers.uniqueName = {
                    init: function(element, valueAccessor) {
                        if (valueAccessor()) {
                            var name = "ko_unique_" + ++ko.bindingHandlers.uniqueName.currentIndex;
                            ko.utils.setElementName(element, name);
                        }
                    }
                }, ko.bindingHandlers.uniqueName.currentIndex = 0, ko.bindingHandlers.value = {
                    after: [ "options", "foreach" ],
                    init: function(element, valueAccessor, allBindings) {
                        if ("input" == element.tagName.toLowerCase() && ("checkbox" == element.type || "radio" == element.type)) return void ko.applyBindingAccessorsToNode(element, {
                            checkedValue: valueAccessor
                        });
                        var eventsToCatch = [ "change" ], requestedEventsToCatch = allBindings.get("valueUpdate"), propertyChangedFired = !1, elementValueBeforeEvent = null;
                        requestedEventsToCatch && ("string" == typeof requestedEventsToCatch && (requestedEventsToCatch = [ requestedEventsToCatch ]), 
                        ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch), eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch));
                        var valueUpdateHandler = function() {
                            elementValueBeforeEvent = null, propertyChangedFired = !1;
                            var modelValue = valueAccessor(), elementValue = ko.selectExtensions.readValue(element);
                            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, "value", elementValue);
                        };
                        ko.utils.ieVersion && "input" == element.tagName.toLowerCase() && "text" == element.type && "off" != element.autocomplete && (!element.form || "off" != element.form.autocomplete) && -1 == ko.utils.arrayIndexOf(eventsToCatch, "propertychange") && (ko.utils.registerEventHandler(element, "propertychange", function() {
                            propertyChangedFired = !0;
                        }), ko.utils.registerEventHandler(element, "focus", function() {
                            propertyChangedFired = !1;
                        }), ko.utils.registerEventHandler(element, "blur", function() {
                            propertyChangedFired && valueUpdateHandler();
                        })), ko.utils.arrayForEach(eventsToCatch, function(eventName) {
                            var handler = valueUpdateHandler;
                            ko.utils.stringStartsWith(eventName, "after") && (handler = function() {
                                elementValueBeforeEvent = ko.selectExtensions.readValue(element), ko.utils.setTimeout(valueUpdateHandler, 0);
                            }, eventName = eventName.substring("after".length)), ko.utils.registerEventHandler(element, eventName, handler);
                        });
                        var updateFromModel = function() {
                            var newValue = ko.utils.unwrapObservable(valueAccessor()), elementValue = ko.selectExtensions.readValue(element);
                            if (null !== elementValueBeforeEvent && newValue === elementValueBeforeEvent) return void ko.utils.setTimeout(updateFromModel, 0);
                            if (newValue !== elementValue) if ("select" === ko.utils.tagNameLower(element)) {
                                var allowUnset = allBindings.get("valueAllowUnset"), applyValueAction = function() {
                                    ko.selectExtensions.writeValue(element, newValue, allowUnset);
                                };
                                applyValueAction(), allowUnset || newValue === ko.selectExtensions.readValue(element) ? ko.utils.setTimeout(applyValueAction, 0) : ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [ element, "change" ]);
                            } else ko.selectExtensions.writeValue(element, newValue);
                        };
                        ko.computed(updateFromModel, null, {
                            disposeWhenNodeIsRemoved: element
                        });
                    },
                    update: function() {}
                }, ko.expressionRewriting.twoWayBindings.value = !0, ko.bindingHandlers.visible = {
                    update: function(element, valueAccessor) {
                        var value = ko.utils.unwrapObservable(valueAccessor()), isCurrentlyVisible = !("none" == element.style.display);
                        value && !isCurrentlyVisible ? element.style.display = "" : !value && isCurrentlyVisible && (element.style.display = "none");
                    }
                }, function(eventName) {
                    ko.bindingHandlers[eventName] = {
                        init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
                            var newValueAccessor = function() {
                                var result = {};
                                return result[eventName] = valueAccessor(), result;
                            };
                            return ko.bindingHandlers.event.init.call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);
                        }
                    };
                }("click"), ko.templateEngine = function() {}, ko.templateEngine.prototype.renderTemplateSource = function(templateSource, bindingContext, options, templateDocument) {
                    throw new Error("Override renderTemplateSource");
                }, ko.templateEngine.prototype.createJavaScriptEvaluatorBlock = function(script) {
                    throw new Error("Override createJavaScriptEvaluatorBlock");
                }, ko.templateEngine.prototype.makeTemplateSource = function(template, templateDocument) {
                    if ("string" == typeof template) {
                        var elem = (templateDocument = templateDocument || document).getElementById(template);
                        if (!elem) throw new Error("Cannot find template with ID " + template);
                        return new ko.templateSources.domElement(elem);
                    }
                    if (1 == template.nodeType || 8 == template.nodeType) return new ko.templateSources.anonymousTemplate(template);
                    throw new Error("Unknown template type: " + template);
                }, ko.templateEngine.prototype.renderTemplate = function(template, bindingContext, options, templateDocument) {
                    var templateSource = this.makeTemplateSource(template, templateDocument);
                    return this.renderTemplateSource(templateSource, bindingContext, options, templateDocument);
                }, ko.templateEngine.prototype.isTemplateRewritten = function(template, templateDocument) {
                    return !1 === this.allowTemplateRewriting || this.makeTemplateSource(template, templateDocument).data("isRewritten");
                }, ko.templateEngine.prototype.rewriteTemplate = function(template, rewriterCallback, templateDocument) {
                    var templateSource = this.makeTemplateSource(template, templateDocument), rewritten = rewriterCallback(templateSource.text());
                    templateSource.text(rewritten), templateSource.data("isRewritten", !0);
                }, ko.exportSymbol("templateEngine", ko.templateEngine), ko.templateRewriting = function() {
                    function validateDataBindValuesForRewriting(keyValueArray) {
                        for (var allValidators = ko.expressionRewriting.bindingRewriteValidators, i = 0; i < keyValueArray.length; i++) {
                            var key = keyValueArray[i].key;
                            if (allValidators.hasOwnProperty(key)) {
                                var validator = allValidators[key];
                                if ("function" == typeof validator) {
                                    var possibleErrorMessage = validator(keyValueArray[i].value);
                                    if (possibleErrorMessage) throw new Error(possibleErrorMessage);
                                } else if (!validator) throw new Error("This template engine does not support the '" + key + "' binding within its templates");
                            }
                        }
                    }
                    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {
                        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);
                        validateDataBindValuesForRewriting(dataBindKeyValueArray);
                        var applyBindingsToNextSiblingScript = "ko.__tr_ambtns(function($context,$element){return(function(){return{ " + ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {
                            valueAccessors: !0
                        }) + " } })()},'" + nodeName.toLowerCase() + "')";
                        return templateEngine.createJavaScriptEvaluatorBlock(applyBindingsToNextSiblingScript) + tagToRetain;
                    }
                    return {
                        ensureTemplateIsRewritten: function(template, templateEngine, templateDocument) {
                            templateEngine.isTemplateRewritten(template, templateDocument) || templateEngine.rewriteTemplate(template, function(htmlString) {
                                return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);
                            }, templateDocument);
                        },
                        memoizeBindingAttributeSyntax: function(htmlString, templateEngine) {
                            return htmlString.replace(/(<([a-z]+\d*)(?:\s+(?!data-bind\s*=\s*)[a-z0-9\-]+(?:=(?:\"[^\"]*\"|\'[^\']*\'|[^>]*))?)*\s+)data-bind\s*=\s*(["'])([\s\S]*?)\3/gi, function() {
                                return constructMemoizedTagReplacement(arguments[4], arguments[1], arguments[2], templateEngine);
                            }).replace(/<!--\s*ko\b\s*([\s\S]*?)\s*-->/g, function() {
                                return constructMemoizedTagReplacement(arguments[1], "\x3c!-- ko --\x3e", "#comment", templateEngine);
                            });
                        },
                        applyMemoizedBindingsToNextSibling: function(bindings, nodeName) {
                            return ko.memoization.memoize(function(domNode, bindingContext) {
                                var nodeToBind = domNode.nextSibling;
                                nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName && ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);
                            });
                        }
                    };
                }(), ko.exportSymbol("__tr_ambtns", ko.templateRewriting.applyMemoizedBindingsToNextSibling), 
                function() {
                    function getTemplateDomData(element) {
                        return ko.utils.domData.get(element, templatesDomDataKey) || {};
                    }
                    function setTemplateDomData(element, data) {
                        ko.utils.domData.set(element, templatesDomDataKey, data);
                    }
                    ko.templateSources = {};
                    ko.templateSources.domElement = function(element) {
                        if (this.domElement = element, element) {
                            var tagNameLower = ko.utils.tagNameLower(element);
                            this.templateType = "script" === tagNameLower ? 1 : "textarea" === tagNameLower ? 2 : "template" == tagNameLower && element.content && 11 === element.content.nodeType ? 3 : 4;
                        }
                    }, ko.templateSources.domElement.prototype.text = function() {
                        var elemContentsProperty = 1 === this.templateType ? "text" : 2 === this.templateType ? "value" : "innerHTML";
                        if (0 == arguments.length) return this.domElement[elemContentsProperty];
                        var valueToWrite = arguments[0];
                        "innerHTML" === elemContentsProperty ? ko.utils.setHtml(this.domElement, valueToWrite) : this.domElement[elemContentsProperty] = valueToWrite;
                    };
                    var dataDomDataPrefix = ko.utils.domData.nextKey() + "_";
                    ko.templateSources.domElement.prototype.data = function(key) {
                        if (1 === arguments.length) return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);
                        ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);
                    };
                    var templatesDomDataKey = ko.utils.domData.nextKey();
                    ko.templateSources.domElement.prototype.nodes = function() {
                        var element = this.domElement;
                        if (0 == arguments.length) return getTemplateDomData(element).containerData || (3 === this.templateType ? element.content : 4 === this.templateType ? element : undefined);
                        setTemplateDomData(element, {
                            containerData: arguments[0]
                        });
                    }, ko.templateSources.anonymousTemplate = function(element) {
                        this.domElement = element;
                    }, ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement(), 
                    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate, 
                    ko.templateSources.anonymousTemplate.prototype.text = function() {
                        if (0 == arguments.length) {
                            var templateData = getTemplateDomData(this.domElement);
                            return templateData.textData === undefined && templateData.containerData && (templateData.textData = templateData.containerData.innerHTML), 
                            templateData.textData;
                        }
                        var valueToWrite = arguments[0];
                        setTemplateDomData(this.domElement, {
                            textData: valueToWrite
                        });
                    }, ko.exportSymbol("templateSources", ko.templateSources), ko.exportSymbol("templateSources.domElement", ko.templateSources.domElement), 
                    ko.exportSymbol("templateSources.anonymousTemplate", ko.templateSources.anonymousTemplate);
                }(), function() {
                    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {
                        for (var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode); nextInQueue && (node = nextInQueue) !== firstOutOfRangeNode; ) action(node, nextInQueue = ko.virtualElements.nextSibling(node));
                    }
                    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {
                        if (continuousNodeArray.length) {
                            var firstNode = continuousNodeArray[0], lastNode = continuousNodeArray[continuousNodeArray.length - 1], parentNode = firstNode.parentNode, provider = ko.bindingProvider.instance, preprocessNode = provider.preprocessNode;
                            if (preprocessNode) {
                                if (invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {
                                    var nodePreviousSibling = node.previousSibling, newNodes = preprocessNode.call(provider, node);
                                    newNodes && (node === firstNode && (firstNode = newNodes[0] || nextNodeInRange), 
                                    node === lastNode && (lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling));
                                }), continuousNodeArray.length = 0, !firstNode) return;
                                firstNode === lastNode ? continuousNodeArray.push(firstNode) : (continuousNodeArray.push(firstNode, lastNode), 
                                ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode));
                            }
                            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {
                                1 !== node.nodeType && 8 !== node.nodeType || ko.applyBindings(bindingContext, node);
                            }), invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {
                                1 !== node.nodeType && 8 !== node.nodeType || ko.memoization.unmemoizeDomNodeAndDescendants(node, [ bindingContext ]);
                            }), ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);
                        }
                    }
                    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {
                        return nodeOrNodeArray.nodeType ? nodeOrNodeArray : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0] : null;
                    }
                    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {
                        options = options || {};
                        var templateDocument = (targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray) || template || {}).ownerDocument, templateEngineToUse = options.templateEngine || _templateEngine;
                        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);
                        var renderedNodesArray = templateEngineToUse.renderTemplate(template, bindingContext, options, templateDocument);
                        if ("number" != typeof renderedNodesArray.length || renderedNodesArray.length > 0 && "number" != typeof renderedNodesArray[0].nodeType) throw new Error("Template engine must return an array of DOM nodes");
                        var haveAddedNodesToParent = !1;
                        switch (renderMode) {
                          case "replaceChildren":
                            ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray), 
                            haveAddedNodesToParent = !0;
                            break;

                          case "replaceNode":
                            ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray), haveAddedNodesToParent = !0;
                            break;

                          case "ignoreTargetNode":
                            break;

                          default:
                            throw new Error("Unknown renderMode: " + renderMode);
                        }
                        return haveAddedNodesToParent && (activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext), 
                        options.afterRender && ko.dependencyDetection.ignore(options.afterRender, null, [ renderedNodesArray, bindingContext.$data ])), 
                        renderedNodesArray;
                    }
                    function resolveTemplateName(template, data, context) {
                        return ko.isObservable(template) ? template() : "function" == typeof template ? template(data, context) : template;
                    }
                    function disposeOldComputedAndStoreNewOne(element, newComputed) {
                        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);
                        oldComputed && "function" == typeof oldComputed.dispose && oldComputed.dispose(), 
                        ko.utils.domData.set(element, templateComputedDomDataKey, newComputed && newComputed.isActive() ? newComputed : undefined);
                    }
                    var _templateEngine;
                    ko.setTemplateEngine = function(templateEngine) {
                        if (templateEngine != undefined && !(templateEngine instanceof ko.templateEngine)) throw new Error("templateEngine must inherit from ko.templateEngine");
                        _templateEngine = templateEngine;
                    }, ko.renderTemplate = function(template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {
                        if (((options = options || {}).templateEngine || _templateEngine) == undefined) throw new Error("Set a template engine before calling renderTemplate");
                        if (renderMode = renderMode || "replaceChildren", targetNodeOrNodeArray) {
                            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray), whenToDispose = function() {
                                return !firstTargetNode || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode);
                            }, activelyDisposeWhenNodeIsRemoved = firstTargetNode && "replaceNode" == renderMode ? firstTargetNode.parentNode : firstTargetNode;
                            return ko.dependentObservable(function() {
                                var bindingContext = dataOrBindingContext && dataOrBindingContext instanceof ko.bindingContext ? dataOrBindingContext : new ko.bindingContext(dataOrBindingContext, null, null, null, {
                                    exportDependencies: !0
                                }), templateName = resolveTemplateName(template, bindingContext.$data, bindingContext), renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);
                                "replaceNode" == renderMode && (firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray = renderedNodesArray));
                            }, null, {
                                disposeWhen: whenToDispose,
                                disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved
                            });
                        }
                        return ko.memoization.memoize(function(domNode) {
                            ko.renderTemplate(template, dataOrBindingContext, options, domNode, "replaceNode");
                        });
                    }, ko.renderTemplateForEach = function(template, arrayOrObservableArray, options, targetNode, parentBindingContext) {
                        var arrayItemContext, executeTemplateForArrayItem = function(arrayValue, index) {
                            return arrayItemContext = parentBindingContext.createChildContext(arrayValue, options.as, function(context) {
                                context.$index = index;
                            }), executeTemplate(null, "ignoreTargetNode", resolveTemplateName(template, arrayValue, arrayItemContext), arrayItemContext, options);
                        }, activateBindingsCallback = function(arrayValue, addedNodesArray, index) {
                            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext), options.afterRender && options.afterRender(addedNodesArray, arrayValue), 
                            arrayItemContext = null;
                        };
                        return ko.dependentObservable(function() {
                            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];
                            void 0 === unwrappedArray.length && (unwrappedArray = [ unwrappedArray ]);
                            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {
                                return options.includeDestroyed || item === undefined || null === item || !ko.utils.unwrapObservable(item._destroy);
                            });
                            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [ targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback ]);
                        }, null, {
                            disposeWhenNodeIsRemoved: targetNode
                        });
                    };
                    var templateComputedDomDataKey = ko.utils.domData.nextKey();
                    ko.bindingHandlers.template = {
                        init: function(element, valueAccessor) {
                            var bindingValue = ko.utils.unwrapObservable(valueAccessor());
                            if ("string" == typeof bindingValue || bindingValue.name) ko.virtualElements.emptyNode(element); else if ("nodes" in bindingValue) {
                                var nodes = bindingValue.nodes || [];
                                if (ko.isObservable(nodes)) throw new Error('The "nodes" option must be a plain, non-observable array.');
                                container = ko.utils.moveCleanedNodesToContainerElement(nodes);
                                new ko.templateSources.anonymousTemplate(element).nodes(container);
                            } else {
                                var templateNodes = ko.virtualElements.childNodes(element), container = ko.utils.moveCleanedNodesToContainerElement(templateNodes);
                                new ko.templateSources.anonymousTemplate(element).nodes(container);
                            }
                            return {
                                controlsDescendantBindings: !0
                            };
                        },
                        update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
                            var templateName, value = valueAccessor(), options = ko.utils.unwrapObservable(value), shouldDisplay = !0, templateComputed = null;
                            if ("string" == typeof options ? (templateName = value, options = {}) : (templateName = options.name, 
                            "if" in options && (shouldDisplay = ko.utils.unwrapObservable(options.if)), shouldDisplay && "ifnot" in options && (shouldDisplay = !ko.utils.unwrapObservable(options.ifnot))), 
                            "foreach" in options) {
                                var dataArray = shouldDisplay && options.foreach || [];
                                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);
                            } else if (shouldDisplay) {
                                var innerBindingContext = "data" in options ? bindingContext.createStaticChildContext(options.data, options.as) : bindingContext;
                                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);
                            } else ko.virtualElements.emptyNode(element);
                            disposeOldComputedAndStoreNewOne(element, templateComputed);
                        }
                    }, ko.expressionRewriting.bindingRewriteValidators.template = function(bindingValue) {
                        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);
                        return 1 == parsedBindingValue.length && parsedBindingValue[0].unknown ? null : ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, "name") ? null : "This template engine does not support anonymous templates nested within its templates";
                    }, ko.virtualElements.allowedBindings.template = !0;
                }(), ko.exportSymbol("setTemplateEngine", ko.setTemplateEngine), ko.exportSymbol("renderTemplate", ko.renderTemplate), 
                ko.utils.findMovesInArrayComparison = function(left, right, limitFailedCompares) {
                    if (left.length && right.length) {
                        var failedCompares, l, r, leftItem, rightItem;
                        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {
                            for (r = 0; rightItem = right[r]; ++r) if (leftItem.value === rightItem.value) {
                                leftItem.moved = rightItem.index, rightItem.moved = leftItem.index, right.splice(r, 1), 
                                failedCompares = r = 0;
                                break;
                            }
                            failedCompares += r;
                        }
                    }
                }, ko.utils.compareArrays = function() {
                    function compareArrays(oldArray, newArray, options) {
                        return options = "boolean" == typeof options ? {
                            dontLimitMoves: options
                        } : options || {}, oldArray = oldArray || [], newArray = newArray || [], oldArray.length < newArray.length ? compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options) : compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);
                    }
                    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {
                        var smlIndex, bigIndex, thisRow, lastRow, bigIndexMaxForRow, myMin = Math.min, myMax = Math.max, editDistanceMatrix = [], smlIndexMax = smlArray.length, bigIndexMax = bigArray.length, compareRange = bigIndexMax - smlIndexMax || 1, maxDistance = smlIndexMax + bigIndexMax + 1;
                        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) for (lastRow = thisRow, 
                        editDistanceMatrix.push(thisRow = []), bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange), 
                        bigIndex = myMax(0, smlIndex - 1); bigIndex <= bigIndexMaxForRow; bigIndex++) if (bigIndex) if (smlIndex) if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1]) thisRow[bigIndex] = lastRow[bigIndex - 1]; else {
                            var northDistance = lastRow[bigIndex] || maxDistance, westDistance = thisRow[bigIndex - 1] || maxDistance;
                            thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;
                        } else thisRow[bigIndex] = bigIndex + 1; else thisRow[bigIndex] = smlIndex + 1;
                        var meMinusOne, editScript = [], notInSml = [], notInBig = [];
                        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex; ) meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1, 
                        bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex - 1] ? notInSml.push(editScript[editScript.length] = {
                            status: statusNotInSml,
                            value: bigArray[--bigIndex],
                            index: bigIndex
                        }) : smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex] ? notInBig.push(editScript[editScript.length] = {
                            status: statusNotInBig,
                            value: smlArray[--smlIndex],
                            index: smlIndex
                        }) : (--bigIndex, --smlIndex, options.sparse || editScript.push({
                            status: "retained",
                            value: bigArray[bigIndex]
                        }));
                        return ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options.dontLimitMoves && 10 * smlIndexMax), 
                        editScript.reverse();
                    }
                    var statusNotInOld = "added", statusNotInNew = "deleted";
                    return compareArrays;
                }(), ko.exportSymbol("utils.compareArrays", ko.utils.compareArrays), function() {
                    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {
                        var mappedNodes = [], dependentObservable = ko.dependentObservable(function() {
                            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];
                            mappedNodes.length > 0 && (ko.utils.replaceDomNodes(mappedNodes, newMappedNodes), 
                            callbackAfterAddingNodes && ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [ valueToMap, newMappedNodes, index ])), 
                            mappedNodes.length = 0, ko.utils.arrayPushAll(mappedNodes, newMappedNodes);
                        }, null, {
                            disposeWhenNodeIsRemoved: containerNode,
                            disposeWhen: function() {
                                return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes);
                            }
                        });
                        return {
                            mappedNodes: mappedNodes,
                            dependentObservable: dependentObservable.isActive() ? dependentObservable : undefined
                        };
                    }
                    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(), deletedItemDummyValue = ko.utils.domData.nextKey();
                    ko.utils.setDomNodeChildrenFromArrayMapping = function(domNode, array, mapping, options, callbackAfterAddingNodes) {
                        function itemMovedOrRetained(editScriptIndex, oldPosition) {
                            mapData = lastMappingResult[oldPosition], newMappingResultIndex !== oldPosition && (itemsForMoveCallbacks[editScriptIndex] = mapData), 
                            mapData.indexObservable(newMappingResultIndex++), ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode), 
                            newMappingResult.push(mapData), itemsToProcess.push(mapData);
                        }
                        function callCallback(callback, items) {
                            if (callback) for (var i = 0, n = items.length; i < n; i++) items[i] && ko.utils.arrayForEach(items[i].mappedNodes, function(node) {
                                callback(node, i, items[i].arrayEntry);
                            });
                        }
                        array = array || [], options = options || {};
                        for (var mapData, editScriptItem, movedIndex, isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined, lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [], lastArray = ko.utils.arrayMap(lastMappingResult, function(x) {
                            return x.arrayEntry;
                        }), editScript = ko.utils.compareArrays(lastArray, array, options.dontLimitMoves), newMappingResult = [], lastMappingResultIndex = 0, newMappingResultIndex = 0, nodesToDelete = [], itemsToProcess = [], itemsForBeforeRemoveCallbacks = [], itemsForMoveCallbacks = [], itemsForAfterAddCallbacks = [], i = 0; editScriptItem = editScript[i]; i++) switch (movedIndex = editScriptItem.moved, 
                        editScriptItem.status) {
                          case "deleted":
                            movedIndex === undefined && ((mapData = lastMappingResult[lastMappingResultIndex]).dependentObservable && (mapData.dependentObservable.dispose(), 
                            mapData.dependentObservable = undefined), ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length && (options.beforeRemove && (newMappingResult.push(mapData), 
                            itemsToProcess.push(mapData), mapData.arrayEntry === deletedItemDummyValue ? mapData = null : itemsForBeforeRemoveCallbacks[i] = mapData), 
                            mapData && nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes))), lastMappingResultIndex++;
                            break;

                          case "retained":
                            itemMovedOrRetained(i, lastMappingResultIndex++);
                            break;

                          case "added":
                            movedIndex !== undefined ? itemMovedOrRetained(i, movedIndex) : (mapData = {
                                arrayEntry: editScriptItem.value,
                                indexObservable: ko.observable(newMappingResultIndex++)
                            }, newMappingResult.push(mapData), itemsToProcess.push(mapData), isFirstExecution || (itemsForAfterAddCallbacks[i] = mapData));
                        }
                        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult), callCallback(options.beforeMove, itemsForMoveCallbacks), 
                        ko.utils.arrayForEach(nodesToDelete, options.beforeRemove ? ko.cleanNode : ko.removeNode);
                        for (var lastNode, node, i = 0, nextNode = ko.virtualElements.firstChild(domNode); mapData = itemsToProcess[i]; i++) {
                            mapData.mappedNodes || ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));
                            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, 
                            j++) node !== nextNode && ko.virtualElements.insertAfter(domNode, node, lastNode);
                            !mapData.initialized && callbackAfterAddingNodes && (callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable), 
                            mapData.initialized = !0);
                        }
                        for (callCallback(options.beforeRemove, itemsForBeforeRemoveCallbacks), i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) itemsForBeforeRemoveCallbacks[i] && (itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue);
                        callCallback(options.afterMove, itemsForMoveCallbacks), callCallback(options.afterAdd, itemsForAfterAddCallbacks);
                    };
                }(), ko.exportSymbol("utils.setDomNodeChildrenFromArrayMapping", ko.utils.setDomNodeChildrenFromArrayMapping), 
                ko.nativeTemplateEngine = function() {
                    this.allowTemplateRewriting = !1;
                }, ko.nativeTemplateEngine.prototype = new ko.templateEngine(), ko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine, 
                ko.nativeTemplateEngine.prototype.renderTemplateSource = function(templateSource, bindingContext, options, templateDocument) {
                    var templateNodes = (!(ko.utils.ieVersion < 9) ? templateSource.nodes : null) ? templateSource.nodes() : null;
                    if (templateNodes) return ko.utils.makeArray(templateNodes.cloneNode(!0).childNodes);
                    var templateText = templateSource.text();
                    return ko.utils.parseHtmlFragment(templateText, templateDocument);
                }, ko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine(), ko.setTemplateEngine(ko.nativeTemplateEngine.instance), 
                ko.exportSymbol("nativeTemplateEngine", ko.nativeTemplateEngine), function() {
                    ko.jqueryTmplTemplateEngine = function() {
                        function ensureHasReferencedJQueryTemplates() {
                            if (jQueryTmplVersion < 2) throw new Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.");
                        }
                        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {
                            return jQueryInstance.tmpl(compiledTemplate, data, jQueryTemplateOptions);
                        }
                        var jQueryTmplVersion = this.jQueryTmplVersion = function() {
                            if (!jQueryInstance || !jQueryInstance.tmpl) return 0;
                            try {
                                if (jQueryInstance.tmpl.tag.tmpl.open.toString().indexOf("__") >= 0) return 2;
                            } catch (ex) {}
                            return 1;
                        }();
                        this.renderTemplateSource = function(templateSource, bindingContext, options, templateDocument) {
                            templateDocument = templateDocument || document, options = options || {}, ensureHasReferencedJQueryTemplates();
                            var precompiled = templateSource.data("precompiled");
                            if (!precompiled) {
                                var templateText = templateSource.text() || "";
                                templateText = "{{ko_with $item.koBindingContext}}" + templateText + "{{/ko_with}}", 
                                precompiled = jQueryInstance.template(null, templateText), templateSource.data("precompiled", precompiled);
                            }
                            var resultNodes = executeTemplate(precompiled, [ bindingContext.$data ], jQueryInstance.extend({
                                koBindingContext: bindingContext
                            }, options.templateOptions));
                            return resultNodes.appendTo(templateDocument.createElement("div")), jQueryInstance.fragments = {}, 
                            resultNodes;
                        }, this.createJavaScriptEvaluatorBlock = function(script) {
                            return "{{ko_code ((function() { return " + script + " })()) }}";
                        }, this.addTemplate = function(templateName, templateMarkup) {
                            document.write("<script type='text/html' id='" + templateName + "'>" + templateMarkup + "<\/script>");
                        }, jQueryTmplVersion > 0 && (jQueryInstance.tmpl.tag.ko_code = {
                            open: "__.push($1 || '');"
                        }, jQueryInstance.tmpl.tag.ko_with = {
                            open: "with($1) {",
                            close: "} "
                        });
                    }, ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine(), ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;
                    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();
                    jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0 && ko.setTemplateEngine(jqueryTmplTemplateEngineInstance), 
                    ko.exportSymbol("jqueryTmplTemplateEngine", ko.jqueryTmplTemplateEngine);
                }();
            });
        }();
    }();
}(), function() {
    var define = System.amdDefine;
    !function(global, factory) {
        "object" == typeof module && "object" == typeof module.exports ? module.exports = global.document ? factory(global, !0) : function(w) {
            if (!w.document) throw new Error("jQuery requires a window with a document");
            return factory(w);
        } : factory(global);
    }("undefined" != typeof window ? window : this, function(window, noGlobal) {
        function isArraylike(obj) {
            var length = obj.length, type = jQuery.type(obj);
            return "function" !== type && !jQuery.isWindow(obj) && (!(1 !== obj.nodeType || !length) || ("array" === type || 0 === length || "number" == typeof length && length > 0 && length - 1 in obj));
        }
        function winnow(elements, qualifier, not) {
            if (jQuery.isFunction(qualifier)) return jQuery.grep(elements, function(elem, i) {
                return !!qualifier.call(elem, i, elem) !== not;
            });
            if (qualifier.nodeType) return jQuery.grep(elements, function(elem) {
                return elem === qualifier !== not;
            });
            if ("string" == typeof qualifier) {
                if (risSimple.test(qualifier)) return jQuery.filter(qualifier, elements, not);
                qualifier = jQuery.filter(qualifier, elements);
            }
            return jQuery.grep(elements, function(elem) {
                return jQuery.inArray(elem, qualifier) >= 0 !== not;
            });
        }
        function sibling(cur, dir) {
            do {
                cur = cur[dir];
            } while (cur && 1 !== cur.nodeType);
            return cur;
        }
        function createOptions(options) {
            var object = optionsCache[options] = {};
            return jQuery.each(options.match(rnotwhite) || [], function(_, flag) {
                object[flag] = !0;
            }), object;
        }
        function detach() {
            document.addEventListener ? (document.removeEventListener("DOMContentLoaded", completed, !1), 
            window.removeEventListener("load", completed, !1)) : (document.detachEvent("onreadystatechange", completed), 
            window.detachEvent("onload", completed));
        }
        function completed() {
            (document.addEventListener || "load" === event.type || "complete" === document.readyState) && (detach(), 
            jQuery.ready());
        }
        function dataAttr(elem, key, data) {
            if (void 0 === data && 1 === elem.nodeType) {
                var name = "data-" + key.replace(rmultiDash, "-$1").toLowerCase();
                if ("string" == typeof (data = elem.getAttribute(name))) {
                    try {
                        data = "true" === data || "false" !== data && ("null" === data ? null : +data + "" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data);
                    } catch (e) {}
                    jQuery.data(elem, key, data);
                } else data = void 0;
            }
            return data;
        }
        function isEmptyDataObject(obj) {
            var name;
            for (name in obj) if (("data" !== name || !jQuery.isEmptyObject(obj[name])) && "toJSON" !== name) return !1;
            return !0;
        }
        function internalData(elem, name, data, pvt) {
            if (jQuery.acceptData(elem)) {
                var ret, thisCache, internalKey = jQuery.expando, isNode = elem.nodeType, cache = isNode ? jQuery.cache : elem, id = isNode ? elem[internalKey] : elem[internalKey] && internalKey;
                if (id && cache[id] && (pvt || cache[id].data) || void 0 !== data || "string" != typeof name) return id || (id = isNode ? elem[internalKey] = deletedIds.pop() || jQuery.guid++ : internalKey), 
                cache[id] || (cache[id] = isNode ? {} : {
                    toJSON: jQuery.noop
                }), "object" != typeof name && "function" != typeof name || (pvt ? cache[id] = jQuery.extend(cache[id], name) : cache[id].data = jQuery.extend(cache[id].data, name)), 
                thisCache = cache[id], pvt || (thisCache.data || (thisCache.data = {}), thisCache = thisCache.data), 
                void 0 !== data && (thisCache[jQuery.camelCase(name)] = data), "string" == typeof name ? null == (ret = thisCache[name]) && (ret = thisCache[jQuery.camelCase(name)]) : ret = thisCache, 
                ret;
            }
        }
        function internalRemoveData(elem, name, pvt) {
            if (jQuery.acceptData(elem)) {
                var thisCache, i, isNode = elem.nodeType, cache = isNode ? jQuery.cache : elem, id = isNode ? elem[jQuery.expando] : jQuery.expando;
                if (cache[id]) {
                    if (name && (thisCache = pvt ? cache[id] : cache[id].data)) {
                        i = (name = jQuery.isArray(name) ? name.concat(jQuery.map(name, jQuery.camelCase)) : name in thisCache ? [ name ] : (name = jQuery.camelCase(name)) in thisCache ? [ name ] : name.split(" ")).length;
                        for (;i--; ) delete thisCache[name[i]];
                        if (pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache)) return;
                    }
                    (pvt || (delete cache[id].data, isEmptyDataObject(cache[id]))) && (isNode ? jQuery.cleanData([ elem ], !0) : support.deleteExpando || cache != cache.window ? delete cache[id] : cache[id] = null);
                }
            }
        }
        function returnTrue() {
            return !0;
        }
        function returnFalse() {
            return !1;
        }
        function safeActiveElement() {
            try {
                return document.activeElement;
            } catch (err) {}
        }
        function createSafeFragment(document) {
            var list = nodeNames.split("|"), safeFrag = document.createDocumentFragment();
            if (safeFrag.createElement) for (;list.length; ) safeFrag.createElement(list.pop());
            return safeFrag;
        }
        function getAll(context, tag) {
            var elems, elem, i = 0, found = typeof context.getElementsByTagName !== strundefined ? context.getElementsByTagName(tag || "*") : typeof context.querySelectorAll !== strundefined ? context.querySelectorAll(tag || "*") : void 0;
            if (!found) for (found = [], elems = context.childNodes || context; null != (elem = elems[i]); i++) !tag || jQuery.nodeName(elem, tag) ? found.push(elem) : jQuery.merge(found, getAll(elem, tag));
            return void 0 === tag || tag && jQuery.nodeName(context, tag) ? jQuery.merge([ context ], found) : found;
        }
        function fixDefaultChecked(elem) {
            rcheckableType.test(elem.type) && (elem.defaultChecked = elem.checked);
        }
        function manipulationTarget(elem, content) {
            return jQuery.nodeName(elem, "table") && jQuery.nodeName(11 !== content.nodeType ? content : content.firstChild, "tr") ? elem.getElementsByTagName("tbody")[0] || elem.appendChild(elem.ownerDocument.createElement("tbody")) : elem;
        }
        function disableScript(elem) {
            return elem.type = (null !== jQuery.find.attr(elem, "type")) + "/" + elem.type, 
            elem;
        }
        function restoreScript(elem) {
            var match = rscriptTypeMasked.exec(elem.type);
            return match ? elem.type = match[1] : elem.removeAttribute("type"), elem;
        }
        function setGlobalEval(elems, refElements) {
            for (var elem, i = 0; null != (elem = elems[i]); i++) jQuery._data(elem, "globalEval", !refElements || jQuery._data(refElements[i], "globalEval"));
        }
        function cloneCopyEvent(src, dest) {
            if (1 === dest.nodeType && jQuery.hasData(src)) {
                var type, i, l, oldData = jQuery._data(src), curData = jQuery._data(dest, oldData), events = oldData.events;
                if (events) {
                    delete curData.handle, curData.events = {};
                    for (type in events) for (i = 0, l = events[type].length; i < l; i++) jQuery.event.add(dest, type, events[type][i]);
                }
                curData.data && (curData.data = jQuery.extend({}, curData.data));
            }
        }
        function fixCloneNodeIssues(src, dest) {
            var nodeName, e, data;
            if (1 === dest.nodeType) {
                if (nodeName = dest.nodeName.toLowerCase(), !support.noCloneEvent && dest[jQuery.expando]) {
                    data = jQuery._data(dest);
                    for (e in data.events) jQuery.removeEvent(dest, e, data.handle);
                    dest.removeAttribute(jQuery.expando);
                }
                "script" === nodeName && dest.text !== src.text ? (disableScript(dest).text = src.text, 
                restoreScript(dest)) : "object" === nodeName ? (dest.parentNode && (dest.outerHTML = src.outerHTML), 
                support.html5Clone && src.innerHTML && !jQuery.trim(dest.innerHTML) && (dest.innerHTML = src.innerHTML)) : "input" === nodeName && rcheckableType.test(src.type) ? (dest.defaultChecked = dest.checked = src.checked, 
                dest.value !== src.value && (dest.value = src.value)) : "option" === nodeName ? dest.defaultSelected = dest.selected = src.defaultSelected : "input" !== nodeName && "textarea" !== nodeName || (dest.defaultValue = src.defaultValue);
            }
        }
        function actualDisplay(name, doc) {
            var elem = jQuery(doc.createElement(name)).appendTo(doc.body), display = window.getDefaultComputedStyle ? window.getDefaultComputedStyle(elem[0]).display : jQuery.css(elem[0], "display");
            return elem.detach(), display;
        }
        function defaultDisplay(nodeName) {
            var doc = document, display = elemdisplay[nodeName];
            return display || ("none" !== (display = actualDisplay(nodeName, doc)) && display || ((doc = ((iframe = (iframe || jQuery("<iframe frameborder='0' width='0' height='0'/>")).appendTo(doc.documentElement))[0].contentWindow || iframe[0].contentDocument).document).write(), 
            doc.close(), display = actualDisplay(nodeName, doc), iframe.detach()), elemdisplay[nodeName] = display), 
            display;
        }
        function addGetHookIf(conditionFn, hookFn) {
            return {
                get: function() {
                    var condition = conditionFn();
                    if (null != condition) return condition ? void delete this.get : (this.get = hookFn).apply(this, arguments);
                }
            };
        }
        function vendorPropName(style, name) {
            if (name in style) return name;
            for (var capName = name.charAt(0).toUpperCase() + name.slice(1), origName = name, i = cssPrefixes.length; i--; ) if ((name = cssPrefixes[i] + capName) in style) return name;
            return origName;
        }
        function showHide(elements, show) {
            for (var display, elem, hidden, values = [], index = 0, length = elements.length; index < length; index++) (elem = elements[index]).style && (values[index] = jQuery._data(elem, "olddisplay"), 
            display = elem.style.display, show ? (values[index] || "none" !== display || (elem.style.display = ""), 
            "" === elem.style.display && isHidden(elem) && (values[index] = jQuery._data(elem, "olddisplay", defaultDisplay(elem.nodeName)))) : values[index] || (hidden = isHidden(elem), 
            (display && "none" !== display || !hidden) && jQuery._data(elem, "olddisplay", hidden ? display : jQuery.css(elem, "display"))));
            for (index = 0; index < length; index++) (elem = elements[index]).style && (show && "none" !== elem.style.display && "" !== elem.style.display || (elem.style.display = show ? values[index] || "" : "none"));
            return elements;
        }
        function setPositiveNumber(elem, value, subtract) {
            var matches = rnumsplit.exec(value);
            return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || "px") : value;
        }
        function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
            for (var i = extra === (isBorderBox ? "border" : "content") ? 4 : "width" === name ? 1 : 0, val = 0; i < 4; i += 2) "margin" === extra && (val += jQuery.css(elem, extra + cssExpand[i], !0, styles)), 
            isBorderBox ? ("content" === extra && (val -= jQuery.css(elem, "padding" + cssExpand[i], !0, styles)), 
            "margin" !== extra && (val -= jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles))) : (val += jQuery.css(elem, "padding" + cssExpand[i], !0, styles), 
            "padding" !== extra && (val += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles)));
            return val;
        }
        function getWidthOrHeight(elem, name, extra) {
            var valueIsBorderBox = !0, val = "width" === name ? elem.offsetWidth : elem.offsetHeight, styles = getStyles(elem), isBorderBox = support.boxSizing() && "border-box" === jQuery.css(elem, "boxSizing", !1, styles);
            if (val <= 0 || null == val) {
                if (((val = curCSS(elem, name, styles)) < 0 || null == val) && (val = elem.style[name]), 
                rnumnonpx.test(val)) return val;
                valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]), 
                val = parseFloat(val) || 0;
            }
            return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles) + "px";
        }
        function Tween(elem, options, prop, end, easing) {
            return new Tween.prototype.init(elem, options, prop, end, easing);
        }
        function createFxNow() {
            return setTimeout(function() {
                fxNow = void 0;
            }), fxNow = jQuery.now();
        }
        function genFx(type, includeWidth) {
            var which, attrs = {
                height: type
            }, i = 0;
            for (includeWidth = includeWidth ? 1 : 0; i < 4; i += 2 - includeWidth) attrs["margin" + (which = cssExpand[i])] = attrs["padding" + which] = type;
            return includeWidth && (attrs.opacity = attrs.width = type), attrs;
        }
        function createTween(value, prop, animation) {
            for (var tween, collection = (tweeners[prop] || []).concat(tweeners["*"]), index = 0, length = collection.length; index < length; index++) if (tween = collection[index].call(animation, prop, value)) return tween;
        }
        function defaultPrefilter(elem, props, opts) {
            var prop, value, toggle, tween, hooks, oldfire, display, dDisplay, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHidden(elem), dataShow = jQuery._data(elem, "fxshow");
            opts.queue || (null == (hooks = jQuery._queueHooks(elem, "fx")).unqueued && (hooks.unqueued = 0, 
            oldfire = hooks.empty.fire, hooks.empty.fire = function() {
                hooks.unqueued || oldfire();
            }), hooks.unqueued++, anim.always(function() {
                anim.always(function() {
                    hooks.unqueued--, jQuery.queue(elem, "fx").length || hooks.empty.fire();
                });
            })), 1 === elem.nodeType && ("height" in props || "width" in props) && (opts.overflow = [ style.overflow, style.overflowX, style.overflowY ], 
            display = jQuery.css(elem, "display"), dDisplay = defaultDisplay(elem.nodeName), 
            "none" === display && (display = dDisplay), "inline" === display && "none" === jQuery.css(elem, "float") && (support.inlineBlockNeedsLayout && "inline" !== dDisplay ? style.zoom = 1 : style.display = "inline-block")), 
            opts.overflow && (style.overflow = "hidden", support.shrinkWrapBlocks() || anim.always(function() {
                style.overflow = opts.overflow[0], style.overflowX = opts.overflow[1], style.overflowY = opts.overflow[2];
            }));
            for (prop in props) if (value = props[prop], rfxtypes.exec(value)) {
                if (delete props[prop], toggle = toggle || "toggle" === value, value === (hidden ? "hide" : "show")) {
                    if ("show" !== value || !dataShow || void 0 === dataShow[prop]) continue;
                    hidden = !0;
                }
                orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
            }
            if (!jQuery.isEmptyObject(orig)) {
                dataShow ? "hidden" in dataShow && (hidden = dataShow.hidden) : dataShow = jQuery._data(elem, "fxshow", {}), 
                toggle && (dataShow.hidden = !hidden), hidden ? jQuery(elem).show() : anim.done(function() {
                    jQuery(elem).hide();
                }), anim.done(function() {
                    var prop;
                    jQuery._removeData(elem, "fxshow");
                    for (prop in orig) jQuery.style(elem, prop, orig[prop]);
                });
                for (prop in orig) tween = createTween(hidden ? dataShow[prop] : 0, prop, anim), 
                prop in dataShow || (dataShow[prop] = tween.start, hidden && (tween.end = tween.start, 
                tween.start = "width" === prop || "height" === prop ? 1 : 0));
            }
        }
        function propFilter(props, specialEasing) {
            var index, name, easing, value, hooks;
            for (index in props) if (name = jQuery.camelCase(index), easing = specialEasing[name], 
            value = props[index], jQuery.isArray(value) && (easing = value[1], value = props[index] = value[0]), 
            index !== name && (props[name] = value, delete props[index]), (hooks = jQuery.cssHooks[name]) && "expand" in hooks) {
                value = hooks.expand(value), delete props[name];
                for (index in value) index in props || (props[index] = value[index], specialEasing[index] = easing);
            } else specialEasing[name] = easing;
        }
        function Animation(elem, properties, options) {
            var result, stopped, index = 0, length = animationPrefilters.length, deferred = jQuery.Deferred().always(function() {
                delete tick.elem;
            }), tick = function() {
                if (stopped) return !1;
                for (var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), percent = 1 - (remaining / animation.duration || 0), index = 0, length = animation.tweens.length; index < length; index++) animation.tweens[index].run(percent);
                return deferred.notifyWith(elem, [ animation, percent, remaining ]), percent < 1 && length ? remaining : (deferred.resolveWith(elem, [ animation ]), 
                !1);
            }, animation = deferred.promise({
                elem: elem,
                props: jQuery.extend({}, properties),
                opts: jQuery.extend(!0, {
                    specialEasing: {}
                }, options),
                originalProperties: properties,
                originalOptions: options,
                startTime: fxNow || createFxNow(),
                duration: options.duration,
                tweens: [],
                createTween: function(prop, end) {
                    var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
                    return animation.tweens.push(tween), tween;
                },
                stop: function(gotoEnd) {
                    var index = 0, length = gotoEnd ? animation.tweens.length : 0;
                    if (stopped) return this;
                    for (stopped = !0; index < length; index++) animation.tweens[index].run(1);
                    return gotoEnd ? deferred.resolveWith(elem, [ animation, gotoEnd ]) : deferred.rejectWith(elem, [ animation, gotoEnd ]), 
                    this;
                }
            }), props = animation.props;
            for (propFilter(props, animation.opts.specialEasing); index < length; index++) if (result = animationPrefilters[index].call(animation, elem, props, animation.opts)) return result;
            return jQuery.map(props, createTween, animation), jQuery.isFunction(animation.opts.start) && animation.opts.start.call(elem, animation), 
            jQuery.fx.timer(jQuery.extend(tick, {
                elem: elem,
                anim: animation,
                queue: animation.opts.queue
            })), animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
        }
        function addToPrefiltersOrTransports(structure) {
            return function(dataTypeExpression, func) {
                "string" != typeof dataTypeExpression && (func = dataTypeExpression, dataTypeExpression = "*");
                var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];
                if (jQuery.isFunction(func)) for (;dataType = dataTypes[i++]; ) "+" === dataType.charAt(0) ? (dataType = dataType.slice(1) || "*", 
                (structure[dataType] = structure[dataType] || []).unshift(func)) : (structure[dataType] = structure[dataType] || []).push(func);
            };
        }
        function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
            function inspect(dataType) {
                var selected;
                return inspected[dataType] = !0, jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
                    var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
                    return "string" != typeof dataTypeOrTransport || seekingTransport || inspected[dataTypeOrTransport] ? seekingTransport ? !(selected = dataTypeOrTransport) : void 0 : (options.dataTypes.unshift(dataTypeOrTransport), 
                    inspect(dataTypeOrTransport), !1);
                }), selected;
            }
            var inspected = {}, seekingTransport = structure === transports;
            return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
        }
        function ajaxExtend(target, src) {
            var deep, key, flatOptions = jQuery.ajaxSettings.flatOptions || {};
            for (key in src) void 0 !== src[key] && ((flatOptions[key] ? target : deep || (deep = {}))[key] = src[key]);
            return deep && jQuery.extend(!0, target, deep), target;
        }
        function ajaxHandleResponses(s, jqXHR, responses) {
            for (var firstDataType, ct, finalDataType, type, contents = s.contents, dataTypes = s.dataTypes; "*" === dataTypes[0]; ) dataTypes.shift(), 
            void 0 === ct && (ct = s.mimeType || jqXHR.getResponseHeader("Content-Type"));
            if (ct) for (type in contents) if (contents[type] && contents[type].test(ct)) {
                dataTypes.unshift(type);
                break;
            }
            if (dataTypes[0] in responses) finalDataType = dataTypes[0]; else {
                for (type in responses) {
                    if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                        finalDataType = type;
                        break;
                    }
                    firstDataType || (firstDataType = type);
                }
                finalDataType = finalDataType || firstDataType;
            }
            if (finalDataType) return finalDataType !== dataTypes[0] && dataTypes.unshift(finalDataType), 
            responses[finalDataType];
        }
        function ajaxConvert(s, response, jqXHR, isSuccess) {
            var conv2, current, conv, tmp, prev, converters = {}, dataTypes = s.dataTypes.slice();
            if (dataTypes[1]) for (conv in s.converters) converters[conv.toLowerCase()] = s.converters[conv];
            for (current = dataTypes.shift(); current; ) if (s.responseFields[current] && (jqXHR[s.responseFields[current]] = response), 
            !prev && isSuccess && s.dataFilter && (response = s.dataFilter(response, s.dataType)), 
            prev = current, current = dataTypes.shift()) if ("*" === current) current = prev; else if ("*" !== prev && prev !== current) {
                if (!(conv = converters[prev + " " + current] || converters["* " + current])) for (conv2 in converters) if ((tmp = conv2.split(" "))[1] === current && (conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]])) {
                    !0 === conv ? conv = converters[conv2] : !0 !== converters[conv2] && (current = tmp[0], 
                    dataTypes.unshift(tmp[1]));
                    break;
                }
                if (!0 !== conv) if (conv && s.throws) response = conv(response); else try {
                    response = conv(response);
                } catch (e) {
                    return {
                        state: "parsererror",
                        error: conv ? e : "No conversion from " + prev + " to " + current
                    };
                }
            }
            return {
                state: "success",
                data: response
            };
        }
        function buildParams(prefix, obj, traditional, add) {
            var name;
            if (jQuery.isArray(obj)) jQuery.each(obj, function(i, v) {
                traditional || rbracket.test(prefix) ? add(prefix, v) : buildParams(prefix + "[" + ("object" == typeof v ? i : "") + "]", v, traditional, add);
            }); else if (traditional || "object" !== jQuery.type(obj)) add(prefix, obj); else for (name in obj) buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
        }
        function createStandardXHR() {
            try {
                return new window.XMLHttpRequest();
            } catch (e) {}
        }
        function createActiveXHR() {
            try {
                return new window.ActiveXObject("Microsoft.XMLHTTP");
            } catch (e) {}
        }
        function getWindow(elem) {
            return jQuery.isWindow(elem) ? elem : 9 === elem.nodeType && (elem.defaultView || elem.parentWindow);
        }
        var deletedIds = [], slice = deletedIds.slice, concat = deletedIds.concat, push = deletedIds.push, indexOf = deletedIds.indexOf, class2type = {}, toString = class2type.toString, hasOwn = class2type.hasOwnProperty, trim = "".trim, support = {}, jQuery = function(selector, context) {
            return new jQuery.fn.init(selector, context);
        }, fcamelCase = function(all, letter) {
            return letter.toUpperCase();
        };
        jQuery.fn = jQuery.prototype = {
            jquery: "1.11.0",
            constructor: jQuery,
            selector: "",
            length: 0,
            toArray: function() {
                return slice.call(this);
            },
            get: function(num) {
                return null != num ? num < 0 ? this[num + this.length] : this[num] : slice.call(this);
            },
            pushStack: function(elems) {
                var ret = jQuery.merge(this.constructor(), elems);
                return ret.prevObject = this, ret.context = this.context, ret;
            },
            each: function(callback, args) {
                return jQuery.each(this, callback, args);
            },
            map: function(callback) {
                return this.pushStack(jQuery.map(this, function(elem, i) {
                    return callback.call(elem, i, elem);
                }));
            },
            slice: function() {
                return this.pushStack(slice.apply(this, arguments));
            },
            first: function() {
                return this.eq(0);
            },
            last: function() {
                return this.eq(-1);
            },
            eq: function(i) {
                var len = this.length, j = +i + (i < 0 ? len : 0);
                return this.pushStack(j >= 0 && j < len ? [ this[j] ] : []);
            },
            end: function() {
                return this.prevObject || this.constructor(null);
            },
            push: push,
            sort: deletedIds.sort,
            splice: deletedIds.splice
        }, jQuery.extend = jQuery.fn.extend = function() {
            var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = !1;
            for ("boolean" == typeof target && (deep = target, target = arguments[i] || {}, 
            i++), "object" == typeof target || jQuery.isFunction(target) || (target = {}), i === length && (target = this, 
            i--); i < length; i++) if (null != (options = arguments[i])) for (name in options) src = target[name], 
            target !== (copy = options[name]) && (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy))) ? (copyIsArray ? (copyIsArray = !1, 
            clone = src && jQuery.isArray(src) ? src : []) : clone = src && jQuery.isPlainObject(src) ? src : {}, 
            target[name] = jQuery.extend(deep, clone, copy)) : void 0 !== copy && (target[name] = copy));
            return target;
        }, jQuery.extend({
            expando: "jQuery" + ("1.11.0" + Math.random()).replace(/\D/g, ""),
            isReady: !0,
            error: function(msg) {
                throw new Error(msg);
            },
            noop: function() {},
            isFunction: function(obj) {
                return "function" === jQuery.type(obj);
            },
            isArray: Array.isArray || function(obj) {
                return "array" === jQuery.type(obj);
            },
            isWindow: function(obj) {
                return null != obj && obj == obj.window;
            },
            isNumeric: function(obj) {
                return obj - parseFloat(obj) >= 0;
            },
            isEmptyObject: function(obj) {
                var name;
                for (name in obj) return !1;
                return !0;
            },
            isPlainObject: function(obj) {
                var key;
                if (!obj || "object" !== jQuery.type(obj) || obj.nodeType || jQuery.isWindow(obj)) return !1;
                try {
                    if (obj.constructor && !hasOwn.call(obj, "constructor") && !hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) return !1;
                } catch (e) {
                    return !1;
                }
                if (support.ownLast) for (key in obj) return hasOwn.call(obj, key);
                for (key in obj) ;
                return void 0 === key || hasOwn.call(obj, key);
            },
            type: function(obj) {
                return null == obj ? obj + "" : "object" == typeof obj || "function" == typeof obj ? class2type[toString.call(obj)] || "object" : typeof obj;
            },
            globalEval: function(data) {
                data && jQuery.trim(data) && (window.execScript || function(data) {
                    window.eval.call(window, data);
                })(data);
            },
            camelCase: function(string) {
                return string.replace(/^-ms-/, "ms-").replace(/-([\da-z])/gi, fcamelCase);
            },
            nodeName: function(elem, name) {
                return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
            },
            each: function(obj, callback, args) {
                var i = 0, length = obj.length, isArray = isArraylike(obj);
                if (args) {
                    if (isArray) for (;i < length && !1 !== callback.apply(obj[i], args); i++) ; else for (i in obj) if (!1 === callback.apply(obj[i], args)) break;
                } else if (isArray) for (;i < length && !1 !== callback.call(obj[i], i, obj[i]); i++) ; else for (i in obj) if (!1 === callback.call(obj[i], i, obj[i])) break;
                return obj;
            },
            trim: trim && !trim.call("\ufeff ") ? function(text) {
                return null == text ? "" : trim.call(text);
            } : function(text) {
                return null == text ? "" : (text + "").replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
            },
            makeArray: function(arr, results) {
                var ret = results || [];
                return null != arr && (isArraylike(Object(arr)) ? jQuery.merge(ret, "string" == typeof arr ? [ arr ] : arr) : push.call(ret, arr)), 
                ret;
            },
            inArray: function(elem, arr, i) {
                var len;
                if (arr) {
                    if (indexOf) return indexOf.call(arr, elem, i);
                    for (len = arr.length, i = i ? i < 0 ? Math.max(0, len + i) : i : 0; i < len; i++) if (i in arr && arr[i] === elem) return i;
                }
                return -1;
            },
            merge: function(first, second) {
                for (var len = +second.length, j = 0, i = first.length; j < len; ) first[i++] = second[j++];
                if (len !== len) for (;void 0 !== second[j]; ) first[i++] = second[j++];
                return first.length = i, first;
            },
            grep: function(elems, callback, invert) {
                for (var matches = [], i = 0, length = elems.length, callbackExpect = !invert; i < length; i++) !callback(elems[i], i) !== callbackExpect && matches.push(elems[i]);
                return matches;
            },
            map: function(elems, callback, arg) {
                var value, i = 0, length = elems.length, ret = [];
                if (isArraylike(elems)) for (;i < length; i++) null != (value = callback(elems[i], i, arg)) && ret.push(value); else for (i in elems) null != (value = callback(elems[i], i, arg)) && ret.push(value);
                return concat.apply([], ret);
            },
            guid: 1,
            proxy: function(fn, context) {
                var args, proxy, tmp;
                if ("string" == typeof context && (tmp = fn[context], context = fn, fn = tmp), jQuery.isFunction(fn)) return args = slice.call(arguments, 2), 
                proxy = function() {
                    return fn.apply(context || this, args.concat(slice.call(arguments)));
                }, proxy.guid = fn.guid = fn.guid || jQuery.guid++, proxy;
            },
            now: function() {
                return +new Date();
            },
            support: support
        }), jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
            class2type["[object " + name + "]"] = name.toLowerCase();
        });
        var Sizzle = function(window) {
            function Sizzle(selector, context, results, seed) {
                var match, elem, m, nodeType, i, groups, old, nid, newContext, newSelector;
                if ((context ? context.ownerDocument || context : preferredDoc) !== document && setDocument(context), 
                context = context || document, results = results || [], !selector || "string" != typeof selector) return results;
                if (1 !== (nodeType = context.nodeType) && 9 !== nodeType) return [];
                if (documentIsHTML && !seed) {
                    if (match = rquickExpr.exec(selector)) if (m = match[1]) {
                        if (9 === nodeType) {
                            if (!(elem = context.getElementById(m)) || !elem.parentNode) return results;
                            if (elem.id === m) return results.push(elem), results;
                        } else if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) return results.push(elem), 
                        results;
                    } else {
                        if (match[2]) return push.apply(results, context.getElementsByTagName(selector)), 
                        results;
                        if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) return push.apply(results, context.getElementsByClassName(m)), 
                        results;
                    }
                    if (support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
                        if (nid = old = expando, newContext = context, newSelector = 9 === nodeType && selector, 
                        1 === nodeType && "object" !== context.nodeName.toLowerCase()) {
                            for (groups = tokenize(selector), (old = context.getAttribute("id")) ? nid = old.replace(rescape, "\\$&") : context.setAttribute("id", nid), 
                            nid = "[id='" + nid + "'] ", i = groups.length; i--; ) groups[i] = nid + toSelector(groups[i]);
                            newContext = rsibling.test(selector) && testContext(context.parentNode) || context, 
                            newSelector = groups.join(",");
                        }
                        if (newSelector) try {
                            return push.apply(results, newContext.querySelectorAll(newSelector)), results;
                        } catch (qsaError) {} finally {
                            old || context.removeAttribute("id");
                        }
                    }
                }
                return select(selector.replace(rtrim, "$1"), context, results, seed);
            }
            function createCache() {
                function cache(key, value) {
                    return keys.push(key + " ") > Expr.cacheLength && delete cache[keys.shift()], cache[key + " "] = value;
                }
                var keys = [];
                return cache;
            }
            function markFunction(fn) {
                return fn[expando] = !0, fn;
            }
            function assert(fn) {
                var div = document.createElement("div");
                try {
                    return !!fn(div);
                } catch (e) {
                    return !1;
                } finally {
                    div.parentNode && div.parentNode.removeChild(div), div = null;
                }
            }
            function addHandle(attrs, handler) {
                for (var arr = attrs.split("|"), i = attrs.length; i--; ) Expr.attrHandle[arr[i]] = handler;
            }
            function siblingCheck(a, b) {
                var cur = b && a, diff = cur && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
                if (diff) return diff;
                if (cur) for (;cur = cur.nextSibling; ) if (cur === b) return -1;
                return a ? 1 : -1;
            }
            function createPositionalPseudo(fn) {
                return markFunction(function(argument) {
                    return argument = +argument, markFunction(function(seed, matches) {
                        for (var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length; i--; ) seed[j = matchIndexes[i]] && (seed[j] = !(matches[j] = seed[j]));
                    });
                });
            }
            function testContext(context) {
                return context && typeof context.getElementsByTagName !== strundefined && context;
            }
            function setFilters() {}
            function tokenize(selector, parseOnly) {
                var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
                if (cached) return parseOnly ? 0 : cached.slice(0);
                for (soFar = selector, groups = [], preFilters = Expr.preFilter; soFar; ) {
                    matched && !(match = rcomma.exec(soFar)) || (match && (soFar = soFar.slice(match[0].length) || soFar), 
                    groups.push(tokens = [])), matched = !1, (match = rcombinators.exec(soFar)) && (matched = match.shift(), 
                    tokens.push({
                        value: matched,
                        type: match[0].replace(rtrim, " ")
                    }), soFar = soFar.slice(matched.length));
                    for (type in Expr.filter) !(match = matchExpr[type].exec(soFar)) || preFilters[type] && !(match = preFilters[type](match)) || (matched = match.shift(), 
                    tokens.push({
                        value: matched,
                        type: type,
                        matches: match
                    }), soFar = soFar.slice(matched.length));
                    if (!matched) break;
                }
                return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
            }
            function toSelector(tokens) {
                for (var i = 0, len = tokens.length, selector = ""; i < len; i++) selector += tokens[i].value;
                return selector;
            }
            function addCombinator(matcher, combinator, base) {
                var dir = combinator.dir, checkNonElements = base && "parentNode" === dir, doneName = done++;
                return combinator.first ? function(elem, context, xml) {
                    for (;elem = elem[dir]; ) if (1 === elem.nodeType || checkNonElements) return matcher(elem, context, xml);
                } : function(elem, context, xml) {
                    var oldCache, outerCache, newCache = [ dirruns, doneName ];
                    if (xml) {
                        for (;elem = elem[dir]; ) if ((1 === elem.nodeType || checkNonElements) && matcher(elem, context, xml)) return !0;
                    } else for (;elem = elem[dir]; ) if (1 === elem.nodeType || checkNonElements) {
                        if (outerCache = elem[expando] || (elem[expando] = {}), (oldCache = outerCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) return newCache[2] = oldCache[2];
                        if (outerCache[dir] = newCache, newCache[2] = matcher(elem, context, xml)) return !0;
                    }
                };
            }
            function elementMatcher(matchers) {
                return matchers.length > 1 ? function(elem, context, xml) {
                    for (var i = matchers.length; i--; ) if (!matchers[i](elem, context, xml)) return !1;
                    return !0;
                } : matchers[0];
            }
            function condense(unmatched, map, filter, context, xml) {
                for (var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = null != map; i < len; i++) (elem = unmatched[i]) && (filter && !filter(elem, context, xml) || (newUnmatched.push(elem), 
                mapped && map.push(i)));
                return newUnmatched;
            }
            function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
                return postFilter && !postFilter[expando] && (postFilter = setMatcher(postFilter)), 
                postFinder && !postFinder[expando] && (postFinder = setMatcher(postFinder, postSelector)), 
                markFunction(function(seed, results, context, xml) {
                    var temp, i, elem, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(selector || "*", context.nodeType ? [ context ] : context, []), matcherIn = !preFilter || !seed && selector ? elems : condense(elems, preMap, preFilter, context, xml), matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
                    if (matcher && matcher(matcherIn, matcherOut, context, xml), postFilter) for (temp = condense(matcherOut, postMap), 
                    postFilter(temp, [], context, xml), i = temp.length; i--; ) (elem = temp[i]) && (matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem));
                    if (seed) {
                        if (postFinder || preFilter) {
                            if (postFinder) {
                                for (temp = [], i = matcherOut.length; i--; ) (elem = matcherOut[i]) && temp.push(matcherIn[i] = elem);
                                postFinder(null, matcherOut = [], temp, xml);
                            }
                            for (i = matcherOut.length; i--; ) (elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1 && (seed[temp] = !(results[temp] = elem));
                        }
                    } else matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut), 
                    postFinder ? postFinder(null, results, matcherOut, xml) : push.apply(results, matcherOut);
                });
            }
            function matcherFromTokens(tokens) {
                for (var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i = leadingRelative ? 1 : 0, matchContext = addCombinator(function(elem) {
                    return elem === checkContext;
                }, implicitRelative, !0), matchAnyContext = addCombinator(function(elem) {
                    return indexOf.call(checkContext, elem) > -1;
                }, implicitRelative, !0), matchers = [ function(elem, context, xml) {
                    return !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
                } ]; i < len; i++) if (matcher = Expr.relative[tokens[i].type]) matchers = [ addCombinator(elementMatcher(matchers), matcher) ]; else {
                    if ((matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches))[expando]) {
                        for (j = ++i; j < len && !Expr.relative[tokens[j].type]; j++) ;
                        return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({
                            value: " " === tokens[i - 2].type ? "*" : ""
                        })).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
                    }
                    matchers.push(matcher);
                }
                return elementMatcher(matchers);
            }
            function matcherFromGroupMatchers(elementMatchers, setMatchers) {
                var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function(seed, context, xml, results, outermost) {
                    var elem, j, matcher, matchedCount = 0, i = "0", unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && Expr.find.TAG("*", outermost), dirrunsUnique = dirruns += null == contextBackup ? 1 : Math.random() || .1, len = elems.length;
                    for (outermost && (outermostContext = context !== document && context); i !== len && null != (elem = elems[i]); i++) {
                        if (byElement && elem) {
                            for (j = 0; matcher = elementMatchers[j++]; ) if (matcher(elem, context, xml)) {
                                results.push(elem);
                                break;
                            }
                            outermost && (dirruns = dirrunsUnique);
                        }
                        bySet && ((elem = !matcher && elem) && matchedCount--, seed && unmatched.push(elem));
                    }
                    if (matchedCount += i, bySet && i !== matchedCount) {
                        for (j = 0; matcher = setMatchers[j++]; ) matcher(unmatched, setMatched, context, xml);
                        if (seed) {
                            if (matchedCount > 0) for (;i--; ) unmatched[i] || setMatched[i] || (setMatched[i] = pop.call(results));
                            setMatched = condense(setMatched);
                        }
                        push.apply(results, setMatched), outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1 && Sizzle.uniqueSort(results);
                    }
                    return outermost && (dirruns = dirrunsUnique, outermostContext = contextBackup), 
                    unmatched;
                };
                return bySet ? markFunction(superMatcher) : superMatcher;
            }
            function multipleContexts(selector, contexts, results) {
                for (var i = 0, len = contexts.length; i < len; i++) Sizzle(selector, contexts[i], results);
                return results;
            }
            function select(selector, context, results, seed) {
                var i, tokens, token, type, find, match = tokenize(selector);
                if (!seed && 1 === match.length) {
                    if ((tokens = match[0] = match[0].slice(0)).length > 2 && "ID" === (token = tokens[0]).type && support.getById && 9 === context.nodeType && documentIsHTML && Expr.relative[tokens[1].type]) {
                        if (!(context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0])) return results;
                        selector = selector.slice(tokens.shift().value.length);
                    }
                    for (i = matchExpr.needsContext.test(selector) ? 0 : tokens.length; i-- && (token = tokens[i], 
                    !Expr.relative[type = token.type]); ) if ((find = Expr.find[type]) && (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {
                        if (tokens.splice(i, 1), !(selector = seed.length && toSelector(tokens))) return push.apply(results, seed), 
                        results;
                        break;
                    }
                }
                return compile(selector, match)(seed, context, !documentIsHTML, results, rsibling.test(selector) && testContext(context.parentNode) || context), 
                results;
            }
            var i, support, Expr, getText, isXML, compile, outermostContext, sortInput, hasDuplicate, setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = "sizzle" + -new Date(), preferredDoc = window.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), sortOrder = function(a, b) {
                return a === b && (hasDuplicate = !0), 0;
            }, strundefined = "undefined", MAX_NEGATIVE = 1 << 31, hasOwn = {}.hasOwnProperty, arr = [], pop = arr.pop, push_native = arr.push, push = arr.push, slice = arr.slice, indexOf = arr.indexOf || function(elem) {
                for (var i = 0, len = this.length; i < len; i++) if (this[i] === elem) return i;
                return -1;
            }, booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", whitespace = "[\\x20\\t\\r\\n\\f]", characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", identifier = characterEncoding.replace("w", "w#"), attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace + "*(?:([*^$|!~]?=)" + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]", pseudos = ":(" + characterEncoding + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + attributes.replace(3, 8) + ")*)|.*)\\)|)", rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"), rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"), rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"), rattributeQuotes = new RegExp("=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g"), rpseudo = new RegExp(pseudos), ridentifier = new RegExp("^" + identifier + "$"), matchExpr = {
                ID: new RegExp("^#(" + characterEncoding + ")"),
                CLASS: new RegExp("^\\.(" + characterEncoding + ")"),
                TAG: new RegExp("^(" + characterEncoding.replace("w", "w*") + ")"),
                ATTR: new RegExp("^" + attributes),
                PSEUDO: new RegExp("^" + pseudos),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + booleans + ")$", "i"),
                needsContext: new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
            }, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rnative = /^[^{]+\{\s*\[native \w/, rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rsibling = /[+~]/, rescape = /'|\\/g, runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"), funescape = function(_, escaped, escapedWhitespace) {
                var high = "0x" + escaped - 65536;
                return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, 1023 & high | 56320);
            };
            try {
                push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes), 
                arr[preferredDoc.childNodes.length].nodeType;
            } catch (e) {
                push = {
                    apply: arr.length ? function(target, els) {
                        push_native.apply(target, slice.call(els));
                    } : function(target, els) {
                        for (var j = target.length, i = 0; target[j++] = els[i++]; ) ;
                        target.length = j - 1;
                    }
                };
            }
            support = Sizzle.support = {}, isXML = Sizzle.isXML = function(elem) {
                var documentElement = elem && (elem.ownerDocument || elem).documentElement;
                return !!documentElement && "HTML" !== documentElement.nodeName;
            }, setDocument = Sizzle.setDocument = function(node) {
                var hasCompare, doc = node ? node.ownerDocument || node : preferredDoc, parent = doc.defaultView;
                return doc !== document && 9 === doc.nodeType && doc.documentElement ? (document = doc, 
                docElem = doc.documentElement, documentIsHTML = !isXML(doc), parent && parent !== parent.top && (parent.addEventListener ? parent.addEventListener("unload", function() {
                    setDocument();
                }, !1) : parent.attachEvent && parent.attachEvent("onunload", function() {
                    setDocument();
                })), support.attributes = assert(function(div) {
                    return div.className = "i", !div.getAttribute("className");
                }), support.getElementsByTagName = assert(function(div) {
                    return div.appendChild(doc.createComment("")), !div.getElementsByTagName("*").length;
                }), support.getElementsByClassName = rnative.test(doc.getElementsByClassName) && assert(function(div) {
                    return div.innerHTML = "<div class='a'></div><div class='a i'></div>", div.firstChild.className = "i", 
                    2 === div.getElementsByClassName("i").length;
                }), support.getById = assert(function(div) {
                    return docElem.appendChild(div).id = expando, !doc.getElementsByName || !doc.getElementsByName(expando).length;
                }), support.getById ? (Expr.find.ID = function(id, context) {
                    if (typeof context.getElementById !== strundefined && documentIsHTML) {
                        var m = context.getElementById(id);
                        return m && m.parentNode ? [ m ] : [];
                    }
                }, Expr.filter.ID = function(id) {
                    var attrId = id.replace(runescape, funescape);
                    return function(elem) {
                        return elem.getAttribute("id") === attrId;
                    };
                }) : (delete Expr.find.ID, Expr.filter.ID = function(id) {
                    var attrId = id.replace(runescape, funescape);
                    return function(elem) {
                        var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
                        return node && node.value === attrId;
                    };
                }), Expr.find.TAG = support.getElementsByTagName ? function(tag, context) {
                    if (typeof context.getElementsByTagName !== strundefined) return context.getElementsByTagName(tag);
                } : function(tag, context) {
                    var elem, tmp = [], i = 0, results = context.getElementsByTagName(tag);
                    if ("*" === tag) {
                        for (;elem = results[i++]; ) 1 === elem.nodeType && tmp.push(elem);
                        return tmp;
                    }
                    return results;
                }, Expr.find.CLASS = support.getElementsByClassName && function(className, context) {
                    if (typeof context.getElementsByClassName !== strundefined && documentIsHTML) return context.getElementsByClassName(className);
                }, rbuggyMatches = [], rbuggyQSA = [], (support.qsa = rnative.test(doc.querySelectorAll)) && (assert(function(div) {
                    div.innerHTML = "<select t=''><option selected=''></option></select>", div.querySelectorAll("[t^='']").length && rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")"), 
                    div.querySelectorAll("[selected]").length || rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")"), 
                    div.querySelectorAll(":checked").length || rbuggyQSA.push(":checked");
                }), assert(function(div) {
                    var input = doc.createElement("input");
                    input.setAttribute("type", "hidden"), div.appendChild(input).setAttribute("name", "D"), 
                    div.querySelectorAll("[name=d]").length && rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?="), 
                    div.querySelectorAll(":enabled").length || rbuggyQSA.push(":enabled", ":disabled"), 
                    div.querySelectorAll("*,:x"), rbuggyQSA.push(",.*:");
                })), (support.matchesSelector = rnative.test(matches = docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) && assert(function(div) {
                    support.disconnectedMatch = matches.call(div, "div"), matches.call(div, "[s!='']:x"), 
                    rbuggyMatches.push("!=", pseudos);
                }), rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|")), rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|")), 
                hasCompare = rnative.test(docElem.compareDocumentPosition), contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {
                    var adown = 9 === a.nodeType ? a.documentElement : a, bup = b && b.parentNode;
                    return a === bup || !(!bup || 1 !== bup.nodeType || !(adown.contains ? adown.contains(bup) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(bup)));
                } : function(a, b) {
                    if (b) for (;b = b.parentNode; ) if (b === a) return !0;
                    return !1;
                }, sortOrder = hasCompare ? function(a, b) {
                    if (a === b) return hasDuplicate = !0, 0;
                    var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                    return compare || (compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 
                    1 & compare || !support.sortDetached && b.compareDocumentPosition(a) === compare ? a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ? -1 : b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ? 1 : sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0 : 4 & compare ? -1 : 1);
                } : function(a, b) {
                    if (a === b) return hasDuplicate = !0, 0;
                    var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [ a ], bp = [ b ];
                    if (!aup || !bup) return a === doc ? -1 : b === doc ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;
                    if (aup === bup) return siblingCheck(a, b);
                    for (cur = a; cur = cur.parentNode; ) ap.unshift(cur);
                    for (cur = b; cur = cur.parentNode; ) bp.unshift(cur);
                    for (;ap[i] === bp[i]; ) i++;
                    return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
                }, doc) : document;
            }, Sizzle.matches = function(expr, elements) {
                return Sizzle(expr, null, null, elements);
            }, Sizzle.matchesSelector = function(elem, expr) {
                if ((elem.ownerDocument || elem) !== document && setDocument(elem), expr = expr.replace(rattributeQuotes, "='$1']"), 
                support.matchesSelector && documentIsHTML && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) try {
                    var ret = matches.call(elem, expr);
                    if (ret || support.disconnectedMatch || elem.document && 11 !== elem.document.nodeType) return ret;
                } catch (e) {}
                return Sizzle(expr, document, null, [ elem ]).length > 0;
            }, Sizzle.contains = function(context, elem) {
                return (context.ownerDocument || context) !== document && setDocument(context), 
                contains(context, elem);
            }, Sizzle.attr = function(elem, name) {
                (elem.ownerDocument || elem) !== document && setDocument(elem);
                var fn = Expr.attrHandle[name.toLowerCase()], val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : void 0;
                return void 0 !== val ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
            }, Sizzle.error = function(msg) {
                throw new Error("Syntax error, unrecognized expression: " + msg);
            }, Sizzle.uniqueSort = function(results) {
                var elem, duplicates = [], j = 0, i = 0;
                if (hasDuplicate = !support.detectDuplicates, sortInput = !support.sortStable && results.slice(0), 
                results.sort(sortOrder), hasDuplicate) {
                    for (;elem = results[i++]; ) elem === results[i] && (j = duplicates.push(i));
                    for (;j--; ) results.splice(duplicates[j], 1);
                }
                return sortInput = null, results;
            }, getText = Sizzle.getText = function(elem) {
                var node, ret = "", i = 0, nodeType = elem.nodeType;
                if (nodeType) {
                    if (1 === nodeType || 9 === nodeType || 11 === nodeType) {
                        if ("string" == typeof elem.textContent) return elem.textContent;
                        for (elem = elem.firstChild; elem; elem = elem.nextSibling) ret += getText(elem);
                    } else if (3 === nodeType || 4 === nodeType) return elem.nodeValue;
                } else for (;node = elem[i++]; ) ret += getText(node);
                return ret;
            }, (Expr = Sizzle.selectors = {
                cacheLength: 50,
                createPseudo: markFunction,
                match: matchExpr,
                attrHandle: {},
                find: {},
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: !0
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: !0
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function(match) {
                        return match[1] = match[1].replace(runescape, funescape), match[3] = (match[4] || match[5] || "").replace(runescape, funescape), 
                        "~=" === match[2] && (match[3] = " " + match[3] + " "), match.slice(0, 4);
                    },
                    CHILD: function(match) {
                        return match[1] = match[1].toLowerCase(), "nth" === match[1].slice(0, 3) ? (match[3] || Sizzle.error(match[0]), 
                        match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * ("even" === match[3] || "odd" === match[3])), 
                        match[5] = +(match[7] + match[8] || "odd" === match[3])) : match[3] && Sizzle.error(match[0]), 
                        match;
                    },
                    PSEUDO: function(match) {
                        var excess, unquoted = !match[5] && match[2];
                        return matchExpr.CHILD.test(match[0]) ? null : (match[3] && void 0 !== match[4] ? match[2] = match[4] : unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, !0)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length) && (match[0] = match[0].slice(0, excess), 
                        match[2] = unquoted.slice(0, excess)), match.slice(0, 3));
                    }
                },
                filter: {
                    TAG: function(nodeNameSelector) {
                        var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                        return "*" === nodeNameSelector ? function() {
                            return !0;
                        } : function(elem) {
                            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                        };
                    },
                    CLASS: function(className) {
                        var pattern = classCache[className + " "];
                        return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
                            return pattern.test("string" == typeof elem.className && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "");
                        });
                    },
                    ATTR: function(name, operator, check) {
                        return function(elem) {
                            var result = Sizzle.attr(elem, name);
                            return null == result ? "!=" === operator : !operator || (result += "", "=" === operator ? result === check : "!=" === operator ? result !== check : "^=" === operator ? check && 0 === result.indexOf(check) : "*=" === operator ? check && result.indexOf(check) > -1 : "$=" === operator ? check && result.slice(-check.length) === check : "~=" === operator ? (" " + result + " ").indexOf(check) > -1 : "|=" === operator && (result === check || result.slice(0, check.length + 1) === check + "-"));
                        };
                    },
                    CHILD: function(type, what, argument, first, last) {
                        var simple = "nth" !== type.slice(0, 3), forward = "last" !== type.slice(-4), ofType = "of-type" === what;
                        return 1 === first && 0 === last ? function(elem) {
                            return !!elem.parentNode;
                        } : function(elem, context, xml) {
                            var cache, outerCache, node, diff, nodeIndex, start, dir = simple !== forward ? "nextSibling" : "previousSibling", parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType;
                            if (parent) {
                                if (simple) {
                                    for (;dir; ) {
                                        for (node = elem; node = node[dir]; ) if (ofType ? node.nodeName.toLowerCase() === name : 1 === node.nodeType) return !1;
                                        start = dir = "only" === type && !start && "nextSibling";
                                    }
                                    return !0;
                                }
                                if (start = [ forward ? parent.firstChild : parent.lastChild ], forward && useCache) {
                                    for (nodeIndex = (cache = (outerCache = parent[expando] || (parent[expando] = {}))[type] || [])[0] === dirruns && cache[1], 
                                    diff = cache[0] === dirruns && cache[2], node = nodeIndex && parent.childNodes[nodeIndex]; node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop(); ) if (1 === node.nodeType && ++diff && node === elem) {
                                        outerCache[type] = [ dirruns, nodeIndex, diff ];
                                        break;
                                    }
                                } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) diff = cache[1]; else for (;(node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) && ((ofType ? node.nodeName.toLowerCase() !== name : 1 !== node.nodeType) || !++diff || (useCache && ((node[expando] || (node[expando] = {}))[type] = [ dirruns, diff ]), 
                                node !== elem)); ) ;
                                return (diff -= last) === first || diff % first == 0 && diff / first >= 0;
                            }
                        };
                    },
                    PSEUDO: function(pseudo, argument) {
                        var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
                        return fn[expando] ? fn(argument) : fn.length > 1 ? (args = [ pseudo, pseudo, "", argument ], 
                        Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
                            for (var idx, matched = fn(seed, argument), i = matched.length; i--; ) seed[idx = indexOf.call(seed, matched[i])] = !(matches[idx] = matched[i]);
                        }) : function(elem) {
                            return fn(elem, 0, args);
                        }) : fn;
                    }
                },
                pseudos: {
                    not: markFunction(function(selector) {
                        var input = [], results = [], matcher = compile(selector.replace(rtrim, "$1"));
                        return matcher[expando] ? markFunction(function(seed, matches, context, xml) {
                            for (var elem, unmatched = matcher(seed, null, xml, []), i = seed.length; i--; ) (elem = unmatched[i]) && (seed[i] = !(matches[i] = elem));
                        }) : function(elem, context, xml) {
                            return input[0] = elem, matcher(input, null, xml, results), !results.pop();
                        };
                    }),
                    has: markFunction(function(selector) {
                        return function(elem) {
                            return Sizzle(selector, elem).length > 0;
                        };
                    }),
                    contains: markFunction(function(text) {
                        return function(elem) {
                            return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
                        };
                    }),
                    lang: markFunction(function(lang) {
                        return ridentifier.test(lang || "") || Sizzle.error("unsupported lang: " + lang), 
                        lang = lang.replace(runescape, funescape).toLowerCase(), function(elem) {
                            var elemLang;
                            do {
                                if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) return (elemLang = elemLang.toLowerCase()) === lang || 0 === elemLang.indexOf(lang + "-");
                            } while ((elem = elem.parentNode) && 1 === elem.nodeType);
                            return !1;
                        };
                    }),
                    target: function(elem) {
                        var hash = window.location && window.location.hash;
                        return hash && hash.slice(1) === elem.id;
                    },
                    root: function(elem) {
                        return elem === docElem;
                    },
                    focus: function(elem) {
                        return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
                    },
                    enabled: function(elem) {
                        return !1 === elem.disabled;
                    },
                    disabled: function(elem) {
                        return !0 === elem.disabled;
                    },
                    checked: function(elem) {
                        var nodeName = elem.nodeName.toLowerCase();
                        return "input" === nodeName && !!elem.checked || "option" === nodeName && !!elem.selected;
                    },
                    selected: function(elem) {
                        return elem.parentNode && elem.parentNode.selectedIndex, !0 === elem.selected;
                    },
                    empty: function(elem) {
                        for (elem = elem.firstChild; elem; elem = elem.nextSibling) if (elem.nodeType < 6) return !1;
                        return !0;
                    },
                    parent: function(elem) {
                        return !Expr.pseudos.empty(elem);
                    },
                    header: function(elem) {
                        return rheader.test(elem.nodeName);
                    },
                    input: function(elem) {
                        return rinputs.test(elem.nodeName);
                    },
                    button: function(elem) {
                        var name = elem.nodeName.toLowerCase();
                        return "input" === name && "button" === elem.type || "button" === name;
                    },
                    text: function(elem) {
                        var attr;
                        return "input" === elem.nodeName.toLowerCase() && "text" === elem.type && (null == (attr = elem.getAttribute("type")) || "text" === attr.toLowerCase());
                    },
                    first: createPositionalPseudo(function() {
                        return [ 0 ];
                    }),
                    last: createPositionalPseudo(function(matchIndexes, length) {
                        return [ length - 1 ];
                    }),
                    eq: createPositionalPseudo(function(matchIndexes, length, argument) {
                        return [ argument < 0 ? argument + length : argument ];
                    }),
                    even: createPositionalPseudo(function(matchIndexes, length) {
                        for (var i = 0; i < length; i += 2) matchIndexes.push(i);
                        return matchIndexes;
                    }),
                    odd: createPositionalPseudo(function(matchIndexes, length) {
                        for (var i = 1; i < length; i += 2) matchIndexes.push(i);
                        return matchIndexes;
                    }),
                    lt: createPositionalPseudo(function(matchIndexes, length, argument) {
                        for (var i = argument < 0 ? argument + length : argument; --i >= 0; ) matchIndexes.push(i);
                        return matchIndexes;
                    }),
                    gt: createPositionalPseudo(function(matchIndexes, length, argument) {
                        for (var i = argument < 0 ? argument + length : argument; ++i < length; ) matchIndexes.push(i);
                        return matchIndexes;
                    })
                }
            }).pseudos.nth = Expr.pseudos.eq;
            for (i in {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            }) Expr.pseudos[i] = function(type) {
                return function(elem) {
                    return "input" === elem.nodeName.toLowerCase() && elem.type === type;
                };
            }(i);
            for (i in {
                submit: !0,
                reset: !0
            }) Expr.pseudos[i] = function(type) {
                return function(elem) {
                    var name = elem.nodeName.toLowerCase();
                    return ("input" === name || "button" === name) && elem.type === type;
                };
            }(i);
            return setFilters.prototype = Expr.filters = Expr.pseudos, Expr.setFilters = new setFilters(), 
            compile = Sizzle.compile = function(selector, group) {
                var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + " "];
                if (!cached) {
                    for (group || (group = tokenize(selector)), i = group.length; i--; ) (cached = matcherFromTokens(group[i]))[expando] ? setMatchers.push(cached) : elementMatchers.push(cached);
                    cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
                }
                return cached;
            }, support.sortStable = expando.split("").sort(sortOrder).join("") === expando, 
            support.detectDuplicates = !!hasDuplicate, setDocument(), support.sortDetached = assert(function(div1) {
                return 1 & div1.compareDocumentPosition(document.createElement("div"));
            }), assert(function(div) {
                return div.innerHTML = "<a href='#'></a>", "#" === div.firstChild.getAttribute("href");
            }) || addHandle("type|href|height|width", function(elem, name, isXML) {
                if (!isXML) return elem.getAttribute(name, "type" === name.toLowerCase() ? 1 : 2);
            }), support.attributes && assert(function(div) {
                return div.innerHTML = "<input/>", div.firstChild.setAttribute("value", ""), "" === div.firstChild.getAttribute("value");
            }) || addHandle("value", function(elem, name, isXML) {
                if (!isXML && "input" === elem.nodeName.toLowerCase()) return elem.defaultValue;
            }), assert(function(div) {
                return null == div.getAttribute("disabled");
            }) || addHandle(booleans, function(elem, name, isXML) {
                var val;
                if (!isXML) return !0 === elem[name] ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
            }), Sizzle;
        }(window);
        jQuery.find = Sizzle, jQuery.expr = Sizzle.selectors, jQuery.expr[":"] = jQuery.expr.pseudos, 
        jQuery.unique = Sizzle.uniqueSort, jQuery.text = Sizzle.getText, jQuery.isXMLDoc = Sizzle.isXML, 
        jQuery.contains = Sizzle.contains;
        var rneedsContext = jQuery.expr.match.needsContext, rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, risSimple = /^.[^:#\[\.,]*$/;
        jQuery.filter = function(expr, elems, not) {
            var elem = elems[0];
            return not && (expr = ":not(" + expr + ")"), 1 === elems.length && 1 === elem.nodeType ? jQuery.find.matchesSelector(elem, expr) ? [ elem ] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {
                return 1 === elem.nodeType;
            }));
        }, jQuery.fn.extend({
            find: function(selector) {
                var i, ret = [], self = this, len = self.length;
                if ("string" != typeof selector) return this.pushStack(jQuery(selector).filter(function() {
                    for (i = 0; i < len; i++) if (jQuery.contains(self[i], this)) return !0;
                }));
                for (i = 0; i < len; i++) jQuery.find(selector, self[i], ret);
                return ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret), ret.selector = this.selector ? this.selector + " " + selector : selector, 
                ret;
            },
            filter: function(selector) {
                return this.pushStack(winnow(this, selector || [], !1));
            },
            not: function(selector) {
                return this.pushStack(winnow(this, selector || [], !0));
            },
            is: function(selector) {
                return !!winnow(this, "string" == typeof selector && rneedsContext.test(selector) ? jQuery(selector) : selector || [], !1).length;
            }
        });
        var rootjQuery, document = window.document, rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;
        (jQuery.fn.init = function(selector, context) {
            var match, elem;
            if (!selector) return this;
            if ("string" == typeof selector) {
                if (!(match = "<" === selector.charAt(0) && ">" === selector.charAt(selector.length - 1) && selector.length >= 3 ? [ null, selector, null ] : rquickExpr.exec(selector)) || !match[1] && context) return !context || context.jquery ? (context || rootjQuery).find(selector) : this.constructor(context).find(selector);
                if (match[1]) {
                    if (context = context instanceof jQuery ? context[0] : context, jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, !0)), 
                    rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) for (match in context) jQuery.isFunction(this[match]) ? this[match](context[match]) : this.attr(match, context[match]);
                    return this;
                }
                if ((elem = document.getElementById(match[2])) && elem.parentNode) {
                    if (elem.id !== match[2]) return rootjQuery.find(selector);
                    this.length = 1, this[0] = elem;
                }
                return this.context = document, this.selector = selector, this;
            }
            return selector.nodeType ? (this.context = this[0] = selector, this.length = 1, 
            this) : jQuery.isFunction(selector) ? void 0 !== rootjQuery.ready ? rootjQuery.ready(selector) : selector(jQuery) : (void 0 !== selector.selector && (this.selector = selector.selector, 
            this.context = selector.context), jQuery.makeArray(selector, this));
        }).prototype = jQuery.fn, rootjQuery = jQuery(document);
        var rparentsprev = /^(?:parents|prev(?:Until|All))/, guaranteedUnique = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
        jQuery.extend({
            dir: function(elem, dir, until) {
                for (var matched = [], cur = elem[dir]; cur && 9 !== cur.nodeType && (void 0 === until || 1 !== cur.nodeType || !jQuery(cur).is(until)); ) 1 === cur.nodeType && matched.push(cur), 
                cur = cur[dir];
                return matched;
            },
            sibling: function(n, elem) {
                for (var r = []; n; n = n.nextSibling) 1 === n.nodeType && n !== elem && r.push(n);
                return r;
            }
        }), jQuery.fn.extend({
            has: function(target) {
                var i, targets = jQuery(target, this), len = targets.length;
                return this.filter(function() {
                    for (i = 0; i < len; i++) if (jQuery.contains(this, targets[i])) return !0;
                });
            },
            closest: function(selectors, context) {
                for (var cur, i = 0, l = this.length, matched = [], pos = rneedsContext.test(selectors) || "string" != typeof selectors ? jQuery(selectors, context || this.context) : 0; i < l; i++) for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : 1 === cur.nodeType && jQuery.find.matchesSelector(cur, selectors))) {
                    matched.push(cur);
                    break;
                }
                return this.pushStack(matched.length > 1 ? jQuery.unique(matched) : matched);
            },
            index: function(elem) {
                return elem ? "string" == typeof elem ? jQuery.inArray(this[0], jQuery(elem)) : jQuery.inArray(elem.jquery ? elem[0] : elem, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
            },
            add: function(selector, context) {
                return this.pushStack(jQuery.unique(jQuery.merge(this.get(), jQuery(selector, context))));
            },
            addBack: function(selector) {
                return this.add(null == selector ? this.prevObject : this.prevObject.filter(selector));
            }
        }), jQuery.each({
            parent: function(elem) {
                var parent = elem.parentNode;
                return parent && 11 !== parent.nodeType ? parent : null;
            },
            parents: function(elem) {
                return jQuery.dir(elem, "parentNode");
            },
            parentsUntil: function(elem, i, until) {
                return jQuery.dir(elem, "parentNode", until);
            },
            next: function(elem) {
                return sibling(elem, "nextSibling");
            },
            prev: function(elem) {
                return sibling(elem, "previousSibling");
            },
            nextAll: function(elem) {
                return jQuery.dir(elem, "nextSibling");
            },
            prevAll: function(elem) {
                return jQuery.dir(elem, "previousSibling");
            },
            nextUntil: function(elem, i, until) {
                return jQuery.dir(elem, "nextSibling", until);
            },
            prevUntil: function(elem, i, until) {
                return jQuery.dir(elem, "previousSibling", until);
            },
            siblings: function(elem) {
                return jQuery.sibling((elem.parentNode || {}).firstChild, elem);
            },
            children: function(elem) {
                return jQuery.sibling(elem.firstChild);
            },
            contents: function(elem) {
                return jQuery.nodeName(elem, "iframe") ? elem.contentDocument || elem.contentWindow.document : jQuery.merge([], elem.childNodes);
            }
        }, function(name, fn) {
            jQuery.fn[name] = function(until, selector) {
                var ret = jQuery.map(this, fn, until);
                return "Until" !== name.slice(-5) && (selector = until), selector && "string" == typeof selector && (ret = jQuery.filter(selector, ret)), 
                this.length > 1 && (guaranteedUnique[name] || (ret = jQuery.unique(ret)), rparentsprev.test(name) && (ret = ret.reverse())), 
                this.pushStack(ret);
            };
        });
        var rnotwhite = /\S+/g, optionsCache = {};
        jQuery.Callbacks = function(options) {
            var firing, memory, fired, firingLength, firingIndex, firingStart, list = [], stack = !(options = "string" == typeof options ? optionsCache[options] || createOptions(options) : jQuery.extend({}, options)).once && [], fire = function(data) {
                for (memory = options.memory && data, fired = !0, firingIndex = firingStart || 0, 
                firingStart = 0, firingLength = list.length, firing = !0; list && firingIndex < firingLength; firingIndex++) if (!1 === list[firingIndex].apply(data[0], data[1]) && options.stopOnFalse) {
                    memory = !1;
                    break;
                }
                firing = !1, list && (stack ? stack.length && fire(stack.shift()) : memory ? list = [] : self.disable());
            }, self = {
                add: function() {
                    if (list) {
                        var start = list.length;
                        !function add(args) {
                            jQuery.each(args, function(_, arg) {
                                var type = jQuery.type(arg);
                                "function" === type ? options.unique && self.has(arg) || list.push(arg) : arg && arg.length && "string" !== type && add(arg);
                            });
                        }(arguments), firing ? firingLength = list.length : memory && (firingStart = start, 
                        fire(memory));
                    }
                    return this;
                },
                remove: function() {
                    return list && jQuery.each(arguments, function(_, arg) {
                        for (var index; (index = jQuery.inArray(arg, list, index)) > -1; ) list.splice(index, 1), 
                        firing && (index <= firingLength && firingLength--, index <= firingIndex && firingIndex--);
                    }), this;
                },
                has: function(fn) {
                    return fn ? jQuery.inArray(fn, list) > -1 : !(!list || !list.length);
                },
                empty: function() {
                    return list = [], firingLength = 0, this;
                },
                disable: function() {
                    return list = stack = memory = void 0, this;
                },
                disabled: function() {
                    return !list;
                },
                lock: function() {
                    return stack = void 0, memory || self.disable(), this;
                },
                locked: function() {
                    return !stack;
                },
                fireWith: function(context, args) {
                    return !list || fired && !stack || (args = [ context, (args = args || []).slice ? args.slice() : args ], 
                    firing ? stack.push(args) : fire(args)), this;
                },
                fire: function() {
                    return self.fireWith(this, arguments), this;
                },
                fired: function() {
                    return !!fired;
                }
            };
            return self;
        }, jQuery.extend({
            Deferred: function(func) {
                var tuples = [ [ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ], [ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ], [ "notify", "progress", jQuery.Callbacks("memory") ] ], state = "pending", promise = {
                    state: function() {
                        return state;
                    },
                    always: function() {
                        return deferred.done(arguments).fail(arguments), this;
                    },
                    then: function() {
                        var fns = arguments;
                        return jQuery.Deferred(function(newDefer) {
                            jQuery.each(tuples, function(i, tuple) {
                                var fn = jQuery.isFunction(fns[i]) && fns[i];
                                deferred[tuple[1]](function() {
                                    var returned = fn && fn.apply(this, arguments);
                                    returned && jQuery.isFunction(returned.promise) ? returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify) : newDefer[tuple[0] + "With"](this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments);
                                });
                            }), fns = null;
                        }).promise();
                    },
                    promise: function(obj) {
                        return null != obj ? jQuery.extend(obj, promise) : promise;
                    }
                }, deferred = {};
                return promise.pipe = promise.then, jQuery.each(tuples, function(i, tuple) {
                    var list = tuple[2], stateString = tuple[3];
                    promise[tuple[1]] = list.add, stateString && list.add(function() {
                        state = stateString;
                    }, tuples[1 ^ i][2].disable, tuples[2][2].lock), deferred[tuple[0]] = function() {
                        return deferred[tuple[0] + "With"](this === deferred ? promise : this, arguments), 
                        this;
                    }, deferred[tuple[0] + "With"] = list.fireWith;
                }), promise.promise(deferred), func && func.call(deferred, deferred), deferred;
            },
            when: function(subordinate) {
                var progressValues, progressContexts, resolveContexts, i = 0, resolveValues = slice.call(arguments), length = resolveValues.length, remaining = 1 !== length || subordinate && jQuery.isFunction(subordinate.promise) ? length : 0, deferred = 1 === remaining ? subordinate : jQuery.Deferred(), updateFunc = function(i, contexts, values) {
                    return function(value) {
                        contexts[i] = this, values[i] = arguments.length > 1 ? slice.call(arguments) : value, 
                        values === progressValues ? deferred.notifyWith(contexts, values) : --remaining || deferred.resolveWith(contexts, values);
                    };
                };
                if (length > 1) for (progressValues = new Array(length), progressContexts = new Array(length), 
                resolveContexts = new Array(length); i < length; i++) resolveValues[i] && jQuery.isFunction(resolveValues[i].promise) ? resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues)) : --remaining;
                return remaining || deferred.resolveWith(resolveContexts, resolveValues), deferred.promise();
            }
        });
        var readyList;
        jQuery.fn.ready = function(fn) {
            return jQuery.ready.promise().done(fn), this;
        }, jQuery.extend({
            isReady: !1,
            readyWait: 1,
            holdReady: function(hold) {
                hold ? jQuery.readyWait++ : jQuery.ready(!0);
            },
            ready: function(wait) {
                if (!0 === wait ? !--jQuery.readyWait : !jQuery.isReady) {
                    if (!document.body) return setTimeout(jQuery.ready);
                    jQuery.isReady = !0, !0 !== wait && --jQuery.readyWait > 0 || (readyList.resolveWith(document, [ jQuery ]), 
                    jQuery.fn.trigger && jQuery(document).trigger("ready").off("ready"));
                }
            }
        }), jQuery.ready.promise = function(obj) {
            if (!readyList) if (readyList = jQuery.Deferred(), "complete" === document.readyState) setTimeout(jQuery.ready); else if (document.addEventListener) document.addEventListener("DOMContentLoaded", completed, !1), 
            window.addEventListener("load", completed, !1); else {
                document.attachEvent("onreadystatechange", completed), window.attachEvent("onload", completed);
                var top = !1;
                try {
                    top = null == window.frameElement && document.documentElement;
                } catch (e) {}
                top && top.doScroll && function doScrollCheck() {
                    if (!jQuery.isReady) {
                        try {
                            top.doScroll("left");
                        } catch (e) {
                            return setTimeout(doScrollCheck, 50);
                        }
                        detach(), jQuery.ready();
                    }
                }();
            }
            return readyList.promise(obj);
        };
        var i, strundefined = "undefined";
        for (i in jQuery(support)) break;
        support.ownLast = "0" !== i, support.inlineBlockNeedsLayout = !1, jQuery(function() {
            var container, div, body = document.getElementsByTagName("body")[0];
            body && ((container = document.createElement("div")).style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px", 
            div = document.createElement("div"), body.appendChild(container).appendChild(div), 
            typeof div.style.zoom !== strundefined && (div.style.cssText = "border:0;margin:0;width:1px;padding:1px;display:inline;zoom:1", 
            (support.inlineBlockNeedsLayout = 3 === div.offsetWidth) && (body.style.zoom = 1)), 
            body.removeChild(container), container = div = null);
        }), function() {
            var div = document.createElement("div");
            if (null == support.deleteExpando) {
                support.deleteExpando = !0;
                try {
                    delete div.test;
                } catch (e) {
                    support.deleteExpando = !1;
                }
            }
            div = null;
        }(), jQuery.acceptData = function(elem) {
            var noData = jQuery.noData[(elem.nodeName + " ").toLowerCase()], nodeType = +elem.nodeType || 1;
            return (1 === nodeType || 9 === nodeType) && (!noData || !0 !== noData && elem.getAttribute("classid") === noData);
        };
        var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, rmultiDash = /([A-Z])/g;
        jQuery.extend({
            cache: {},
            noData: {
                "applet ": !0,
                "embed ": !0,
                "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
            },
            hasData: function(elem) {
                return !!(elem = elem.nodeType ? jQuery.cache[elem[jQuery.expando]] : elem[jQuery.expando]) && !isEmptyDataObject(elem);
            },
            data: function(elem, name, data) {
                return internalData(elem, name, data);
            },
            removeData: function(elem, name) {
                return internalRemoveData(elem, name);
            },
            _data: function(elem, name, data) {
                return internalData(elem, name, data, !0);
            },
            _removeData: function(elem, name) {
                return internalRemoveData(elem, name, !0);
            }
        }), jQuery.fn.extend({
            data: function(key, value) {
                var i, name, data, elem = this[0], attrs = elem && elem.attributes;
                if (void 0 === key) {
                    if (this.length && (data = jQuery.data(elem), 1 === elem.nodeType && !jQuery._data(elem, "parsedAttrs"))) {
                        for (i = attrs.length; i--; ) 0 === (name = attrs[i].name).indexOf("data-") && dataAttr(elem, name = jQuery.camelCase(name.slice(5)), data[name]);
                        jQuery._data(elem, "parsedAttrs", !0);
                    }
                    return data;
                }
                return "object" == typeof key ? this.each(function() {
                    jQuery.data(this, key);
                }) : arguments.length > 1 ? this.each(function() {
                    jQuery.data(this, key, value);
                }) : elem ? dataAttr(elem, key, jQuery.data(elem, key)) : void 0;
            },
            removeData: function(key) {
                return this.each(function() {
                    jQuery.removeData(this, key);
                });
            }
        }), jQuery.extend({
            queue: function(elem, type, data) {
                var queue;
                if (elem) return type = (type || "fx") + "queue", queue = jQuery._data(elem, type), 
                data && (!queue || jQuery.isArray(data) ? queue = jQuery._data(elem, type, jQuery.makeArray(data)) : queue.push(data)), 
                queue || [];
            },
            dequeue: function(elem, type) {
                type = type || "fx";
                var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function() {
                    jQuery.dequeue(elem, type);
                };
                "inprogress" === fn && (fn = queue.shift(), startLength--), fn && ("fx" === type && queue.unshift("inprogress"), 
                delete hooks.stop, fn.call(elem, next, hooks)), !startLength && hooks && hooks.empty.fire();
            },
            _queueHooks: function(elem, type) {
                var key = type + "queueHooks";
                return jQuery._data(elem, key) || jQuery._data(elem, key, {
                    empty: jQuery.Callbacks("once memory").add(function() {
                        jQuery._removeData(elem, type + "queue"), jQuery._removeData(elem, key);
                    })
                });
            }
        }), jQuery.fn.extend({
            queue: function(type, data) {
                var setter = 2;
                return "string" != typeof type && (data = type, type = "fx", setter--), arguments.length < setter ? jQuery.queue(this[0], type) : void 0 === data ? this : this.each(function() {
                    var queue = jQuery.queue(this, type, data);
                    jQuery._queueHooks(this, type), "fx" === type && "inprogress" !== queue[0] && jQuery.dequeue(this, type);
                });
            },
            dequeue: function(type) {
                return this.each(function() {
                    jQuery.dequeue(this, type);
                });
            },
            clearQueue: function(type) {
                return this.queue(type || "fx", []);
            },
            promise: function(type, obj) {
                var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function() {
                    --count || defer.resolveWith(elements, [ elements ]);
                };
                for ("string" != typeof type && (obj = type, type = void 0), type = type || "fx"; i--; ) (tmp = jQuery._data(elements[i], type + "queueHooks")) && tmp.empty && (count++, 
                tmp.empty.add(resolve));
                return resolve(), defer.promise(obj);
            }
        });
        var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, cssExpand = [ "Top", "Right", "Bottom", "Left" ], isHidden = function(elem, el) {
            return elem = el || elem, "none" === jQuery.css(elem, "display") || !jQuery.contains(elem.ownerDocument, elem);
        }, access = jQuery.access = function(elems, fn, key, value, chainable, emptyGet, raw) {
            var i = 0, length = elems.length, bulk = null == key;
            if ("object" === jQuery.type(key)) {
                chainable = !0;
                for (i in key) jQuery.access(elems, fn, i, key[i], !0, emptyGet, raw);
            } else if (void 0 !== value && (chainable = !0, jQuery.isFunction(value) || (raw = !0), 
            bulk && (raw ? (fn.call(elems, value), fn = null) : (bulk = fn, fn = function(elem, key, value) {
                return bulk.call(jQuery(elem), value);
            })), fn)) for (;i < length; i++) fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
            return chainable ? elems : bulk ? fn.call(elems) : length ? fn(elems[0], key) : emptyGet;
        }, rcheckableType = /^(?:checkbox|radio)$/i;
        !function() {
            var fragment = document.createDocumentFragment(), div = document.createElement("div"), input = document.createElement("input");
            if (div.setAttribute("className", "t"), div.innerHTML = "  <link/><table></table><a href='/a'>a</a>", 
            support.leadingWhitespace = 3 === div.firstChild.nodeType, support.tbody = !div.getElementsByTagName("tbody").length, 
            support.htmlSerialize = !!div.getElementsByTagName("link").length, support.html5Clone = "<:nav></:nav>" !== document.createElement("nav").cloneNode(!0).outerHTML, 
            input.type = "checkbox", input.checked = !0, fragment.appendChild(input), support.appendChecked = input.checked, 
            div.innerHTML = "<textarea>x</textarea>", support.noCloneChecked = !!div.cloneNode(!0).lastChild.defaultValue, 
            fragment.appendChild(div), div.innerHTML = "<input type='radio' checked='checked' name='t'/>", 
            support.checkClone = div.cloneNode(!0).cloneNode(!0).lastChild.checked, support.noCloneEvent = !0, 
            div.attachEvent && (div.attachEvent("onclick", function() {
                support.noCloneEvent = !1;
            }), div.cloneNode(!0).click()), null == support.deleteExpando) {
                support.deleteExpando = !0;
                try {
                    delete div.test;
                } catch (e) {
                    support.deleteExpando = !1;
                }
            }
            fragment = div = input = null;
        }(), function() {
            var i, eventName, div = document.createElement("div");
            for (i in {
                submit: !0,
                change: !0,
                focusin: !0
            }) eventName = "on" + i, (support[i + "Bubbles"] = eventName in window) || (div.setAttribute(eventName, "t"), 
            support[i + "Bubbles"] = !1 === div.attributes[eventName].expando);
            div = null;
        }();
        var rformElems = /^(?:input|select|textarea)$/i, rkeyEvent = /^key/, rmouseEvent = /^(?:mouse|contextmenu)|click/, rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;
        jQuery.event = {
            global: {},
            add: function(elem, types, handler, data, selector) {
                var tmp, events, t, handleObjIn, special, eventHandle, handleObj, handlers, type, namespaces, origType, elemData = jQuery._data(elem);
                if (elemData) {
                    for (handler.handler && (handler = (handleObjIn = handler).handler, selector = handleObjIn.selector), 
                    handler.guid || (handler.guid = jQuery.guid++), (events = elemData.events) || (events = elemData.events = {}), 
                    (eventHandle = elemData.handle) || ((eventHandle = elemData.handle = function(e) {
                        return typeof jQuery === strundefined || e && jQuery.event.triggered === e.type ? void 0 : jQuery.event.dispatch.apply(eventHandle.elem, arguments);
                    }).elem = elem), t = (types = (types || "").match(rnotwhite) || [ "" ]).length; t--; ) type = origType = (tmp = rtypenamespace.exec(types[t]) || [])[1], 
                    namespaces = (tmp[2] || "").split(".").sort(), type && (special = jQuery.event.special[type] || {}, 
                    type = (selector ? special.delegateType : special.bindType) || type, special = jQuery.event.special[type] || {}, 
                    handleObj = jQuery.extend({
                        type: type,
                        origType: origType,
                        data: data,
                        handler: handler,
                        guid: handler.guid,
                        selector: selector,
                        needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                        namespace: namespaces.join(".")
                    }, handleObjIn), (handlers = events[type]) || ((handlers = events[type] = []).delegateCount = 0, 
                    special.setup && !1 !== special.setup.call(elem, data, namespaces, eventHandle) || (elem.addEventListener ? elem.addEventListener(type, eventHandle, !1) : elem.attachEvent && elem.attachEvent("on" + type, eventHandle))), 
                    special.add && (special.add.call(elem, handleObj), handleObj.handler.guid || (handleObj.handler.guid = handler.guid)), 
                    selector ? handlers.splice(handlers.delegateCount++, 0, handleObj) : handlers.push(handleObj), 
                    jQuery.event.global[type] = !0);
                    elem = null;
                }
            },
            remove: function(elem, types, handler, selector, mappedTypes) {
                var j, handleObj, tmp, origCount, t, events, special, handlers, type, namespaces, origType, elemData = jQuery.hasData(elem) && jQuery._data(elem);
                if (elemData && (events = elemData.events)) {
                    for (t = (types = (types || "").match(rnotwhite) || [ "" ]).length; t--; ) if (tmp = rtypenamespace.exec(types[t]) || [], 
                    type = origType = tmp[1], namespaces = (tmp[2] || "").split(".").sort(), type) {
                        for (special = jQuery.event.special[type] || {}, handlers = events[type = (selector ? special.delegateType : special.bindType) || type] || [], 
                        tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"), 
                        origCount = j = handlers.length; j--; ) handleObj = handlers[j], !mappedTypes && origType !== handleObj.origType || handler && handler.guid !== handleObj.guid || tmp && !tmp.test(handleObj.namespace) || selector && selector !== handleObj.selector && ("**" !== selector || !handleObj.selector) || (handlers.splice(j, 1), 
                        handleObj.selector && handlers.delegateCount--, special.remove && special.remove.call(elem, handleObj));
                        origCount && !handlers.length && (special.teardown && !1 !== special.teardown.call(elem, namespaces, elemData.handle) || jQuery.removeEvent(elem, type, elemData.handle), 
                        delete events[type]);
                    } else for (type in events) jQuery.event.remove(elem, type + types[t], handler, selector, !0);
                    jQuery.isEmptyObject(events) && (delete elemData.handle, jQuery._removeData(elem, "events"));
                }
            },
            trigger: function(event, data, elem, onlyHandlers) {
                var handle, ontype, cur, bubbleType, special, tmp, i, eventPath = [ elem || document ], type = hasOwn.call(event, "type") ? event.type : event, namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
                if (cur = tmp = elem = elem || document, 3 !== elem.nodeType && 8 !== elem.nodeType && !rfocusMorph.test(type + jQuery.event.triggered) && (type.indexOf(".") >= 0 && (type = (namespaces = type.split(".")).shift(), 
                namespaces.sort()), ontype = type.indexOf(":") < 0 && "on" + type, event = event[jQuery.expando] ? event : new jQuery.Event(type, "object" == typeof event && event), 
                event.isTrigger = onlyHandlers ? 2 : 3, event.namespace = namespaces.join("."), 
                event.namespace_re = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, 
                event.result = void 0, event.target || (event.target = elem), data = null == data ? [ event ] : jQuery.makeArray(data, [ event ]), 
                special = jQuery.event.special[type] || {}, onlyHandlers || !special.trigger || !1 !== special.trigger.apply(elem, data))) {
                    if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
                        for (bubbleType = special.delegateType || type, rfocusMorph.test(bubbleType + type) || (cur = cur.parentNode); cur; cur = cur.parentNode) eventPath.push(cur), 
                        tmp = cur;
                        tmp === (elem.ownerDocument || document) && eventPath.push(tmp.defaultView || tmp.parentWindow || window);
                    }
                    for (i = 0; (cur = eventPath[i++]) && !event.isPropagationStopped(); ) event.type = i > 1 ? bubbleType : special.bindType || type, 
                    (handle = (jQuery._data(cur, "events") || {})[event.type] && jQuery._data(cur, "handle")) && handle.apply(cur, data), 
                    (handle = ontype && cur[ontype]) && handle.apply && jQuery.acceptData(cur) && (event.result = handle.apply(cur, data), 
                    !1 === event.result && event.preventDefault());
                    if (event.type = type, !onlyHandlers && !event.isDefaultPrevented() && (!special._default || !1 === special._default.apply(eventPath.pop(), data)) && jQuery.acceptData(elem) && ontype && elem[type] && !jQuery.isWindow(elem)) {
                        (tmp = elem[ontype]) && (elem[ontype] = null), jQuery.event.triggered = type;
                        try {
                            elem[type]();
                        } catch (e) {}
                        jQuery.event.triggered = void 0, tmp && (elem[ontype] = tmp);
                    }
                    return event.result;
                }
            },
            dispatch: function(event) {
                event = jQuery.event.fix(event);
                var i, ret, handleObj, matched, j, handlerQueue = [], args = slice.call(arguments), handlers = (jQuery._data(this, "events") || {})[event.type] || [], special = jQuery.event.special[event.type] || {};
                if (args[0] = event, event.delegateTarget = this, !special.preDispatch || !1 !== special.preDispatch.call(this, event)) {
                    for (handlerQueue = jQuery.event.handlers.call(this, event, handlers), i = 0; (matched = handlerQueue[i++]) && !event.isPropagationStopped(); ) for (event.currentTarget = matched.elem, 
                    j = 0; (handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped(); ) event.namespace_re && !event.namespace_re.test(handleObj.namespace) || (event.handleObj = handleObj, 
                    event.data = handleObj.data, void 0 !== (ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args)) && !1 === (event.result = ret) && (event.preventDefault(), 
                    event.stopPropagation()));
                    return special.postDispatch && special.postDispatch.call(this, event), event.result;
                }
            },
            handlers: function(event, handlers) {
                var sel, handleObj, matches, i, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;
                if (delegateCount && cur.nodeType && (!event.button || "click" !== event.type)) for (;cur != this; cur = cur.parentNode || this) if (1 === cur.nodeType && (!0 !== cur.disabled || "click" !== event.type)) {
                    for (matches = [], i = 0; i < delegateCount; i++) void 0 === matches[sel = (handleObj = handlers[i]).selector + " "] && (matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [ cur ]).length), 
                    matches[sel] && matches.push(handleObj);
                    matches.length && handlerQueue.push({
                        elem: cur,
                        handlers: matches
                    });
                }
                return delegateCount < handlers.length && handlerQueue.push({
                    elem: this,
                    handlers: handlers.slice(delegateCount)
                }), handlerQueue;
            },
            fix: function(event) {
                if (event[jQuery.expando]) return event;
                var i, prop, copy, type = event.type, originalEvent = event, fixHook = this.fixHooks[type];
                for (fixHook || (this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {}), 
                copy = fixHook.props ? this.props.concat(fixHook.props) : this.props, event = new jQuery.Event(originalEvent), 
                i = copy.length; i--; ) event[prop = copy[i]] = originalEvent[prop];
                return event.target || (event.target = originalEvent.srcElement || document), 3 === event.target.nodeType && (event.target = event.target.parentNode), 
                event.metaKey = !!event.metaKey, fixHook.filter ? fixHook.filter(event, originalEvent) : event;
            },
            props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
            fixHooks: {},
            keyHooks: {
                props: "char charCode key keyCode".split(" "),
                filter: function(event, original) {
                    return null == event.which && (event.which = null != original.charCode ? original.charCode : original.keyCode), 
                    event;
                }
            },
            mouseHooks: {
                props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
                filter: function(event, original) {
                    var body, eventDoc, doc, button = original.button, fromElement = original.fromElement;
                    return null == event.pageX && null != original.clientX && (doc = (eventDoc = event.target.ownerDocument || document).documentElement, 
                    body = eventDoc.body, event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0), 
                    event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)), 
                    !event.relatedTarget && fromElement && (event.relatedTarget = fromElement === event.target ? original.toElement : fromElement), 
                    event.which || void 0 === button || (event.which = 1 & button ? 1 : 2 & button ? 3 : 4 & button ? 2 : 0), 
                    event;
                }
            },
            special: {
                load: {
                    noBubble: !0
                },
                focus: {
                    trigger: function() {
                        if (this !== safeActiveElement() && this.focus) try {
                            return this.focus(), !1;
                        } catch (e) {}
                    },
                    delegateType: "focusin"
                },
                blur: {
                    trigger: function() {
                        if (this === safeActiveElement() && this.blur) return this.blur(), !1;
                    },
                    delegateType: "focusout"
                },
                click: {
                    trigger: function() {
                        if (jQuery.nodeName(this, "input") && "checkbox" === this.type && this.click) return this.click(), 
                        !1;
                    },
                    _default: function(event) {
                        return jQuery.nodeName(event.target, "a");
                    }
                },
                beforeunload: {
                    postDispatch: function(event) {
                        void 0 !== event.result && (event.originalEvent.returnValue = event.result);
                    }
                }
            },
            simulate: function(type, elem, event, bubble) {
                var e = jQuery.extend(new jQuery.Event(), event, {
                    type: type,
                    isSimulated: !0,
                    originalEvent: {}
                });
                bubble ? jQuery.event.trigger(e, null, elem) : jQuery.event.dispatch.call(elem, e), 
                e.isDefaultPrevented() && event.preventDefault();
            }
        }, jQuery.removeEvent = document.removeEventListener ? function(elem, type, handle) {
            elem.removeEventListener && elem.removeEventListener(type, handle, !1);
        } : function(elem, type, handle) {
            var name = "on" + type;
            elem.detachEvent && (typeof elem[name] === strundefined && (elem[name] = null), 
            elem.detachEvent(name, handle));
        }, jQuery.Event = function(src, props) {
            if (!(this instanceof jQuery.Event)) return new jQuery.Event(src, props);
            src && src.type ? (this.originalEvent = src, this.type = src.type, this.isDefaultPrevented = src.defaultPrevented || void 0 === src.defaultPrevented && (!1 === src.returnValue || src.getPreventDefault && src.getPreventDefault()) ? returnTrue : returnFalse) : this.type = src, 
            props && jQuery.extend(this, props), this.timeStamp = src && src.timeStamp || jQuery.now(), 
            this[jQuery.expando] = !0;
        }, jQuery.Event.prototype = {
            isDefaultPrevented: returnFalse,
            isPropagationStopped: returnFalse,
            isImmediatePropagationStopped: returnFalse,
            preventDefault: function() {
                var e = this.originalEvent;
                this.isDefaultPrevented = returnTrue, e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1);
            },
            stopPropagation: function() {
                var e = this.originalEvent;
                this.isPropagationStopped = returnTrue, e && (e.stopPropagation && e.stopPropagation(), 
                e.cancelBubble = !0);
            },
            stopImmediatePropagation: function() {
                this.isImmediatePropagationStopped = returnTrue, this.stopPropagation();
            }
        }, jQuery.each({
            mouseenter: "mouseover",
            mouseleave: "mouseout"
        }, function(orig, fix) {
            jQuery.event.special[orig] = {
                delegateType: fix,
                bindType: fix,
                handle: function(event) {
                    var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;
                    return related && (related === target || jQuery.contains(target, related)) || (event.type = handleObj.origType, 
                    ret = handleObj.handler.apply(this, arguments), event.type = fix), ret;
                }
            };
        }), support.submitBubbles || (jQuery.event.special.submit = {
            setup: function() {
                if (jQuery.nodeName(this, "form")) return !1;
                jQuery.event.add(this, "click._submit keypress._submit", function(e) {
                    var elem = e.target, form = jQuery.nodeName(elem, "input") || jQuery.nodeName(elem, "button") ? elem.form : void 0;
                    form && !jQuery._data(form, "submitBubbles") && (jQuery.event.add(form, "submit._submit", function(event) {
                        event._submit_bubble = !0;
                    }), jQuery._data(form, "submitBubbles", !0));
                });
            },
            postDispatch: function(event) {
                event._submit_bubble && (delete event._submit_bubble, this.parentNode && !event.isTrigger && jQuery.event.simulate("submit", this.parentNode, event, !0));
            },
            teardown: function() {
                if (jQuery.nodeName(this, "form")) return !1;
                jQuery.event.remove(this, "._submit");
            }
        }), support.changeBubbles || (jQuery.event.special.change = {
            setup: function() {
                if (rformElems.test(this.nodeName)) return "checkbox" !== this.type && "radio" !== this.type || (jQuery.event.add(this, "propertychange._change", function(event) {
                    "checked" === event.originalEvent.propertyName && (this._just_changed = !0);
                }), jQuery.event.add(this, "click._change", function(event) {
                    this._just_changed && !event.isTrigger && (this._just_changed = !1), jQuery.event.simulate("change", this, event, !0);
                })), !1;
                jQuery.event.add(this, "beforeactivate._change", function(e) {
                    var elem = e.target;
                    rformElems.test(elem.nodeName) && !jQuery._data(elem, "changeBubbles") && (jQuery.event.add(elem, "change._change", function(event) {
                        !this.parentNode || event.isSimulated || event.isTrigger || jQuery.event.simulate("change", this.parentNode, event, !0);
                    }), jQuery._data(elem, "changeBubbles", !0));
                });
            },
            handle: function(event) {
                var elem = event.target;
                if (this !== elem || event.isSimulated || event.isTrigger || "radio" !== elem.type && "checkbox" !== elem.type) return event.handleObj.handler.apply(this, arguments);
            },
            teardown: function() {
                return jQuery.event.remove(this, "._change"), !rformElems.test(this.nodeName);
            }
        }), support.focusinBubbles || jQuery.each({
            focus: "focusin",
            blur: "focusout"
        }, function(orig, fix) {
            var handler = function(event) {
                jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), !0);
            };
            jQuery.event.special[fix] = {
                setup: function() {
                    var doc = this.ownerDocument || this, attaches = jQuery._data(doc, fix);
                    attaches || doc.addEventListener(orig, handler, !0), jQuery._data(doc, fix, (attaches || 0) + 1);
                },
                teardown: function() {
                    var doc = this.ownerDocument || this, attaches = jQuery._data(doc, fix) - 1;
                    attaches ? jQuery._data(doc, fix, attaches) : (doc.removeEventListener(orig, handler, !0), 
                    jQuery._removeData(doc, fix));
                }
            };
        }), jQuery.fn.extend({
            on: function(types, selector, data, fn, one) {
                var type, origFn;
                if ("object" == typeof types) {
                    "string" != typeof selector && (data = data || selector, selector = void 0);
                    for (type in types) this.on(type, selector, data, types[type], one);
                    return this;
                }
                if (null == data && null == fn ? (fn = selector, data = selector = void 0) : null == fn && ("string" == typeof selector ? (fn = data, 
                data = void 0) : (fn = data, data = selector, selector = void 0)), !1 === fn) fn = returnFalse; else if (!fn) return this;
                return 1 === one && (origFn = fn, (fn = function(event) {
                    return jQuery().off(event), origFn.apply(this, arguments);
                }).guid = origFn.guid || (origFn.guid = jQuery.guid++)), this.each(function() {
                    jQuery.event.add(this, types, fn, data, selector);
                });
            },
            one: function(types, selector, data, fn) {
                return this.on(types, selector, data, fn, 1);
            },
            off: function(types, selector, fn) {
                var handleObj, type;
                if (types && types.preventDefault && types.handleObj) return handleObj = types.handleObj, 
                jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler), 
                this;
                if ("object" == typeof types) {
                    for (type in types) this.off(type, selector, types[type]);
                    return this;
                }
                return !1 !== selector && "function" != typeof selector || (fn = selector, selector = void 0), 
                !1 === fn && (fn = returnFalse), this.each(function() {
                    jQuery.event.remove(this, types, fn, selector);
                });
            },
            trigger: function(type, data) {
                return this.each(function() {
                    jQuery.event.trigger(type, data, this);
                });
            },
            triggerHandler: function(type, data) {
                var elem = this[0];
                if (elem) return jQuery.event.trigger(type, data, elem, !0);
            }
        });
        var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video", rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"), rleadingWhitespace = /^\s+/, rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, rtagName = /<([\w:]+)/, rtbody = /<tbody/i, rhtml = /<|&#?\w+;/, rnoInnerhtml = /<(?:script|style|link)/i, rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rscriptType = /^$|\/(?:java|ecma)script/i, rscriptTypeMasked = /^true\/(.*)/, wrapMap = {
            option: [ 1, "<select multiple='multiple'>", "</select>" ],
            legend: [ 1, "<fieldset>", "</fieldset>" ],
            area: [ 1, "<map>", "</map>" ],
            param: [ 1, "<object>", "</object>" ],
            thead: [ 1, "<table>", "</table>" ],
            tr: [ 2, "<table><tbody>", "</tbody></table>" ],
            col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
            td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
            _default: support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>" ]
        }, fragmentDiv = createSafeFragment(document).appendChild(document.createElement("div"));
        wrapMap.optgroup = wrapMap.option, wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead, 
        wrapMap.th = wrapMap.td, jQuery.extend({
            clone: function(elem, dataAndEvents, deepDataAndEvents) {
                var destElements, node, clone, i, srcElements, inPage = jQuery.contains(elem.ownerDocument, elem);
                if (support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test("<" + elem.nodeName + ">") ? clone = elem.cloneNode(!0) : (fragmentDiv.innerHTML = elem.outerHTML, 
                fragmentDiv.removeChild(clone = fragmentDiv.firstChild)), !(support.noCloneEvent && support.noCloneChecked || 1 !== elem.nodeType && 11 !== elem.nodeType || jQuery.isXMLDoc(elem))) for (destElements = getAll(clone), 
                srcElements = getAll(elem), i = 0; null != (node = srcElements[i]); ++i) destElements[i] && fixCloneNodeIssues(node, destElements[i]);
                if (dataAndEvents) if (deepDataAndEvents) for (srcElements = srcElements || getAll(elem), 
                destElements = destElements || getAll(clone), i = 0; null != (node = srcElements[i]); i++) cloneCopyEvent(node, destElements[i]); else cloneCopyEvent(elem, clone);
                return (destElements = getAll(clone, "script")).length > 0 && setGlobalEval(destElements, !inPage && getAll(elem, "script")), 
                destElements = srcElements = node = null, clone;
            },
            buildFragment: function(elems, context, scripts, selection) {
                for (var j, elem, contains, tmp, tag, tbody, wrap, l = elems.length, safe = createSafeFragment(context), nodes = [], i = 0; i < l; i++) if ((elem = elems[i]) || 0 === elem) if ("object" === jQuery.type(elem)) jQuery.merge(nodes, elem.nodeType ? [ elem ] : elem); else if (rhtml.test(elem)) {
                    for (tmp = tmp || safe.appendChild(context.createElement("div")), tag = (rtagName.exec(elem) || [ "", "" ])[1].toLowerCase(), 
                    wrap = wrapMap[tag] || wrapMap._default, tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, "<$1></$2>") + wrap[2], 
                    j = wrap[0]; j--; ) tmp = tmp.lastChild;
                    if (!support.leadingWhitespace && rleadingWhitespace.test(elem) && nodes.push(context.createTextNode(rleadingWhitespace.exec(elem)[0])), 
                    !support.tbody) for (j = (elem = "table" !== tag || rtbody.test(elem) ? "<table>" !== wrap[1] || rtbody.test(elem) ? 0 : tmp : tmp.firstChild) && elem.childNodes.length; j--; ) jQuery.nodeName(tbody = elem.childNodes[j], "tbody") && !tbody.childNodes.length && elem.removeChild(tbody);
                    for (jQuery.merge(nodes, tmp.childNodes), tmp.textContent = ""; tmp.firstChild; ) tmp.removeChild(tmp.firstChild);
                    tmp = safe.lastChild;
                } else nodes.push(context.createTextNode(elem));
                for (tmp && safe.removeChild(tmp), support.appendChecked || jQuery.grep(getAll(nodes, "input"), fixDefaultChecked), 
                i = 0; elem = nodes[i++]; ) if ((!selection || -1 === jQuery.inArray(elem, selection)) && (contains = jQuery.contains(elem.ownerDocument, elem), 
                tmp = getAll(safe.appendChild(elem), "script"), contains && setGlobalEval(tmp), 
                scripts)) for (j = 0; elem = tmp[j++]; ) rscriptType.test(elem.type || "") && scripts.push(elem);
                return tmp = null, safe;
            },
            cleanData: function(elems, acceptData) {
                for (var elem, type, id, data, i = 0, internalKey = jQuery.expando, cache = jQuery.cache, deleteExpando = support.deleteExpando, special = jQuery.event.special; null != (elem = elems[i]); i++) if ((acceptData || jQuery.acceptData(elem)) && (id = elem[internalKey], 
                data = id && cache[id])) {
                    if (data.events) for (type in data.events) special[type] ? jQuery.event.remove(elem, type) : jQuery.removeEvent(elem, type, data.handle);
                    cache[id] && (delete cache[id], deleteExpando ? delete elem[internalKey] : typeof elem.removeAttribute !== strundefined ? elem.removeAttribute(internalKey) : elem[internalKey] = null, 
                    deletedIds.push(id));
                }
            }
        }), jQuery.fn.extend({
            text: function(value) {
                return access(this, function(value) {
                    return void 0 === value ? jQuery.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value));
                }, null, value, arguments.length);
            },
            append: function() {
                return this.domManip(arguments, function(elem) {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || manipulationTarget(this, elem).appendChild(elem);
                });
            },
            prepend: function() {
                return this.domManip(arguments, function(elem) {
                    if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                        var target = manipulationTarget(this, elem);
                        target.insertBefore(elem, target.firstChild);
                    }
                });
            },
            before: function() {
                return this.domManip(arguments, function(elem) {
                    this.parentNode && this.parentNode.insertBefore(elem, this);
                });
            },
            after: function() {
                return this.domManip(arguments, function(elem) {
                    this.parentNode && this.parentNode.insertBefore(elem, this.nextSibling);
                });
            },
            remove: function(selector, keepData) {
                for (var elem, elems = selector ? jQuery.filter(selector, this) : this, i = 0; null != (elem = elems[i]); i++) keepData || 1 !== elem.nodeType || jQuery.cleanData(getAll(elem)), 
                elem.parentNode && (keepData && jQuery.contains(elem.ownerDocument, elem) && setGlobalEval(getAll(elem, "script")), 
                elem.parentNode.removeChild(elem));
                return this;
            },
            empty: function() {
                for (var elem, i = 0; null != (elem = this[i]); i++) {
                    for (1 === elem.nodeType && jQuery.cleanData(getAll(elem, !1)); elem.firstChild; ) elem.removeChild(elem.firstChild);
                    elem.options && jQuery.nodeName(elem, "select") && (elem.options.length = 0);
                }
                return this;
            },
            clone: function(dataAndEvents, deepDataAndEvents) {
                return dataAndEvents = null != dataAndEvents && dataAndEvents, deepDataAndEvents = null == deepDataAndEvents ? dataAndEvents : deepDataAndEvents, 
                this.map(function() {
                    return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
                });
            },
            html: function(value) {
                return access(this, function(value) {
                    var elem = this[0] || {}, i = 0, l = this.length;
                    if (void 0 === value) return 1 === elem.nodeType ? elem.innerHTML.replace(/ jQuery\d+="(?:null|\d+)"/g, "") : void 0;
                    if ("string" == typeof value && !rnoInnerhtml.test(value) && (support.htmlSerialize || !rnoshimcache.test(value)) && (support.leadingWhitespace || !rleadingWhitespace.test(value)) && !wrapMap[(rtagName.exec(value) || [ "", "" ])[1].toLowerCase()]) {
                        value = value.replace(rxhtmlTag, "<$1></$2>");
                        try {
                            for (;i < l; i++) 1 === (elem = this[i] || {}).nodeType && (jQuery.cleanData(getAll(elem, !1)), 
                            elem.innerHTML = value);
                            elem = 0;
                        } catch (e) {}
                    }
                    elem && this.empty().append(value);
                }, null, value, arguments.length);
            },
            replaceWith: function() {
                var arg = arguments[0];
                return this.domManip(arguments, function(elem) {
                    arg = this.parentNode, jQuery.cleanData(getAll(this)), arg && arg.replaceChild(elem, this);
                }), arg && (arg.length || arg.nodeType) ? this : this.remove();
            },
            detach: function(selector) {
                return this.remove(selector, !0);
            },
            domManip: function(args, callback) {
                args = concat.apply([], args);
                var first, node, hasScripts, scripts, doc, fragment, i = 0, l = this.length, set = this, iNoClone = l - 1, value = args[0], isFunction = jQuery.isFunction(value);
                if (isFunction || l > 1 && "string" == typeof value && !support.checkClone && rchecked.test(value)) return this.each(function(index) {
                    var self = set.eq(index);
                    isFunction && (args[0] = value.call(this, index, self.html())), self.domManip(args, callback);
                });
                if (l && (fragment = jQuery.buildFragment(args, this[0].ownerDocument, !1, this), 
                first = fragment.firstChild, 1 === fragment.childNodes.length && (fragment = first), 
                first)) {
                    for (hasScripts = (scripts = jQuery.map(getAll(fragment, "script"), disableScript)).length; i < l; i++) node = fragment, 
                    i !== iNoClone && (node = jQuery.clone(node, !0, !0), hasScripts && jQuery.merge(scripts, getAll(node, "script"))), 
                    callback.call(this[i], node, i);
                    if (hasScripts) for (doc = scripts[scripts.length - 1].ownerDocument, jQuery.map(scripts, restoreScript), 
                    i = 0; i < hasScripts; i++) node = scripts[i], rscriptType.test(node.type || "") && !jQuery._data(node, "globalEval") && jQuery.contains(doc, node) && (node.src ? jQuery._evalUrl && jQuery._evalUrl(node.src) : jQuery.globalEval((node.text || node.textContent || node.innerHTML || "").replace(/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, "")));
                    fragment = first = null;
                }
                return this;
            }
        }), jQuery.each({
            appendTo: "append",
            prependTo: "prepend",
            insertBefore: "before",
            insertAfter: "after",
            replaceAll: "replaceWith"
        }, function(name, original) {
            jQuery.fn[name] = function(selector) {
                for (var elems, i = 0, ret = [], insert = jQuery(selector), last = insert.length - 1; i <= last; i++) elems = i === last ? this : this.clone(!0), 
                jQuery(insert[i])[original](elems), push.apply(ret, elems.get());
                return this.pushStack(ret);
            };
        });
        var iframe, elemdisplay = {};
        !function() {
            var a, shrinkWrapBlocksVal, div = document.createElement("div");
            div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", 
            (a = div.getElementsByTagName("a")[0]).style.cssText = "float:left;opacity:.5", 
            support.opacity = /^0.5/.test(a.style.opacity), support.cssFloat = !!a.style.cssFloat, 
            div.style.backgroundClip = "content-box", div.cloneNode(!0).style.backgroundClip = "", 
            support.clearCloneStyle = "content-box" === div.style.backgroundClip, a = div = null, 
            support.shrinkWrapBlocks = function() {
                var body, container, div;
                if (null == shrinkWrapBlocksVal) {
                    if (!(body = document.getElementsByTagName("body")[0])) return;
                    "border:0;width:0;height:0;position:absolute;top:0;left:-9999px", container = document.createElement("div"), 
                    div = document.createElement("div"), body.appendChild(container).appendChild(div), 
                    shrinkWrapBlocksVal = !1, typeof div.style.zoom !== strundefined && (div.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;padding:0;margin:0;border:0;width:1px;padding:1px;zoom:1", 
                    div.innerHTML = "<div></div>", div.firstChild.style.width = "5px", shrinkWrapBlocksVal = 3 !== div.offsetWidth), 
                    body.removeChild(container), body = container = div = null;
                }
                return shrinkWrapBlocksVal;
            };
        }();
        var getStyles, curCSS, rmargin = /^margin/, rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i"), rposition = /^(top|right|bottom|left)$/;
        window.getComputedStyle ? (getStyles = function(elem) {
            return elem.ownerDocument.defaultView.getComputedStyle(elem, null);
        }, curCSS = function(elem, name, computed) {
            var width, minWidth, maxWidth, ret, style = elem.style;
            return computed = computed || getStyles(elem), ret = computed ? computed.getPropertyValue(name) || computed[name] : void 0, 
            computed && ("" !== ret || jQuery.contains(elem.ownerDocument, elem) || (ret = jQuery.style(elem, name)), 
            rnumnonpx.test(ret) && rmargin.test(name) && (width = style.width, minWidth = style.minWidth, 
            maxWidth = style.maxWidth, style.minWidth = style.maxWidth = style.width = ret, 
            ret = computed.width, style.width = width, style.minWidth = minWidth, style.maxWidth = maxWidth)), 
            void 0 === ret ? ret : ret + "";
        }) : document.documentElement.currentStyle && (getStyles = function(elem) {
            return elem.currentStyle;
        }, curCSS = function(elem, name, computed) {
            var left, rs, rsLeft, ret, style = elem.style;
            return computed = computed || getStyles(elem), null == (ret = computed ? computed[name] : void 0) && style && style[name] && (ret = style[name]), 
            rnumnonpx.test(ret) && !rposition.test(name) && (left = style.left, (rsLeft = (rs = elem.runtimeStyle) && rs.left) && (rs.left = elem.currentStyle.left), 
            style.left = "fontSize" === name ? "1em" : ret, ret = style.pixelLeft + "px", style.left = left, 
            rsLeft && (rs.left = rsLeft)), void 0 === ret ? ret : ret + "" || "auto";
        }), function() {
            function computeStyleTests() {
                var container, div, body = document.getElementsByTagName("body")[0];
                body && (container = document.createElement("div"), div = document.createElement("div"), 
                container.style.cssText = containerStyles, body.appendChild(container).appendChild(div), 
                div.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;display:block;padding:1px;border:1px;width:4px;margin-top:1%;top:1%", 
                jQuery.swap(body, null != body.style.zoom ? {
                    zoom: 1
                } : {}, function() {
                    boxSizingVal = 4 === div.offsetWidth;
                }), boxSizingReliableVal = !0, pixelPositionVal = !1, reliableMarginRightVal = !0, 
                window.getComputedStyle && (pixelPositionVal = "1%" !== (window.getComputedStyle(div, null) || {}).top, 
                boxSizingReliableVal = "4px" === (window.getComputedStyle(div, null) || {
                    width: "4px"
                }).width), body.removeChild(container), div = body = null);
            }
            var a, reliableHiddenOffsetsVal, boxSizingVal, boxSizingReliableVal, pixelPositionVal, reliableMarginRightVal, div = document.createElement("div"), containerStyles = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px";
            div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", 
            (a = div.getElementsByTagName("a")[0]).style.cssText = "float:left;opacity:.5", 
            support.opacity = /^0.5/.test(a.style.opacity), support.cssFloat = !!a.style.cssFloat, 
            div.style.backgroundClip = "content-box", div.cloneNode(!0).style.backgroundClip = "", 
            support.clearCloneStyle = "content-box" === div.style.backgroundClip, a = div = null, 
            jQuery.extend(support, {
                reliableHiddenOffsets: function() {
                    if (null != reliableHiddenOffsetsVal) return reliableHiddenOffsetsVal;
                    var container, tds, isSupported, div = document.createElement("div"), body = document.getElementsByTagName("body")[0];
                    if (body) return div.setAttribute("className", "t"), div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", 
                    container = document.createElement("div"), container.style.cssText = containerStyles, 
                    body.appendChild(container).appendChild(div), div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", 
                    tds = div.getElementsByTagName("td"), tds[0].style.cssText = "padding:0;margin:0;border:0;display:none", 
                    isSupported = 0 === tds[0].offsetHeight, tds[0].style.display = "", tds[1].style.display = "none", 
                    reliableHiddenOffsetsVal = isSupported && 0 === tds[0].offsetHeight, body.removeChild(container), 
                    div = body = null, reliableHiddenOffsetsVal;
                },
                boxSizing: function() {
                    return null == boxSizingVal && computeStyleTests(), boxSizingVal;
                },
                boxSizingReliable: function() {
                    return null == boxSizingReliableVal && computeStyleTests(), boxSizingReliableVal;
                },
                pixelPosition: function() {
                    return null == pixelPositionVal && computeStyleTests(), pixelPositionVal;
                },
                reliableMarginRight: function() {
                    var body, container, div, marginDiv;
                    if (null == reliableMarginRightVal && window.getComputedStyle) {
                        if (!(body = document.getElementsByTagName("body")[0])) return;
                        container = document.createElement("div"), div = document.createElement("div"), 
                        container.style.cssText = containerStyles, body.appendChild(container).appendChild(div), 
                        (marginDiv = div.appendChild(document.createElement("div"))).style.cssText = div.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;padding:0;margin:0;border:0", 
                        marginDiv.style.marginRight = marginDiv.style.width = "0", div.style.width = "1px", 
                        reliableMarginRightVal = !parseFloat((window.getComputedStyle(marginDiv, null) || {}).marginRight), 
                        body.removeChild(container);
                    }
                    return reliableMarginRightVal;
                }
            });
        }(), jQuery.swap = function(elem, options, callback, args) {
            var ret, name, old = {};
            for (name in options) old[name] = elem.style[name], elem.style[name] = options[name];
            ret = callback.apply(elem, args || []);
            for (name in options) elem.style[name] = old[name];
            return ret;
        };
        var ralpha = /alpha\([^)]*\)/i, ropacity = /opacity\s*=\s*([^)]*)/, rdisplayswap = /^(none|table(?!-c[ea]).+)/, rnumsplit = new RegExp("^(" + pnum + ")(.*)$", "i"), rrelNum = new RegExp("^([+-])=(" + pnum + ")", "i"), cssShow = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        }, cssNormalTransform = {
            letterSpacing: 0,
            fontWeight: 400
        }, cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];
        jQuery.extend({
            cssHooks: {
                opacity: {
                    get: function(elem, computed) {
                        if (computed) {
                            var ret = curCSS(elem, "opacity");
                            return "" === ret ? "1" : ret;
                        }
                    }
                }
            },
            cssNumber: {
                columnCount: !0,
                fillOpacity: !0,
                fontWeight: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0
            },
            cssProps: {
                float: support.cssFloat ? "cssFloat" : "styleFloat"
            },
            style: function(elem, name, value, extra) {
                if (elem && 3 !== elem.nodeType && 8 !== elem.nodeType && elem.style) {
                    var ret, type, hooks, origName = jQuery.camelCase(name), style = elem.style;
                    if (name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName)), 
                    hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName], void 0 === value) return hooks && "get" in hooks && void 0 !== (ret = hooks.get(elem, !1, extra)) ? ret : style[name];
                    if ("string" === (type = typeof value) && (ret = rrelNum.exec(value)) && (value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name)), 
                    type = "number"), null != value && value === value && ("number" !== type || jQuery.cssNumber[origName] || (value += "px"), 
                    support.clearCloneStyle || "" !== value || 0 !== name.indexOf("background") || (style[name] = "inherit"), 
                    !(hooks && "set" in hooks && void 0 === (value = hooks.set(elem, value, extra))))) try {
                        style[name] = "", style[name] = value;
                    } catch (e) {}
                }
            },
            css: function(elem, name, extra, styles) {
                var num, val, hooks, origName = jQuery.camelCase(name);
                return name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName)), 
                (hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]) && "get" in hooks && (val = hooks.get(elem, !0, extra)), 
                void 0 === val && (val = curCSS(elem, name, styles)), "normal" === val && name in cssNormalTransform && (val = cssNormalTransform[name]), 
                "" === extra || extra ? (num = parseFloat(val), !0 === extra || jQuery.isNumeric(num) ? num || 0 : val) : val;
            }
        }), jQuery.each([ "height", "width" ], function(i, name) {
            jQuery.cssHooks[name] = {
                get: function(elem, computed, extra) {
                    if (computed) return 0 === elem.offsetWidth && rdisplayswap.test(jQuery.css(elem, "display")) ? jQuery.swap(elem, cssShow, function() {
                        return getWidthOrHeight(elem, name, extra);
                    }) : getWidthOrHeight(elem, name, extra);
                },
                set: function(elem, value, extra) {
                    var styles = extra && getStyles(elem);
                    return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, support.boxSizing() && "border-box" === jQuery.css(elem, "boxSizing", !1, styles), styles) : 0);
                }
            };
        }), support.opacity || (jQuery.cssHooks.opacity = {
            get: function(elem, computed) {
                return ropacity.test((computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : computed ? "1" : "";
            },
            set: function(elem, value) {
                var style = elem.style, currentStyle = elem.currentStyle, opacity = jQuery.isNumeric(value) ? "alpha(opacity=" + 100 * value + ")" : "", filter = currentStyle && currentStyle.filter || style.filter || "";
                style.zoom = 1, (value >= 1 || "" === value) && "" === jQuery.trim(filter.replace(ralpha, "")) && style.removeAttribute && (style.removeAttribute("filter"), 
                "" === value || currentStyle && !currentStyle.filter) || (style.filter = ralpha.test(filter) ? filter.replace(ralpha, opacity) : filter + " " + opacity);
            }
        }), jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function(elem, computed) {
            if (computed) return jQuery.swap(elem, {
                display: "inline-block"
            }, curCSS, [ elem, "marginRight" ]);
        }), jQuery.each({
            margin: "",
            padding: "",
            border: "Width"
        }, function(prefix, suffix) {
            jQuery.cssHooks[prefix + suffix] = {
                expand: function(value) {
                    for (var i = 0, expanded = {}, parts = "string" == typeof value ? value.split(" ") : [ value ]; i < 4; i++) expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
                    return expanded;
                }
            }, rmargin.test(prefix) || (jQuery.cssHooks[prefix + suffix].set = setPositiveNumber);
        }), jQuery.fn.extend({
            css: function(name, value) {
                return access(this, function(elem, name, value) {
                    var styles, len, map = {}, i = 0;
                    if (jQuery.isArray(name)) {
                        for (styles = getStyles(elem), len = name.length; i < len; i++) map[name[i]] = jQuery.css(elem, name[i], !1, styles);
                        return map;
                    }
                    return void 0 !== value ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
                }, name, value, arguments.length > 1);
            },
            show: function() {
                return showHide(this, !0);
            },
            hide: function() {
                return showHide(this);
            },
            toggle: function(state) {
                return "boolean" == typeof state ? state ? this.show() : this.hide() : this.each(function() {
                    isHidden(this) ? jQuery(this).show() : jQuery(this).hide();
                });
            }
        }), jQuery.Tween = Tween, Tween.prototype = {
            constructor: Tween,
            init: function(elem, options, prop, end, easing, unit) {
                this.elem = elem, this.prop = prop, this.easing = easing || "swing", this.options = options, 
                this.start = this.now = this.cur(), this.end = end, this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
            },
            cur: function() {
                var hooks = Tween.propHooks[this.prop];
                return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
            },
            run: function(percent) {
                var eased, hooks = Tween.propHooks[this.prop];
                return this.options.duration ? this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration) : this.pos = eased = percent, 
                this.now = (this.end - this.start) * eased + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), 
                hooks && hooks.set ? hooks.set(this) : Tween.propHooks._default.set(this), this;
            }
        }, Tween.prototype.init.prototype = Tween.prototype, Tween.propHooks = {
            _default: {
                get: function(tween) {
                    var result;
                    return null == tween.elem[tween.prop] || tween.elem.style && null != tween.elem.style[tween.prop] ? (result = jQuery.css(tween.elem, tween.prop, ""), 
                    result && "auto" !== result ? result : 0) : tween.elem[tween.prop];
                },
                set: function(tween) {
                    jQuery.fx.step[tween.prop] ? jQuery.fx.step[tween.prop](tween) : tween.elem.style && (null != tween.elem.style[jQuery.cssProps[tween.prop]] || jQuery.cssHooks[tween.prop]) ? jQuery.style(tween.elem, tween.prop, tween.now + tween.unit) : tween.elem[tween.prop] = tween.now;
                }
            }
        }, Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
            set: function(tween) {
                tween.elem.nodeType && tween.elem.parentNode && (tween.elem[tween.prop] = tween.now);
            }
        }, jQuery.easing = {
            linear: function(p) {
                return p;
            },
            swing: function(p) {
                return .5 - Math.cos(p * Math.PI) / 2;
            }
        }, jQuery.fx = Tween.prototype.init, jQuery.fx.step = {};
        var fxNow, timerId, rfxtypes = /^(?:toggle|show|hide)$/, rfxnum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i"), rrun = /queueHooks$/, animationPrefilters = [ defaultPrefilter ], tweeners = {
            "*": [ function(prop, value) {
                var tween = this.createTween(prop, value), target = tween.cur(), parts = rfxnum.exec(value), unit = parts && parts[3] || (jQuery.cssNumber[prop] ? "" : "px"), start = (jQuery.cssNumber[prop] || "px" !== unit && +target) && rfxnum.exec(jQuery.css(tween.elem, prop)), scale = 1, maxIterations = 20;
                if (start && start[3] !== unit) {
                    unit = unit || start[3], parts = parts || [], start = +target || 1;
                    do {
                        start /= scale = scale || ".5", jQuery.style(tween.elem, prop, start + unit);
                    } while (scale !== (scale = tween.cur() / target) && 1 !== scale && --maxIterations);
                }
                return parts && (start = tween.start = +start || +target || 0, tween.unit = unit, 
                tween.end = parts[1] ? start + (parts[1] + 1) * parts[2] : +parts[2]), tween;
            } ]
        };
        jQuery.Animation = jQuery.extend(Animation, {
            tweener: function(props, callback) {
                jQuery.isFunction(props) ? (callback = props, props = [ "*" ]) : props = props.split(" ");
                for (var prop, index = 0, length = props.length; index < length; index++) prop = props[index], 
                tweeners[prop] = tweeners[prop] || [], tweeners[prop].unshift(callback);
            },
            prefilter: function(callback, prepend) {
                prepend ? animationPrefilters.unshift(callback) : animationPrefilters.push(callback);
            }
        }), jQuery.speed = function(speed, easing, fn) {
            var opt = speed && "object" == typeof speed ? jQuery.extend({}, speed) : {
                complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
                duration: speed,
                easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
            };
            return opt.duration = jQuery.fx.off ? 0 : "number" == typeof opt.duration ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default, 
            null != opt.queue && !0 !== opt.queue || (opt.queue = "fx"), opt.old = opt.complete, 
            opt.complete = function() {
                jQuery.isFunction(opt.old) && opt.old.call(this), opt.queue && jQuery.dequeue(this, opt.queue);
            }, opt;
        }, jQuery.fn.extend({
            fadeTo: function(speed, to, easing, callback) {
                return this.filter(isHidden).css("opacity", 0).show().end().animate({
                    opacity: to
                }, speed, easing, callback);
            },
            animate: function(prop, speed, easing, callback) {
                var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function() {
                    var anim = Animation(this, jQuery.extend({}, prop), optall);
                    (empty || jQuery._data(this, "finish")) && anim.stop(!0);
                };
                return doAnimation.finish = doAnimation, empty || !1 === optall.queue ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
            },
            stop: function(type, clearQueue, gotoEnd) {
                var stopQueue = function(hooks) {
                    var stop = hooks.stop;
                    delete hooks.stop, stop(gotoEnd);
                };
                return "string" != typeof type && (gotoEnd = clearQueue, clearQueue = type, type = void 0), 
                clearQueue && !1 !== type && this.queue(type || "fx", []), this.each(function() {
                    var dequeue = !0, index = null != type && type + "queueHooks", timers = jQuery.timers, data = jQuery._data(this);
                    if (index) data[index] && data[index].stop && stopQueue(data[index]); else for (index in data) data[index] && data[index].stop && rrun.test(index) && stopQueue(data[index]);
                    for (index = timers.length; index--; ) timers[index].elem !== this || null != type && timers[index].queue !== type || (timers[index].anim.stop(gotoEnd), 
                    dequeue = !1, timers.splice(index, 1));
                    !dequeue && gotoEnd || jQuery.dequeue(this, type);
                });
            },
            finish: function(type) {
                return !1 !== type && (type = type || "fx"), this.each(function() {
                    var index, data = jQuery._data(this), queue = data[type + "queue"], hooks = data[type + "queueHooks"], timers = jQuery.timers, length = queue ? queue.length : 0;
                    for (data.finish = !0, jQuery.queue(this, type, []), hooks && hooks.stop && hooks.stop.call(this, !0), 
                    index = timers.length; index--; ) timers[index].elem === this && timers[index].queue === type && (timers[index].anim.stop(!0), 
                    timers.splice(index, 1));
                    for (index = 0; index < length; index++) queue[index] && queue[index].finish && queue[index].finish.call(this);
                    delete data.finish;
                });
            }
        }), jQuery.each([ "toggle", "show", "hide" ], function(i, name) {
            var cssFn = jQuery.fn[name];
            jQuery.fn[name] = function(speed, easing, callback) {
                return null == speed || "boolean" == typeof speed ? cssFn.apply(this, arguments) : this.animate(genFx(name, !0), speed, easing, callback);
            };
        }), jQuery.each({
            slideDown: genFx("show"),
            slideUp: genFx("hide"),
            slideToggle: genFx("toggle"),
            fadeIn: {
                opacity: "show"
            },
            fadeOut: {
                opacity: "hide"
            },
            fadeToggle: {
                opacity: "toggle"
            }
        }, function(name, props) {
            jQuery.fn[name] = function(speed, easing, callback) {
                return this.animate(props, speed, easing, callback);
            };
        }), jQuery.timers = [], jQuery.fx.tick = function() {
            var timer, timers = jQuery.timers, i = 0;
            for (fxNow = jQuery.now(); i < timers.length; i++) (timer = timers[i])() || timers[i] !== timer || timers.splice(i--, 1);
            timers.length || jQuery.fx.stop(), fxNow = void 0;
        }, jQuery.fx.timer = function(timer) {
            jQuery.timers.push(timer), timer() ? jQuery.fx.start() : jQuery.timers.pop();
        }, jQuery.fx.interval = 13, jQuery.fx.start = function() {
            timerId || (timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval));
        }, jQuery.fx.stop = function() {
            clearInterval(timerId), timerId = null;
        }, jQuery.fx.speeds = {
            slow: 600,
            fast: 200,
            _default: 400
        }, jQuery.fn.delay = function(time, type) {
            return time = jQuery.fx ? jQuery.fx.speeds[time] || time : time, type = type || "fx", 
            this.queue(type, function(next, hooks) {
                var timeout = setTimeout(next, time);
                hooks.stop = function() {
                    clearTimeout(timeout);
                };
            });
        }, function() {
            var a, input, select, opt, div = document.createElement("div");
            div.setAttribute("className", "t"), div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", 
            a = div.getElementsByTagName("a")[0], opt = (select = document.createElement("select")).appendChild(document.createElement("option")), 
            input = div.getElementsByTagName("input")[0], a.style.cssText = "top:1px", support.getSetAttribute = "t" !== div.className, 
            support.style = /top/.test(a.getAttribute("style")), support.hrefNormalized = "/a" === a.getAttribute("href"), 
            support.checkOn = !!input.value, support.optSelected = opt.selected, support.enctype = !!document.createElement("form").enctype, 
            select.disabled = !0, support.optDisabled = !opt.disabled, (input = document.createElement("input")).setAttribute("value", ""), 
            support.input = "" === input.getAttribute("value"), input.value = "t", input.setAttribute("type", "radio"), 
            support.radioValue = "t" === input.value, a = input = select = opt = div = null;
        }();
        jQuery.fn.extend({
            val: function(value) {
                var hooks, ret, isFunction, elem = this[0];
                {
                    if (arguments.length) return isFunction = jQuery.isFunction(value), this.each(function(i) {
                        var val;
                        1 === this.nodeType && (null == (val = isFunction ? value.call(this, i, jQuery(this).val()) : value) ? val = "" : "number" == typeof val ? val += "" : jQuery.isArray(val) && (val = jQuery.map(val, function(value) {
                            return null == value ? "" : value + "";
                        })), (hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]) && "set" in hooks && void 0 !== hooks.set(this, val, "value") || (this.value = val));
                    });
                    if (elem) return (hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()]) && "get" in hooks && void 0 !== (ret = hooks.get(elem, "value")) ? ret : (ret = elem.value, 
                    "string" == typeof ret ? ret.replace(/\r/g, "") : null == ret ? "" : ret);
                }
            }
        }), jQuery.extend({
            valHooks: {
                option: {
                    get: function(elem) {
                        var val = jQuery.find.attr(elem, "value");
                        return null != val ? val : jQuery.text(elem);
                    }
                },
                select: {
                    get: function(elem) {
                        for (var value, option, options = elem.options, index = elem.selectedIndex, one = "select-one" === elem.type || index < 0, values = one ? null : [], max = one ? index + 1 : options.length, i = index < 0 ? max : one ? index : 0; i < max; i++) if (((option = options[i]).selected || i === index) && (support.optDisabled ? !option.disabled : null === option.getAttribute("disabled")) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, "optgroup"))) {
                            if (value = jQuery(option).val(), one) return value;
                            values.push(value);
                        }
                        return values;
                    },
                    set: function(elem, value) {
                        for (var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length; i--; ) if (option = options[i], 
                        jQuery.inArray(jQuery.valHooks.option.get(option), values) >= 0) try {
                            option.selected = optionSet = !0;
                        } catch (_) {
                            option.scrollHeight;
                        } else option.selected = !1;
                        return optionSet || (elem.selectedIndex = -1), options;
                    }
                }
            }
        }), jQuery.each([ "radio", "checkbox" ], function() {
            jQuery.valHooks[this] = {
                set: function(elem, value) {
                    if (jQuery.isArray(value)) return elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0;
                }
            }, support.checkOn || (jQuery.valHooks[this].get = function(elem) {
                return null === elem.getAttribute("value") ? "on" : elem.value;
            });
        });
        var nodeHook, boolHook, attrHandle = jQuery.expr.attrHandle, ruseDefault = /^(?:checked|selected)$/i, getSetAttribute = support.getSetAttribute, getSetInput = support.input;
        jQuery.fn.extend({
            attr: function(name, value) {
                return access(this, jQuery.attr, name, value, arguments.length > 1);
            },
            removeAttr: function(name) {
                return this.each(function() {
                    jQuery.removeAttr(this, name);
                });
            }
        }), jQuery.extend({
            attr: function(elem, name, value) {
                var hooks, ret, nType = elem.nodeType;
                if (elem && 3 !== nType && 8 !== nType && 2 !== nType) return typeof elem.getAttribute === strundefined ? jQuery.prop(elem, name, value) : (1 === nType && jQuery.isXMLDoc(elem) || (name = name.toLowerCase(), 
                hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : nodeHook)), 
                void 0 === value ? hooks && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : (ret = jQuery.find.attr(elem, name), 
                null == ret ? void 0 : ret) : null !== value ? hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name)) ? ret : (elem.setAttribute(name, value + ""), 
                value) : void jQuery.removeAttr(elem, name));
            },
            removeAttr: function(elem, value) {
                var name, propName, i = 0, attrNames = value && value.match(rnotwhite);
                if (attrNames && 1 === elem.nodeType) for (;name = attrNames[i++]; ) propName = jQuery.propFix[name] || name, 
                jQuery.expr.match.bool.test(name) ? getSetInput && getSetAttribute || !ruseDefault.test(name) ? elem[propName] = !1 : elem[jQuery.camelCase("default-" + name)] = elem[propName] = !1 : jQuery.attr(elem, name, ""), 
                elem.removeAttribute(getSetAttribute ? name : propName);
            },
            attrHooks: {
                type: {
                    set: function(elem, value) {
                        if (!support.radioValue && "radio" === value && jQuery.nodeName(elem, "input")) {
                            var val = elem.value;
                            return elem.setAttribute("type", value), val && (elem.value = val), value;
                        }
                    }
                }
            }
        }), boolHook = {
            set: function(elem, value, name) {
                return !1 === value ? jQuery.removeAttr(elem, name) : getSetInput && getSetAttribute || !ruseDefault.test(name) ? elem.setAttribute(!getSetAttribute && jQuery.propFix[name] || name, name) : elem[jQuery.camelCase("default-" + name)] = elem[name] = !0, 
                name;
            }
        }, jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function(i, name) {
            var getter = attrHandle[name] || jQuery.find.attr;
            attrHandle[name] = getSetInput && getSetAttribute || !ruseDefault.test(name) ? function(elem, name, isXML) {
                var ret, handle;
                return isXML || (handle = attrHandle[name], attrHandle[name] = ret, ret = null != getter(elem, name, isXML) ? name.toLowerCase() : null, 
                attrHandle[name] = handle), ret;
            } : function(elem, name, isXML) {
                if (!isXML) return elem[jQuery.camelCase("default-" + name)] ? name.toLowerCase() : null;
            };
        }), getSetInput && getSetAttribute || (jQuery.attrHooks.value = {
            set: function(elem, value, name) {
                if (!jQuery.nodeName(elem, "input")) return nodeHook && nodeHook.set(elem, value, name);
                elem.defaultValue = value;
            }
        }), getSetAttribute || (nodeHook = {
            set: function(elem, value, name) {
                var ret = elem.getAttributeNode(name);
                if (ret || elem.setAttributeNode(ret = elem.ownerDocument.createAttribute(name)), 
                ret.value = value += "", "value" === name || value === elem.getAttribute(name)) return value;
            }
        }, attrHandle.id = attrHandle.name = attrHandle.coords = function(elem, name, isXML) {
            var ret;
            if (!isXML) return (ret = elem.getAttributeNode(name)) && "" !== ret.value ? ret.value : null;
        }, jQuery.valHooks.button = {
            get: function(elem, name) {
                var ret = elem.getAttributeNode(name);
                if (ret && ret.specified) return ret.value;
            },
            set: nodeHook.set
        }, jQuery.attrHooks.contenteditable = {
            set: function(elem, value, name) {
                nodeHook.set(elem, "" !== value && value, name);
            }
        }, jQuery.each([ "width", "height" ], function(i, name) {
            jQuery.attrHooks[name] = {
                set: function(elem, value) {
                    if ("" === value) return elem.setAttribute(name, "auto"), value;
                }
            };
        })), support.style || (jQuery.attrHooks.style = {
            get: function(elem) {
                return elem.style.cssText || void 0;
            },
            set: function(elem, value) {
                return elem.style.cssText = value + "";
            }
        });
        var rfocusable = /^(?:input|select|textarea|button|object)$/i, rclickable = /^(?:a|area)$/i;
        jQuery.fn.extend({
            prop: function(name, value) {
                return access(this, jQuery.prop, name, value, arguments.length > 1);
            },
            removeProp: function(name) {
                return name = jQuery.propFix[name] || name, this.each(function() {
                    try {
                        this[name] = void 0, delete this[name];
                    } catch (e) {}
                });
            }
        }), jQuery.extend({
            propFix: {
                for: "htmlFor",
                class: "className"
            },
            prop: function(elem, name, value) {
                var ret, hooks, nType = elem.nodeType;
                if (elem && 3 !== nType && 8 !== nType && 2 !== nType) return (1 !== nType || !jQuery.isXMLDoc(elem)) && (name = jQuery.propFix[name] || name, 
                hooks = jQuery.propHooks[name]), void 0 !== value ? hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name)) ? ret : elem[name] = value : hooks && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : elem[name];
            },
            propHooks: {
                tabIndex: {
                    get: function(elem) {
                        var tabindex = jQuery.find.attr(elem, "tabindex");
                        return tabindex ? parseInt(tabindex, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : -1;
                    }
                }
            }
        }), support.hrefNormalized || jQuery.each([ "href", "src" ], function(i, name) {
            jQuery.propHooks[name] = {
                get: function(elem) {
                    return elem.getAttribute(name, 4);
                }
            };
        }), support.optSelected || (jQuery.propHooks.selected = {
            get: function(elem) {
                var parent = elem.parentNode;
                return parent && (parent.selectedIndex, parent.parentNode && parent.parentNode.selectedIndex), 
                null;
            }
        }), jQuery.each([ "tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable" ], function() {
            jQuery.propFix[this.toLowerCase()] = this;
        }), support.enctype || (jQuery.propFix.enctype = "encoding");
        jQuery.fn.extend({
            addClass: function(value) {
                var classes, elem, cur, clazz, j, finalValue, i = 0, len = this.length, proceed = "string" == typeof value && value;
                if (jQuery.isFunction(value)) return this.each(function(j) {
                    jQuery(this).addClass(value.call(this, j, this.className));
                });
                if (proceed) for (classes = (value || "").match(rnotwhite) || []; i < len; i++) if (elem = this[i], 
                cur = 1 === elem.nodeType && (elem.className ? (" " + elem.className + " ").replace(/[\t\r\n\f]/g, " ") : " ")) {
                    for (j = 0; clazz = classes[j++]; ) cur.indexOf(" " + clazz + " ") < 0 && (cur += clazz + " ");
                    finalValue = jQuery.trim(cur), elem.className !== finalValue && (elem.className = finalValue);
                }
                return this;
            },
            removeClass: function(value) {
                var classes, elem, cur, clazz, j, finalValue, i = 0, len = this.length, proceed = 0 === arguments.length || "string" == typeof value && value;
                if (jQuery.isFunction(value)) return this.each(function(j) {
                    jQuery(this).removeClass(value.call(this, j, this.className));
                });
                if (proceed) for (classes = (value || "").match(rnotwhite) || []; i < len; i++) if (elem = this[i], 
                cur = 1 === elem.nodeType && (elem.className ? (" " + elem.className + " ").replace(/[\t\r\n\f]/g, " ") : "")) {
                    for (j = 0; clazz = classes[j++]; ) for (;cur.indexOf(" " + clazz + " ") >= 0; ) cur = cur.replace(" " + clazz + " ", " ");
                    finalValue = value ? jQuery.trim(cur) : "", elem.className !== finalValue && (elem.className = finalValue);
                }
                return this;
            },
            toggleClass: function(value, stateVal) {
                var type = typeof value;
                return "boolean" == typeof stateVal && "string" === type ? stateVal ? this.addClass(value) : this.removeClass(value) : jQuery.isFunction(value) ? this.each(function(i) {
                    jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);
                }) : this.each(function() {
                    if ("string" === type) for (var className, i = 0, self = jQuery(this), classNames = value.match(rnotwhite) || []; className = classNames[i++]; ) self.hasClass(className) ? self.removeClass(className) : self.addClass(className); else type !== strundefined && "boolean" !== type || (this.className && jQuery._data(this, "__className__", this.className), 
                    this.className = this.className || !1 === value ? "" : jQuery._data(this, "__className__") || "");
                });
            },
            hasClass: function(selector) {
                for (var className = " " + selector + " ", i = 0, l = this.length; i < l; i++) if (1 === this[i].nodeType && (" " + this[i].className + " ").replace(/[\t\r\n\f]/g, " ").indexOf(className) >= 0) return !0;
                return !1;
            }
        }), jQuery.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(i, name) {
            jQuery.fn[name] = function(data, fn) {
                return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
            };
        }), jQuery.fn.extend({
            hover: function(fnOver, fnOut) {
                return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
            },
            bind: function(types, data, fn) {
                return this.on(types, null, data, fn);
            },
            unbind: function(types, fn) {
                return this.off(types, null, fn);
            },
            delegate: function(selector, types, data, fn) {
                return this.on(types, selector, data, fn);
            },
            undelegate: function(selector, types, fn) {
                return 1 === arguments.length ? this.off(selector, "**") : this.off(types, selector || "**", fn);
            }
        });
        var nonce = jQuery.now(), rquery = /\?/;
        jQuery.parseJSON = function(data) {
            if (window.JSON && window.JSON.parse) return window.JSON.parse(data + "");
            var requireNonComma, depth = null, str = jQuery.trim(data + "");
            return str && !jQuery.trim(str.replace(/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g, function(token, comma, open, close) {
                return requireNonComma && comma && (depth = 0), 0 === depth ? token : (requireNonComma = open || comma, 
                depth += !close - !open, "");
            })) ? Function("return " + str)() : jQuery.error("Invalid JSON: " + data);
        }, jQuery.parseXML = function(data) {
            var xml, tmp;
            if (!data || "string" != typeof data) return null;
            try {
                window.DOMParser ? (tmp = new DOMParser(), xml = tmp.parseFromString(data, "text/xml")) : ((xml = new ActiveXObject("Microsoft.XMLDOM")).async = "false", 
                xml.loadXML(data));
            } catch (e) {
                xml = void 0;
            }
            return xml && xml.documentElement && !xml.getElementsByTagName("parsererror").length || jQuery.error("Invalid XML: " + data), 
            xml;
        };
        var ajaxLocParts, ajaxLocation, rts = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm, rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/, prefilters = {}, transports = {}, allTypes = "*/".concat("*");
        try {
            ajaxLocation = location.href;
        } catch (e) {
            (ajaxLocation = document.createElement("a")).href = "", ajaxLocation = ajaxLocation.href;
        }
        ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [], jQuery.extend({
            active: 0,
            lastModified: {},
            etag: {},
            ajaxSettings: {
                url: ajaxLocation,
                type: "GET",
                isLocal: rlocalProtocol.test(ajaxLocParts[1]),
                global: !0,
                processData: !0,
                async: !0,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                accepts: {
                    "*": allTypes,
                    text: "text/plain",
                    html: "text/html",
                    xml: "application/xml, text/xml",
                    json: "application/json, text/javascript"
                },
                contents: {
                    xml: /xml/,
                    html: /html/,
                    json: /json/
                },
                responseFields: {
                    xml: "responseXML",
                    text: "responseText",
                    json: "responseJSON"
                },
                converters: {
                    "* text": String,
                    "text html": !0,
                    "text json": jQuery.parseJSON,
                    "text xml": jQuery.parseXML
                },
                flatOptions: {
                    url: !0,
                    context: !0
                }
            },
            ajaxSetup: function(target, settings) {
                return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
            },
            ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
            ajaxTransport: addToPrefiltersOrTransports(transports),
            ajax: function(url, options) {
                function done(status, nativeStatusText, responses, headers) {
                    var isSuccess, success, error, response, modified, statusText = nativeStatusText;
                    2 !== state && (state = 2, timeoutTimer && clearTimeout(timeoutTimer), transport = void 0, 
                    responseHeadersString = headers || "", jqXHR.readyState = status > 0 ? 4 : 0, isSuccess = status >= 200 && status < 300 || 304 === status, 
                    responses && (response = ajaxHandleResponses(s, jqXHR, responses)), response = ajaxConvert(s, response, jqXHR, isSuccess), 
                    isSuccess ? (s.ifModified && ((modified = jqXHR.getResponseHeader("Last-Modified")) && (jQuery.lastModified[cacheURL] = modified), 
                    (modified = jqXHR.getResponseHeader("etag")) && (jQuery.etag[cacheURL] = modified)), 
                    204 === status || "HEAD" === s.type ? statusText = "nocontent" : 304 === status ? statusText = "notmodified" : (statusText = response.state, 
                    success = response.data, isSuccess = !(error = response.error))) : (error = statusText, 
                    !status && statusText || (statusText = "error", status < 0 && (status = 0))), jqXHR.status = status, 
                    jqXHR.statusText = (nativeStatusText || statusText) + "", isSuccess ? deferred.resolveWith(callbackContext, [ success, statusText, jqXHR ]) : deferred.rejectWith(callbackContext, [ jqXHR, statusText, error ]), 
                    jqXHR.statusCode(statusCode), statusCode = void 0, fireGlobals && globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [ jqXHR, s, isSuccess ? success : error ]), 
                    completeDeferred.fireWith(callbackContext, [ jqXHR, statusText ]), fireGlobals && (globalEventContext.trigger("ajaxComplete", [ jqXHR, s ]), 
                    --jQuery.active || jQuery.event.trigger("ajaxStop")));
                }
                "object" == typeof url && (options = url, url = void 0), options = options || {};
                var parts, i, cacheURL, responseHeadersString, timeoutTimer, fireGlobals, transport, responseHeaders, s = jQuery.ajaxSetup({}, options), callbackContext = s.context || s, globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event, deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks("once memory"), statusCode = s.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, state = 0, strAbort = "canceled", jqXHR = {
                    readyState: 0,
                    getResponseHeader: function(key) {
                        var match;
                        if (2 === state) {
                            if (!responseHeaders) for (responseHeaders = {}; match = rheaders.exec(responseHeadersString); ) responseHeaders[match[1].toLowerCase()] = match[2];
                            match = responseHeaders[key.toLowerCase()];
                        }
                        return null == match ? null : match;
                    },
                    getAllResponseHeaders: function() {
                        return 2 === state ? responseHeadersString : null;
                    },
                    setRequestHeader: function(name, value) {
                        var lname = name.toLowerCase();
                        return state || (name = requestHeadersNames[lname] = requestHeadersNames[lname] || name, 
                        requestHeaders[name] = value), this;
                    },
                    overrideMimeType: function(type) {
                        return state || (s.mimeType = type), this;
                    },
                    statusCode: function(map) {
                        var code;
                        if (map) if (state < 2) for (code in map) statusCode[code] = [ statusCode[code], map[code] ]; else jqXHR.always(map[jqXHR.status]);
                        return this;
                    },
                    abort: function(statusText) {
                        var finalText = statusText || strAbort;
                        return transport && transport.abort(finalText), done(0, finalText), this;
                    }
                };
                if (deferred.promise(jqXHR).complete = completeDeferred.add, jqXHR.success = jqXHR.done, 
                jqXHR.error = jqXHR.fail, s.url = ((url || s.url || ajaxLocation) + "").replace(/#.*$/, "").replace(/^\/\//, ajaxLocParts[1] + "//"), 
                s.type = options.method || options.type || s.method || s.type, s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().match(rnotwhite) || [ "" ], 
                null == s.crossDomain && (parts = rurl.exec(s.url.toLowerCase()), s.crossDomain = !(!parts || parts[1] === ajaxLocParts[1] && parts[2] === ajaxLocParts[2] && (parts[3] || ("http:" === parts[1] ? "80" : "443")) === (ajaxLocParts[3] || ("http:" === ajaxLocParts[1] ? "80" : "443")))), 
                s.data && s.processData && "string" != typeof s.data && (s.data = jQuery.param(s.data, s.traditional)), 
                inspectPrefiltersOrTransports(prefilters, s, options, jqXHR), 2 === state) return jqXHR;
                (fireGlobals = s.global) && 0 == jQuery.active++ && jQuery.event.trigger("ajaxStart"), 
                s.type = s.type.toUpperCase(), s.hasContent = !rnoContent.test(s.type), cacheURL = s.url, 
                s.hasContent || (s.data && (cacheURL = s.url += (rquery.test(cacheURL) ? "&" : "?") + s.data, 
                delete s.data), !1 === s.cache && (s.url = rts.test(cacheURL) ? cacheURL.replace(rts, "$1_=" + nonce++) : cacheURL + (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++)), 
                s.ifModified && (jQuery.lastModified[cacheURL] && jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]), 
                jQuery.etag[cacheURL] && jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL])), 
                (s.data && s.hasContent && !1 !== s.contentType || options.contentType) && jqXHR.setRequestHeader("Content-Type", s.contentType), 
                jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + ("*" !== s.dataTypes[0] ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
                for (i in s.headers) jqXHR.setRequestHeader(i, s.headers[i]);
                if (s.beforeSend && (!1 === s.beforeSend.call(callbackContext, jqXHR, s) || 2 === state)) return jqXHR.abort();
                strAbort = "abort";
                for (i in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) jqXHR[i](s[i]);
                if (transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR)) {
                    jqXHR.readyState = 1, fireGlobals && globalEventContext.trigger("ajaxSend", [ jqXHR, s ]), 
                    s.async && s.timeout > 0 && (timeoutTimer = setTimeout(function() {
                        jqXHR.abort("timeout");
                    }, s.timeout));
                    try {
                        state = 1, transport.send(requestHeaders, done);
                    } catch (e) {
                        if (!(state < 2)) throw e;
                        done(-1, e);
                    }
                } else done(-1, "No Transport");
                return jqXHR;
            },
            getJSON: function(url, data, callback) {
                return jQuery.get(url, data, callback, "json");
            },
            getScript: function(url, callback) {
                return jQuery.get(url, void 0, callback, "script");
            }
        }), jQuery.each([ "get", "post" ], function(i, method) {
            jQuery[method] = function(url, data, callback, type) {
                return jQuery.isFunction(data) && (type = type || callback, callback = data, data = void 0), 
                jQuery.ajax({
                    url: url,
                    type: method,
                    dataType: type,
                    data: data,
                    success: callback
                });
            };
        }), jQuery.each([ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function(i, type) {
            jQuery.fn[type] = function(fn) {
                return this.on(type, fn);
            };
        }), jQuery._evalUrl = function(url) {
            return jQuery.ajax({
                url: url,
                type: "GET",
                dataType: "script",
                async: !1,
                global: !1,
                throws: !0
            });
        }, jQuery.fn.extend({
            wrapAll: function(html) {
                if (jQuery.isFunction(html)) return this.each(function(i) {
                    jQuery(this).wrapAll(html.call(this, i));
                });
                if (this[0]) {
                    var wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(!0);
                    this[0].parentNode && wrap.insertBefore(this[0]), wrap.map(function() {
                        for (var elem = this; elem.firstChild && 1 === elem.firstChild.nodeType; ) elem = elem.firstChild;
                        return elem;
                    }).append(this);
                }
                return this;
            },
            wrapInner: function(html) {
                return jQuery.isFunction(html) ? this.each(function(i) {
                    jQuery(this).wrapInner(html.call(this, i));
                }) : this.each(function() {
                    var self = jQuery(this), contents = self.contents();
                    contents.length ? contents.wrapAll(html) : self.append(html);
                });
            },
            wrap: function(html) {
                var isFunction = jQuery.isFunction(html);
                return this.each(function(i) {
                    jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
                });
            },
            unwrap: function() {
                return this.parent().each(function() {
                    jQuery.nodeName(this, "body") || jQuery(this).replaceWith(this.childNodes);
                }).end();
            }
        }), jQuery.expr.filters.hidden = function(elem) {
            return elem.offsetWidth <= 0 && elem.offsetHeight <= 0 || !support.reliableHiddenOffsets() && "none" === (elem.style && elem.style.display || jQuery.css(elem, "display"));
        }, jQuery.expr.filters.visible = function(elem) {
            return !jQuery.expr.filters.hidden(elem);
        };
        var rbracket = /\[\]$/, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
        jQuery.param = function(a, traditional) {
            var prefix, s = [], add = function(key, value) {
                value = jQuery.isFunction(value) ? value() : null == value ? "" : value, s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value);
            };
            if (void 0 === traditional && (traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional), 
            jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) jQuery.each(a, function() {
                add(this.name, this.value);
            }); else for (prefix in a) buildParams(prefix, a[prefix], traditional, add);
            return s.join("&").replace(/%20/g, "+");
        }, jQuery.fn.extend({
            serialize: function() {
                return jQuery.param(this.serializeArray());
            },
            serializeArray: function() {
                return this.map(function() {
                    var elements = jQuery.prop(this, "elements");
                    return elements ? jQuery.makeArray(elements) : this;
                }).filter(function() {
                    var type = this.type;
                    return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
                }).map(function(i, elem) {
                    var val = jQuery(this).val();
                    return null == val ? null : jQuery.isArray(val) ? jQuery.map(val, function(val) {
                        return {
                            name: elem.name,
                            value: val.replace(/\r?\n/g, "\r\n")
                        };
                    }) : {
                        name: elem.name,
                        value: val.replace(/\r?\n/g, "\r\n")
                    };
                }).get();
            }
        }), jQuery.ajaxSettings.xhr = void 0 !== window.ActiveXObject ? function() {
            return !this.isLocal && /^(get|post|head|put|delete|options)$/i.test(this.type) && createStandardXHR() || createActiveXHR();
        } : createStandardXHR;
        var xhrId = 0, xhrCallbacks = {}, xhrSupported = jQuery.ajaxSettings.xhr();
        window.ActiveXObject && jQuery(window).on("unload", function() {
            for (var key in xhrCallbacks) xhrCallbacks[key](void 0, !0);
        }), support.cors = !!xhrSupported && "withCredentials" in xhrSupported, (xhrSupported = support.ajax = !!xhrSupported) && jQuery.ajaxTransport(function(options) {
            if (!options.crossDomain || support.cors) {
                var callback;
                return {
                    send: function(headers, complete) {
                        var i, xhr = options.xhr(), id = ++xhrId;
                        if (xhr.open(options.type, options.url, options.async, options.username, options.password), 
                        options.xhrFields) for (i in options.xhrFields) xhr[i] = options.xhrFields[i];
                        options.mimeType && xhr.overrideMimeType && xhr.overrideMimeType(options.mimeType), 
                        options.crossDomain || headers["X-Requested-With"] || (headers["X-Requested-With"] = "XMLHttpRequest");
                        for (i in headers) void 0 !== headers[i] && xhr.setRequestHeader(i, headers[i] + "");
                        xhr.send(options.hasContent && options.data || null), callback = function(_, isAbort) {
                            var status, statusText, responses;
                            if (callback && (isAbort || 4 === xhr.readyState)) if (delete xhrCallbacks[id], 
                            callback = void 0, xhr.onreadystatechange = jQuery.noop, isAbort) 4 !== xhr.readyState && xhr.abort(); else {
                                responses = {}, status = xhr.status, "string" == typeof xhr.responseText && (responses.text = xhr.responseText);
                                try {
                                    statusText = xhr.statusText;
                                } catch (e) {
                                    statusText = "";
                                }
                                status || !options.isLocal || options.crossDomain ? 1223 === status && (status = 204) : status = responses.text ? 200 : 404;
                            }
                            responses && complete(status, statusText, responses, xhr.getAllResponseHeaders());
                        }, options.async ? 4 === xhr.readyState ? setTimeout(callback) : xhr.onreadystatechange = xhrCallbacks[id] = callback : callback();
                    },
                    abort: function() {
                        callback && callback(void 0, !0);
                    }
                };
            }
        }), jQuery.ajaxSetup({
            accepts: {
                script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
            },
            contents: {
                script: /(?:java|ecma)script/
            },
            converters: {
                "text script": function(text) {
                    return jQuery.globalEval(text), text;
                }
            }
        }), jQuery.ajaxPrefilter("script", function(s) {
            void 0 === s.cache && (s.cache = !1), s.crossDomain && (s.type = "GET", s.global = !1);
        }), jQuery.ajaxTransport("script", function(s) {
            if (s.crossDomain) {
                var script, head = document.head || jQuery("head")[0] || document.documentElement;
                return {
                    send: function(_, callback) {
                        (script = document.createElement("script")).async = !0, s.scriptCharset && (script.charset = s.scriptCharset), 
                        script.src = s.url, script.onload = script.onreadystatechange = function(_, isAbort) {
                            (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) && (script.onload = script.onreadystatechange = null, 
                            script.parentNode && script.parentNode.removeChild(script), script = null, isAbort || callback(200, "success"));
                        }, head.insertBefore(script, head.firstChild);
                    },
                    abort: function() {
                        script && script.onload(void 0, !0);
                    }
                };
            }
        });
        var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
        jQuery.ajaxSetup({
            jsonp: "callback",
            jsonpCallback: function() {
                var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce++;
                return this[callback] = !0, callback;
            }
        }), jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
            var callbackName, overwritten, responseContainer, jsonProp = !1 !== s.jsonp && (rjsonp.test(s.url) ? "url" : "string" == typeof s.data && !(s.contentType || "").indexOf("application/x-www-form-urlencoded") && rjsonp.test(s.data) && "data");
            if (jsonProp || "jsonp" === s.dataTypes[0]) return callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback, 
            jsonProp ? s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName) : !1 !== s.jsonp && (s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName), 
            s.converters["script json"] = function() {
                return responseContainer || jQuery.error(callbackName + " was not called"), responseContainer[0];
            }, s.dataTypes[0] = "json", overwritten = window[callbackName], window[callbackName] = function() {
                responseContainer = arguments;
            }, jqXHR.always(function() {
                window[callbackName] = overwritten, s[callbackName] && (s.jsonpCallback = originalSettings.jsonpCallback, 
                oldCallbacks.push(callbackName)), responseContainer && jQuery.isFunction(overwritten) && overwritten(responseContainer[0]), 
                responseContainer = overwritten = void 0;
            }), "script";
        }), jQuery.parseHTML = function(data, context, keepScripts) {
            if (!data || "string" != typeof data) return null;
            "boolean" == typeof context && (keepScripts = context, context = !1), context = context || document;
            var parsed = rsingleTag.exec(data), scripts = !keepScripts && [];
            return parsed ? [ context.createElement(parsed[1]) ] : (parsed = jQuery.buildFragment([ data ], context, scripts), 
            scripts && scripts.length && jQuery(scripts).remove(), jQuery.merge([], parsed.childNodes));
        };
        var _load = jQuery.fn.load;
        jQuery.fn.load = function(url, params, callback) {
            if ("string" != typeof url && _load) return _load.apply(this, arguments);
            var selector, response, type, self = this, off = url.indexOf(" ");
            return off >= 0 && (selector = url.slice(off, url.length), url = url.slice(0, off)), 
            jQuery.isFunction(params) ? (callback = params, params = void 0) : params && "object" == typeof params && (type = "POST"), 
            self.length > 0 && jQuery.ajax({
                url: url,
                type: type,
                dataType: "html",
                data: params
            }).done(function(responseText) {
                response = arguments, self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText);
            }).complete(callback && function(jqXHR, status) {
                self.each(callback, response || [ jqXHR.responseText, status, jqXHR ]);
            }), this;
        }, jQuery.expr.filters.animated = function(elem) {
            return jQuery.grep(jQuery.timers, function(fn) {
                return elem === fn.elem;
            }).length;
        };
        var docElem = window.document.documentElement;
        jQuery.offset = {
            setOffset: function(elem, options, i) {
                var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, position = jQuery.css(elem, "position"), curElem = jQuery(elem), props = {};
                "static" === position && (elem.style.position = "relative"), curOffset = curElem.offset(), 
                curCSSTop = jQuery.css(elem, "top"), curCSSLeft = jQuery.css(elem, "left"), ("absolute" === position || "fixed" === position) && jQuery.inArray("auto", [ curCSSTop, curCSSLeft ]) > -1 ? (curTop = (curPosition = curElem.position()).top, 
                curLeft = curPosition.left) : (curTop = parseFloat(curCSSTop) || 0, curLeft = parseFloat(curCSSLeft) || 0), 
                jQuery.isFunction(options) && (options = options.call(elem, i, curOffset)), null != options.top && (props.top = options.top - curOffset.top + curTop), 
                null != options.left && (props.left = options.left - curOffset.left + curLeft), 
                "using" in options ? options.using.call(elem, props) : curElem.css(props);
            }
        }, jQuery.fn.extend({
            offset: function(options) {
                if (arguments.length) return void 0 === options ? this : this.each(function(i) {
                    jQuery.offset.setOffset(this, options, i);
                });
                var docElem, win, box = {
                    top: 0,
                    left: 0
                }, elem = this[0], doc = elem && elem.ownerDocument;
                if (doc) return docElem = doc.documentElement, jQuery.contains(docElem, elem) ? (typeof elem.getBoundingClientRect !== strundefined && (box = elem.getBoundingClientRect()), 
                win = getWindow(doc), {
                    top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
                    left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)
                }) : box;
            },
            position: function() {
                if (this[0]) {
                    var offsetParent, offset, parentOffset = {
                        top: 0,
                        left: 0
                    }, elem = this[0];
                    return "fixed" === jQuery.css(elem, "position") ? offset = elem.getBoundingClientRect() : (offsetParent = this.offsetParent(), 
                    offset = this.offset(), jQuery.nodeName(offsetParent[0], "html") || (parentOffset = offsetParent.offset()), 
                    parentOffset.top += jQuery.css(offsetParent[0], "borderTopWidth", !0), parentOffset.left += jQuery.css(offsetParent[0], "borderLeftWidth", !0)), 
                    {
                        top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", !0),
                        left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", !0)
                    };
                }
            },
            offsetParent: function() {
                return this.map(function() {
                    for (var offsetParent = this.offsetParent || docElem; offsetParent && !jQuery.nodeName(offsetParent, "html") && "static" === jQuery.css(offsetParent, "position"); ) offsetParent = offsetParent.offsetParent;
                    return offsetParent || docElem;
                });
            }
        }), jQuery.each({
            scrollLeft: "pageXOffset",
            scrollTop: "pageYOffset"
        }, function(method, prop) {
            var top = /Y/.test(prop);
            jQuery.fn[method] = function(val) {
                return access(this, function(elem, method, val) {
                    var win = getWindow(elem);
                    if (void 0 === val) return win ? prop in win ? win[prop] : win.document.documentElement[method] : elem[method];
                    win ? win.scrollTo(top ? jQuery(win).scrollLeft() : val, top ? val : jQuery(win).scrollTop()) : elem[method] = val;
                }, method, val, arguments.length, null);
            };
        }), jQuery.each([ "top", "left" ], function(i, prop) {
            jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
                if (computed) return computed = curCSS(elem, prop), rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
            });
        }), jQuery.each({
            Height: "height",
            Width: "width"
        }, function(name, type) {
            jQuery.each({
                padding: "inner" + name,
                content: type,
                "": "outer" + name
            }, function(defaultExtra, funcName) {
                jQuery.fn[funcName] = function(margin, value) {
                    var chainable = arguments.length && (defaultExtra || "boolean" != typeof margin), extra = defaultExtra || (!0 === margin || !0 === value ? "margin" : "border");
                    return access(this, function(elem, type, value) {
                        var doc;
                        return jQuery.isWindow(elem) ? elem.document.documentElement["client" + name] : 9 === elem.nodeType ? (doc = elem.documentElement, 
                        Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name])) : void 0 === value ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
                    }, type, chainable ? margin : void 0, chainable, null);
                };
            });
        }), jQuery.fn.size = function() {
            return this.length;
        }, jQuery.fn.andSelf = jQuery.fn.addBack, "function" == typeof define && define.amd && define("node_modules/jquery/dist/jquery.js", [], function() {
            return jQuery;
        }) && define("jquery", [ "node_modules/jquery/dist/jquery.js" ], function(m) {
            return m;
        });
        var _jQuery = window.jQuery, _$ = window.$;
        return jQuery.noConflict = function(deep) {
            return window.$ === jQuery && (window.$ = _$), deep && window.jQuery === jQuery && (window.jQuery = _jQuery), 
            jQuery;
        }, typeof noGlobal === strundefined && (window.jQuery = window.$ = jQuery), jQuery;
    });
}(), System.registerDynamic("3rdparty/one-theme/3rdparty/bootstrap/js/bootstrap-tooltip.js", [ "node_modules/jquery/dist/jquery.js" ], !1, function($__require, $__exports, $__module) {
    var _retrieveGlobal = System.get("@@global-helpers").prepareGlobal($__module.id, null, {
        jQuery: $__require("node_modules/jquery/dist/jquery.js")
    });
    return function($__global) {
        !function($) {
            "use strict";
            var Tooltip = function(element, options) {
                this.init("tooltip", element, options);
            };
            Tooltip.prototype = {
                constructor: Tooltip,
                init: function(type, element, options) {
                    var eventIn, eventOut;
                    this.type = type, this.$element = $(element), this.options = this.getOptions(options), 
                    this.enabled = !0, "manual" != this.options.trigger && (eventIn = "hover" == this.options.trigger ? "mouseenter" : "focus", 
                    eventOut = "hover" == this.options.trigger ? "mouseleave" : "blur", this.$element.on(eventIn, this.options.selector, $.proxy(this.enter, this)), 
                    this.$element.on(eventOut, this.options.selector, $.proxy(this.leave, this)));
                    var that = this;
                    $.event.special.tooltipdestroy = {
                        teardown: function() {
                            that.hide();
                        }
                    }, this.$element.on("tooltipdestroy", function() {}), this.options.selector ? this._options = $.extend({}, this.options, {
                        trigger: "manual",
                        selector: ""
                    }) : this.fixTitle();
                },
                getOptions: function(options) {
                    var toolTipData = this.$element.data(), elementOptions = {};
                    return Object.keys(toolTipData).forEach(function(key) {
                        var match;
                        (match = /^tooltip([A-Z])(.+)/.exec(key)) && (elementOptions[match[1].toLowerCase() + match[2]] = toolTipData[key]);
                    }), (options = $.extend({}, $.fn[this.type].defaults, options, elementOptions)).delay && "number" == typeof options.delay && (options.delay = {
                        show: options.delay,
                        hide: options.delay
                    }), options;
                },
                enter: function(e) {
                    var self = $(e.currentTarget)[this.type](this._options).data(this.type);
                    self.options.delay && self.options.delay.show ? (self.hoverState = "in", setTimeout(function() {
                        "in" == self.hoverState && $(e.currentTarget).closest("body").length > 0 && self.show();
                    }, self.options.delay.show)) : self.show();
                },
                leave: function(e) {
                    var self = $(e.currentTarget)[this.type](this._options).data(this.type);
                    self.options.delay && self.options.delay.hide ? (self.hoverState = "out", setTimeout(function() {
                        "out" == self.hoverState && self.hide();
                    }, self.options.delay.hide)) : self.hide();
                },
                show: function() {
                    var that, $tip, inside, pos, actualWidth, actualHeight, placement, tp;
                    if (this.hasContent() && this.enabled) {
                        switch (that = this, $tip = this.tip(), this.setContent(), this.options.animation && $tip.addClass("fade"), 
                        placement = "function" == typeof this.options.placement ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement, 
                        inside = /in/.test(placement), $tip.remove().css({
                            top: 0,
                            left: 0,
                            display: "block"
                        }).appendTo(inside ? this.$element : document.body), pos = this.getPosition(inside), 
                        actualWidth = $tip[0].offsetWidth, actualHeight = $tip[0].offsetHeight, inside ? placement.split(" ")[1] : placement) {
                          case "bottom":
                            tp = {
                                top: pos.top + pos.height,
                                left: pos.left + pos.width / 2 - actualWidth / 2
                            };
                            break;

                          case "top":
                            tp = {
                                top: pos.top - actualHeight,
                                left: pos.left + pos.width / 2 - actualWidth / 2
                            };
                            break;

                          case "left":
                            tp = {
                                top: pos.top + pos.height / 2 - actualHeight / 2,
                                left: pos.left - actualWidth
                            };
                            break;

                          case "right":
                            tp = {
                                top: pos.top + pos.height / 2 - actualHeight / 2,
                                left: pos.left + pos.width
                            };
                        }
                        clearInterval(this.interval), this.interval = setInterval(function() {
                            that.$element.is(":visible") || that.hide();
                        }, 500), $tip.css(tp).addClass(placement).addClass("in");
                    }
                },
                setContent: function() {
                    var $tip = this.tip();
                    $tip.find(".tooltip-inner").html(this.getTitle()), $tip.removeClass("fade in top bottom left right");
                },
                hide: function() {
                    var $tip = this.tip();
                    clearInterval(this.interval), $tip.removeClass("in"), $.support.transition && this.$tip.hasClass("fade") ? function() {
                        var timeout = setTimeout(function() {
                            $tip.off($.support.transition.end).remove();
                        }, 500);
                        $tip.one($.support.transition.end, function() {
                            clearTimeout(timeout), $tip.remove();
                        });
                    }() : $tip.remove();
                },
                fixTitle: function() {
                    var $e = this.$element;
                    ($e.attr("title") || "string" != typeof $e.attr("data-title")) && $e.attr("data-title", $e.attr("title") || "").removeAttr("title");
                },
                hasContent: function() {
                    return this.getTitle();
                },
                getPosition: function(inside) {
                    return $.extend({}, inside ? {
                        top: 0,
                        left: 0
                    } : this.$element.offset(), {
                        width: this.$element[0].offsetWidth,
                        height: this.$element[0].offsetHeight
                    });
                },
                escapeHtml: function(text) {
                    var map = {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#039;"
                    };
                    return text.replace(/[&<>"']/g, function(m) {
                        return map[m];
                    });
                },
                getTitle: function() {
                    var title, $e = this.$element, o = this.options;
                    return title = $e.attr("data-title") || ("function" == typeof o.title ? o.title.call($e[0]) : o.title), 
                    title = this.escapeHtml(title.toString().replace(/(^\s*|\s*$)/, ""));
                },
                tip: function() {
                    return this.$tip = this.$tip || $(this.options.template);
                },
                validate: function() {
                    this.$element[0].parentNode || (this.hide(), this.$element = null, this.options = null);
                },
                enable: function() {
                    this.enabled = !0;
                },
                disable: function() {
                    this.enabled = !1;
                },
                toggleEnabled: function() {
                    this.enabled = !this.enabled;
                },
                toggle: function() {
                    this[this.tip().hasClass("in") ? "hide" : "show"]();
                }
            }, $.fn.tooltip = function(option) {
                return this.each(function() {
                    var $this = $(this), data = $this.data("tooltip"), options = "object" == typeof option && option;
                    data || $this.data("tooltip", data = new Tooltip(this, options)), "string" == typeof option && data[option]();
                });
            }, $.fn.tooltip.Constructor = Tooltip, $.fn.tooltip.defaults = {
                animation: !0,
                delay: 0,
                selector: !1,
                placement: "top",
                trigger: "hover",
                title: "",
                template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
            };
        }(window.jQuery);
    }(), _retrieveGlobal();
}), function() {
    (0, System.amdDefine)("theme/tooltip.js", [ "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "3rdparty/one-theme/3rdparty/bootstrap/js/bootstrap-tooltip.js" ], function($, ko) {
        $("body").tooltip({
            animation: !0,
            delay: {
                show: 750,
                hide: 100
            },
            selector: "[data-title]"
        });
    });
}(), function() {
    (0, System.amdDefine)("calendar/Application.js", [ "locale", "node_modules/knockout/build/output/knockout-latest.debug.js", "3rdparty/page.js", "calendar/PageNavigator.js", "3rdparty/async.js", "3rdparty/passError.js", "calendar/model/State.js", "calendar/agenda/AgendaView.js", "calendar/calendarList/CalendarListView.js", "calendar/miniCalendar/MiniCalendarView.js", "calendar/dialogs/event/EventDialog.js", "calendar/dialogs/calendar/CalendarDialog.js", "calendar/days/DaysView.js", "calendar/weeks/WeeksView.js", "calendar/model/DateRange.js", "calendar/ical/Time.js", "calendar/ical/Duration.js", "3rdparty/LocalStorage.js", "common/Backend.js", "common/LocaleSwitcher.js", "common/ViewBehavior.js", "common/util.js", "common/actions/LoadPreferencesAction.js", "common/EASAdministrationView.js", "common/KeyHandler.js", "calendar/actions/GetTimeZoneAction.js", "calendar/actions/LoadCalendarsAction.js", "calendar/actions/LoadExternalCalendarsAction.js", "calendar/CalendarErrorHandler.js", "3rdparty/action-executor/ActionExecutor.js", "3rdparty/actionInterceptor.js", "3rdparty/retryTracker.js", "common/shouldRetryActionOnError.js", "3rdparty/version-tracking/Version.js", "3rdparty/version-tracking/VersionTracker.js", "3rdparty/version-tracking/VersionUpgradeTimer.js", "theme/LoadingScreen.js", "3rdparty/tracking-analytics/tracking.js", "3rdparty/knockout.autocomplete.js", "3rdparty/mario.js", "common/actions/NotifyRecentEmailsAction.js", "common/actions/SavePreferencesAction.js", "webmail/actions/RefreshFoldersAction.js", "calendar/fallbackTimezone.js", "theme/tooltip.js" ], function(currentLocaleId, ko, page, PageNavigator, async, passError, State, AgendaView, CalendarListView, MiniCalendarView, EventDialog, CalendarDialog, DaysView, WeeksView, DateRange, Time, Duration, LocalStorage, Backend, LocaleSwitcher, ViewBehavior, util, LoadPreferencesAction, EASAdministrationView, getKeyHandler, GetTimeZoneAction, LoadCalendarsAction, LoadExternalCalendarsAction, CalendarErrorHandler, ActionExecutor, actionInterceptor, retryTracker, shouldRetryActionOnError, Version, VersionTracker, VersionUpgradeTimer, LoadingScreen, tracking, autoComplete, mario, NotifyRecentEmailsAction, SavePreferencesAction, RefreshFoldersAction, fallbackTimezone) {
        function Application() {
            function trackVersions() {
                var serverVersion = Version.serverVersion();
                serverVersion in trackedVersions || (tracking.track("versions", serverVersion, Version.clientVersion()), 
                trackedVersions[serverVersion] = serverVersion);
            }
            this.browser = mario(navigator.userAgent);
            var that = this, trackedVersions = {}, versionUpgradeTimer = new VersionUpgradeTimer();
            that.application = "calendar", that.state = new State(), that.errorHandler = CalendarErrorHandler.create(this), 
            that.backend = new Backend(), this.currentLocaleId = currentLocaleId.default || currentLocaleId, 
            that.localeSwitcher = new LocaleSwitcher(CONFIG.i18n.supportedLocaleIds), that.pageNavigator = new PageNavigator({
                state: that.state
            }), that.isInitialized = ko.observable(!1), that.errormsg = ko.observable(null), 
            that.notification = ko.observable(null), that.mainView = ko.observable(null), that.dateRange = ko.observable(null), 
            ko.computed(function() {
                var dateRange = that.dateRange();
                if (!dateRange) return dateRange;
                var dataRange = dateRange.expandToMonth();
                return dataRange.from.day -= 14, dataRange.to.day += 14, dataRange;
            }).extend({
                rateLimit: 500,
                notifyWhenChangesStop: !0
            }).subscribe(function(dataRange) {
                dataRange && that.executeAction(new LoadCalendarsAction({
                    startDate: dataRange.from,
                    endDate: dataRange.to
                }), function(err) {
                    that.handleError(err), that.state.initializing.calendars(!1);
                });
            }), that.daysRange = ko.observable(null), that.showAllEvents = ko.observable(!1), 
            that.weeksRange = ko.observable(null), that.agendaVisible = ko.observable(!1), that.toggleAgenda = function() {
                that.agendaVisible(!that.agendaVisible());
            }, that.easAdministrationView = new EASAdministrationView({
                state: that.state,
                backend: this.backend
            }), that.actionExecutor = new ActionExecutor({
                context: {
                    state: that.state,
                    backend: that.backend
                },
                interceptor: function(action, args, next) {
                    actionInterceptor(action, args, next), action.silent || versionUpgradeTimer.restartIdleTimer();
                },
                onEmptyQueue: function() {
                    versionUpgradeTimer.upgradeIfReady();
                },
                onStatusChange: function(task, status, err) {
                    one.crashLogger.log(task.action.name + " " + status), retryTracker(task, status, err);
                },
                shouldRetryOnError: shouldRetryActionOnError
            }), ViewBehavior.installInto(that), that.embedded = ko.observable(!1), that.showNavigation = ko.observable(!0), 
            that.showTitle = ko.observable(!1), that.showTabs = ko.observable(!0), that.showDate = ko.observable(!0), 
            that.title = ko.observable(null), that.eventDialog = new EventDialog({
                state: that.state,
                actionExecutor: that.actionExecutor,
                errorHandler: that.errorHandler
            }), that.calendarDialog = new CalendarDialog({
                state: that.state,
                actionExecutor: that.actionExecutor,
                errorHandler: that.errorHandler,
                notification: that.notification
            }), Version.updatePriority.subscribe(function(updatePriority) {
                if (updatePriority > 0) switch (trackVersions(), updatePriority) {
                  case 3:
                    that.backend.redirectToUpgradePage();
                    break;

                  case 2:
                  case 1:
                    versionUpgradeTimer.start();
                }
            }), trackVersions(), VersionTracker.start(), this.browser.touch || that.registerKeys(), 
            that.folderTimer = 0, that.state.preferences.mail.subscribe(function(newValue) {
                if ("Notification" in window) {
                    var showNotifications = newValue.showNotifications;
                    !1 !== showNotifications && window.Notification.requestPermission(function(permission) {
                        "denied" === permission ? that.state.preferences.mail().showNotifications = !1 : "granted" === permission && "undefined" == typeof showNotification && (that.state.preferences.mail().showNotifications = !0), 
                        showNotifications !== newValue.showNotifications && that.executeAction(new SavePreferencesAction({
                            page: "mail"
                        }, function(err) {
                            that.handleError(err);
                        }));
                    });
                }
                window.clearInterval(that.folderTimer), newValue.showNotifications && "Notification" in window && (that.folderTimer = window.setInterval(function() {
                    that.state.folders.inbox.uidvalidity() && that.executeAction(new NotifyRecentEmailsAction({
                        application: that.application
                    }), function(err) {
                        if (err) return that.handleError(err);
                    });
                }, 6e4));
            });
        }
        return Application.prototype.registerKeys = function() {
            var keyhandler = getKeyHandler(), that = this;
            keyhandler.register("c", function() {
                return that.state.showNewEvent(!0), !1;
            }), keyhandler.register("t", function() {
                var currentDate = that.state.currentDate(), dateRange = that.dateRange(), weekRange = dateRange.expandToWeeks(), monthRange = dateRange.expandToMonth(), todayRange = new DateRange({
                    from: currentDate,
                    duration: Duration.fromData({
                        days: 1
                    })
                });
                return dateRange.equal(monthRange) ? todayRange = todayRange.expandToMonth() : dateRange.equal(weekRange) && (todayRange = todayRange.expandToWeeks()), 
                that.pageNavigator.show(todayRange), !1;
            }), keyhandler.register("m", function() {
                var dateRange = that.dateRange();
                return that.pageNavigator.show(dateRange.expandToMonth()), !1;
            }), keyhandler.register("mod+left", function() {
                var dateRange = that.dateRange(), monthRange = dateRange.expandToMonth();
                if (dateRange.equal(monthRange)) {
                    var to = monthRange.from, from = to.clone();
                    from.month -= 1, that.pageNavigator.show(new DateRange({
                        from: from,
                        to: to
                    }));
                } else that.pageNavigator.show(dateRange.previous());
                return !1;
            }), keyhandler.register("mod+right", function() {
                var dateRange = that.dateRange(), monthRange = dateRange.expandToMonth();
                if (dateRange.equal(monthRange)) {
                    var from = monthRange.to, to = from.clone();
                    to.month += 1, that.pageNavigator.show(new DateRange({
                        from: from,
                        to: to
                    }));
                } else that.pageNavigator.show(dateRange.next());
                return !1;
            });
        }, Application.prototype.setDateRange = function(dateRange) {
            this.dateRange(dateRange), dateRange.days <= 7 ? (this.mainView("days"), this.daysRange(dateRange.convertToZone(this.state.timeZone()))) : (this.mainView("weeks"), 
            this.weeksRange(dateRange.convertToZone(this.state.timeZone())));
        }, Application.prototype.setupRouting = function(cb) {
            var that = this;
            page("*", function(ctx, next) {
                ctx.query = ctx.querystring ? util.decodePairs(ctx.querystring) : {}, next();
            }), page("/calendar/", function(ctx) {
                that.pageNavigator.redirect(that.state.defaultDateRange(), {
                    view: that.state.preferences.calendar().defaultView
                });
            }), page("/calendar/:user?/:view?/:dateRange?", function(ctx) {
                try {
                    var dateRange = DateRange.isDateString(ctx.params.dateRange) ? DateRange.fromString(ctx.params.dateRange) : DateRange.isDateString(ctx.params.view) ? DateRange.fromString(ctx.params.view) : that.state.defaultDateRange();
                    dateRange = dateRange.convertToZone(that.state.timeZone()), that.setDateRange(dateRange), 
                    "agenda" === ctx.params.view && that.mainView("agendaPage"), "true" === ctx.query.showAllEvents && that.showAllEvents(!0), 
                    that.isInitialized() || (that.executeAction(new LoadExternalCalendarsAction(), function(err) {
                        that.handleError(err), that.state.initializing.externalCalendars(!1);
                    }), cb());
                } catch (e) {
                    throw "InvalidDateRangeError" === e.name && that.pageNavigator.redirect(that.state.defaultDateRange()), 
                    e;
                }
            }), page();
        }, Application.prototype.setupCurrentTime = function() {
            function updateNow() {
                that.state.now(that.state.getCurrentUTCDate().convertToZone(that.state.timeZone()));
            }
            var that = this;
            return updateNow(), setInterval(updateNow, 1e3), updateNow;
        }, Application.prototype.afterLogin = function() {
            var that = this, authentication = that.backend.getAuthenticationData(), state = that.state;
            state.user(authentication.user), state.timeZone(fallbackTimezone), that.mainView("days"), 
            this.easAdministrationView.init(this.easAdministrationView.loadData.bind(this.easAdministrationView));
            var refreshCurrentTime = that.setupCurrentTime();
            that.daysRange(that.state.defaultDateRange()), that.weeksRange(that.state.defaultDateRange().expandToMonth()), 
            async.series([ function(next) {
                that.executeAction(new RefreshFoldersAction({
                    silent: !0
                }), function(err) {
                    that.state.folders.loading(!1), err && that.handleError(err), next();
                });
            }, function(next) {
                that.executeAction(new LoadPreferencesAction(), next);
            }, function(next) {
                var preferences = that.state.preferences.global(), weekStart = preferences && preferences.weekStart;
                "number" != typeof weekStart || isNaN(weekStart) || (Time.weekStart = weekStart + Time.SUNDAY), 
                next();
            }, function(next) {
                var tzid = state.preferences.global().timeZone || "Europe/London";
                that.executeAction(new GetTimeZoneAction({
                    tzid: tzid
                }), passError(next, function(timeZone) {
                    state.timeZone(timeZone), refreshCurrentTime(), that.daysRange(that.state.defaultDateRange()), 
                    that.weeksRange(that.state.defaultDateRange().expandToMonth()), next();
                }));
            }, function(next) {
                that.setupRouting(next);
            } ], function(err) {
                err && that.handleError(err), that.agendaView = new AgendaView({
                    state: that.state,
                    pageNavigator: that.pageNavigator,
                    actionExecutor: that.actionExecutor,
                    errorHandler: that.errorHandler
                }), that.calendarList = new CalendarListView({
                    state: that.state,
                    actionExecutor: that.actionExecutor,
                    errorHandler: that.errorHandler
                }), that.miniCalendar = new MiniCalendarView({
                    state: that.state,
                    pageNavigator: that.pageNavigator,
                    dateRange: that.dateRange
                }), that.daysView = new DaysView({
                    state: that.state,
                    pageNavigator: that.pageNavigator,
                    dateRange: that.daysRange,
                    showAllEvents: that.showAllEvents,
                    actionExecutor: that.actionExecutor,
                    errorHandler: that.errorHandler,
                    eventDialog: that.eventDialog,
                    embedded: that.embedded
                }), that.weeksView = new WeeksView({
                    state: that.state,
                    pageNavigator: that.pageNavigator,
                    dateRange: that.weeksRange,
                    actionExecutor: that.actionExecutor,
                    errorHandler: that.errorHandler,
                    eventDialog: that.eventDialog,
                    embedded: that.embedded
                }), that.isInitialized(!0), LoadingScreen.hide();
            });
        }, Application.prototype.load = function() {
            var that = this;
            that.backend.migrateLangCookie() || (LoadingScreen.show(), that.redirectIfNotAuthenticated() || that.afterLogin());
        }, Application.prototype.logout = function(ref, e) {
            return e && e.type ? this.backend.logout(!0) : this.backend.logout();
        }, Application.prototype.redirectIfNotAuthenticated = function() {
            return this.backend.redirectIfNotAuthenticated();
        }, Application.prototype.showError = function(message) {
            this.errormsg(util.htmlEncode(message)), tracking.track("errors shown to users", "showError");
        }, Application.prototype.showWarning = function(message) {
            this.errormsg({
                message: util.htmlEncode(message),
                level: "warning",
                dismissable: !0
            }), tracking.track("warnings shown to users", "showWarning");
        }, Application;
    });
}(), System.registerDynamic("calendar/calendar.js", [ "inter/#{locale|default}.js", "webmail.#{locale|default}.i18n", "#{environment|default}.cjson", "3rdparty/BrowserSupport.js", "3rdparty/crashreporter/crashLogger.js", "3rdparty/crashreporter/crashReporter.js", "node_modules/tracekit/tracekit.js", "3rdparty/knockout.formatDate.js", "3rdparty/knockout.afterRender.js", "3rdparty/knockout.dragdrop.js", "3rdparty/knockout.popupTemplate.js", "3rdparty/knockout.validation.js", "common/bindings/knockout.dropdownTemplate.js", "common/bindings/knockout.events.js", "common/bindings/knockout.forRange.js", "3rdparty/knockout.autoExpand.js", "theme/binding/errormsg.js", "theme/binding/notification.js", "theme/binding/knockout.checkbox.js", "common/knockout.pause.js", "calendar/dialogs/event/knockout.eventDialog.js", "webmail/components/calendarListDropDown/calendarListDropDown.js", "calendar/dialogs/calendar/knockout.calendarDialog.js", "calendar/bindings/knockout.isCalendarActive.js", "calendar/components/newEvent/newEvent.js", "calendar/view/application.ko", "calendar/view/sidebar.ko", "calendar/calendarList/calendarList.ko", "calendar/calendarList/externalCalendarList.ko", "calendar/agenda/agenda.ko", "calendar/days/days.ko", "calendar/days/day.ko", "calendar/days/hours.ko", "calendar/weeks/weeks.ko", "onebar/onebar.ko", "calendar/agenda/agendaPage.ko", "3rdparty/one-theme/scaffolding.less", "3rdparty/one-theme/3rdparty/bootstrap/less/type.less", "3rdparty/one-theme/forms.less", "3rdparty/one-theme/dropdowns.less", "3rdparty/one-theme/alerts.less", "3rdparty/one-theme/onebar.less", "3rdparty/one-theme/toolbar.less", "3rdparty/one-theme/buttons.less", "3rdparty/one-theme/tooltip.less", "onebar/onebar.less", "theme/less/errormsg.less", "theme/less/notification.less", "theme/less/loadingScreen.less", "theme/less/toolbar.less", "theme/less/theme.less", "theme/less/popup-dropdown.less", "theme/less/knockout.autocomplete.less", "theme/less/icons.less", "components/inPlaceEditor/inPlaceEditor.less", "calendar/view/application.less", "calendar/view/general.less", "calendar/agenda/agenda.less", "theme/less/dragdrop.less", "calendar/view/allDayEvents.less", "calendar/days/days.less", "calendar/weeks/weeks.less", "calendar/calendarList/calendarList.less", "calendar/view/sidebar.less", "calendar/dialogs/dialogs.less", "calendar/dialogs/event/eventDialog.less", "calendar/dialogs/calendar/calendarDialog.less", "calendar/dialogs/newExternalCalendar/newExternalCalendarDialog.less", "calendar/components/dateInput/dateInput.less", "calendar/components/dateSelector/dateSelector.less", "calendar/components/timeSelector/timeSelector.less", "calendar/components/miniCalendar/miniCalendar.less", "calendar/components/newEvent/newEvent.less", "calendar/components/newCalendar/newCalendar.less", "calendar/components/newExternalCalendar/newExternalCalendar.less", "calendar/components/loading/loading.less", "calendar/components/dialogHeader/dialogHeader.less", "calendar/components/navigation/navigation.less", "node_modules/jquery/dist/jquery.js", "node_modules/knockout/build/output/knockout-latest.debug.js", "calendar/Application.js" ], !0, function($__require, exports, module) {
    this || self;
    window.one = window.one || {}, window.inter = $__require("inter/#{locale|default}.js"), 
    window.TR = $__require("webmail.#{locale|default}.i18n"), window.CONFIG = $__require("#{environment|default}.cjson"), 
    $__require("3rdparty/BrowserSupport.js").redirectIfUnsupported(window.CONFIG.browserSupport), 
    $__require("3rdparty/crashreporter/crashLogger.js"), $__require("3rdparty/crashreporter/crashReporter.js"), 
    $__require("node_modules/tracekit/tracekit.js").report.subscribe(one.crashReporter.sendReportFromTraceKit), 
    $__require("3rdparty/knockout.formatDate.js"), $__require("3rdparty/knockout.afterRender.js"), 
    $__require("3rdparty/knockout.dragdrop.js"), $__require("3rdparty/knockout.popupTemplate.js"), 
    $__require("3rdparty/knockout.validation.js"), $__require("common/bindings/knockout.dropdownTemplate.js"), 
    $__require("common/bindings/knockout.events.js"), $__require("common/bindings/knockout.forRange.js"), 
    $__require("3rdparty/knockout.autoExpand.js"), $__require("theme/binding/errormsg.js"), 
    $__require("theme/binding/notification.js"), $__require("theme/binding/knockout.checkbox.js"), 
    $__require("common/knockout.pause.js"), $__require("calendar/dialogs/event/knockout.eventDialog.js"), 
    $__require("webmail/components/calendarListDropDown/calendarListDropDown.js"), $__require("calendar/dialogs/calendar/knockout.calendarDialog.js"), 
    $__require("calendar/bindings/knockout.isCalendarActive.js"), $__require("calendar/components/newEvent/newEvent.js"), 
    $__require("calendar/view/application.ko"), $__require("calendar/view/sidebar.ko"), 
    $__require("calendar/calendarList/calendarList.ko"), $__require("calendar/calendarList/externalCalendarList.ko"), 
    $__require("calendar/agenda/agenda.ko"), $__require("calendar/days/days.ko"), $__require("calendar/days/day.ko"), 
    $__require("calendar/days/hours.ko"), $__require("calendar/weeks/weeks.ko"), $__require("onebar/onebar.ko"), 
    $__require("calendar/agenda/agendaPage.ko"), $__require("3rdparty/one-theme/scaffolding.less"), 
    $__require("3rdparty/one-theme/3rdparty/bootstrap/less/type.less"), $__require("3rdparty/one-theme/forms.less"), 
    $__require("3rdparty/one-theme/dropdowns.less"), $__require("3rdparty/one-theme/alerts.less"), 
    $__require("3rdparty/one-theme/onebar.less"), $__require("3rdparty/one-theme/toolbar.less"), 
    $__require("3rdparty/one-theme/buttons.less"), $__require("3rdparty/one-theme/tooltip.less"), 
    $__require("onebar/onebar.less"), $__require("theme/less/errormsg.less"), $__require("theme/less/notification.less"), 
    $__require("theme/less/loadingScreen.less"), $__require("theme/less/toolbar.less"), 
    $__require("theme/less/theme.less"), $__require("theme/less/popup-dropdown.less"), 
    $__require("theme/less/knockout.autocomplete.less"), $__require("theme/less/icons.less"), 
    $__require("components/inPlaceEditor/inPlaceEditor.less"), $__require("calendar/view/application.less"), 
    $__require("calendar/view/general.less"), $__require("calendar/agenda/agenda.less"), 
    $__require("theme/less/dragdrop.less"), $__require("calendar/view/allDayEvents.less"), 
    $__require("calendar/days/days.less"), $__require("calendar/weeks/weeks.less"), 
    $__require("calendar/calendarList/calendarList.less"), $__require("calendar/view/sidebar.less"), 
    $__require("calendar/dialogs/dialogs.less"), $__require("calendar/dialogs/event/eventDialog.less"), 
    $__require("calendar/dialogs/calendar/calendarDialog.less"), $__require("calendar/dialogs/newExternalCalendar/newExternalCalendarDialog.less"), 
    $__require("calendar/components/dateInput/dateInput.less"), $__require("calendar/components/dateSelector/dateSelector.less"), 
    $__require("calendar/components/timeSelector/timeSelector.less"), $__require("calendar/components/miniCalendar/miniCalendar.less"), 
    $__require("calendar/components/newEvent/newEvent.less"), $__require("calendar/components/newCalendar/newCalendar.less"), 
    $__require("calendar/components/newExternalCalendar/newExternalCalendar.less"), 
    $__require("calendar/components/loading/loading.less"), $__require("calendar/components/dialogHeader/dialogHeader.less"), 
    $__require("calendar/components/navigation/navigation.less");
    var $ = $__require("node_modules/jquery/dist/jquery.js"), ko = $__require("node_modules/knockout/build/output/knockout-latest.debug.js"), Application = $__require("calendar/Application.js");
    return function() {
        var application = one.application = new Application(!1);
        application.redirectIfNotAuthenticated() || $(function() {
            function updateBodyClasses() {
                body.toggleClass("small-toolbar", body.width() < 1300), body.toggleClass("very-small-width", body.width() < 1216), 
                body.toggleClass("small-width", body.width() < 1366);
            }
            function resizeApp() {
                updateBodyClasses();
            }
            var body = $("body");
            ko.applyBindings(application, $("html")[0]), $(window).resize(resizeApp), resizeApp(), 
            application.load();
        });
    }(), module.exports;
}), function() {
    (0, System.amdDefine)("environment", [], function() {
        var hostname = location.hostname;
        return "mail.one.com" === hostname || /^mail-appspod\d+-\w+\.one\.com$/.test(hostname) ? "mail.one.com" : "mail-test.one.com" === hostname || /mail-appspod-test\d+-\w+\.one\.com$/.test(hostname) ? "mail-test.one.com" : "mail-next.one.com" === hostname || /^mail-appspod-next\d+-\w+\.one\.com$/.test(hostname) ? "mail-next.one.com" : "mail-staging.one.com" === hostname || /^mail-appspod-stg\d+-\w+\.one\.com$/.test(hostname) ? "mail-staging.one.com" : "development";
    });
}(), System.registerDynamic("i18n/lib/tokenizePattern.js", [], !0, function($__require, exports, module) {
    this || self;
    return module.exports = function(pattern) {
        if ("string" != typeof pattern) {
            var valueString = pattern;
            try {
                valueString = JSON.stringify(pattern);
            } catch (e) {}
            throw new Error("i18nTools.tokenizePattern: Value must be a string: " + valueString);
        }
        for (var tokens = [], fragments = pattern.split(/(\{\d+\})/), i = 0; i < fragments.length; i += 1) {
            var fragment = fragments[i];
            if (fragment.length > 0) {
                var matchPlaceHolder = fragment.match(/^\{(\d+)\}$/);
                matchPlaceHolder ? tokens.push({
                    type: "placeHolder",
                    value: parseInt(matchPlaceHolder[1], 10)
                }) : tokens.push({
                    type: "text",
                    value: fragment
                });
            }
        }
        return tokens;
    }, module.exports;
}), System.registerDynamic("i18n/lib/createI18nTagReplacer.js", [ "i18n/lib/tokenizePattern.js" ], !0, function($__require, exports, module) {
    this || self;
    var tokenizePattern = $__require("i18n/lib/tokenizePattern.js");
    return module.exports = function(options) {
        var allKeysForLocale = options.allKeysForLocale, keepI18nAttributes = options.keepI18nAttributes, keepSpans = options.keepSpans;
        return function(options) {
            var key = options.key, node = options.node, value = allKeysForLocale[key], removeNode = !keepSpans && "i18nTagAttribute" !== options.type && null !== key && "span" === node.nodeName.toLowerCase() && 1 === node.attributes.length;
            if (null !== key) if ((/^i18nTag/.test(options.type) && null === value || void 0 === value) && (value = options.defaultValue || "[!" + key + "!]"), 
            "i18nTagAttribute" === options.type) node.setAttribute(options.attributeName, value); else if ("i18nTagText" === options.type) {
                for (;node.childNodes.length; ) node.removeChild(node.firstChild);
                tokenizePattern(value).forEach(function(token) {
                    var nodeToInsert;
                    if ("text" === token.type) nodeToInsert = node.ownerDocument.createTextNode(token.value); else {
                        var placeHolder = options.placeHolders[token.value];
                        placeHolder ? (nodeToInsert = placeHolder).parentNode && (nodeToInsert = nodeToInsert.cloneNode(!0)) : nodeToInsert = node.ownerDocument.createTextNode("[!{" + token.value + "}!]");
                    }
                    removeNode ? 3 === nodeToInsert.nodeType && node.previousSibling && 3 === node.previousSibling.nodeType ? node.previousSibling.nodeValue += nodeToInsert.nodeValue : node.parentNode.insertBefore(nodeToInsert, node) : node.appendChild(nodeToInsert);
                });
            }
            removeNode ? node.parentNode.removeChild(node) : keepI18nAttributes || "i18nTagAttribute" === options.type || node.removeAttribute("data-i18n");
        };
    }, module.exports;
}), System.registerDynamic("i18n/lib/eachI18nTagInHtmlDocument.js", [], !0, function($__require, exports, module) {
    var define, global = this || self, GLOBAL = global;
    return module.exports = function eachI18nTagInHtmlDocument(document, lambda, nestedTemplateLambda) {
        for (var ELEMENT_NODE = 1, TEXT_NODE = 3, queue = [ document ], i; queue.length; ) {
            var node = queue.shift(), parentNode = node.parentNode, nodeStillInDocument = !0;
            if (parentNode && 1 === node.nodeType) {
                if (node.hasAttribute && node.hasAttribute("data-i18n")) {
                    var i18nStr = node.getAttribute("data-i18n"), i18nObj;
                    if (-1 !== i18nStr.indexOf(":")) try {
                        i18nObj = eval("({" + i18nStr + "})");
                    } catch (e) {
                        throw new Error("i18nTools.eachI18nTagInHtmlDocument: Error evaluating data-i18n attribute: " + i18nStr + "\n" + e.stack);
                    } else i18nObj = {
                        text: i18nStr
                    };
                    if (i18nObj.attr) {
                        var attributeNames = Object.keys(i18nObj.attr);
                        for (i = 0; i < attributeNames.length; i += 1) {
                            var attributeName = attributeNames[i], key = i18nObj.attr[attributeName] || null;
                            if (!1 === lambda({
                                type: "i18nTagAttribute",
                                attributeName: attributeName,
                                node: node,
                                key: key,
                                defaultValue: node.getAttribute(attributeName)
                            })) return;
                        }
                    }
                    if (void 0 !== i18nObj.text) {
                        var defaultValue = "", placeHolders = [], nextPlaceHolderNumber = 0;
                        for (i = 0; i < node.childNodes.length; i += 1) {
                            var childNode = node.childNodes[i];
                            3 === childNode.nodeType ? defaultValue += childNode.nodeValue : (defaultValue += "{" + nextPlaceHolderNumber + "}", 
                            nextPlaceHolderNumber += 1, placeHolders.push(childNode));
                        }
                        if (defaultValue = defaultValue.replace(/^[ \n\t]+|[ \n\t]+$/g, ""), defaultValue = defaultValue.replace(/[ \n\t]+/g, " "), 
                        !1 === lambda({
                            type: "i18nTagText",
                            node: node,
                            key: i18nObj.text || null,
                            defaultValue: defaultValue,
                            placeHolders: placeHolders
                        })) return;
                    } else lambda({
                        node: node
                    });
                    node.parentNode || (nodeStillInDocument = !1, queue.unshift(parentNode));
                }
                nestedTemplateLambda && "script" === node.nodeName.toLowerCase() && "text/html" === node.getAttribute("type") && nestedTemplateLambda(node);
            }
            if (nodeStillInDocument && node.childNodes) for (i = node.childNodes.length - 1; i >= 0; i -= 1) queue.unshift(node.childNodes[i]);
        }
    }, module.exports;
}), System.registerDynamic("inter/root.js", [], !0, function($__require, exports, module) {
    function normalizeLocaleId(localeId) {
        return localeId && localeId.replace(/-/g, "_").toLowerCase();
    }
    this || self;
    var inter = {
        renderers: {},
        trQuantity: function(patternByQuantity, number) {
            var pattern = patternByQuantity[this.pluralRule(number)];
            return pattern ? this.getPatternRenderer(pattern).call(this, Array.prototype.slice.call(arguments, 1)) : "[! trQuantity: Missing plural rule for `" + this.pluralRule(number) + "` !]";
        },
        renderList: function(list, type) {
            type = type || "default";
            var patterns = this.listPatterns[type];
            switch (list.length) {
              case 0:
                return "";

              case 1:
                return list[0];

              case 2:
                if ("2" in patterns) return this.renderPattern(list, patterns[2]);

              default:
                for (var str = this.renderPattern(list.slice(-2), patterns.end || "{0}, {1}"), i = list.length - 3; i >= 0; i -= 1) str = this.renderPattern([ list[i], str ], !i && patterns.start || patterns.middle || "{0}, {1}");
                return str;
            }
        },
        tokenizePattern: function(pattern) {
            var tokens = [];
            return pattern.replace(/\{(\d+)\}|([^\{]+)/g, function($0, placeHolderNumber, text) {
                text ? tokens.push({
                    type: "text",
                    value: text
                }) : tokens.push({
                    type: "placeHolder",
                    value: parseInt(placeHolderNumber, 10)
                });
            }), tokens;
        },
        makePatternRenderer: function(pattern) {
            if (pattern) {
                var predefinedCodeFragments = [].slice.call(arguments, 1);
                return new Function("values", "return " + this.tokenizePattern(pattern).map(function(token) {
                    return "placeHolder" === token.type ? predefinedCodeFragments[token.value] || "values[" + token.value + "]" : '"' + token.value.replace(/\"/g, '\\"').replace(/\n/g, "\\n") + '"';
                }).join("+") + ";");
            }
            return function() {
                return "[! makePatternRenderer: No pattern provided !]";
            };
        },
        makeUnitRenderer: function(unit, unitLength) {
            unitLength = unitLength || "long";
            var that = this, quantityRenderers = {};
            for (var quantity in that.unitPatterns[unitLength].unit[unit]) that.unitPatterns[unitLength].unit[unit].hasOwnProperty(quantity) && (quantityRenderers[quantity] = that.makePatternRenderer(that.unitPatterns[unitLength].unit[unit][quantity]));
            return function(n) {
                return quantityRenderers[that.pluralRule(n)]([ n ]);
            };
        },
        makeFileSizeRenderer: function(numDecimals, numberSystemId) {
            function makeNumberRendererSource(sourceVariableNameOrExpression, numDecimals, suffix) {
                return "(" + sourceVariableNameOrExpression + ").toFixed(" + (numDecimals || 0) + ")" + ("." === numberSymbols.decimalPoint ? "" : ".replace('.', '" + numberSymbols.decimal.replace(/\'/g, "\\'") + "')") + (suffix ? "+'" + suffix.replace(/\'/g, "\\'") + "'" : "");
            }
            var numberSymbols = this.numbers[numberSystemId || this.defaultNumberSystemId].symbols;
            return new Function("size", "if (size < 1000) {return " + makeNumberRendererSource("size", 0, " bytes") + ";} else if (size < 1000000) {return " + makeNumberRendererSource("size/1024", numDecimals, " KB") + ";} else if (size < 1000000000) {return " + makeNumberRendererSource("size/1048576", numDecimals, " MB") + ";} else if (size < 1000000000000) {return " + makeNumberRendererSource("size/1073741824", numDecimals, " GB") + ";} else {return " + makeNumberRendererSource("size/1099511627776", numDecimals, " TB") + ";}");
        },
        makeNumberRenderer: function(pattern, numberSystemId, currencyCode, numDecimals) {
            function parseAffix(pattern, pos) {
                for (var affix = "", inQuote = !1, len = pattern.length; pos[0] < len; pos[0] += 1) {
                    var ch = pattern.charAt(pos[0]);
                    if ("'" !== ch) if (inQuote) affix += ch; else switch (ch) {
                      case "#":
                      case "0":
                      case ",":
                      case ".":
                      case ";":
                        return affix;

                      case "¤":
                        pos[0] + 1 < len && "¤" === pattern.charAt(pos[0] + 1) ? (pos[0] += 1, affix += currencyCode || "¤") : affix += currencyCode || "¤";
                        break;

                      case "%":
                        if (1 !== multiplier) throw Error("Too many percent/permill");
                        multiplier = 100, affix += numberSystem.symbols.percentSign;
                        break;

                      case "‰":
                        if (1 !== multiplier) throw Error("Too many percent/permill");
                        multiplier = 1e3, affix += numberSystem.symbols.perMille;
                        break;

                      default:
                        affix += ch;
                    } else pos[0] + 1 < len && "'" === pattern.charAt(pos[0] + 1) ? (pos[0] += 1, affix += "'") : inQuote = !inQuote;
                }
                return affix;
            }
            function subformatFixed(number, minIntDigits, parts) {
                var intValue, fracValue, power = Math.pow(10, maximumFractionDigits), shiftedNumber = Math.round(number * power);
                isFinite(shiftedNumber) ? (intValue = Math.floor(shiftedNumber / power), fracValue = Math.floor(shiftedNumber - intValue * power)) : (intValue = number, 
                fracValue = 0);
                for (var fractionPresent = minimumFractionDigits > 0 || fracValue > 0, intPart = "", translatableInt = intValue; translatableInt > 1e20; ) intPart = "0" + intPart, 
                translatableInt = Math.round(translatableInt / 10);
                intPart = translatableInt + intPart;
                var i, decimal = numberSystem.symbols.decimal, grouping = numberSystem.symbols.group, zeroCode = digits[0].charCodeAt(0), digitLen = intPart.length;
                if (intValue > 0 || minIntDigits > 0) {
                    for (i = digitLen; i < minIntDigits; i += 1) parts.push(String.fromCharCode(zeroCode));
                    for (i = 0; i < digitLen; i += 1) parts.push(String.fromCharCode(zeroCode + 1 * intPart.charAt(i))), 
                    digitLen - i > 1 && groupingSize > 0 && (digitLen - i) % groupingSize == 1 && parts.push(grouping);
                } else fractionPresent || parts.push(String.fromCharCode(zeroCode));
                (decimalSeparatorAlwaysShown || fractionPresent) && parts.push(decimal);
                for (var fracPart = "" + (fracValue + power), fracLen = fracPart.length; "0" === fracPart.charAt(fracLen - 1) && fracLen > minimumFractionDigits + 1; ) fracLen -= 1;
                for (i = 1; i < fracLen; i += 1) parts.push(String.fromCharCode(zeroCode + 1 * fracPart.charAt(i)));
            }
            function addExponentPart(exponent, parts) {
                parts.push(numberSystem.symbols.exponential), exponent < 0 ? (exponent = -exponent, 
                parts.push(numberSystem.symbols.minusSign)) : useSignForPositiveExponent && parts.push(numberSystem.symbols.plusSign);
                for (var exponentDigits = "" + exponent, zeroChar = digits[0], i = exponentDigits.length; i < minExponentDigits; i += 1) parts.push(zeroChar);
                parts.push(exponentDigits);
            }
            function subformatExponential(number, parts) {
                if (0 === number) return subformatFixed(number, minimumIntegerDigits, parts), void addExponentPart(0, parts);
                var exponent = Math.floor(Math.log(number) / Math.log(10));
                number /= Math.pow(10, exponent);
                var minIntDigits = minimumIntegerDigits;
                if (maximumIntegerDigits > 1 && maximumIntegerDigits > minimumIntegerDigits) {
                    for (;exponent % maximumIntegerDigits != 0; ) number *= 10, exponent -= 1;
                    minIntDigits = 1;
                } else minimumIntegerDigits < 1 ? (exponent += 1, number /= 10) : (exponent -= minimumIntegerDigits - 1, 
                number *= Math.pow(10, minimumIntegerDigits - 1));
                subformatFixed(number, minIntDigits, parts), addExponentPart(exponent, parts);
            }
            pattern = pattern || this.numbers.latn.formats.decimal.default;
            var numberSystem = this.numbers[numberSystemId || "latn"], digits = numberSystem.digits;
            if ("string" == typeof digits) {
                var that = this;
                return function(number) {
                    return that[digits](number);
                };
            }
            var maximumIntegerDigits = 40, minimumIntegerDigits = 1, maximumFractionDigits = 3, minimumFractionDigits = 0, minExponentDigits = 0, useSignForPositiveExponent = !1, positivePrefix = "", positiveSuffix = "", negativePrefix = "-", negativeSuffix = "", multiplier = 1, groupingSize = 3, decimalSeparatorAlwaysShown = !1, useExponentialNotation = !1, pos = [ 0 ];
            positivePrefix = parseAffix(pattern, pos);
            var trunkStart = pos[0];
            !function(pattern, pos) {
                for (var decimalPos = -1, digitLeftCount = 0, zeroDigitCount = 0, digitRightCount = 0, groupingCount = -1, len = pattern.length, loop = !0; pos[0] < len && loop; pos[0] += 1) switch (pattern.charAt(pos[0])) {
                  case "#":
                    zeroDigitCount > 0 ? digitRightCount += 1 : digitLeftCount += 1, groupingCount >= 0 && decimalPos < 0 && (groupingCount += 1);
                    break;

                  case "0":
                    if (digitRightCount > 0) throw Error('Unexpected "0" in pattern "' + pattern + '"');
                    zeroDigitCount += 1, groupingCount >= 0 && decimalPos < 0 && (groupingCount += 1);
                    break;

                  case ",":
                    groupingCount = 0;
                    break;

                  case ".":
                    if (decimalPos >= 0) throw Error('Multiple decimal separators in pattern "' + pattern + '"');
                    decimalPos = digitLeftCount + zeroDigitCount + digitRightCount;
                    break;

                  case "E":
                    if (useExponentialNotation) throw Error('Multiple exponential symbols in pattern "' + pattern + '"');
                    for (useExponentialNotation = !0, minExponentDigits = 0, pos[0] + 1 < len && "+" === pattern.charAt(pos[0] + 1) && (pos[0] += 1, 
                    useSignForPositiveExponent = !0); pos[0] + 1 < len && "0" === pattern.charAt(pos[0] + 1); ) pos[0] += 1, 
                    minExponentDigits += 1;
                    if (digitLeftCount + zeroDigitCount < 1 || minExponentDigits < 1) throw Error('Malformed exponential pattern "' + pattern + '"');
                    loop = !1;
                    break;

                  default:
                    pos[0] -= 1, loop = !1;
                }
                if (0 === zeroDigitCount && digitLeftCount > 0 && decimalPos >= 0) {
                    var n = decimalPos;
                    0 === n && (n += 1), digitRightCount = digitLeftCount - n, digitLeftCount = n - 1, 
                    zeroDigitCount = 1;
                }
                if (decimalPos < 0 && digitRightCount > 0 || decimalPos >= 0 && (decimalPos < digitLeftCount || decimalPos > digitLeftCount + zeroDigitCount) || 0 === groupingCount) throw Error('Malformed pattern "' + pattern + '"');
                var totalDigits = digitLeftCount + zeroDigitCount + digitRightCount;
                "number" == typeof numDecimals ? minimumFractionDigits = maximumFractionDigits = numDecimals : (maximumFractionDigits = decimalPos >= 0 ? totalDigits - decimalPos : 0, 
                decimalPos >= 0 && (minimumFractionDigits = digitLeftCount + zeroDigitCount - decimalPos) < 0 && (minimumFractionDigits = 0)), 
                minimumIntegerDigits = (decimalPos >= 0 ? decimalPos : totalDigits) - digitLeftCount, 
                useExponentialNotation && (maximumIntegerDigits = digitLeftCount + minimumIntegerDigits, 
                0 === maximumFractionDigits && 0 === minimumIntegerDigits && (minimumIntegerDigits = 1)), 
                groupingSize = Math.max(0, groupingCount), decimalSeparatorAlwaysShown = 0 === decimalPos || decimalPos === totalDigits;
            }(pattern, pos);
            var trunkLen = pos[0] - trunkStart;
            return positiveSuffix = parseAffix(pattern, pos), pos[0] < pattern.length && ";" === pattern.charAt(pos[0]) ? (pos[0] += 1, 
            negativePrefix = parseAffix(pattern, pos), pos[0] += trunkLen, negativeSuffix = parseAffix(pattern, pos)) : (negativePrefix = positivePrefix + negativePrefix, 
            negativeSuffix += positiveSuffix), function(number) {
                if (isNaN(number)) return numberSystem.symbols.nan;
                var parts = [], isNegative = number < 0 || 0 === number && 1 / number < 0;
                return parts.push(isNegative ? negativePrefix : positivePrefix), isFinite(number) ? (number *= isNegative ? -1 : 1, 
                number *= multiplier, useExponentialNotation ? subformatExponential(number, parts) : subformatFixed(number, minimumIntegerDigits, parts)) : parts.push(numberSystem.symbols.infinity), 
                parts.push(isNegative ? negativeSuffix : positiveSuffix), parts.join("");
            };
        },
        makePercentageRenderer: function(numDecimals, numberSystemId) {
            numberSystemId = numberSystemId || "latn";
            var pattern = this.numbers[numberSystemId].formats.percent.default;
            return this.makeNumberRenderer(pattern, numberSystemId, void 0, numDecimals);
        },
        tokenizeDateFormat: function(format) {
            var tokens = [];
            return format.replace(/([^a-z']+)|'(')|'((?:[^']|'')+)'|(([a-z])\5*)/gi, function($0, unescapedText, escapedSingleQuote, escapedText, fieldToken) {
                fieldToken ? tokens.push({
                    type: "field",
                    value: fieldToken
                }) : (escapedText && (escapedText = escapedText.replace(/''/g, "'")), tokens.push({
                    type: "text",
                    value: (unescapedText || escapedSingleQuote || escapedText || $0).replace(/"/g, '\\"')
                }));
            }), tokens;
        },
        normalizeDate: function(dateInstance) {
            if (!dateInstance || !dateInstance.getHours) if (dateInstance._time) {
                var icalJsDate = dateInstance;
                dateInstance = {
                    getTimezoneOffset: function() {
                        return -icalJsDate.utcOffset() / 60;
                    },
                    getTime: function() {
                        return 1e3 * icalJsDate.toUnixTime();
                    },
                    getDay: function() {
                        return icalJsDate.dayOfWeek() - 1;
                    },
                    getFullYear: function() {
                        return icalJsDate._time.year;
                    },
                    getMonth: function() {
                        return icalJsDate._time.month - 1;
                    },
                    getDate: function() {
                        return icalJsDate._time.day;
                    },
                    getHours: function() {
                        return icalJsDate._time.hour;
                    },
                    getMinutes: function() {
                        return icalJsDate._time.minute;
                    },
                    getSeconds: function() {
                        return icalJsDate._time.second;
                    }
                };
            } else dateInstance = new Date(dateInstance);
            return dateInstance;
        },
        makeDateNormalizerSource: function(variableName) {
            var source = this.normalizeDate.toString(), matchParameterName = source.match(/function[^(]*\((\w+)\)/), parameterNameRegExp = new RegExp("\\b" + (matchParameterName ? matchParameterName[1] : "dateInstance").replace(/[\\\|\.\+\*\{\}\[\]\(\)\?\^\$]/g, "\\$&") + "\\b", "g");
            return source.replace(/^[^\{]+\{|\s*return \w+;?\s*\}$/g, "").replace(parameterNameRegExp, variableName);
        },
        getCodeFragmentsByFormatChar: function() {
            return this.codeFragmentsByFormatChar || (this.codeFragmentsByFormatChar = {
                G: [ "{eraNames.abbreviated}[{date}.getFullYear() > 0 ? 1 : 0]" ],
                y: [ '"0000".slice(String({date}.getFullYear()).length) + {date}.getFullYear()' ],
                Q: [ '"0" + ({date}.getMonth()/4)', "*", "{quarterNames.format.abbreviated}[Math.floor({date}.getMonth()/4)]", "{quarterNames.format.wide}[Math.floor({date}.getMonth()/4)]" ],
                M: [ "({date}.getMonth() + 1)", '({date}.getMonth() < 9 ? "0" : "") + ({date}.getMonth() + 1)', "{monthNames.format.abbreviated}[{date}.getMonth()]", "{monthNames.format.wide}[{date}.getMonth()]" ],
                L: [ "({date}.getMonth() + 1)", '({date}.getMonth() < 9 ? "0" : "") + ({date}.getMonth() + 1)', "{monthNames.standAlone.abbreviated}[{date}.getMonth()]", "{monthNames.standAlone.wide}[{date}.getMonth()]" ],
                d: [ "{date}.getDate()", '({date}.getDate() < 10 ? "0" : "") + {date}.getDate()' ],
                D: [ "(1 + Math.floor(({date}.getTime() - new Date({date}.getFullYear(), 0, 1).getTime()) / 86400000))" ],
                F: [ "(1 + Math.floor((date.getDate() - 1) / 7))" ],
                E: [ "{dayNames.format.abbreviated}[{date}.getDay()]", "*", "*", "{dayNames.format.wide}[{date}.getDay()]" ],
                a: [ '({date}.getHours() < 12 ? "am" : "pm")' ],
                h: [ "(({date}.getHours() % 12) ? {date}.getHours() % 12 : 12)" ],
                H: [ '({date}.getHours() < 10 ? "0" : "") + {date}.getHours()' ],
                m: [ '({date}.getMinutes() < 10 ? "0" : "") + {date}.getMinutes()' ],
                s: [ '({date}.getSeconds() < 10 ? "0" : "") + {date}.getSeconds()' ],
                z: [ function() {
                    return "({date}.getTimezoneOffset() < 0 ? " + this.makeDateFormatRendererSource("new Date(1970, 0, 1, 0, -{date}.getTimezoneOffset())", this.timeZoneFormats.hour[0]) + ":" + this.makeDateFormatRendererSource("new Date(1970, 0, 1, 0, {date}.getTimezoneOffset())", this.timeZoneFormats.hour[1]) + ")";
                } ]
            }), this.codeFragmentsByFormatChar;
        },
        getCodeFragmentForDateField: function(fieldToken, sourceVariableNameOrExpression, calendarId) {
            calendarId = calendarId || "gregorian";
            var codeFragments = this.getCodeFragmentsByFormatChar()[fieldToken[0]];
            if (codeFragments) {
                for (var codeFragmentNumber = Math.min(fieldToken.length, codeFragments.length) - 1; "*" === codeFragments[codeFragmentNumber]; ) codeFragmentNumber -= 1;
                var that = this, codeFragment = codeFragments[codeFragmentNumber];
                return "function" == typeof codeFragment && (codeFragment = codeFragment.apply(this)), 
                codeFragment.replace(/\{([^\}]+)\}/g, function($0, varName) {
                    if ("date" === varName) return "(" + sourceVariableNameOrExpression + ")";
                    for (var fragments = varName.split("."), obj = that.calendars[calendarId], i = 0; i < fragments.length; i += 1) obj = obj[fragments[i]];
                    return JSON.stringify(obj);
                });
            }
        },
        makeDateFormatRendererSource: function(sourceVariableNameOrExpression, format, calendarId) {
            calendarId = calendarId || "gregorian";
            var expressions = [];
            return this.tokenizeDateFormat(format).forEach(function(token) {
                if ("text" === token.type) expressions.push('"' + token.value.replace(/"/g, '\\"') + '"'); else {
                    var codeFragment = this.getCodeFragmentForDateField(token.value, sourceVariableNameOrExpression, calendarId);
                    codeFragment && expressions.push(codeFragment);
                }
            }, this), expressions.join("+");
        },
        makeDateRenderer: function(formatId, calendarId) {
            return new Function("d", this.makeDateNormalizerSource("d") + "return " + this.makeDateFormatRendererSource("d", this.getDateFormat(formatId, calendarId), calendarId) + ";");
        },
        makeDateFormatRenderer: function(format, calendarId) {
            return new Function("d", this.makeDateNormalizerSource("d") + "return " + this.makeDateFormatRendererSource("d", format, calendarId) + ";");
        },
        getDateFormat: function(formatId, calendarId) {
            calendarId = calendarId || "gregorian", formatId = formatId || "fullDateTime";
            var icuFormat = this.calendars[calendarId].dateFormats.basic[formatId] || this.calendars[calendarId].dateFormats.cldr[formatId];
            if (icuFormat) return icuFormat;
            var bestCandidateFormatId = this.getBestICUFormatId(formatId, this.calendars[calendarId].dateFormats.cldr);
            if (bestCandidateFormatId) return this.calendars[calendarId].dateFormats.cldr[formatId] = this.adaptICUFormat(this.calendars[calendarId].dateFormats.cldr[bestCandidateFormatId], formatId);
            var matchFormatId = formatId.match(/^y+M+d+$/);
            if (matchFormatId) return this.calendars[calendarId].dateFormats.cldr[formatId] = this.adaptICUFormat(this.calendars[calendarId].dateFormats.basic.shortDate, formatId);
            if (matchFormatId = formatId.match(/^([yMQEd]+)([Hhms]+)$/)) {
                var dateFormat = this.getDateFormat(matchFormatId[1], calendarId), timeFormat = this.getDateFormat(matchFormatId[2], calendarId);
                return this.renderPattern([ timeFormat, dateFormat ], "medium");
            }
            throw new Error("inter.getDateFormat: Cannot find format: " + formatId);
        },
        getBestICUFormatId: function(formatId, sourceObject) {
            var bestCandidateFormatId, matcher = new RegExp("^" + formatId.replace(/(([a-zA-Z])\2*)/g, function($0, formatToken, formatChar) {
                return formatChar + "{1," + formatToken.length + "}";
            }) + "$");
            for (var candidateFormatId in sourceObject) matcher.test(candidateFormatId) && (!bestCandidateFormatId || candidateFormatId.length > bestCandidateFormatId.length) && (bestCandidateFormatId = candidateFormatId);
            return bestCandidateFormatId;
        },
        adaptICUFormat: function(icuFormat, adaptToFormatId) {
            return adaptToFormatId.replace(/(([a-zA-Z])\2*)/g, function($0, formatToken, formatChar) {
                "M" === formatChar && (formatChar = "[LM]"), icuFormat = icuFormat.replace(new RegExp(formatChar + "+", "g"), function($0) {
                    return new Array(formatToken.length + 1).join($0.charAt(0));
                });
            }), icuFormat;
        },
        applySpacingToCurrencyString: function(currencyString, currencyFormat, numberSystemId) {
            var beforeCurrency = currencyFormat.currencySpacing.beforeCurrency, afterCurrency = currencyFormat.currencySpacing.afterCurrency, preRenderedCurrency = this.renderNumber(42, currencyFormat.default, numberSystemId, "¤"), currencyStartMatched = new RegExp("^" + beforeCurrency.currencyMatch.source).test(currencyString), currencyEndMatched = new RegExp(afterCurrency.currencyMatch.source + "$").test(currencyString), beforeCurrencySurroundingMatched = new RegExp(beforeCurrency.surroundingMatch.source + "¤").test(preRenderedCurrency), afterCurrencySurroundingMatched = new RegExp("¤" + afterCurrency.surroundingMatch.source).test(preRenderedCurrency);
            return currencyStartMatched && beforeCurrencySurroundingMatched ? currencyString = beforeCurrency.insertBetween + currencyString : currencyEndMatched && afterCurrencySurroundingMatched && (currencyString += afterCurrency.insertBetween), 
            currencyString;
        },
        renderCurrencyLong: function(value, currencyId, numberSystemId, numDecimals) {
            var currency = inter.getCurrency(currencyId), currencyString = currency ? this.trQuantity(currency, value) : null;
            return currencyString || (currencyString = currencyId), this.renderCurrency(value, currencyString, numberSystemId, numDecimals);
        },
        renderCurrencyShort: function(value, currencyId, numberSystemId, numDecimals) {
            var currency;
            this.currencies && (currency = this.getCurrency(currencyId));
            var currencyString = currency ? currency.symbol : null;
            return currencyString || (currencyString = currencyId), this.renderCurrency(value, currencyString, numberSystemId, numDecimals);
        },
        renderCurrency: function(value, currencyString, numberSystemId, numDecimals) {
            return numberSystemId = numberSystemId || "latn", numDecimals = "number" == typeof numDecimals ? parseInt(numDecimals, 10) : void 0, 
            currencyString = inter.applySpacingToCurrencyString(currencyString, this.numbers[numberSystemId].formats.currency, numberSystemId), 
            this.renderNumber(value, this.numbers[numberSystemId].formats.currency.default, numberSystemId, currencyString, numDecimals);
        }
    };
    return [ "Unit", "Number", "Percentage", "FileSize", "Date", "DateFormat", "DateInterval", "Pattern" ].forEach(function(rendererType) {
        "make" + rendererType + "Renderer" in this && (this["get" + rendererType + "Renderer"] = function() {
            var rendererId = rendererType + ":" + [].join.call(arguments, "/");
            return this.renderers[rendererId] || (this.renderers[rendererId] = this["make" + rendererType + "Renderer"].apply(this, arguments));
        }, this["render" + rendererType] = function(obj) {
            var makeRendererArgs = [].slice.call(arguments, 1);
            return (this.renderers[rendererType + ":" + makeRendererArgs.join("/")] || this["get" + rendererType + "Renderer"].apply(this, makeRendererArgs))(obj);
        });
    }, inter), [ "timeZones", "countries", "territories", "regions", "languages", "currencies", "scripts" ].forEach(function(pluralName) {
        var singularName = pluralName.replace(/(ie)?s$/, function($0, ending) {
            return ending ? "y" : "";
        }), capitalizedSingularName = singularName.replace(/[a-z]/, function($0) {
            return $0.toUpperCase();
        });
        this["get" + capitalizedSingularName] = function(id) {
            if (!this.hasOwnProperty(singularName + "byId")) {
                if (!this[pluralName]) throw new Error("inter.get" + capitalizedSingularName + ": The library was compiled without --" + pluralName.toLowerCase());
                var byId = this[singularName + "byId"] = {};
                this[pluralName].forEach(function(obj) {
                    byId[obj.id] = obj;
                });
            }
            return this[singularName + "byId"][id];
        };
    }, inter), inter.id = "root", inter.delimiters = {
        quotationStart: "“",
        quotationEnd: "”",
        alternateQuotationStart: "‘",
        alternateQuotationEnd: "’"
    }, inter.listPatterns = {
        default: {
            2: "{0}, {1}",
            start: "{0}, {1}",
            middle: "{0}, {1}",
            end: "{0}, {1}"
        }
    }, inter.unitPatterns = {
        short: {
            unit: {
                accelerationGForce: {
                    other: "{0} G"
                },
                accelerationMeterPerSecondSquared: {
                    other: "{0} m/s²"
                },
                angleRevolution: {
                    other: "{0} rev"
                },
                angleRadian: {
                    other: "{0} rad"
                },
                angleDegree: {
                    other: "{0}°"
                },
                angleArcMinute: {
                    other: "{0}′"
                },
                angleArcSecond: {
                    other: "{0}″"
                },
                areaSquareKilometer: {
                    other: "{0} km²"
                },
                areaHectare: {
                    other: "{0} ha"
                },
                areaSquareMeter: {
                    other: "{0} m²"
                },
                areaSquareCentimeter: {
                    other: "{0} cm²"
                },
                areaSquareMile: {
                    other: "{0} mi²"
                },
                areaAcre: {
                    other: "{0} ac"
                },
                areaSquareYard: {
                    other: "{0} yd²"
                },
                areaSquareFoot: {
                    other: "{0} ft²"
                },
                areaSquareInch: {
                    other: "{0} in²"
                },
                concentrKarat: {
                    other: "{0} kt"
                },
                concentrMilligramPerDeciliter: {
                    other: "{0} mg/dL"
                },
                concentrMillimolePerLiter: {
                    other: "{0} mmol/L"
                },
                concentrPartPerMillion: {
                    other: "{0} ppm"
                },
                consumptionLiterPerKilometer: {
                    other: "{0} L/km"
                },
                "consumptionLiterPer-100kilometers": {
                    other: "{0} L/100km"
                },
                consumptionMilePerGallon: {
                    other: "{0} mpg US"
                },
                consumptionMilePerGallonImperial: {
                    other: "{0} mpg Imp."
                },
                digitalTerabyte: {
                    other: "{0} TB"
                },
                digitalTerabit: {
                    other: "{0} Tb"
                },
                digitalGigabyte: {
                    other: "{0} GB"
                },
                digitalGigabit: {
                    other: "{0} Gb"
                },
                digitalMegabyte: {
                    other: "{0} MB"
                },
                digitalMegabit: {
                    other: "{0} Mb"
                },
                digitalKilobyte: {
                    other: "{0} kB"
                },
                digitalKilobit: {
                    other: "{0} kb"
                },
                digitalByte: {
                    other: "{0} byte"
                },
                digitalBit: {
                    other: "{0} bit"
                },
                durationCentury: {
                    other: "{0} c"
                },
                durationYear: {
                    other: "{0} y"
                },
                durationMonth: {
                    other: "{0} m"
                },
                durationWeek: {
                    other: "{0} w"
                },
                durationDay: {
                    other: "{0} d"
                },
                durationHour: {
                    other: "{0} h"
                },
                durationMinute: {
                    other: "{0} min"
                },
                durationSecond: {
                    other: "{0} s"
                },
                durationMillisecond: {
                    other: "{0} ms"
                },
                durationMicrosecond: {
                    other: "{0} μs"
                },
                durationNanosecond: {
                    other: "{0} ns"
                },
                electricAmpere: {
                    other: "{0} A"
                },
                electricMilliampere: {
                    other: "{0} mA"
                },
                electricOhm: {
                    other: "{0} Ω"
                },
                electricVolt: {
                    other: "{0} V"
                },
                energyKilocalorie: {
                    other: "{0} kcal"
                },
                energyCalorie: {
                    other: "{0} cal"
                },
                energyFoodcalorie: {
                    other: "{0} Cal"
                },
                energyKilojoule: {
                    other: "{0} kJ"
                },
                energyJoule: {
                    other: "{0} J"
                },
                energyKilowattHour: {
                    other: "{0} kWh"
                },
                frequencyGigahertz: {
                    other: "{0} GHz"
                },
                frequencyMegahertz: {
                    other: "{0} MHz"
                },
                frequencyKilohertz: {
                    other: "{0} kHz"
                },
                frequencyHertz: {
                    other: "{0} Hz"
                },
                lengthKilometer: {
                    other: "{0} km"
                },
                lengthMeter: {
                    other: "{0} m"
                },
                lengthDecimeter: {
                    other: "{0} dm"
                },
                lengthCentimeter: {
                    other: "{0} cm"
                },
                lengthMillimeter: {
                    other: "{0} mm"
                },
                lengthMicrometer: {
                    other: "{0} µm"
                },
                lengthNanometer: {
                    other: "{0} nm"
                },
                lengthPicometer: {
                    other: "{0} pm"
                },
                lengthMile: {
                    other: "{0} mi"
                },
                lengthYard: {
                    other: "{0} yd"
                },
                lengthFoot: {
                    other: "{0} ft"
                },
                lengthInch: {
                    other: "{0} in"
                },
                lengthParsec: {
                    other: "{0} pc"
                },
                lengthLightYear: {
                    other: "{0} ly"
                },
                lengthAstronomicalUnit: {
                    other: "{0} au"
                },
                lengthFurlong: {
                    other: "{0} fur"
                },
                lengthFathom: {
                    other: "{0} fm"
                },
                lengthNauticalMile: {
                    other: "{0} nmi"
                },
                lengthMileScandinavian: {
                    other: "{0} smi"
                },
                lightLux: {
                    other: "{0} lx"
                },
                massMetricTon: {
                    other: "{0} t"
                },
                massKilogram: {
                    other: "{0} kg"
                },
                massGram: {
                    other: "{0} g"
                },
                massMilligram: {
                    other: "{0} mg"
                },
                massMicrogram: {
                    other: "{0} µg"
                },
                massTon: {
                    other: "{0} tn"
                },
                massStone: {
                    other: "{0} st"
                },
                massPound: {
                    other: "{0} lb"
                },
                massOunce: {
                    other: "{0} oz"
                },
                massOunceTroy: {
                    other: "{0} oz t"
                },
                massCarat: {
                    other: "{0} CD"
                },
                powerGigawatt: {
                    other: "{0} GW"
                },
                powerMegawatt: {
                    other: "{0} MW"
                },
                powerKilowatt: {
                    other: "{0} kW"
                },
                powerWatt: {
                    other: "{0} W"
                },
                powerMilliwatt: {
                    other: "{0} mW"
                },
                powerHorsepower: {
                    other: "{0} hp"
                },
                pressureHectopascal: {
                    other: "{0} hPa"
                },
                pressureMillimeterOfMercury: {
                    other: "{0} mm Hg"
                },
                pressurePoundPerSquareInch: {
                    other: "{0} psi"
                },
                pressureInchHg: {
                    other: "{0} inHg"
                },
                pressureMillibar: {
                    other: "{0} mbar"
                },
                speedKilometerPerHour: {
                    other: "{0} km/h"
                },
                speedMeterPerSecond: {
                    other: "{0} m/s"
                },
                speedMilePerHour: {
                    other: "{0} mi/h"
                },
                speedKnot: {
                    other: "{0} kn"
                },
                temperatureGeneric: {
                    other: "{0}°"
                },
                temperatureCelsius: {
                    other: "{0}°C"
                },
                temperatureFahrenheit: {
                    other: "{0}°F"
                },
                temperatureKelvin: {
                    other: "{0} K"
                },
                volumeCubicKilometer: {
                    other: "{0} km³"
                },
                volumeCubicMeter: {
                    other: "{0} m³"
                },
                volumeCubicCentimeter: {
                    other: "{0} cm³"
                },
                volumeCubicMile: {
                    other: "{0} mi³"
                },
                volumeCubicYard: {
                    other: "{0} yd³"
                },
                volumeCubicFoot: {
                    other: "{0} ft³"
                },
                volumeCubicInch: {
                    other: "{0} in³"
                },
                volumeMegaliter: {
                    other: "{0} ML"
                },
                volumeHectoliter: {
                    other: "{0} hL"
                },
                volumeLiter: {
                    other: "{0} l"
                },
                volumeDeciliter: {
                    other: "{0} dL"
                },
                volumeCentiliter: {
                    other: "{0} cL"
                },
                volumeMilliliter: {
                    other: "{0} mL"
                },
                volumePintMetric: {
                    other: "{0} mpt"
                },
                volumeCupMetric: {
                    other: "{0} mc"
                },
                volumeAcreFoot: {
                    other: "{0} ac ft"
                },
                volumeBushel: {
                    other: "{0} bu"
                },
                volumeGallon: {
                    other: "{0} gal US"
                },
                volumeGallonImperial: {
                    other: "{0} gal Imp."
                },
                volumeQuart: {
                    other: "{0} qt"
                },
                volumePint: {
                    other: "{0} pt"
                },
                volumeCup: {
                    other: "{0} c"
                },
                volumeFluidOunce: {
                    other: "{0} fl oz"
                },
                volumeTablespoon: {
                    other: "{0} tbsp"
                },
                volumeTeaspoon: {
                    other: "{0} tsp"
                }
            },
            compoundUnit: {
                per: "{0}/{1}"
            }
        }
    }, inter.timeZoneFormats = {
        hour: [ "+HH:mm", "-HH:mm" ],
        gmt: "GMT{0}",
        gmtZero: "GMT",
        region: "{0}",
        fallback: "{1} ({0})",
        regions: {
            daylight: "{0} (+1)",
            standard: "{0} (+0)"
        }
    }, inter.characters = {
        exemplar: {
            default: [ "" ],
            auxiliary: [ "" ],
            punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
        },
        ellipsis: {
            final: "{0}…",
            initial: "…{0}",
            medial: "{0}…{1}",
            "word-final": "{0} …",
            "word-initial": "… {0}",
            "word-medial": "{0} … {1}"
        },
        moreInformation: "?"
    }, inter.numbers = {
        latn: {
            symbols: {
                decimal: ".",
                group: ",",
                list: ";",
                percentSign: "%",
                plusSign: "+",
                minusSign: "-",
                exponential: "E",
                superscriptingExponent: "×",
                perMille: "‰",
                infinity: "∞",
                nan: "NaN",
                timeSeparator: ":"
            },
            formats: {
                scientific: {
                    default: "#E0"
                },
                decimal: {
                    long: {
                        1e3: {
                            other: "0K"
                        },
                        1e4: {
                            other: "00K"
                        },
                        1e5: {
                            other: "000K"
                        },
                        1e6: {
                            other: "0M"
                        },
                        1e7: {
                            other: "00M"
                        },
                        1e8: {
                            other: "000M"
                        },
                        1e9: {
                            other: "0G"
                        },
                        1e10: {
                            other: "00G"
                        },
                        1e11: {
                            other: "000G"
                        },
                        1e12: {
                            other: "0T"
                        },
                        1e13: {
                            other: "00T"
                        },
                        1e14: {
                            other: "000T"
                        }
                    },
                    short: {
                        1e3: {
                            other: "0K"
                        },
                        1e4: {
                            other: "00K"
                        },
                        1e5: {
                            other: "000K"
                        },
                        1e6: {
                            other: "0M"
                        },
                        1e7: {
                            other: "00M"
                        },
                        1e8: {
                            other: "000M"
                        },
                        1e9: {
                            other: "0G"
                        },
                        1e10: {
                            other: "00G"
                        },
                        1e11: {
                            other: "000G"
                        },
                        1e12: {
                            other: "0T"
                        },
                        1e13: {
                            other: "00T"
                        },
                        1e14: {
                            other: "000T"
                        }
                    },
                    default: "#,##0.###"
                },
                currency: {
                    short: {
                        1e3: {
                            other: "¤ 0K"
                        },
                        1e4: {
                            other: "¤ 00K"
                        },
                        1e5: {
                            other: "¤ 000K"
                        },
                        1e6: {
                            other: "¤ 0M"
                        },
                        1e7: {
                            other: "¤ 00M"
                        },
                        1e8: {
                            other: "¤ 000M"
                        },
                        1e9: {
                            other: "¤ 0G"
                        },
                        1e10: {
                            other: "¤ 00G"
                        },
                        1e11: {
                            other: "¤ 000G"
                        },
                        1e12: {
                            other: "¤ 0T"
                        },
                        1e13: {
                            other: "¤ 00T"
                        },
                        1e14: {
                            other: "¤ 000T"
                        }
                    },
                    default: "¤ #,##0.00",
                    other: "{0} {1}",
                    currencySpacing: {
                        beforeCurrency: {
                            currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
                            surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
                            insertBetween: " "
                        },
                        afterCurrency: {
                            currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
                            surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
                            insertBetween: " "
                        }
                    }
                },
                percent: {
                    default: "#,##0%"
                }
            },
            digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
        }
    }, inter.defaultNumberSystemId = "latn", inter.calendars = {
        gregorian: {
            dateFormats: {
                basic: {
                    fullDate: "y MMMM d, EEEE",
                    longDate: "y MMMM d",
                    mediumDate: "y MMM d",
                    shortDate: "y-MM-dd",
                    fullTime: "HH:mm:ss zzzz",
                    longTime: "HH:mm:ss z",
                    mediumTime: "HH:mm:ss",
                    shortTime: "HH:mm",
                    shortDateTime: "y-MM-dd HH:mm",
                    mediumDateTime: "y MMM d HH:mm:ss",
                    longDateTime: "y MMMM d HH:mm:ss z",
                    fullDateTime: "y MMMM d, EEEE HH:mm:ss zzzz"
                },
                cldr: {
                    d: "d",
                    E: "ccc",
                    Ed: "d, E",
                    Ehm: "E h:mm a",
                    EHm: "E HH:mm",
                    Ehms: "E h:mm:ss a",
                    EHms: "E HH:mm:ss",
                    Gy: "G y",
                    GyMMM: "G y MMM",
                    GyMMMd: "G y MMM d",
                    GyMMMEd: "G y MMM d, E",
                    h: "h a",
                    H: "HH",
                    hm: "h:mm a",
                    Hm: "HH:mm",
                    hms: "h:mm:ss a",
                    Hms: "HH:mm:ss",
                    hmsv: "h:mm:ss a v",
                    Hmsv: "HH:mm:ss v",
                    hmv: "h:mm a v",
                    Hmv: "HH:mm v",
                    M: "L",
                    Md: "MM-dd",
                    MEd: "MM-dd, E",
                    MMM: "LLL",
                    MMMd: "MMM d",
                    MMMEd: "MMM d, E",
                    MMMMd: "MMMM d",
                    ms: "mm:ss",
                    y: "y",
                    yM: "y-MM",
                    yMd: "y-MM-dd",
                    yMEd: "y-MM-dd, E",
                    yMMM: "y MMM",
                    yMMMd: "y MMM d",
                    yMMMEd: "y MMM d, E",
                    yMMMM: "y MMMM",
                    yQQQ: "y QQQ",
                    yQQQQ: "y QQQQ"
                }
            },
            datePartsOrder: "ymd",
            dayNames: {
                format: {
                    abbreviated: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
                    narrow: [ "S", "M", "T", "W", "T", "F", "S" ],
                    wide: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
                    short: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ]
                },
                standAlone: {
                    abbreviated: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
                    narrow: [ "S", "M", "T", "W", "T", "F", "S" ],
                    wide: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
                    short: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ]
                }
            },
            dayPeriods: {
                format: {
                    abbreviated: {
                        am: "AM",
                        pm: "PM"
                    },
                    narrow: {
                        am: "AM",
                        pm: "PM"
                    },
                    wide: {
                        am: "AM",
                        pm: "PM"
                    }
                },
                standAlone: {
                    abbreviated: {
                        am: "AM",
                        pm: "PM"
                    },
                    narrow: {
                        am: "AM",
                        pm: "PM"
                    },
                    wide: {
                        am: "AM",
                        pm: "PM"
                    }
                }
            },
            monthNames: {
                format: {
                    abbreviated: [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ],
                    narrow: [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ],
                    wide: [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ]
                },
                standAlone: {
                    abbreviated: [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ],
                    narrow: [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ],
                    wide: [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ]
                }
            },
            eraNames: {
                wide: [ "BCE", "CE" ],
                abbreviated: [ "BCE", "CE" ]
            },
            quarterNames: {
                format: {
                    abbreviated: [ "Q1", "Q2", "Q3", "Q4" ],
                    narrow: [ "1", "2", "3", "4" ],
                    wide: [ "Q1", "Q2", "Q3", "Q4" ]
                },
                standAlone: {
                    abbreviated: [ "Q1", "Q2", "Q3", "Q4" ],
                    narrow: [ "1", "2", "3", "4" ],
                    wide: [ "Q1", "Q2", "Q3", "Q4" ]
                }
            }
        }
    }, inter.pluralRule = function(n) {
        return "other";
    }, inter.timeZones = [ {
        id: "Pacific/Midway",
        utcStandardOffsetSeconds: -39600,
        displayName: "Midway",
        countryId: "UM"
    }, {
        id: "Pacific/Niue",
        regionId: "061",
        utcStandardOffsetSeconds: -39600,
        displayName: "Niue",
        countryId: "NU"
    }, {
        id: "Pacific/Pago_Pago",
        regionId: "061",
        utcStandardOffsetSeconds: -39600,
        displayName: "Pago Pago",
        countryId: "AS"
    }, {
        id: "America/Adak",
        regionId: "021",
        utcStandardOffsetSeconds: -36e3,
        displayName: "Adak",
        countryId: "US"
    }, {
        id: "Pacific/Honolulu",
        regionId: "021",
        utcStandardOffsetSeconds: -36e3,
        displayName: "Honolulu",
        countryId: "US"
    }, {
        id: "Pacific/Rarotonga",
        regionId: "061",
        utcStandardOffsetSeconds: -36e3,
        displayName: "Rarotonga",
        countryId: "CK"
    }, {
        id: "Pacific/Tahiti",
        regionId: "061",
        utcStandardOffsetSeconds: -36e3,
        displayName: "Tahiti",
        countryId: "PF"
    }, {
        id: "Pacific/Marquesas",
        regionId: "061",
        utcStandardOffsetSeconds: -34200,
        displayName: "Marquesas",
        countryId: "PF"
    }, {
        id: "America/Anchorage",
        regionId: "021",
        utcStandardOffsetSeconds: -32400,
        displayName: "Anchorage",
        countryId: "US"
    }, {
        id: "Pacific/Gambier",
        regionId: "061",
        utcStandardOffsetSeconds: -32400,
        displayName: "Gambier",
        countryId: "PF"
    }, {
        id: "America/Juneau",
        regionId: "021",
        utcStandardOffsetSeconds: -32400,
        displayName: "Juneau",
        countryId: "US"
    }, {
        id: "America/Metlakatla",
        regionId: "021",
        utcStandardOffsetSeconds: -32400,
        displayName: "Metlakatla",
        countryId: "US"
    }, {
        id: "America/Nome",
        regionId: "021",
        utcStandardOffsetSeconds: -32400,
        displayName: "Nome",
        countryId: "US"
    }, {
        id: "America/Sitka",
        regionId: "021",
        utcStandardOffsetSeconds: -32400,
        displayName: "Sitka",
        countryId: "US"
    }, {
        id: "America/Yakutat",
        regionId: "021",
        utcStandardOffsetSeconds: -32400,
        displayName: "Yakutat",
        countryId: "US"
    }, {
        id: "America/Dawson",
        regionId: "021",
        utcStandardOffsetSeconds: -28800,
        displayName: "Dawson",
        countryId: "CA"
    }, {
        id: "America/Los_Angeles",
        regionId: "021",
        utcStandardOffsetSeconds: -28800,
        displayName: "Los Angeles",
        countryId: "US"
    }, {
        id: "Pacific/Pitcairn",
        regionId: "061",
        utcStandardOffsetSeconds: -28800,
        displayName: "Pitcairn",
        countryId: "PN"
    }, {
        id: "America/Tijuana",
        regionId: "013",
        utcStandardOffsetSeconds: -28800,
        displayName: "Tijuana",
        countryId: "MX"
    }, {
        id: "America/Vancouver",
        regionId: "021",
        utcStandardOffsetSeconds: -28800,
        displayName: "Vancouver",
        countryId: "CA"
    }, {
        id: "America/Whitehorse",
        regionId: "021",
        utcStandardOffsetSeconds: -28800,
        displayName: "Whitehorse",
        countryId: "CA"
    }, {
        id: "America/Boise",
        regionId: "021",
        utcStandardOffsetSeconds: -25200,
        displayName: "Boise",
        countryId: "US"
    }, {
        id: "America/Cambridge_Bay",
        regionId: "021",
        utcStandardOffsetSeconds: -25200,
        displayName: "Cambridge Bay",
        countryId: "CA"
    }, {
        id: "America/Chihuahua",
        regionId: "013",
        utcStandardOffsetSeconds: -25200,
        displayName: "Chihuahua",
        countryId: "MX"
    }, {
        id: "America/Creston",
        regionId: "021",
        utcStandardOffsetSeconds: -25200,
        displayName: "Creston",
        countryId: "CA"
    }, {
        id: "America/Dawson_Creek",
        regionId: "021",
        utcStandardOffsetSeconds: -25200,
        displayName: "Dawson Creek",
        countryId: "CA"
    }, {
        id: "America/Denver",
        regionId: "021",
        utcStandardOffsetSeconds: -25200,
        displayName: "Denver",
        countryId: "US"
    }, {
        id: "America/Edmonton",
        regionId: "021",
        utcStandardOffsetSeconds: -25200,
        displayName: "Edmonton",
        countryId: "CA"
    }, {
        id: "America/Fort_Nelson",
        regionId: "021",
        utcStandardOffsetSeconds: -25200,
        displayName: "Fort Nelson",
        countryId: "CA"
    }, {
        id: "America/Hermosillo",
        regionId: "013",
        utcStandardOffsetSeconds: -25200,
        displayName: "Hermosillo",
        countryId: "MX"
    }, {
        id: "America/Inuvik",
        regionId: "021",
        utcStandardOffsetSeconds: -25200,
        displayName: "Inuvik",
        countryId: "CA"
    }, {
        id: "America/Mazatlan",
        regionId: "013",
        utcStandardOffsetSeconds: -25200,
        displayName: "Mazatlan",
        countryId: "MX"
    }, {
        id: "America/Ojinaga",
        regionId: "013",
        utcStandardOffsetSeconds: -25200,
        displayName: "Ojinaga",
        countryId: "MX"
    }, {
        id: "America/Phoenix",
        regionId: "021",
        utcStandardOffsetSeconds: -25200,
        displayName: "Phoenix",
        countryId: "US"
    }, {
        id: "America/Yellowknife",
        regionId: "021",
        utcStandardOffsetSeconds: -25200,
        displayName: "Yellowknife",
        countryId: "CA"
    }, {
        id: "America/Bahia_Banderas",
        regionId: "013",
        utcStandardOffsetSeconds: -21600,
        displayName: "Bahia Banderas",
        countryId: "MX"
    }, {
        id: "America/Belize",
        regionId: "013",
        utcStandardOffsetSeconds: -21600,
        displayName: "Belize",
        countryId: "BZ"
    }, {
        id: "America/North_Dakota/Beulah",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Beulah, North Dakota",
        countryId: "US"
    }, {
        id: "America/North_Dakota/Center",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Center, North Dakota",
        countryId: "US"
    }, {
        id: "America/Chicago",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Chicago",
        countryId: "US"
    }, {
        id: "America/Costa_Rica",
        regionId: "013",
        utcStandardOffsetSeconds: -21600,
        displayName: "Costa Rica",
        countryId: "CR"
    }, {
        id: "Pacific/Easter",
        regionId: "005",
        utcStandardOffsetSeconds: -21600,
        displayName: "Easter",
        countryId: "CL"
    }, {
        id: "America/El_Salvador",
        regionId: "013",
        utcStandardOffsetSeconds: -21600,
        displayName: "El Salvador",
        countryId: "SV"
    }, {
        id: "Pacific/Galapagos",
        regionId: "005",
        utcStandardOffsetSeconds: -21600,
        displayName: "Galapagos",
        countryId: "EC"
    }, {
        id: "America/Guatemala",
        regionId: "013",
        utcStandardOffsetSeconds: -21600,
        displayName: "Guatemala",
        countryId: "GT"
    }, {
        id: "America/Indiana/Knox",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Knox, Indiana",
        countryId: "US"
    }, {
        id: "America/Managua",
        regionId: "013",
        utcStandardOffsetSeconds: -21600,
        displayName: "Managua",
        countryId: "NI"
    }, {
        id: "America/Matamoros",
        regionId: "013",
        utcStandardOffsetSeconds: -21600,
        displayName: "Matamoros",
        countryId: "MX"
    }, {
        id: "America/Menominee",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Menominee",
        countryId: "US"
    }, {
        id: "America/Merida",
        regionId: "013",
        utcStandardOffsetSeconds: -21600,
        displayName: "Merida",
        countryId: "MX"
    }, {
        id: "America/Mexico_City",
        regionId: "013",
        utcStandardOffsetSeconds: -21600,
        displayName: "Mexico City",
        countryId: "MX"
    }, {
        id: "America/Monterrey",
        regionId: "013",
        utcStandardOffsetSeconds: -21600,
        displayName: "Monterrey",
        countryId: "MX"
    }, {
        id: "America/North_Dakota/New_Salem",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "New Salem, North Dakota",
        countryId: "US"
    }, {
        id: "America/Rainy_River",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Rainy River",
        countryId: "CA"
    }, {
        id: "America/Rankin_Inlet",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Rankin Inlet",
        countryId: "CA"
    }, {
        id: "America/Regina",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Regina",
        countryId: "CA"
    }, {
        id: "America/Resolute",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Resolute",
        countryId: "CA"
    }, {
        id: "America/Swift_Current",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Swift Current",
        countryId: "CA"
    }, {
        id: "America/Tegucigalpa",
        regionId: "013",
        utcStandardOffsetSeconds: -21600,
        displayName: "Tegucigalpa",
        countryId: "HN"
    }, {
        id: "America/Indiana/Tell_City",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Tell City, Indiana",
        countryId: "US"
    }, {
        id: "America/Winnipeg",
        regionId: "021",
        utcStandardOffsetSeconds: -21600,
        displayName: "Winnipeg",
        countryId: "CA"
    }, {
        id: "America/Atikokan",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Atikokan",
        countryId: "CA"
    }, {
        id: "America/Bogota",
        regionId: "005",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Bogota",
        countryId: "CO"
    }, {
        id: "America/Cancun",
        regionId: "013",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Cancun",
        countryId: "MX"
    }, {
        id: "America/Cayman",
        regionId: "029",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Cayman",
        countryId: "KY"
    }, {
        id: "America/Detroit",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Detroit",
        countryId: "US"
    }, {
        id: "America/Eirunepe",
        regionId: "005",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Eirunepe",
        countryId: "BR"
    }, {
        id: "America/Guayaquil",
        regionId: "005",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Guayaquil",
        countryId: "EC"
    }, {
        id: "America/Havana",
        regionId: "029",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Havana",
        countryId: "CU"
    }, {
        id: "America/Indiana/Indianapolis",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Indianapolis",
        countryId: "US"
    }, {
        id: "America/Iqaluit",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Iqaluit",
        countryId: "CA"
    }, {
        id: "America/Jamaica",
        regionId: "029",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Jamaica",
        countryId: "JM"
    }, {
        id: "America/Lima",
        regionId: "005",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Lima",
        countryId: "PE"
    }, {
        id: "America/Kentucky/Louisville",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Louisville",
        countryId: "US"
    }, {
        id: "America/Indiana/Marengo",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Marengo, Indiana",
        countryId: "US"
    }, {
        id: "America/Kentucky/Monticello",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Monticello, Kentucky",
        countryId: "US"
    }, {
        id: "America/Nassau",
        regionId: "029",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Nassau",
        countryId: "BS"
    }, {
        id: "America/New_York",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "New York",
        countryId: "US"
    }, {
        id: "America/Nipigon",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Nipigon",
        countryId: "CA"
    }, {
        id: "America/Panama",
        regionId: "013",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Panama",
        countryId: "PA"
    }, {
        id: "America/Pangnirtung",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Pangnirtung",
        countryId: "CA"
    }, {
        id: "America/Indiana/Petersburg",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Petersburg, Indiana",
        countryId: "US"
    }, {
        id: "America/Port-au-Prince",
        regionId: "029",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Port-au-Prince",
        countryId: "HT"
    }, {
        id: "America/Rio_Branco",
        regionId: "005",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Rio Branco",
        countryId: "BR"
    }, {
        id: "America/Thunder_Bay",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Thunder Bay",
        countryId: "CA"
    }, {
        id: "America/Toronto",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Toronto",
        countryId: "CA"
    }, {
        id: "America/Indiana/Vevay",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Vevay, Indiana",
        countryId: "US"
    }, {
        id: "America/Indiana/Vincennes",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Vincennes, Indiana",
        countryId: "US"
    }, {
        id: "America/Indiana/Winamac",
        regionId: "021",
        utcStandardOffsetSeconds: -18e3,
        displayName: "Winamac, Indiana",
        countryId: "US"
    }, {
        id: "America/Anguilla",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Anguilla",
        countryId: "AI"
    }, {
        id: "America/Antigua",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Antigua",
        countryId: "AG"
    }, {
        id: "America/Aruba",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Aruba",
        countryId: "AW"
    }, {
        id: "America/Asuncion",
        regionId: "005",
        utcStandardOffsetSeconds: -14400,
        displayName: "Asuncion",
        countryId: "PY"
    }, {
        id: "America/Barbados",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Barbados",
        countryId: "BB"
    }, {
        id: "Atlantic/Bermuda",
        regionId: "021",
        utcStandardOffsetSeconds: -14400,
        displayName: "Bermuda",
        countryId: "BM"
    }, {
        id: "America/Blanc-Sablon",
        regionId: "021",
        utcStandardOffsetSeconds: -14400,
        displayName: "Blanc-Sablon",
        countryId: "CA"
    }, {
        id: "America/Boa_Vista",
        regionId: "005",
        utcStandardOffsetSeconds: -14400,
        displayName: "Boa Vista",
        countryId: "BR"
    }, {
        id: "America/Campo_Grande",
        regionId: "005",
        utcStandardOffsetSeconds: -14400,
        displayName: "Campo Grande",
        countryId: "BR"
    }, {
        id: "America/Caracas",
        regionId: "005",
        utcStandardOffsetSeconds: -14400,
        displayName: "Caracas",
        countryId: "VE"
    }, {
        id: "America/Cuiaba",
        regionId: "005",
        utcStandardOffsetSeconds: -14400,
        displayName: "Cuiaba",
        countryId: "BR"
    }, {
        id: "America/Curacao",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Curacao",
        countryId: "CW"
    }, {
        id: "America/Dominica",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Dominica",
        countryId: "DM"
    }, {
        id: "America/Glace_Bay",
        regionId: "021",
        utcStandardOffsetSeconds: -14400,
        displayName: "Glace Bay",
        countryId: "CA"
    }, {
        id: "America/Goose_Bay",
        regionId: "021",
        utcStandardOffsetSeconds: -14400,
        displayName: "Goose Bay",
        countryId: "CA"
    }, {
        id: "America/Grand_Turk",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Grand Turk",
        countryId: "TC"
    }, {
        id: "America/Grenada",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Grenada",
        countryId: "GD"
    }, {
        id: "America/Guadeloupe",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Guadeloupe",
        countryId: "GP"
    }, {
        id: "America/Guyana",
        regionId: "005",
        utcStandardOffsetSeconds: -14400,
        displayName: "Guyana",
        countryId: "GY"
    }, {
        id: "America/Halifax",
        regionId: "021",
        utcStandardOffsetSeconds: -14400,
        displayName: "Halifax",
        countryId: "CA"
    }, {
        id: "America/Kralendijk",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Kralendijk",
        countryId: "BQ"
    }, {
        id: "America/La_Paz",
        regionId: "005",
        utcStandardOffsetSeconds: -14400,
        displayName: "La Paz",
        countryId: "BO"
    }, {
        id: "America/Lower_Princes",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Lower Prince’s Quarter",
        countryId: "SX"
    }, {
        id: "America/Manaus",
        regionId: "005",
        utcStandardOffsetSeconds: -14400,
        displayName: "Manaus",
        countryId: "BR"
    }, {
        id: "America/Marigot",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Marigot",
        countryId: "MF"
    }, {
        id: "America/Martinique",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Martinique",
        countryId: "MQ"
    }, {
        id: "America/Moncton",
        regionId: "021",
        utcStandardOffsetSeconds: -14400,
        displayName: "Moncton",
        countryId: "CA"
    }, {
        id: "America/Montserrat",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Montserrat",
        countryId: "MS"
    }, {
        id: "America/Port_of_Spain",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Port of Spain",
        countryId: "TT"
    }, {
        id: "America/Porto_Velho",
        regionId: "005",
        utcStandardOffsetSeconds: -14400,
        displayName: "Porto Velho",
        countryId: "BR"
    }, {
        id: "America/Puerto_Rico",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Puerto Rico",
        countryId: "PR"
    }, {
        id: "America/Santiago",
        regionId: "005",
        utcStandardOffsetSeconds: -14400,
        displayName: "Santiago",
        countryId: "CL"
    }, {
        id: "America/Santo_Domingo",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Santo Domingo",
        countryId: "DO"
    }, {
        id: "America/St_Barthelemy",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "St. Barthelemy",
        countryId: "BL"
    }, {
        id: "America/St_Kitts",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "St. Kitts",
        countryId: "KN"
    }, {
        id: "America/St_Lucia",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "St. Lucia",
        countryId: "LC"
    }, {
        id: "America/St_Thomas",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "St. Thomas",
        countryId: "VI"
    }, {
        id: "America/St_Vincent",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "St. Vincent",
        countryId: "VC"
    }, {
        id: "America/Thule",
        regionId: "021",
        utcStandardOffsetSeconds: -14400,
        displayName: "Thule",
        countryId: "GL"
    }, {
        id: "America/Tortola",
        regionId: "029",
        utcStandardOffsetSeconds: -14400,
        displayName: "Tortola",
        countryId: "VG"
    }, {
        id: "America/St_Johns",
        regionId: "021",
        utcStandardOffsetSeconds: -12600,
        displayName: "St. John’s",
        countryId: "CA"
    }, {
        id: "America/Araguaina",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Araguaina",
        countryId: "BR"
    }, {
        id: "America/Bahia",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Bahia",
        countryId: "BR"
    }, {
        id: "America/Belem",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Belem",
        countryId: "BR"
    }, {
        id: "America/Argentina/Buenos_Aires",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Buenos Aires",
        countryId: "AR"
    }, {
        id: "America/Argentina/Catamarca",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Catamarca",
        countryId: "AR"
    }, {
        id: "America/Cayenne",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Cayenne",
        countryId: "GF"
    }, {
        id: "America/Argentina/Cordoba",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Cordoba",
        countryId: "AR"
    }, {
        id: "America/Fortaleza",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Fortaleza",
        countryId: "BR"
    }, {
        id: "America/Argentina/Jujuy",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Jujuy",
        countryId: "AR"
    }, {
        id: "America/Argentina/La_Rioja",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "La Rioja",
        countryId: "AR"
    }, {
        id: "America/Maceio",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Maceio",
        countryId: "BR"
    }, {
        id: "America/Argentina/Mendoza",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Mendoza",
        countryId: "AR"
    }, {
        id: "America/Miquelon",
        regionId: "021",
        utcStandardOffsetSeconds: -10800,
        displayName: "Miquelon",
        countryId: "PM"
    }, {
        id: "America/Montevideo",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Montevideo",
        countryId: "UY"
    }, {
        id: "America/Godthab",
        regionId: "021",
        utcStandardOffsetSeconds: -10800,
        displayName: "Nuuk",
        countryId: "GL"
    }, {
        id: "Antarctica/Palmer",
        utcStandardOffsetSeconds: -10800,
        displayName: "Palmer",
        countryId: "AQ"
    }, {
        id: "America/Paramaribo",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Paramaribo",
        countryId: "SR"
    }, {
        id: "America/Punta_Arenas",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Punta Arenas",
        countryId: "CL"
    }, {
        id: "America/Recife",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Recife",
        countryId: "BR"
    }, {
        id: "America/Argentina/Rio_Gallegos",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Rio Gallegos",
        countryId: "AR"
    }, {
        id: "Antarctica/Rothera",
        utcStandardOffsetSeconds: -10800,
        displayName: "Rothera",
        countryId: "AQ"
    }, {
        id: "America/Argentina/Salta",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Salta",
        countryId: "AR"
    }, {
        id: "America/Argentina/San_Juan",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "San Juan",
        countryId: "AR"
    }, {
        id: "America/Argentina/San_Luis",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "San Luis",
        countryId: "AR"
    }, {
        id: "America/Santarem",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Santarem",
        countryId: "BR"
    }, {
        id: "America/Sao_Paulo",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Sao Paulo",
        countryId: "BR"
    }, {
        id: "Atlantic/Stanley",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Stanley",
        countryId: "FK"
    }, {
        id: "America/Argentina/Tucuman",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Tucuman",
        countryId: "AR"
    }, {
        id: "America/Argentina/Ushuaia",
        regionId: "005",
        utcStandardOffsetSeconds: -10800,
        displayName: "Ushuaia",
        countryId: "AR"
    }, {
        id: "America/Noronha",
        regionId: "005",
        utcStandardOffsetSeconds: -7200,
        displayName: "Noronha",
        countryId: "BR"
    }, {
        id: "Atlantic/South_Georgia",
        utcStandardOffsetSeconds: -7200,
        displayName: "South Georgia",
        countryId: "GS"
    }, {
        id: "Atlantic/Azores",
        regionId: "039",
        utcStandardOffsetSeconds: -3600,
        displayName: "Azores",
        countryId: "PT"
    }, {
        id: "Atlantic/Cape_Verde",
        regionId: "011",
        utcStandardOffsetSeconds: -3600,
        displayName: "Cape Verde",
        countryId: "CV"
    }, {
        id: "America/Scoresbysund",
        regionId: "021",
        utcStandardOffsetSeconds: -3600,
        displayName: "Ittoqqortoormiit",
        countryId: "GL"
    }, {
        id: "Africa/Abidjan",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Abidjan",
        countryId: "CI"
    }, {
        id: "Africa/Accra",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Accra",
        countryId: "GH"
    }, {
        id: "Africa/Bamako",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Bamako",
        countryId: "ML"
    }, {
        id: "Africa/Banjul",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Banjul",
        countryId: "GM"
    }, {
        id: "Africa/Bissau",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Bissau",
        countryId: "GW"
    }, {
        id: "Atlantic/Canary",
        regionId: "039",
        utcStandardOffsetSeconds: 0,
        displayName: "Canary",
        countryId: "ES"
    }, {
        id: "Africa/Casablanca",
        regionId: "015",
        utcStandardOffsetSeconds: 0,
        displayName: "Casablanca",
        countryId: "MA"
    }, {
        id: "Africa/Conakry",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Conakry",
        countryId: "GN"
    }, {
        id: "Africa/Dakar",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Dakar",
        countryId: "SN"
    }, {
        id: "America/Danmarkshavn",
        regionId: "021",
        utcStandardOffsetSeconds: 0,
        displayName: "Danmarkshavn",
        countryId: "GL"
    }, {
        id: "Europe/Dublin",
        regionId: "154",
        utcStandardOffsetSeconds: 0,
        displayName: "Dublin",
        countryId: "IE"
    }, {
        id: "Africa/El_Aaiun",
        regionId: "015",
        utcStandardOffsetSeconds: 0,
        displayName: "El Aaiun",
        countryId: "EH"
    }, {
        id: "Atlantic/Faroe",
        regionId: "154",
        utcStandardOffsetSeconds: 0,
        displayName: "Faroe",
        countryId: "FO"
    }, {
        id: "Africa/Freetown",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Freetown",
        countryId: "SL"
    }, {
        id: "Europe/Guernsey",
        regionId: "154",
        utcStandardOffsetSeconds: 0,
        displayName: "Guernsey",
        countryId: "GG"
    }, {
        id: "Europe/Isle_of_Man",
        regionId: "154",
        utcStandardOffsetSeconds: 0,
        displayName: "Isle of Man",
        countryId: "IM"
    }, {
        id: "Europe/Jersey",
        regionId: "154",
        utcStandardOffsetSeconds: 0,
        displayName: "Jersey",
        countryId: "JE"
    }, {
        id: "Europe/Lisbon",
        regionId: "039",
        utcStandardOffsetSeconds: 0,
        displayName: "Lisbon",
        countryId: "PT"
    }, {
        id: "Africa/Lome",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Lome",
        countryId: "TG"
    }, {
        id: "Europe/London",
        regionId: "154",
        utcStandardOffsetSeconds: 0,
        displayName: "London",
        countryId: "GB"
    }, {
        id: "Atlantic/Madeira",
        regionId: "039",
        utcStandardOffsetSeconds: 0,
        displayName: "Madeira",
        countryId: "PT"
    }, {
        id: "Africa/Monrovia",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Monrovia",
        countryId: "LR"
    }, {
        id: "Africa/Nouakchott",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Nouakchott",
        countryId: "MR"
    }, {
        id: "Africa/Ouagadougou",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "Ouagadougou",
        countryId: "BF"
    }, {
        id: "Atlantic/Reykjavik",
        regionId: "154",
        utcStandardOffsetSeconds: 0,
        displayName: "Reykjavik",
        countryId: "IS"
    }, {
        id: "Africa/Sao_Tome",
        regionId: "017",
        utcStandardOffsetSeconds: 0,
        displayName: "Sao Tome",
        countryId: "ST"
    }, {
        id: "Atlantic/St_Helena",
        regionId: "011",
        utcStandardOffsetSeconds: 0,
        displayName: "St. Helena",
        countryId: "SH"
    }, {
        id: "Antarctica/Troll",
        utcStandardOffsetSeconds: 0,
        displayName: "Troll",
        countryId: "AQ"
    }, {
        id: "Africa/Algiers",
        regionId: "015",
        utcStandardOffsetSeconds: 3600,
        displayName: "Algiers",
        countryId: "DZ"
    }, {
        id: "Europe/Amsterdam",
        regionId: "155",
        utcStandardOffsetSeconds: 3600,
        displayName: "Amsterdam",
        countryId: "NL"
    }, {
        id: "Europe/Andorra",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Andorra",
        countryId: "AD"
    }, {
        id: "Africa/Bangui",
        regionId: "017",
        utcStandardOffsetSeconds: 3600,
        displayName: "Bangui",
        countryId: "CF"
    }, {
        id: "Europe/Belgrade",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Belgrade",
        countryId: "RS"
    }, {
        id: "Europe/Berlin",
        regionId: "155",
        utcStandardOffsetSeconds: 3600,
        displayName: "Berlin",
        countryId: "DE"
    }, {
        id: "Europe/Bratislava",
        regionId: "151",
        utcStandardOffsetSeconds: 3600,
        displayName: "Bratislava",
        countryId: "SK"
    }, {
        id: "Africa/Brazzaville",
        regionId: "017",
        utcStandardOffsetSeconds: 3600,
        displayName: "Brazzaville",
        countryId: "CG"
    }, {
        id: "Europe/Brussels",
        regionId: "155",
        utcStandardOffsetSeconds: 3600,
        displayName: "Brussels",
        countryId: "BE"
    }, {
        id: "Europe/Budapest",
        regionId: "151",
        utcStandardOffsetSeconds: 3600,
        displayName: "Budapest",
        countryId: "HU"
    }, {
        id: "Europe/Busingen",
        regionId: "155",
        utcStandardOffsetSeconds: 3600,
        displayName: "Busingen",
        countryId: "DE"
    }, {
        id: "Africa/Ceuta",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Ceuta",
        countryId: "ES"
    }, {
        id: "Europe/Copenhagen",
        regionId: "154",
        utcStandardOffsetSeconds: 3600,
        displayName: "Copenhagen",
        countryId: "DK"
    }, {
        id: "Africa/Douala",
        regionId: "017",
        utcStandardOffsetSeconds: 3600,
        displayName: "Douala",
        countryId: "CM"
    }, {
        id: "Europe/Gibraltar",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Gibraltar",
        countryId: "GI"
    }, {
        id: "Africa/Kinshasa",
        regionId: "017",
        utcStandardOffsetSeconds: 3600,
        displayName: "Kinshasa",
        countryId: "CD"
    }, {
        id: "Africa/Lagos",
        regionId: "011",
        utcStandardOffsetSeconds: 3600,
        displayName: "Lagos",
        countryId: "NG"
    }, {
        id: "Africa/Libreville",
        regionId: "017",
        utcStandardOffsetSeconds: 3600,
        displayName: "Libreville",
        countryId: "GA"
    }, {
        id: "Europe/Ljubljana",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Ljubljana",
        countryId: "SI"
    }, {
        id: "Arctic/Longyearbyen",
        regionId: "154",
        utcStandardOffsetSeconds: 3600,
        displayName: "Longyearbyen",
        countryId: "SJ"
    }, {
        id: "Africa/Luanda",
        regionId: "017",
        utcStandardOffsetSeconds: 3600,
        displayName: "Luanda",
        countryId: "AO"
    }, {
        id: "Europe/Luxembourg",
        regionId: "155",
        utcStandardOffsetSeconds: 3600,
        displayName: "Luxembourg",
        countryId: "LU"
    }, {
        id: "Europe/Madrid",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Madrid",
        countryId: "ES"
    }, {
        id: "Africa/Malabo",
        regionId: "017",
        utcStandardOffsetSeconds: 3600,
        displayName: "Malabo",
        countryId: "GQ"
    }, {
        id: "Europe/Malta",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Malta",
        countryId: "MT"
    }, {
        id: "Europe/Monaco",
        regionId: "155",
        utcStandardOffsetSeconds: 3600,
        displayName: "Monaco",
        countryId: "MC"
    }, {
        id: "Africa/Ndjamena",
        regionId: "017",
        utcStandardOffsetSeconds: 3600,
        displayName: "Ndjamena",
        countryId: "TD"
    }, {
        id: "Africa/Niamey",
        regionId: "011",
        utcStandardOffsetSeconds: 3600,
        displayName: "Niamey",
        countryId: "NE"
    }, {
        id: "Europe/Oslo",
        regionId: "154",
        utcStandardOffsetSeconds: 3600,
        displayName: "Oslo",
        countryId: "NO"
    }, {
        id: "Europe/Paris",
        regionId: "155",
        utcStandardOffsetSeconds: 3600,
        displayName: "Paris",
        countryId: "FR"
    }, {
        id: "Europe/Podgorica",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Podgorica",
        countryId: "ME"
    }, {
        id: "Africa/Porto-Novo",
        regionId: "011",
        utcStandardOffsetSeconds: 3600,
        displayName: "Porto-Novo",
        countryId: "BJ"
    }, {
        id: "Europe/Prague",
        regionId: "151",
        utcStandardOffsetSeconds: 3600,
        displayName: "Prague",
        countryId: "CZ"
    }, {
        id: "Europe/Rome",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Rome",
        countryId: "IT"
    }, {
        id: "Europe/San_Marino",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "San Marino",
        countryId: "SM"
    }, {
        id: "Europe/Sarajevo",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Sarajevo",
        countryId: "BA"
    }, {
        id: "Europe/Skopje",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Skopje",
        countryId: "MK"
    }, {
        id: "Europe/Stockholm",
        regionId: "154",
        utcStandardOffsetSeconds: 3600,
        displayName: "Stockholm",
        countryId: "SE"
    }, {
        id: "Europe/Tirane",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Tirane",
        countryId: "AL"
    }, {
        id: "Africa/Tunis",
        regionId: "015",
        utcStandardOffsetSeconds: 3600,
        displayName: "Tunis",
        countryId: "TN"
    }, {
        id: "Europe/Vaduz",
        regionId: "155",
        utcStandardOffsetSeconds: 3600,
        displayName: "Vaduz",
        countryId: "LI"
    }, {
        id: "Europe/Vatican",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Vatican",
        countryId: "VA"
    }, {
        id: "Europe/Vienna",
        regionId: "155",
        utcStandardOffsetSeconds: 3600,
        displayName: "Vienna",
        countryId: "AT"
    }, {
        id: "Europe/Warsaw",
        regionId: "151",
        utcStandardOffsetSeconds: 3600,
        displayName: "Warsaw",
        countryId: "PL"
    }, {
        id: "Africa/Windhoek",
        regionId: "018",
        utcStandardOffsetSeconds: 3600,
        displayName: "Windhoek",
        countryId: "NA"
    }, {
        id: "Europe/Zagreb",
        regionId: "039",
        utcStandardOffsetSeconds: 3600,
        displayName: "Zagreb",
        countryId: "HR"
    }, {
        id: "Europe/Zurich",
        regionId: "155",
        utcStandardOffsetSeconds: 3600,
        displayName: "Zurich",
        countryId: "CH"
    }, {
        id: "Asia/Amman",
        regionId: "145",
        utcStandardOffsetSeconds: 7200,
        displayName: "Amman",
        countryId: "JO"
    }, {
        id: "Europe/Athens",
        regionId: "039",
        utcStandardOffsetSeconds: 7200,
        displayName: "Athens",
        countryId: "GR"
    }, {
        id: "Asia/Beirut",
        regionId: "145",
        utcStandardOffsetSeconds: 7200,
        displayName: "Beirut",
        countryId: "LB"
    }, {
        id: "Africa/Blantyre",
        regionId: "014",
        utcStandardOffsetSeconds: 7200,
        displayName: "Blantyre",
        countryId: "MW"
    }, {
        id: "Europe/Bucharest",
        regionId: "151",
        utcStandardOffsetSeconds: 7200,
        displayName: "Bucharest",
        countryId: "RO"
    }, {
        id: "Africa/Bujumbura",
        regionId: "014",
        utcStandardOffsetSeconds: 7200,
        displayName: "Bujumbura",
        countryId: "BI"
    }, {
        id: "Africa/Cairo",
        regionId: "015",
        utcStandardOffsetSeconds: 7200,
        displayName: "Cairo",
        countryId: "EG"
    }, {
        id: "Europe/Chisinau",
        regionId: "151",
        utcStandardOffsetSeconds: 7200,
        displayName: "Chisinau",
        countryId: "MD"
    }, {
        id: "Asia/Damascus",
        regionId: "145",
        utcStandardOffsetSeconds: 7200,
        displayName: "Damascus",
        countryId: "SY"
    }, {
        id: "Africa/Gaborone",
        regionId: "018",
        utcStandardOffsetSeconds: 7200,
        displayName: "Gaborone",
        countryId: "BW"
    }, {
        id: "Asia/Gaza",
        regionId: "145",
        utcStandardOffsetSeconds: 7200,
        displayName: "Gaza",
        countryId: "PS"
    }, {
        id: "Africa/Harare",
        regionId: "014",
        utcStandardOffsetSeconds: 7200,
        displayName: "Harare",
        countryId: "ZW"
    }, {
        id: "Asia/Hebron",
        regionId: "145",
        utcStandardOffsetSeconds: 7200,
        displayName: "Hebron",
        countryId: "PS"
    }, {
        id: "Europe/Helsinki",
        regionId: "154",
        utcStandardOffsetSeconds: 7200,
        displayName: "Helsinki",
        countryId: "FI"
    }, {
        id: "Asia/Jerusalem",
        regionId: "145",
        utcStandardOffsetSeconds: 7200,
        displayName: "Jerusalem",
        countryId: "IL"
    }, {
        id: "Africa/Johannesburg",
        regionId: "018",
        utcStandardOffsetSeconds: 7200,
        displayName: "Johannesburg",
        countryId: "ZA"
    }, {
        id: "Europe/Kaliningrad",
        regionId: "151",
        utcStandardOffsetSeconds: 7200,
        displayName: "Kaliningrad",
        countryId: "RU"
    }, {
        id: "Europe/Kiev",
        regionId: "151",
        utcStandardOffsetSeconds: 7200,
        displayName: "Kiev",
        countryId: "UA"
    }, {
        id: "Africa/Kigali",
        regionId: "014",
        utcStandardOffsetSeconds: 7200,
        displayName: "Kigali",
        countryId: "RW"
    }, {
        id: "Africa/Lubumbashi",
        regionId: "017",
        utcStandardOffsetSeconds: 7200,
        displayName: "Lubumbashi",
        countryId: "CD"
    }, {
        id: "Africa/Lusaka",
        regionId: "014",
        utcStandardOffsetSeconds: 7200,
        displayName: "Lusaka",
        countryId: "ZM"
    }, {
        id: "Africa/Maputo",
        regionId: "014",
        utcStandardOffsetSeconds: 7200,
        displayName: "Maputo",
        countryId: "MZ"
    }, {
        id: "Europe/Mariehamn",
        regionId: "154",
        utcStandardOffsetSeconds: 7200,
        displayName: "Mariehamn",
        countryId: "AX"
    }, {
        id: "Africa/Maseru",
        regionId: "018",
        utcStandardOffsetSeconds: 7200,
        displayName: "Maseru",
        countryId: "LS"
    }, {
        id: "Africa/Mbabane",
        regionId: "018",
        utcStandardOffsetSeconds: 7200,
        displayName: "Mbabane",
        countryId: "SZ"
    }, {
        id: "Asia/Nicosia",
        regionId: "145",
        utcStandardOffsetSeconds: 7200,
        displayName: "Nicosia",
        countryId: "CY"
    }, {
        id: "Europe/Riga",
        regionId: "154",
        utcStandardOffsetSeconds: 7200,
        displayName: "Riga",
        countryId: "LV"
    }, {
        id: "Europe/Sofia",
        regionId: "151",
        utcStandardOffsetSeconds: 7200,
        displayName: "Sofia",
        countryId: "BG"
    }, {
        id: "Europe/Tallinn",
        regionId: "154",
        utcStandardOffsetSeconds: 7200,
        displayName: "Tallinn",
        countryId: "EE"
    }, {
        id: "Africa/Tripoli",
        regionId: "015",
        utcStandardOffsetSeconds: 7200,
        displayName: "Tripoli",
        countryId: "LY"
    }, {
        id: "Europe/Uzhgorod",
        regionId: "151",
        utcStandardOffsetSeconds: 7200,
        displayName: "Uzhgorod",
        countryId: "UA"
    }, {
        id: "Europe/Vilnius",
        regionId: "154",
        utcStandardOffsetSeconds: 7200,
        displayName: "Vilnius",
        countryId: "LT"
    }, {
        id: "Europe/Zaporozhye",
        regionId: "151",
        utcStandardOffsetSeconds: 7200,
        displayName: "Zaporozhye",
        countryId: "UA"
    }, {
        id: "Africa/Addis_Ababa",
        regionId: "014",
        utcStandardOffsetSeconds: 10800,
        displayName: "Addis Ababa",
        countryId: "ET"
    }, {
        id: "Asia/Aden",
        regionId: "145",
        utcStandardOffsetSeconds: 10800,
        displayName: "Aden",
        countryId: "YE"
    }, {
        id: "Indian/Antananarivo",
        regionId: "014",
        utcStandardOffsetSeconds: 10800,
        displayName: "Antananarivo",
        countryId: "MG"
    }, {
        id: "Africa/Asmara",
        regionId: "014",
        utcStandardOffsetSeconds: 10800,
        displayName: "Asmara",
        countryId: "ER"
    }, {
        id: "Asia/Baghdad",
        regionId: "145",
        utcStandardOffsetSeconds: 10800,
        displayName: "Baghdad",
        countryId: "IQ"
    }, {
        id: "Asia/Bahrain",
        regionId: "145",
        utcStandardOffsetSeconds: 10800,
        displayName: "Bahrain",
        countryId: "BH"
    }, {
        id: "Indian/Comoro",
        regionId: "014",
        utcStandardOffsetSeconds: 10800,
        displayName: "Comoro",
        countryId: "KM"
    }, {
        id: "Africa/Dar_es_Salaam",
        regionId: "014",
        utcStandardOffsetSeconds: 10800,
        displayName: "Dar es Salaam",
        countryId: "TZ"
    }, {
        id: "Africa/Djibouti",
        regionId: "014",
        utcStandardOffsetSeconds: 10800,
        displayName: "Djibouti",
        countryId: "DJ"
    }, {
        id: "Asia/Famagusta",
        regionId: "145",
        utcStandardOffsetSeconds: 10800,
        displayName: "Famagusta",
        countryId: "CY"
    }, {
        id: "Europe/Istanbul",
        regionId: "145",
        utcStandardOffsetSeconds: 10800,
        displayName: "Istanbul",
        countryId: "TR"
    }, {
        id: "Africa/Juba",
        regionId: "014",
        utcStandardOffsetSeconds: 10800,
        displayName: "Juba",
        countryId: "SS"
    }, {
        id: "Africa/Kampala",
        regionId: "014",
        utcStandardOffsetSeconds: 10800,
        displayName: "Kampala",
        countryId: "UG"
    }, {
        id: "Africa/Khartoum",
        regionId: "015",
        utcStandardOffsetSeconds: 10800,
        displayName: "Khartoum",
        countryId: "SD"
    }, {
        id: "Europe/Kirov",
        regionId: "151",
        utcStandardOffsetSeconds: 10800,
        displayName: "Kirov",
        countryId: "RU"
    }, {
        id: "Asia/Kuwait",
        regionId: "145",
        utcStandardOffsetSeconds: 10800,
        displayName: "Kuwait",
        countryId: "KW"
    }, {
        id: "Indian/Mayotte",
        regionId: "014",
        utcStandardOffsetSeconds: 10800,
        displayName: "Mayotte",
        countryId: "YT"
    }, {
        id: "Europe/Minsk",
        regionId: "151",
        utcStandardOffsetSeconds: 10800,
        displayName: "Minsk",
        countryId: "BY"
    }, {
        id: "Africa/Mogadishu",
        regionId: "014",
        utcStandardOffsetSeconds: 10800,
        displayName: "Mogadishu",
        countryId: "SO"
    }, {
        id: "Europe/Moscow",
        regionId: "151",
        utcStandardOffsetSeconds: 10800,
        displayName: "Moscow",
        countryId: "RU"
    }, {
        id: "Africa/Nairobi",
        regionId: "014",
        utcStandardOffsetSeconds: 10800,
        displayName: "Nairobi",
        countryId: "KE"
    }, {
        id: "Asia/Qatar",
        regionId: "145",
        utcStandardOffsetSeconds: 10800,
        displayName: "Qatar",
        countryId: "QA"
    }, {
        id: "Asia/Riyadh",
        regionId: "145",
        utcStandardOffsetSeconds: 10800,
        displayName: "Riyadh",
        countryId: "SA"
    }, {
        id: "Europe/Simferopol",
        regionId: "151",
        utcStandardOffsetSeconds: 10800,
        displayName: "Simferopol",
        countryId: "RU"
    }, {
        id: "Antarctica/Syowa",
        utcStandardOffsetSeconds: 10800,
        displayName: "Syowa",
        countryId: "AQ"
    }, {
        id: "Europe/Volgograd",
        regionId: "151",
        utcStandardOffsetSeconds: 10800,
        displayName: "Volgograd",
        countryId: "RU"
    }, {
        id: "Asia/Tehran",
        regionId: "034",
        utcStandardOffsetSeconds: 12600,
        displayName: "Tehran",
        countryId: "IR"
    }, {
        id: "Europe/Astrakhan",
        regionId: "151",
        utcStandardOffsetSeconds: 14400,
        displayName: "Astrakhan",
        countryId: "RU"
    }, {
        id: "Asia/Baku",
        regionId: "145",
        utcStandardOffsetSeconds: 14400,
        displayName: "Baku",
        countryId: "AZ"
    }, {
        id: "Asia/Dubai",
        regionId: "145",
        utcStandardOffsetSeconds: 14400,
        displayName: "Dubai",
        countryId: "AE"
    }, {
        id: "Indian/Mahe",
        regionId: "014",
        utcStandardOffsetSeconds: 14400,
        displayName: "Mahe",
        countryId: "SC"
    }, {
        id: "Indian/Mauritius",
        regionId: "014",
        utcStandardOffsetSeconds: 14400,
        displayName: "Mauritius",
        countryId: "MU"
    }, {
        id: "Asia/Muscat",
        regionId: "145",
        utcStandardOffsetSeconds: 14400,
        displayName: "Muscat",
        countryId: "OM"
    }, {
        id: "Indian/Reunion",
        regionId: "014",
        utcStandardOffsetSeconds: 14400,
        displayName: "Reunion",
        countryId: "RE"
    }, {
        id: "Europe/Samara",
        regionId: "151",
        utcStandardOffsetSeconds: 14400,
        displayName: "Samara",
        countryId: "RU"
    }, {
        id: "Europe/Saratov",
        regionId: "151",
        utcStandardOffsetSeconds: 14400,
        displayName: "Saratov",
        countryId: "RU"
    }, {
        id: "Asia/Tbilisi",
        regionId: "145",
        utcStandardOffsetSeconds: 14400,
        displayName: "Tbilisi",
        countryId: "GE"
    }, {
        id: "Europe/Ulyanovsk",
        regionId: "151",
        utcStandardOffsetSeconds: 14400,
        displayName: "Ulyanovsk",
        countryId: "RU"
    }, {
        id: "Asia/Yerevan",
        regionId: "145",
        utcStandardOffsetSeconds: 14400,
        displayName: "Yerevan",
        countryId: "AM"
    }, {
        id: "Asia/Kabul",
        regionId: "034",
        utcStandardOffsetSeconds: 16200,
        displayName: "Kabul",
        countryId: "AF"
    }, {
        id: "Asia/Aqtau",
        regionId: "143",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Aqtau",
        countryId: "KZ"
    }, {
        id: "Asia/Aqtobe",
        regionId: "143",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Aqtobe",
        countryId: "KZ"
    }, {
        id: "Asia/Ashgabat",
        regionId: "143",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Ashgabat",
        countryId: "TM"
    }, {
        id: "Asia/Atyrau",
        regionId: "143",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Atyrau",
        countryId: "KZ"
    }, {
        id: "Asia/Dushanbe",
        regionId: "143",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Dushanbe",
        countryId: "TJ"
    }, {
        id: "Asia/Karachi",
        regionId: "034",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Karachi",
        countryId: "PK"
    }, {
        id: "Indian/Kerguelen",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Kerguelen",
        countryId: "TF"
    }, {
        id: "Indian/Maldives",
        regionId: "034",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Maldives",
        countryId: "MV"
    }, {
        id: "Antarctica/Mawson",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Mawson",
        countryId: "AQ"
    }, {
        id: "Asia/Oral",
        regionId: "143",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Oral",
        countryId: "KZ"
    }, {
        id: "Asia/Samarkand",
        regionId: "143",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Samarkand",
        countryId: "UZ"
    }, {
        id: "Asia/Tashkent",
        regionId: "143",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Tashkent",
        countryId: "UZ"
    }, {
        id: "Asia/Yekaterinburg",
        regionId: "151",
        utcStandardOffsetSeconds: 18e3,
        displayName: "Yekaterinburg",
        countryId: "RU"
    }, {
        id: "Asia/Colombo",
        regionId: "034",
        utcStandardOffsetSeconds: 19800,
        displayName: "Colombo",
        countryId: "LK"
    }, {
        id: "Asia/Kolkata",
        regionId: "034",
        utcStandardOffsetSeconds: 19800,
        displayName: "Kolkata",
        countryId: "IN"
    }, {
        id: "Asia/Kathmandu",
        regionId: "034",
        utcStandardOffsetSeconds: 20700,
        displayName: "Kathmandu",
        countryId: "NP"
    }, {
        id: "Asia/Almaty",
        regionId: "143",
        utcStandardOffsetSeconds: 21600,
        displayName: "Almaty",
        countryId: "KZ"
    }, {
        id: "Asia/Bishkek",
        regionId: "143",
        utcStandardOffsetSeconds: 21600,
        displayName: "Bishkek",
        countryId: "KG"
    }, {
        id: "Indian/Chagos",
        utcStandardOffsetSeconds: 21600,
        displayName: "Chagos",
        countryId: "IO"
    }, {
        id: "Asia/Dhaka",
        regionId: "034",
        utcStandardOffsetSeconds: 21600,
        displayName: "Dhaka",
        countryId: "BD"
    }, {
        id: "Asia/Omsk",
        regionId: "151",
        utcStandardOffsetSeconds: 21600,
        displayName: "Omsk",
        countryId: "RU"
    }, {
        id: "Asia/Qyzylorda",
        regionId: "143",
        utcStandardOffsetSeconds: 21600,
        displayName: "Qyzylorda",
        countryId: "KZ"
    }, {
        id: "Asia/Thimphu",
        regionId: "034",
        utcStandardOffsetSeconds: 21600,
        displayName: "Thimphu",
        countryId: "BT"
    }, {
        id: "Asia/Urumqi",
        regionId: "030",
        utcStandardOffsetSeconds: 21600,
        displayName: "Urumqi",
        countryId: "CN"
    }, {
        id: "Antarctica/Vostok",
        utcStandardOffsetSeconds: 21600,
        displayName: "Vostok",
        countryId: "AQ"
    }, {
        id: "Indian/Cocos",
        utcStandardOffsetSeconds: 23400,
        displayName: "Cocos",
        countryId: "CC"
    }, {
        id: "Asia/Yangon",
        regionId: "035",
        utcStandardOffsetSeconds: 23400,
        displayName: "Yangon",
        countryId: "MM"
    }, {
        id: "Asia/Bangkok",
        regionId: "035",
        utcStandardOffsetSeconds: 25200,
        displayName: "Bangkok",
        countryId: "TH"
    }, {
        id: "Asia/Barnaul",
        regionId: "151",
        utcStandardOffsetSeconds: 25200,
        displayName: "Barnaul",
        countryId: "RU"
    }, {
        id: "Indian/Christmas",
        utcStandardOffsetSeconds: 25200,
        displayName: "Christmas",
        countryId: "CX"
    }, {
        id: "Antarctica/Davis",
        utcStandardOffsetSeconds: 25200,
        displayName: "Davis",
        countryId: "AQ"
    }, {
        id: "Asia/Ho_Chi_Minh",
        regionId: "035",
        utcStandardOffsetSeconds: 25200,
        displayName: "Ho Chi Minh",
        countryId: "VN"
    }, {
        id: "Asia/Hovd",
        regionId: "030",
        utcStandardOffsetSeconds: 25200,
        displayName: "Hovd",
        countryId: "MN"
    }, {
        id: "Asia/Jakarta",
        regionId: "035",
        utcStandardOffsetSeconds: 25200,
        displayName: "Jakarta",
        countryId: "ID"
    }, {
        id: "Asia/Krasnoyarsk",
        regionId: "151",
        utcStandardOffsetSeconds: 25200,
        displayName: "Krasnoyarsk",
        countryId: "RU"
    }, {
        id: "Asia/Novokuznetsk",
        regionId: "151",
        utcStandardOffsetSeconds: 25200,
        displayName: "Novokuznetsk",
        countryId: "RU"
    }, {
        id: "Asia/Novosibirsk",
        regionId: "151",
        utcStandardOffsetSeconds: 25200,
        displayName: "Novosibirsk",
        countryId: "RU"
    }, {
        id: "Asia/Phnom_Penh",
        regionId: "035",
        utcStandardOffsetSeconds: 25200,
        displayName: "Phnom Penh",
        countryId: "KH"
    }, {
        id: "Asia/Pontianak",
        regionId: "035",
        utcStandardOffsetSeconds: 25200,
        displayName: "Pontianak",
        countryId: "ID"
    }, {
        id: "Asia/Tomsk",
        regionId: "151",
        utcStandardOffsetSeconds: 25200,
        displayName: "Tomsk",
        countryId: "RU"
    }, {
        id: "Asia/Vientiane",
        regionId: "035",
        utcStandardOffsetSeconds: 25200,
        displayName: "Vientiane",
        countryId: "LA"
    }, {
        id: "Asia/Brunei",
        regionId: "035",
        utcStandardOffsetSeconds: 28800,
        displayName: "Brunei",
        countryId: "BN"
    }, {
        id: "Asia/Choibalsan",
        regionId: "030",
        utcStandardOffsetSeconds: 28800,
        displayName: "Choibalsan",
        countryId: "MN"
    }, {
        id: "Asia/Hong_Kong",
        regionId: "030",
        utcStandardOffsetSeconds: 28800,
        displayName: "Hong Kong",
        countryId: "HK"
    }, {
        id: "Asia/Irkutsk",
        regionId: "151",
        utcStandardOffsetSeconds: 28800,
        displayName: "Irkutsk",
        countryId: "RU"
    }, {
        id: "Asia/Kuala_Lumpur",
        regionId: "035",
        utcStandardOffsetSeconds: 28800,
        displayName: "Kuala Lumpur",
        countryId: "MY"
    }, {
        id: "Asia/Kuching",
        regionId: "035",
        utcStandardOffsetSeconds: 28800,
        displayName: "Kuching",
        countryId: "MY"
    }, {
        id: "Asia/Macau",
        regionId: "030",
        utcStandardOffsetSeconds: 28800,
        displayName: "Macau",
        countryId: "MO"
    }, {
        id: "Asia/Makassar",
        regionId: "035",
        utcStandardOffsetSeconds: 28800,
        displayName: "Makassar",
        countryId: "ID"
    }, {
        id: "Asia/Manila",
        regionId: "035",
        utcStandardOffsetSeconds: 28800,
        displayName: "Manila",
        countryId: "PH"
    }, {
        id: "Australia/Perth",
        regionId: "053",
        utcStandardOffsetSeconds: 28800,
        displayName: "Perth",
        countryId: "AU"
    }, {
        id: "Asia/Shanghai",
        regionId: "030",
        utcStandardOffsetSeconds: 28800,
        displayName: "Shanghai",
        countryId: "CN"
    }, {
        id: "Asia/Singapore",
        regionId: "035",
        utcStandardOffsetSeconds: 28800,
        displayName: "Singapore",
        countryId: "SG"
    }, {
        id: "Asia/Taipei",
        regionId: "030",
        utcStandardOffsetSeconds: 28800,
        displayName: "Taipei",
        countryId: "TW"
    }, {
        id: "Asia/Ulaanbaatar",
        regionId: "030",
        utcStandardOffsetSeconds: 28800,
        displayName: "Ulaanbaatar",
        countryId: "MN"
    }, {
        id: "Asia/Pyongyang",
        regionId: "030",
        utcStandardOffsetSeconds: 30600,
        displayName: "Pyongyang",
        countryId: "KP"
    }, {
        id: "Australia/Eucla",
        regionId: "053",
        utcStandardOffsetSeconds: 31500,
        displayName: "Eucla",
        countryId: "AU"
    }, {
        id: "Asia/Chita",
        regionId: "151",
        utcStandardOffsetSeconds: 32400,
        displayName: "Chita",
        countryId: "RU"
    }, {
        id: "Asia/Dili",
        regionId: "035",
        utcStandardOffsetSeconds: 32400,
        displayName: "Dili",
        countryId: "TL"
    }, {
        id: "Asia/Jayapura",
        regionId: "035",
        utcStandardOffsetSeconds: 32400,
        displayName: "Jayapura",
        countryId: "ID"
    }, {
        id: "Asia/Khandyga",
        regionId: "151",
        utcStandardOffsetSeconds: 32400,
        displayName: "Khandyga",
        countryId: "RU"
    }, {
        id: "Pacific/Palau",
        regionId: "057",
        utcStandardOffsetSeconds: 32400,
        displayName: "Palau",
        countryId: "PW"
    }, {
        id: "Asia/Seoul",
        regionId: "030",
        utcStandardOffsetSeconds: 32400,
        displayName: "Seoul",
        countryId: "KR"
    }, {
        id: "Asia/Tokyo",
        regionId: "030",
        utcStandardOffsetSeconds: 32400,
        displayName: "Tokyo",
        countryId: "JP"
    }, {
        id: "Asia/Yakutsk",
        regionId: "151",
        utcStandardOffsetSeconds: 32400,
        displayName: "Yakutsk",
        countryId: "RU"
    }, {
        id: "Australia/Adelaide",
        regionId: "053",
        utcStandardOffsetSeconds: 34200,
        displayName: "Adelaide",
        countryId: "AU"
    }, {
        id: "Australia/Broken_Hill",
        regionId: "053",
        utcStandardOffsetSeconds: 34200,
        displayName: "Broken Hill",
        countryId: "AU"
    }, {
        id: "Australia/Darwin",
        regionId: "053",
        utcStandardOffsetSeconds: 34200,
        displayName: "Darwin",
        countryId: "AU"
    }, {
        id: "Australia/Brisbane",
        regionId: "053",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Brisbane",
        countryId: "AU"
    }, {
        id: "Pacific/Chuuk",
        regionId: "057",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Chuuk",
        countryId: "FM"
    }, {
        id: "Australia/Currie",
        regionId: "053",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Currie",
        countryId: "AU"
    }, {
        id: "Antarctica/DumontDUrville",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Dumont d’Urville",
        countryId: "AQ"
    }, {
        id: "Pacific/Guam",
        regionId: "057",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Guam",
        countryId: "GU"
    }, {
        id: "Australia/Hobart",
        regionId: "053",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Hobart",
        countryId: "AU"
    }, {
        id: "Australia/Lindeman",
        regionId: "053",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Lindeman",
        countryId: "AU"
    }, {
        id: "Australia/Melbourne",
        regionId: "053",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Melbourne",
        countryId: "AU"
    }, {
        id: "Pacific/Port_Moresby",
        regionId: "054",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Port Moresby",
        countryId: "PG"
    }, {
        id: "Pacific/Saipan",
        regionId: "057",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Saipan",
        countryId: "MP"
    }, {
        id: "Australia/Sydney",
        regionId: "053",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Sydney",
        countryId: "AU"
    }, {
        id: "Asia/Ust-Nera",
        regionId: "151",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Ust-Nera",
        countryId: "RU"
    }, {
        id: "Asia/Vladivostok",
        regionId: "151",
        utcStandardOffsetSeconds: 36e3,
        displayName: "Vladivostok",
        countryId: "RU"
    }, {
        id: "Australia/Lord_Howe",
        regionId: "053",
        utcStandardOffsetSeconds: 37800,
        displayName: "Lord Howe",
        countryId: "AU"
    }, {
        id: "Pacific/Bougainville",
        regionId: "054",
        utcStandardOffsetSeconds: 39600,
        displayName: "Bougainville",
        countryId: "PG"
    }, {
        id: "Antarctica/Casey",
        utcStandardOffsetSeconds: 39600,
        displayName: "Casey",
        countryId: "AQ"
    }, {
        id: "Pacific/Efate",
        regionId: "054",
        utcStandardOffsetSeconds: 39600,
        displayName: "Efate",
        countryId: "VU"
    }, {
        id: "Pacific/Guadalcanal",
        regionId: "054",
        utcStandardOffsetSeconds: 39600,
        displayName: "Guadalcanal",
        countryId: "SB"
    }, {
        id: "Pacific/Kosrae",
        regionId: "057",
        utcStandardOffsetSeconds: 39600,
        displayName: "Kosrae",
        countryId: "FM"
    }, {
        id: "Antarctica/Macquarie",
        regionId: "053",
        utcStandardOffsetSeconds: 39600,
        displayName: "Macquarie",
        countryId: "AU"
    }, {
        id: "Asia/Magadan",
        regionId: "151",
        utcStandardOffsetSeconds: 39600,
        displayName: "Magadan",
        countryId: "RU"
    }, {
        id: "Pacific/Norfolk",
        regionId: "053",
        utcStandardOffsetSeconds: 39600,
        displayName: "Norfolk",
        countryId: "NF"
    }, {
        id: "Pacific/Noumea",
        regionId: "054",
        utcStandardOffsetSeconds: 39600,
        displayName: "Noumea",
        countryId: "NC"
    }, {
        id: "Pacific/Pohnpei",
        regionId: "057",
        utcStandardOffsetSeconds: 39600,
        displayName: "Pohnpei",
        countryId: "FM"
    }, {
        id: "Asia/Sakhalin",
        regionId: "151",
        utcStandardOffsetSeconds: 39600,
        displayName: "Sakhalin",
        countryId: "RU"
    }, {
        id: "Asia/Srednekolymsk",
        regionId: "151",
        utcStandardOffsetSeconds: 39600,
        displayName: "Srednekolymsk",
        countryId: "RU"
    }, {
        id: "Asia/Anadyr",
        regionId: "151",
        utcStandardOffsetSeconds: 43200,
        displayName: "Anadyr",
        countryId: "RU"
    }, {
        id: "Pacific/Auckland",
        regionId: "053",
        utcStandardOffsetSeconds: 43200,
        displayName: "Auckland",
        countryId: "NZ"
    }, {
        id: "Pacific/Fiji",
        regionId: "054",
        utcStandardOffsetSeconds: 43200,
        displayName: "Fiji",
        countryId: "FJ"
    }, {
        id: "Pacific/Funafuti",
        regionId: "061",
        utcStandardOffsetSeconds: 43200,
        displayName: "Funafuti",
        countryId: "TV"
    }, {
        id: "Asia/Kamchatka",
        regionId: "151",
        utcStandardOffsetSeconds: 43200,
        displayName: "Kamchatka",
        countryId: "RU"
    }, {
        id: "Pacific/Kwajalein",
        regionId: "057",
        utcStandardOffsetSeconds: 43200,
        displayName: "Kwajalein",
        countryId: "MH"
    }, {
        id: "Pacific/Majuro",
        regionId: "057",
        utcStandardOffsetSeconds: 43200,
        displayName: "Majuro",
        countryId: "MH"
    }, {
        id: "Antarctica/McMurdo",
        utcStandardOffsetSeconds: 43200,
        displayName: "McMurdo",
        countryId: "AQ"
    }, {
        id: "Pacific/Nauru",
        regionId: "057",
        utcStandardOffsetSeconds: 43200,
        displayName: "Nauru",
        countryId: "NR"
    }, {
        id: "Pacific/Tarawa",
        regionId: "057",
        utcStandardOffsetSeconds: 43200,
        displayName: "Tarawa",
        countryId: "KI"
    }, {
        id: "Pacific/Wake",
        utcStandardOffsetSeconds: 43200,
        displayName: "Wake",
        countryId: "UM"
    }, {
        id: "Pacific/Wallis",
        regionId: "061",
        utcStandardOffsetSeconds: 43200,
        displayName: "Wallis",
        countryId: "WF"
    }, {
        id: "Pacific/Chatham",
        regionId: "053",
        utcStandardOffsetSeconds: 45900,
        displayName: "Chatham",
        countryId: "NZ"
    }, {
        id: "Pacific/Apia",
        regionId: "061",
        utcStandardOffsetSeconds: 46800,
        displayName: "Apia",
        countryId: "WS"
    }, {
        id: "Pacific/Enderbury",
        regionId: "057",
        utcStandardOffsetSeconds: 46800,
        displayName: "Enderbury",
        countryId: "KI"
    }, {
        id: "Pacific/Fakaofo",
        regionId: "061",
        utcStandardOffsetSeconds: 46800,
        displayName: "Fakaofo",
        countryId: "TK"
    }, {
        id: "Pacific/Tongatapu",
        regionId: "061",
        utcStandardOffsetSeconds: 46800,
        displayName: "Tongatapu",
        countryId: "TO"
    }, {
        id: "Pacific/Kiritimati",
        regionId: "057",
        utcStandardOffsetSeconds: 50400,
        displayName: "Kiritimati",
        countryId: "KI"
    } ], inter.territories = [], inter.languages = [], inter.currencies = [], inter.load = function(localeId) {
        return $__require("./" + normalizeLocaleId(localeId));
    }, module.exports = inter, module.exports;
});
